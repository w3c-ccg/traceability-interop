{
  "collection": {
    "info": {
      "_postman_id": "0b8a4a7f-f952-4403-a9a4-909b37b8fa24",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "0e2eb5b1-0d31-49ac-ad34-f4139cab5ef7",
        "name": "Clear Cache",
        "item": [
          {
            "id": "39c5edf7-17e2-4459-bd37-eedf56d3857a",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "1b5f13df-a303-432a-b7cf-8d6d8d9d6867",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "0c941a90-46c6-4087-8c5f-262eece394fd"
                }
              }
            ]
          },
          {
            "id": "34d3cee1-85cb-402e-a0b6-d5e857e8a638",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "84437aa0-c18b-40d3-90b0-c1d30f19dda4",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "c90cace7-78d0-4570-870d-1c532a8cb43d"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "954a43f7-0aa7-4b28-8c7f-e4dc90174ee5",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "76592b87-bef8-4b16-85a9-622b68725f5b",
            "name": "Positive Testing",
            "item": [
              {
                "id": "1d562b97-46b8-4322-a2ba-dedeb30b73bc",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "42b984ba-d733-425d-8024-b0427c7a9f2c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "4b61d26d-02b9-4b83-9ed5-e7f8388648a7"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "100443e2-10c0-4d0c-b54f-94f32c21fdda",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "6ccdea87-6d02-45ae-9ded-2ba75efd771b"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "57d7f079-5707-4781-97da-88366c39094f",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "ed165df5-c8ff-4708-b3f6-7720ebe68731"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "e44b1869-f1e4-4828-bfe9-c8b573613517",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "899dadad-65d6-4541-9779-c7da31e11a2e"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "5a08cac0-2d70-4588-83b0-8a566a0d6dcf",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "e3f1de47-657c-41a5-942d-16d894f635f8"
            }
          }
        ]
      },
      {
        "id": "c7adbd3a-9a9c-47d7-83b9-f5ae43360cf1",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "a207e74b-c9db-461e-bd4f-f597ec212ca7",
            "name": "Negative Testing",
            "item": [
              {
                "id": "3a4ce45b-6e89-4eb6-90e6-dc0c47029130",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "1cee6bdd-b903-456a-8e61-86d621aa3a06",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dca285fd-9a55-44b0-8422-2562ecb0a403",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "a2933500-5073-4a30-bd26-182a39780a76"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5fb461e3-96a0-42de-9ccd-b7a9a514d7b7",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ebadb1ba-7bb6-465b-8a99-75758741aff5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "53bc056e-401c-475b-a030-61d2fd664493"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e5237eca-d68a-4e90-bbda-5eaacc4c135c",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5cc6f161-02dd-468b-806a-ff355fe52274",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "1ee0d58a-6a2c-49d6-bdfe-632098701cfc"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "fdfd59d2-2f57-4876-8c51-3d0f59ae1a1e",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "b0ed0cce-f808-4369-a922-179ba94132dd",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b770fe3c-2578-428b-a416-3dcdd9e40ea8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "e9c69104-882d-4113-9a0d-3e65e0107658"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1cae7c15-b853-4089-9980-80a86358bd5d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "32a0f787-990b-40df-8256-08e1ae63a12a"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "6e702719-420b-451c-8a38-75cd09ebd7fc",
            "name": "Positive Testing",
            "item": [
              {
                "id": "4b92bb9a-7855-4d7a-94dd-14a4f7ea8f34",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "63939707-3366-430b-a4c0-7226bb5cc19b",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "6bf89bc3-3c24-4fb5-b303-40d0e040e953"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "c48c95b4-2367-43ae-8eb6-3354d4da10ba",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "43de4671-8bd4-4128-b4dd-c6a9dd182038"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "b4d2e148-1ec5-41f8-b655-975d9f2a1c91",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "355cf418-8ee6-424a-835c-3a6148d36f95"
            }
          }
        ]
      },
      {
        "id": "41c273c5-64c5-43d7-81ba-e97aee73b9c0",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "fb096af2-27dc-4e93-a491-7be4ae3e48dd",
            "name": "Negative Testing",
            "item": [
              {
                "id": "60dd7813-e103-4bf2-aaa8-629d96adb4fd",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "d712a81e-f269-4b4b-9ea8-0687a91df914",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "62645ac5-bed2-42e0-9090-56f8ed96b6d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1432793f-6c8b-486e-a841-6556142181bc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "372793ca-50c2-4e79-9e5f-f6e2b63c22f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f7f5b552-1bde-4d4e-830c-5e4c0be6c5a3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "06603bbb-3b07-47af-bccd-002a01489845",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7b47df68-6a34-45f1-b763-05c6d452c782",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f1fb642d-abaf-4a40-be27-a7b8e2b5a500"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6cef42bc-679f-447e-91f6-5ed3a4849daf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "66bd412f-603a-4e70-a3f2-813121cad386"
                        }
                      }
                    ]
                  },
                  {
                    "id": "abe7e8cc-cda7-458e-86ad-2c1bc6603a5f",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "af791ef4-7996-4b16-a4a6-7a2231d399d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fae11b07-84c0-4e48-85d4-96b3d7577653"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "584acef4-5ca7-4ea9-ac2e-ce40553b54e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "31db516f-2f4e-4014-a1f7-6cf9fda92887"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eb84867c-1978-4414-910e-53f8f6b61291",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "be16ceef-131a-4703-913b-513d9dc664c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6bbfafb3-5166-4393-8b11-80209ff1432b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c2f7a167-cdf2-42da-9e20-2e2029448972",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "eeda6b43-f7e9-46ff-9c8b-39c1df3ed3ac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4498708a-f6eb-4311-8ef5-29ad7c2c2225",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "097bd50d-85e8-4092-94b8-de9256e82ec2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f1804adb-8b61-460d-96cb-84484557378a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "17d9b210-04bd-4a26-b3c5-9394bf6d6bd5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "dde58e26-2180-418e-8047-d3de7ef61bf5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "21b405cf-42e1-4e94-b7f8-d2fa316f3d08",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "623935fb-07de-4584-8924-ec2a953aed3f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a0776a9d-26cc-4f56-a1ae-4f3f8d0b05e6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f45526bf-7329-436b-b765-75567fa27bae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "907f6d14-4418-4a2c-8fdd-da18510a3579"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ec3c9a24-61ab-4ad8-ae1f-a3b01f0b2f30",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3edcbe05-3be0-4e7e-833a-5088cc1e530f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "67516c12-99b4-4fd2-83b1-86887ffcab57"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2315fa5a-7dae-47e7-828c-ba238ae560a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "94268fe2-8311-4058-8cc6-9d699b87d6ac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "78317963-83ff-471d-8dc6-4eddb5d94ea9",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e7ebd072-12db-483f-85d2-6af0121d73e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5d42b9e7-2fd3-4121-bcea-19c1d6542f1b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "feebebb8-4008-40f2-a791-6118f322452b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a46cb699-cc67-4ea3-ad74-b18702003305"
                        }
                      }
                    ]
                  },
                  {
                    "id": "10a9ae7b-8d47-4df7-83a7-5b25e762646c",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3c05892f-57c2-46cd-85be-c3addd6174ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1ac6fc56-f3e6-4114-9c1a-280995303ae1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "91b739d4-5b8e-4b9d-bf23-445f1258c3a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "176217c4-c6e4-494d-a918-64043704422a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "30d46a96-9cf0-4ee0-b87f-3bc55162f46f",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e5cd1810-b418-4976-b429-09e57c0f7bfe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "285e3a3c-626d-4fac-ad50-b8abb68cd9f4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "77ff5244-9858-41a3-b9a5-0d269636872a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "fb7f03d5-2772-4e13-9972-d6f70c7d0133"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e59344aa-beb1-4bae-afa4-21e08c3519bd",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2bc0c1fb-802f-40db-b5eb-e37f4261c40b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "77575d4e-caac-4838-900c-b687c8a17408"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6056ad37-5a8e-4bff-98c0-394e66ab25eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "2f104695-1fe9-4cdc-8a99-57d28f7ee1da"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8bd44f73-9c11-4666-a348-9db9482d44ca",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "21c0df50-b67b-4cea-b2c7-7cef8e9e125a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0325f9a0-e71c-4ffa-9bcb-0539b816f434"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "27efadd7-e642-4455-9ed5-f623ecdcdeff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "04073fa3-59fa-4a37-b15b-67b717154181"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0a1f53c4-b69b-4bd5-bbbc-6416b04bdda5",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d584221d-45bb-482e-b964-e6231eb91dec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6447be28-b56e-4b8b-82ff-bba118764aa1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "76d55c2d-0996-4e92-b501-4491b5571afe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "7d9087b6-1200-49c8-b8d2-b5ff92cad62d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "963f69b4-1d0f-4f32-953a-2f94346a4d01",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "601fe922-1803-48e5-8f57-fb88676ad1b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a944a36d-3f99-438e-bb6e-c25ac6413bba"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "416afd70-dc44-4752-a14d-6b759cc5f753",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "af514dce-7d59-4782-ba7b-0b00906e72dd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8500ea4a-257f-45cf-bddb-06964f6d201d",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "60b4f0c1-fcba-4113-819e-65a074b6000c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1a45d3e7-5b25-4168-a789-faf7bac16f87"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3f3d1c83-8b09-4d57-bb9a-678a51be4574",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d075f636-624f-4b91-a4df-da65c09da8bd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "34b315bf-0fa9-4872-b1f2-28f490f3e6d9",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "26354cd1-1055-45c3-8c85-eeba458bc1bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b59a2690-3491-41f0-99f3-310723e26f48"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "33770915-7253-426f-80b3-85f1a187c9eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a5f8f3cd-417a-45ea-8114-68d18ef21ec3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bcdd0493-260e-49e3-a5d6-76352bbec4c3",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0ed797fb-8d4d-44b1-b46a-2c9812963f1c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ba4079e7-e3e6-4304-8391-0a32fdb631f4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "17a446b2-b4a1-49b0-8fb5-bdf9f0dd9836",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "067f4335-bfc4-42f6-8ea9-56834976b3b6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "da9882cc-1bfb-44ff-952b-31c36e295a11",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "24abc9ab-888a-4674-849c-7b338edb2c03",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "32ac73b7-a3ab-4944-9617-85cc5e692603"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9674239f-f5e7-48f8-8382-b926a3c214ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "c0dcb89b-9e33-4613-9d0e-d48b0fa834f7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4fda1924-afc3-4eda-b9ea-69a114d499c2",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "547d1670-6517-43b9-a6c7-0fe5902b9184",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8923b991-b73f-4a02-b894-f34ca67f2611"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3e52baac-9d12-4b97-a127-a877a40f9863",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "19f168ef-42e6-4de9-bced-c4e5656e25e9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2b7b92fd-aaec-40b9-93fa-93171dfcbe37",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1b38fb8a-62a7-4c53-b6e8-4e471148ca53",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0d88315e-9742-40c3-af1c-fb0cd04b410d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c9b2e920-11d4-415e-9635-ff65b93aa19c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "6651027c-996e-419a-9c45-e7b013ca2a45"
                        }
                      }
                    ]
                  },
                  {
                    "id": "85c02824-b2cd-4953-9ff7-ba625d9be4da",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3a05a846-c48f-474b-9b1e-db7703dc8e4f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d73c1745-d1aa-4977-b4d7-4f00670553bc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "38333752-5ff2-4060-9e7e-fda04d5ff296",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "830b3da0-b12a-4719-a0ca-18bfe4d8222b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2defae29-bb22-402e-8825-0857073f85b3",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "baa1cd10-64fe-43d3-9175-b573cc6803f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "78b35e05-076c-4329-bd1b-9bf66c069dc7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bfb8e0ed-2520-470f-98ce-6cbbec1d88dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "7a619dca-69c8-43cc-930d-d047e6d9ce7f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b6252bc3-9398-4334-9527-e05a313d2825",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8c130619-3f52-4db1-879c-dd58c6a6dda5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a8dd5d53-d18e-4016-8bab-a7c06ab7418a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4ea31a1f-7624-449b-9117-86bf3f537996",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "c3d89f5f-5499-4985-b43d-8a076019fb7e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "62ef3baf-1128-4bad-9218-6e69d5e8731e",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1e0f50aa-409c-4f10-bce6-c4a4ffdc55ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fe5bffd5-691f-4a20-83d1-38d234d4c918"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc3fee47-7b9d-482c-b6ff-33180e772cf0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "968a460e-1002-416d-b811-0c1580ea5c29"
                        }
                      }
                    ]
                  },
                  {
                    "id": "847c5c61-c6a4-4803-b564-7d5dd41e38f5",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9bb9d940-448c-4a26-b256-d5e2ad30c98b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f08783df-5a8d-409c-81ce-1320bed40006"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f18b0f96-0a2f-4237-aa42-80274b52473c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "0434065e-293a-4487-bfd1-f039255f8eac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1ad33bba-8374-40ba-8368-b01b51a658b1",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a791a07-a9d6-4ee4-8afe-40a85856eb91",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "11368eda-aeb1-4502-8716-e550d6b3f71f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d916cc71-aa90-4229-a933-22088a6e4390",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "90dbb7c1-bbee-4c30-a525-f5c3778c5455"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b4274e29-8298-44b2-9ed4-641481fdb2e6",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e3399d15-39e8-4346-989b-7088292742d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e60b50e8-fd96-41dd-9806-64c0f4972db4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2895eb5e-0a29-4feb-869c-02b0081ef0ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "b60fa737-0cc6-46d4-9f4b-bd543c7086e5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9885219d-f0c6-47f0-8fd1-cb835fd93b5e",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "482510ab-a402-4c5e-967e-fa0e517afb8d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2f09f87f-5963-4899-8fdb-5ea5cd53dac9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ab6f5bd8-24ac-401d-a76f-025bb0d9dbba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "f056fb9f-b8ff-40b9-a7c6-297712fbd033"
                        }
                      }
                    ]
                  },
                  {
                    "id": "962a7ff7-c6c6-4c0d-b924-2a2da045bbff",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fe5f68f2-bd88-4f90-aedb-c03f04d98ad4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "03b5c8e7-9b8e-43b6-9124-87439bcdb077"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b01a29e3-d32f-4525-a177-cacf5274515d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "8bbba006-ab8f-4873-ae4e-10468171a07f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ac6451da-14c4-4d72-a52a-5287a7f3b11b",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7f749283-0e6c-4d24-8c3e-719159d9fdc8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "641b30f8-a585-4a1a-808b-1ab27a66c5c5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "41094f67-88d7-44d3-879d-884e712ef8ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "8ba18c48-fde5-4293-a4d5-cc1d054d8960"
                        }
                      }
                    ]
                  },
                  {
                    "id": "83de9f19-f06b-4a6b-ab6d-578e0a6835da",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ca17848e-7ad1-421f-a6dd-c723cf786aec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d6e29114-87a2-4536-8006-da98b4eb797c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "209b10fe-f8c7-48c3-ad23-27f507327ca3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "b8a201e1-5d5a-4233-b638-e2dec3b989ec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f70fc258-baa3-4e5c-ab7d-464768f8754b",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f272f29e-0a01-483b-9e33-fbe102b91206",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "579f9b51-79c6-4137-9d30-c5a43cf7783f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f45332db-bc59-4d1d-8a28-ae0f49b7157c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "24a20a09-72a6-4d52-947e-61e083d44a49"
                        }
                      }
                    ]
                  },
                  {
                    "id": "57305500-4bf5-474d-96b3-b3273e8e0c46",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9dd8ec56-7938-4532-9d66-0e7f6a15027f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "71bc516f-446f-4093-addc-73d99db27c14"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2fac1d14-7b41-4171-98d6-6cdfc2a4c7e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "f9b3bf11-5fcf-4a66-892d-1052a01f5e18"
                        }
                      }
                    ]
                  },
                  {
                    "id": "83f35f21-9d0f-405d-87a7-03cbfa3a31ec",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "88321659-a9f9-47c5-ba81-c11fc9ce8a50",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6e0b0eed-1ba9-4194-ab22-f403d767fbdd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6051b9d2-4283-4128-bfd2-e439fc4a5391",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "3d077876-353f-4b2b-bab7-98019117b092"
                        }
                      }
                    ]
                  },
                  {
                    "id": "805fa0b9-4b10-4319-b32d-e2a46431a141",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff3420c4-eb7a-4793-b26f-8ad6e5904465",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "398ce85b-4aab-40ba-9ee1-8562ef2bfda5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "927768d7-9e27-42c1-83cb-ed4f5532c420",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "cee7e1ff-ceff-41bb-8110-b3283d1abc7e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4e83a8f5-4a6f-431e-8e00-f9d11bf3208e",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d3c1d6ad-c4f7-44a7-ae2a-f393e50bc125",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "3def4104-1c09-4dcc-9441-86cda758c91e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b578f246-41d0-481c-a7d7-860cf1b9bd81",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "addcf5ff-efe1-4e7e-95fd-98a54afefc69"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ecb2539c-ddbd-403b-98a2-48fbab439afe",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f0f49b45-72e0-4630-8dc2-fdacde754145",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1263916e-8d24-4eff-95e0-efd7788c345e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "57b773bd-c311-46a9-95e4-4d117d1d6f75",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "6470a246-04f0-4b10-9e50-675773ccc913"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b881ab3d-6454-4406-8fc7-a6334c40f91a",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "64a72051-33c9-4dbf-8d80-157ffabc9bbb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e1adcf5c-509f-4d6d-bb89-0b0072ec8bbe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ea162046-17ca-401c-800c-7f238de984d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "18ada81e-0857-4ec3-9be0-f66733d15816"
                        }
                      }
                    ]
                  },
                  {
                    "id": "82620f25-2878-4a55-a2ce-626048a01470",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9b925ed3-c1e9-40d8-8d5a-c98490f6fecf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4c262ff6-f27e-4c17-b339-c20905851fb3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "99cd75dc-0653-434c-8ac7-ac8adce16f84",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "2cfa5038-3f56-464b-b4bd-ef4dc59c6837"
                        }
                      }
                    ]
                  },
                  {
                    "id": "21988597-8175-4ed9-a6a4-2baa1dae2faa",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d5097eb0-6a64-4687-9653-50d1f2b20568",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "65f69635-cdb0-4ddc-bf5d-5eb8d9ef60c8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6b2552e5-44eb-4bce-bf4f-0d9a13d6d0a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "a9ba62dc-cb37-4e90-a6ee-101eba5f7418"
                        }
                      }
                    ]
                  },
                  {
                    "id": "332db244-9c1d-486b-9083-f8b0ad2458d9",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "934ab344-449a-4bdf-985f-1f62a7a0ee28",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6b86dc62-95a7-4575-93ba-391e69d5d882"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "257fb786-e2ae-4e0b-bcf5-6d2cb358f464",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "70320007-95c8-46d2-9358-fe3930e45236"
                        }
                      }
                    ]
                  },
                  {
                    "id": "79e66424-8908-4a19-a562-0e4dfed3c0b7",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b0e9c967-24d0-490a-8cd5-1e47399bbcda",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "34ffb61e-6ef9-4b89-bd95-31dec34a3a1f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d1746f80-28bd-4367-8a58-9d28c5cca242",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "91d60152-b5fa-4570-ab7c-6e22ebc6495d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "93d4e868-97f2-4d42-83b5-df5b05ad451b",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "65a04b7c-bc97-4fcb-bc82-a1496739b4eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "92f26869-7ac1-43ee-bbd7-f083a1b5511e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5697bd8c-4c8f-41f1-bc8c-59b7e8d0c266",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "ef47f752-e65d-49d2-936e-178d8274fd05"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9bc1c6bf-0e62-4aa0-9805-437977dc0d0e",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fccbbcea-7255-44e0-b165-f17b149e886f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a4a176ef-2bdc-48bc-b5b6-2f148f48df43"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "468918a7-42cf-4418-a16f-e08711f752dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "503623d3-9d54-4b0d-a864-32b555b56060"
                        }
                      }
                    ]
                  },
                  {
                    "id": "926bacf6-cff4-4bcb-b328-72ba068a1bde",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0a8afda9-77c5-4512-a06a-bd8bf6e0d7c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f1ed23ec-a774-4d2f-9961-f63a0057185d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1fb2375a-d94c-4276-a86d-11fca638bc0b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "33546682-86be-4478-9303-371bb4609eda"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d75c1caf-0f2a-4a5c-8fc0-2aee57994099",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b5a657fb-c773-49c3-8302-6ca28bd0f541",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "31a3b216-25a1-4e2b-bac3-b200a9e343c9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6c52c7f6-7eb0-4b95-8759-d31d916083c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "6e0aea91-a44b-4b91-9594-0c2d534193d9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7d2678ec-dd22-4889-a101-fc0fb09bf684",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9af834cb-890b-4186-a7ae-e301ad6826ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3d3d83d2-556c-4576-8847-737a6f800af5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8427aec8-20c5-4555-92ec-7282b0f7e9e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "20389f4b-3902-4db9-a64f-35da06c7c08a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "64338a54-0c8e-4323-98c4-3aead278edf4",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0f5cf298-8230-48ab-b074-61b039f51035",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "10e73cc4-b8f6-4be9-9664-cf6d383146a3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "276ba603-9bc2-4565-a639-38f6c736e546",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "d8cad08e-53f4-467f-8322-134c7f88b518"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7e630eff-a218-4335-8302-8203e5b891d9",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bb7de3d0-8d73-4fdf-a007-73076c484bbf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2d47a251-6af2-4392-a1ea-7ff09eae5092"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d57684c1-d75b-48e0-aa83-86b8c9938ec7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "4cab213b-9833-458a-99bf-2c00d19552e0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cac8054f-fa1a-4d05-8af9-b30ad3f0f87a",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f6d938a9-31c1-4b2a-a747-a83a5652ad39",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2ad5889f-9d9d-462e-a33d-63839327fe6e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4d1157c8-7335-4910-8b72-18224f16ee28",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "46e14338-5330-4aac-a714-913bc2dd8cd6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0ea2cad9-8a23-4915-8214-2e03263b4624",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a37bbadd-6d65-42a0-82c7-c208dc003b8c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e8c949ea-bf74-4122-9269-47aa31980f25"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ef149255-1d00-43e9-a9aa-0b90ce235b64",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "5970b9e7-a911-4d8a-aa27-db8150845c3e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d2083b68-4c28-4fc4-ab8e-7065c6041ae3",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "11cd493e-e8a5-434e-9645-407273d54a81",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5958c5c0-0a33-44fe-acf2-4e094b773d3a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b02057a7-c718-476e-ba1c-154796ac7401",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "f9fa6c69-0989-4e33-a584-a8d7a2ebe7f7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "798336f2-382c-452a-80c7-3000f37e18f7",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ba58f807-3172-4a2e-8f61-66760cbeb35b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e7060c1c-047a-4b15-bf6f-5d59fc3ba46c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d3ce5b2e-ea59-48c7-a38c-d0a910cbeaac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "f44e392a-acc6-4ef0-becd-79dc79062726"
                        }
                      }
                    ]
                  },
                  {
                    "id": "58b8e4e3-efd3-4598-ae67-5333053013cd",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4048886b-a661-4676-a8e5-643e7386f1af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0aba7bbe-aba4-4102-b21e-f21bde68e871"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ecb66127-a56c-4a58-8205-6f3c268efb10",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "64bb278f-efdc-48a2-b218-04d4dcd5b3eb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eba7428c-7ada-40c9-8926-8e64c946d6bf",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ba4e6bc9-4ce5-4ee6-aaa0-47be0a06ee03",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dc1e8217-81f1-49c5-81cd-b6e8045d57c3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fb2672c3-1830-49b8-8fc6-1557d87b0a62",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "734482ca-2e10-4b1e-9745-4b7da318a0f7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "09888d5f-6786-4625-bf3c-337ed0f0aa25",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "51170531-3801-4c9d-a2b5-4a07ecf47c83",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "12807eac-f899-4b5e-a70a-ecd08151a4e3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b15d5e50-c5ed-4b68-ad89-9dea81bc5a04",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "de336d99-4c2d-467e-bd79-fc2ede5c0608"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b9b19819-90e0-4781-ba91-b28afa3ba9d3",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d76675bc-4da4-4bd1-8bd8-c7f217e6afe0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6441c5d0-6b30-4ab5-96c8-2a7cee5be9e5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c54f647c-a517-473a-9882-d7eb22702165",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "93da3ac2-3352-41ed-9ea9-f34bdd262324"
                        }
                      }
                    ]
                  },
                  {
                    "id": "02920c40-6731-458c-ad81-535b85b14eaa",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ef5321fe-bf9b-4cd5-bf96-ace19cff3d9b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "157a3551-0540-4a90-b0d2-0a90048ed737"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "149a3b08-88be-4988-a629-3e42f6ba275b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "1d4cdc2c-2ae2-43d4-b875-c98fd990e009"
                        }
                      }
                    ]
                  },
                  {
                    "id": "52da9dad-ed29-4941-8fc8-3e24aac2753e",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cd0f6112-21fb-4a1c-b2ad-d34d2871a2f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c7620da9-d666-4877-bb1b-106465cd1fb5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e26c6369-1bb1-4b12-bf2f-46e81ce4ee57",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "70590d26-8b10-4c62-b0df-c27337061835"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6f766753-e9f8-4f71-9c56-384d6abf5be7",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "181de0d8-61d7-4857-b840-35aaa76b5e04",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cb99f80d-0c88-4c07-ad23-a4d79f0f53bf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8c508889-d028-4383-a409-f39c8fd93c81",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "03501149-1de7-4be9-933a-6cac82c0d55f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "01111eef-d4fe-4508-9b86-e2d1998dde1e",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fb1b3020-47c4-4d38-8b7c-3853a876602f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "31b3b8c6-72c7-4eda-b5fc-cec9d849289b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2824ae7e-9f4a-4525-aa63-ffe6dd2bbe35",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "cd5bf972-1f0f-4d70-92c8-7112b71c03ba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0cb53fdf-de58-4e14-b092-ecb4016cd849",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "43f45d7d-d5a1-4100-8c75-19ca3ccb3592",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ec744084-4d74-4944-b4da-8aaff3ced9b1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1dad854c-a8b7-4330-b117-a703264e496c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "728a11a9-148f-4f08-a79e-a97ac7ffa064"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c3c8c4b8-ba7c-4cdc-86a0-48054e63efda",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "058cb90b-f525-4b11-b1e6-cab2809448e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5998ad50-6f3a-45b6-8583-1cb1399c89e9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e2a85399-9989-416c-b137-78894584e2c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "d2b3ba81-eb46-4f90-b6f0-48dc7d3b4c24"
                        }
                      }
                    ]
                  },
                  {
                    "id": "195c384d-c658-4cf3-b52d-417f2407a4fe",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a8211477-a284-4f5a-b98c-17c7460781ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "23b9037e-f08d-4c72-b7d7-310d88c3219e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bfd03920-21c3-4c53-bde9-9660665c6f7a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "e1e9084e-4d93-4099-9324-d472960e874d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b39304a7-6cfc-427c-b6ab-2fc6d735efa5",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "719d25db-9fa0-4f7e-9b43-78c0dfccb401",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7cab6032-ed97-4683-87cd-362a47ebb4ac"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d7216608-e4ca-4b94-9a09-44ca6c17a381",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "31c1c139-3be6-4c47-9eb4-bb0418bac203"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0af21d07-e288-4437-98e1-2452154e454a",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a5e55705-0e5c-4a72-956d-b0672040dfd0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3b3450f4-853b-45fc-8aec-da706644c7ae"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "45a68835-79b4-4e98-aca3-2bab0bccd464",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "265f8d68-5be0-4336-9c3b-c1582548b9e7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "83924f0a-8db2-4dd0-8883-20da8a1c3445",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0ca52315-8662-425c-94a4-ac3a67fd4dcc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bf707b96-25c8-4486-ad8a-15e44c99dee5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5efe4fd1-8717-4152-a4f2-b31222e6de8b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "f1dc396e-c149-4c88-a8d0-607a74834e28"
                        }
                      }
                    ]
                  },
                  {
                    "id": "425f97a2-e809-4e18-9393-71b4923c9d65",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cea9fec3-e822-4fe7-b594-49e85e4b6550",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dd87cb20-0f72-47c0-a5df-6f39d44ec0bc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f6efe5ec-6cda-44d2-ad89-e884ebe7d9d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "0cb37afa-55d6-453e-88f1-5961b11e931d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "60749409-c3ad-4f94-8673-791a5607128a",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "571edc6f-8343-4361-9c03-aa1a42de933b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "084c7b3e-4ee0-418a-9db5-1168b3a4d487"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6e7a9e95-cf43-4968-98e8-eaddd5791768",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "f2dcf0e7-bffe-49e6-bf53-34a39f14c952"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5efbcf72-4379-43f3-aeb2-f6ebebd152e1",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e3f79024-35cb-4dcf-ab83-c511ccc5923b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c70791ca-d4de-4c88-ab11-d837b77b6c0b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b160ce08-bfa6-4159-8e57-05653d79c359",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "7ff63459-0989-4d64-b858-3ac64fbb4554"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1098c2ce-8dce-404f-bb70-6d8cc6a30c77",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a0e3a5d2-05b5-4332-b293-7936954096cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "02499e06-f7ae-466e-8689-13bee74567f7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c402a878-2f00-4032-a3a6-f30faf513275",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "d00b2c5b-c9ea-47e4-a3e1-ad0fbda93f90"
                        }
                      }
                    ]
                  },
                  {
                    "id": "47eeae50-9251-4c0e-ac3d-3a6a09f9ab6f",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "792d7c72-fe48-4f7e-a9b9-4fcdf3ff55b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f3e48180-61b7-475c-a270-e44e400d4e11"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d5423acc-a8c1-499c-8e6f-49d678536192",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "35f7ac01-173a-43c9-bba7-84b9d01ffbb1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6b019523-8ce6-445b-a288-32deb7fdca41",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "33156b26-859e-422c-9ab7-73ff13815231",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4608f5dc-3462-4b4e-b087-5ed0575b2f32"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "85275f42-2497-406c-a5ec-31533d05eb7d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "c81a2ba1-f351-46d2-ac40-473bb06e52c8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bb620bd2-3c2a-4d04-aa77-324086a52aac",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d382434-e99e-4f91-a339-e02a8599bcc1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e304090b-f4eb-4b31-8c59-98f38e0d6e2c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ebe02a5f-8f6d-44cb-b5ac-50177aacbf09",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "0a7ac2c0-32df-45a4-81f8-d812f8f439e3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b282d897-b4d0-4e3f-89cd-271ef031d903",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dbdb8c8f-841f-4512-ba6a-903ed7d91c4c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "deb8aeee-6856-40de-9a8f-e0d4d40687c2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "94cf701c-9655-4cb2-84ca-a878e4633164",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "49e56940-cf22-4d68-8ddc-19181e1a0515"
                        }
                      }
                    ]
                  },
                  {
                    "id": "64b936df-aa3d-4cad-bc36-1c7e2923889e",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e89ed3f1-17e2-4b17-88c6-ffc343250a24",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6638609f-a12f-409e-b90b-bbef28465dfc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "093f7909-012d-4463-8109-f49ae1f71486",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "69736241-623a-4091-9bad-56dc3429ca1d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d8fe269a-fe67-4ada-9e0a-113147eb6d22",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "735c79f3-866a-4926-8c13-57ab6c5607cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8324190c-06ef-410e-9ed7-0fae0544329b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d9cd5098-982a-4342-8a9d-946f97f82215",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "97c6389b-b79e-4ba6-b230-6ddabe0affe2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d5b7faf2-3afc-471d-a0f4-fb61340535d4",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f96daba5-be37-4ee4-b5cd-70608cc4331b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9e774e9e-3c85-4855-99e9-6b08a53d3d7b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "88035082-d533-41b5-a719-fcaf9ddc48a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "09a0bb79-c1ab-4ad5-b029-50fa3fa996d7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "87ea2f9f-398a-43a0-b92a-a18a0ab6ab2c",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ac2785bf-fb98-4772-8c6e-5c1c6ca81942",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "306ddc02-b3da-4435-9b01-3002be378784"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2d74f748-a930-4791-86eb-5f3985c3d8d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "f387533a-3b36-4128-873c-21641a5a9280"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b5f82347-f1b3-43e3-8255-2b533eed6b02",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5084e4fb-a618-4ee1-8897-25c54caec26c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1a102aff-470f-488e-948f-3f1a70a9f0f4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2efeb6ed-766e-487f-ac0b-baead06a2598",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "133448fc-bf67-4893-8f6d-9c01e38edd8b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b1a32f4f-88e0-48f5-a551-509e50613a6c",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7be5aa94-3363-40f1-9e3a-71ca88639739",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8419730e-8408-4465-b5b2-3bc552acdcfc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "26328e47-b94f-4c76-915d-814442dc5e48",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "1bf053d6-fb41-445d-9d69-7ffa2ce4bbd7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a3f64e4b-c473-4b48-aa8c-a7899760a31c",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5032dd7c-f868-4039-a764-65769656251f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b058c696-24c6-47ca-9a0b-f4710e4722a9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d6a68f03-c443-4c5e-94eb-132e7b84f102",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "e04b28d1-6e57-4574-bb07-658ff7054b39"
                        }
                      }
                    ]
                  },
                  {
                    "id": "19bbaf4c-fd5d-42e5-87c5-01c6aacb4cf6",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7fcd904e-fcc4-4381-bc67-355b8772708c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "15fa15cd-d0c0-439d-a890-9c54b7e52dbb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a3fc43ef-13bb-45f9-b566-3565c7f0839b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "eb971936-ea25-422d-b4e0-18a72c544407"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7da7d2f6-88a7-4ab4-8d5f-7a5fd7e19843",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4c7af85d-981f-4dcd-b2fd-57267edd8abc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a13102f6-d052-45bf-b9c3-28abfbc32b17"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0eb549c2-f498-45de-9baf-dedc00345f05",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "dcc07bf0-d0d6-4415-a536-380e3c5f5a92"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cf3bbfa5-691e-4c1c-80e9-8b0bf25b047f",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cdbc9b32-1152-4c20-b275-0a244e8c2668",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "890435b9-f478-4539-adf5-b91eabfb66c9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "72dc1707-d6ad-4bdb-9a51-a14f7137fa26",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "23593c3a-dab2-43a3-9fe1-2178f8a0dae5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0a5dcd5d-7734-4363-b737-5b4efdc9f0a4",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cb5888fa-5195-4d82-bac1-1582ae02516d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a168609b-9e70-4d27-b632-ffd1f18cc587"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6e90339d-184f-4c7e-bc07-4e6a83e48df2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "23b8612b-0dad-4088-bac8-ad3cd92dec81"
                        }
                      }
                    ]
                  },
                  {
                    "id": "efaa17f0-6e9b-434c-9c08-edbe2ca766d3",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e3842f46-412c-4876-84ec-176e3e89182a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fc1a50ef-562e-4e6f-9184-5c9835d308ef"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "30830b1c-ac06-451e-b506-d98297e8c045",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "38dd9d08-6234-41c3-8b37-bc9baaac12cd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9d9a6a58-02aa-44b0-b8aa-a1fb7baaf4d8",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "31f2b162-63dd-4e31-82ac-c427a6145763",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4028b94d-dad7-4121-9ebe-f4a590b2a622"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fbebdbf3-afed-4b35-ab88-ec88ea8b6d56",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "395473ca-2837-4d7a-83b4-7626339cacc3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "62bbd939-598a-4599-8701-456570c8da5f",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9613464b-698f-40fa-b180-a682ccf8476d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a454a881-9483-457c-81f5-b43f39e44093"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b2c99a10-ae83-4749-8105-f43714f105cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "af88b585-8b6d-4a3b-b66b-1e0bae37d916"
                        }
                      }
                    ]
                  },
                  {
                    "id": "158baad8-b25d-4008-a9c8-3a3383af4792",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a1d1edea-34d2-4bf3-b3dc-2ea751298296",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "faa8f3bc-ccd8-481e-b7b0-1e23d37820ab"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "78476ed7-20b1-45c5-a797-dde010c9c320",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "f4b41d41-fa0b-4c75-b2b4-4361fd5016db"
                        }
                      }
                    ]
                  },
                  {
                    "id": "140e6256-697c-482c-9fad-f14bf0e3df50",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d941f7b8-b4fe-4b4b-9551-267c9bdb463f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0588e1aa-75b5-4db9-aa8e-07dd31619491"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fbfe6af2-2a90-4554-b01c-c16384630a3e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "51a7f77a-32d3-4393-a4b8-6851aeeed4ef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "93e2cac6-4244-4e5f-b02c-b3e73194d0db",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "49501b1b-56e2-4637-92ab-fca51e5496ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "cadddb25-b605-4c24-a2ea-3ffc46fc4f12"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "87fb6349-e22c-45f5-87d5-698c03be0273",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "a9865c87-2d1c-469d-a6f7-70d0c35c889f"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "72f476c7-1990-49f0-aab8-a9babe701bfc",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "4bd912da-144f-47d9-8a6f-a003ccd8722f",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a1e63a45-80c7-43eb-a69c-d5bd641500b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "4c2a1a7f-0295-41c0-b033-7b789e16f9e9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e58d877f-017e-49f3-a3af-d039612e4fea",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "78630bb4-39d7-4330-802e-84c0de5a6ce6"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "ebb3cb94-9e26-49af-8514-3f6871872bd7",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "5a9a7142-bfe7-4540-aeeb-00a61e638568"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "4c8e0966-9fac-4c77-a283-b1fd5e38f782",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "73a7903a-8334-4554-88c4-75163b93f319"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "d775a2ef-02cc-41c1-805c-2e7ae0dfef30",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "b14de9dd-283a-4a89-8e25-9fe42c400e2d"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "35a8de94-02ae-4ae0-87d8-a0c7f2aa984b",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "8031a8f2-0dad-4220-a4cd-1b7ff200804c"
                }
              }
            ]
          },
          {
            "id": "375b99cf-d146-4ca8-a51c-cfb2702fc7cd",
            "name": "Positive Testing",
            "item": [
              {
                "id": "3c3b3a2b-ff0e-44b4-ad94-599230fcd34a",
                "name": "Duplicate Keys",
                "item": [
                  {
                    "id": "445b5aaf-e2fe-4707-9651-729a83eee288",
                    "name": "credentials_issue.credential.issuer:dup",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"credential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"issuer\": \"{{issuer}}-ignored\",\n        \"issuer\": \"{{issuer}}\",\n        \"issuanceDate\": \"{{issuanceDate}}\",\n        \"credentialSubject\": {\"foo\": \"bar\"}\n    },\n    \"options\": {\n        \"type\": \"Ed25519Signature2018\"\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "text"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "69fc4624-fd31-441d-8be3-8254a180a3c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 201\", function () {",
                            " pm.response.to.have.status(201);",
                            "});",
                            "",
                            "pm.test(\"response issuer matches request credential.issuer\", function() {",
                            " const { issuer } = pm.response.json().verifiableCredential;",
                            " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "4f0fb043-2d2c-4495-af5b-e1d1a26d3536"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a29679ce-ea4a-4fe5-affb-32c845493e50",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "451fa44f-8e2b-497b-85be-2b55ef284f79"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "3f3bd591-d1f4-4633-9e8a-9273afe9770f",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "40b4cb9d-5499-4827-8ec9-12ac802d13b3",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "8aba0b34-d1ae-467b-9471-544fda01df14"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "ddd3ebce-6439-43e9-9e79-e05e028dec0a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "44f0a056-fcbd-4b95-9130-fdea73b98c44"
                    }
                  }
                ]
              },
              {
                "id": "3620959c-1489-44e6-acf5-b217805655cd",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "5f8d2b23-14ae-437a-a8fc-fa4fb995392e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "d9271fdb-a6bc-4153-b962-9600d280eb96"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "9795a046-ed82-4c86-9b56-ee9c10a9ee09",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "d6e6b7de-b382-4656-a615-1b3ee08e0f5a"
                    }
                  }
                ]
              },
              {
                "id": "e9ce70ae-0fa5-43b9-8dcb-adc328ff0192",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "ddc3ad3e-e2b6-4e1c-9acf-0dd2c0d3d5a0",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "5f7b04e6-d7c6-457e-98e4-2371d0814366"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "929199fa-2c57-4f8f-8ac0-db38086b6be9",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "880aa36c-9a48-4c42-b7f0-729fdf4a7ef5"
                    }
                  }
                ]
              },
              {
                "id": "372aab93-c998-4cd7-bf2a-b24af526c27e",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "cfe8ab24-6119-48ef-abf5-f2c506e94d40",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "098ac8e6-7633-423a-81ad-3d8be19975a4"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "52140ab7-b782-47ca-840b-527c63df79b0",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "fc68dbbf-129c-43ec-849d-0e7d46e8442a"
                    }
                  }
                ]
              },
              {
                "id": "6aecbc43-1358-4d22-a8de-c1a7443338c6",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "c8847b7e-62f6-4df4-8a17-dcf19f254857",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "7a0f5b85-be7b-46df-b54c-d0a1904b2bb8"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "27d38617-598d-4ec7-81fc-438b2dd299ab",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "73940176-9f84-4018-9a71-c8eea9530484"
                    }
                  }
                ]
              },
              {
                "id": "eab37da3-958e-4484-ae84-dfb3d0788d10",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "1c19479d-e5a0-49a6-902e-431043bae94f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "02f90409-b7c3-45b3-81da-ab5f88cd27ba"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "84f6e50a-9b4c-434b-bae3-f7618dcb19df",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "30deb69c-e8ac-455f-8d0a-7bf44aab8e2d"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "2a8ec159-4599-406f-8325-1e2355d304b5",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "01b83ce0-fdb3-4bc8-bc7d-5f26296b68f5"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "3343c063-8657-4834-b62d-126accab181f",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "d6175bba-e59f-449f-8d73-d0295cf6799e"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "0758feb3-fd0e-499c-a58a-ad3d2cef8cd7",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "7cf8deae-6dbf-472e-9c36-0dea7a2f34ab"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "1d058e7b-bc98-4562-b0aa-d23212bfb6ab",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "173b2e35-6743-4f67-bd36-9b23a3d38782"
            }
          }
        ]
      },
      {
        "id": "0dc5ad13-df1a-4518-92be-06bcb309a92d",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "43616011-77fd-4b7d-b56e-f56ba4fd2e75",
            "name": "Negative Testing",
            "item": [
              {
                "id": "3651a6cc-afb3-43e9-b08c-926912affaff",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "466825b6-2194-467a-a6d2-176716a9718a",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cd3e7b69-f4ad-4e4d-9e75-d62aeab5fed6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9395e8f4-6513-4f89-a216-24b77fb7d463"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6294ca45-e951-4174-9636-c6a0c2c6acd2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "28ef2344-d5d7-46d4-94ca-1df52d6eecf6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f3f009ce-862f-4697-ac56-d584bcbd50d5",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bde6986e-5181-4b5e-a4a1-8eab4f2faea7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "67aff681-b5bf-464e-bcf8-20c36ce9ef47"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e2f29f79-2c09-40f2-82ec-8099dce477ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "72efff58-5998-4780-9544-dc11c3482f9d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6926222b-aeab-4836-b151-dff6eac25723",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "faaa5b0a-9842-4c6c-8d2f-8d5ffd5ada34",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6d1548d8-ddfe-47be-b843-f47ccf14feed"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "94fc1de5-c881-4623-a83b-5a22ac9a4268",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "6f27c46f-4cfe-4609-817c-5858893e12c8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4809d06e-e3a7-4897-9c0c-611ad33c4f8a",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e786736d-3630-422f-a904-8a09264c2617",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ff221b48-1633-4b96-b58e-46a5567988c5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "566126b6-ddd6-431c-95f1-cb26419c4615",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "492a6c3f-24bc-4bf1-b2d8-e740e67d4a58"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c3d7dde3-67b4-4bb0-b2d5-6fe6e7c8a7aa",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7d5d4140-07dd-4ab2-a619-9068921d936d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d08d3e63-9dd1-40a7-a46c-ae1e20e82000"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6782eb4f-0dba-4a6b-b757-024d8ea9a958",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "b0a9da72-eb5e-4470-814d-d40d5a3ec9f1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "760a0da4-80d5-4aa5-bfac-e86a0dc69ae7",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4786c5e1-0996-4d73-bfea-8d14f98c7fce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "40fb29c9-ff55-47c2-b6bd-6c493e7e2e5d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "815c6231-e474-4947-8bc0-74bb5c3da13c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "5b1622a5-6670-4bbd-99b5-10a173fe4c23"
                        }
                      }
                    ]
                  },
                  {
                    "id": "872dbd8d-ed97-4341-a91b-9242357c70ad",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ac7e51b5-950e-4d7e-b500-36c3f683b909",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b676b6e8-d439-4c6f-906a-fbf81f4a03c9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e100b77a-e762-43f8-91c9-945ac15c8f4f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "83c95c57-c776-4c09-8c4b-42df55ee2acf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1716c41a-76a4-4643-8a6e-a2a80ce06741",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "31fb1880-860a-4ad0-be69-b7f5c2ec5ecd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8b12cd61-89cd-49b2-8495-e1437c9a6181"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cd4064eb-fbcb-4339-838f-929cbfd5d2a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "55a934d1-8ae2-463b-826c-ae68286052dc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3aecd8e3-757d-4019-bbd1-639996f18a11",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6ded5dc4-1ea7-4277-bb29-06f9e7ddbe87",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "30eb6448-d888-449b-8dfb-33616217da2f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3fda70eb-dc20-4792-9969-2efec822c122",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "b2bd20e3-ed29-4d01-b5f6-0ae6eab46d10"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5ff9aa5e-5ad5-487c-ac2f-cb24c860376e",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c9163e96-efc8-4b47-9684-19502001a65f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "081b8176-f9d2-41b5-b0f0-e37380fa75ab"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6da09cbc-b7db-4c7d-8c51-90ee8e36eda6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "a56975fa-1c4b-479f-9f54-8110712d61e1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8f7f8bb8-727d-4269-854c-6e384399f7d3",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "81c96687-7aa7-4160-b1c9-69b2156f0e6b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "94111ad8-366e-46e3-8175-3ca50bb18442"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ba655171-202e-4b08-9cb4-85045740d348",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialStatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "881978ca-71e0-469b-8a6f-e5a87a80acf8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3115a6df-690b-42d0-9e8a-dcea8b3d1729",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "75f9a2e0-b4e0-4c7c-9982-ce4d3d4f043c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a100e663-fcfc-4f7c-96a9-90e5b8237f73"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f39183db-9b46-4028-8356-26d7629de4db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialStatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "ae452ded-727d-4f6d-8258-91dc43869d52"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6857e7ce-66c9-495f-a59a-bfbc5ea13094",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a535de14-863d-40a1-b0db-a80824d2e1c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f2f58c38-b3a9-44a0-af8a-1b6a074937d7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2e5643d2-881a-4f2e-b132-49117f1e9c63",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialStatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "c4a8b4df-b646-4b77-bfd7-88fa45b39393"
                        }
                      }
                    ]
                  },
                  {
                    "id": "719bf4ee-911f-4521-9144-fbcd5d1f40e6",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d1e1e36c-3d72-4ac2-b53f-f4ae9b7c2be9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "be3cae0d-fa1b-45d5-a6c1-3abcb0464268"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7c03e108-33f1-40ef-92ce-069d45b61f4b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialStatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "516b2780-4afb-4589-8c0d-3b887e9445d8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "33f3d202-14e7-4a4e-b566-b2bfba5b69c1",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "97057de1-d705-4b1e-bdc1-69774947860c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "729e727b-f96f-4032-a07f-adbfd6765dc5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c909b27f-2627-4ed9-983f-e90b930a8dd7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialStatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "48763828-5080-441d-9481-c01d694af654"
                        }
                      }
                    ]
                  },
                  {
                    "id": "70510a5c-b456-4bd1-99a5-04b20de13666",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5de52157-a4f8-4108-b684-20f84139af15",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f2cd398d-587b-4c34-8021-f80799f5dd9f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4f80e212-c3c8-4a8c-b560-b764dde6b247",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialStatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "498eb665-75ab-46ee-bab5-57e38a86223e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "42b6b6fd-4a95-4fbf-aa0c-eb09debb2cd5",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2ed314af-5660-4b35-a3e2-40f59deb390b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "57b99e5e-7e50-4282-a9b9-e397eeb4abd3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e5feeb83-fd34-43cc-bbe5-0e6ddc7eba1d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialStatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "36aa0039-756e-4d74-b4a8-927b970d6332"
                        }
                      }
                    ]
                  },
                  {
                    "id": "037d6ac7-5d5b-42eb-bcb2-8229af674fa8",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee8d85b1-e575-40a2-9714-5b6fd6e21b41",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "495beea6-2ba9-4374-a5a2-173fe9f9b6cc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f1e49cb6-c5c4-4152-bdf9-8ad1b614f0f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialStatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "95d5ff9d-9e64-4c2a-b2ea-4571e8ef2f5f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "727fdd1b-c1a2-4d3b-b668-19d6947ed22a",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1f3552b7-af41-43a5-9213-c83dd7258496",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "232b0803-b331-460d-ad73-44768e488cba"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "afa9fa8d-4e5e-43d2-b59c-bf4006df0a9b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialStatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "be61b557-704d-4eac-a493-1b93cbd52024"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9ea7a5e4-68f2-4f01-bdf7-86aa5ff667f2",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "561d2eaf-a3f0-4050-9cdf-8991764e7d5b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "60a36838-ba4b-45ee-9709-be5208fd5553"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e044b06a-010f-40e1-9dc2-b8df5979356c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "73bdd754-a68b-4381-a213-38c3be2aa448"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e38b18f1-ae1b-4e49-8572-637b7b325e99",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "95b3332a-b44f-4c87-bf67-256945eea860",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8e067bb5-f143-46bd-8d18-7a1415b89738"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8979b488-0421-4005-a680-92a815039544",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "61663ae2-1ec2-43d8-84d3-86babb3c9bb9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0d1df9c4-6328-4400-bd67-ba07382b03f7",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3ab52282-3e83-4a17-87f7-903915101acf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "13092604-9409-4d82-9009-17876c98b2ab"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c5c273d8-34d5-4fca-b7b3-dbfba114bb99",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6a354eb9-1351-4189-bcc6-fd59e1f4b963"
                        }
                      }
                    ]
                  },
                  {
                    "id": "661d754a-9050-4ad3-b3e9-d7bc204b7e44",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "256c2cde-7ddb-4017-b8ba-7e8978df9897",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ba03ed8c-b24f-47d4-b64b-0c3414a1cc99"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3e2cad44-1f4f-4b15-8a86-1754052a13c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "489ce049-93c3-4827-a4b1-1c79022f5d85"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e1e3cb32-4175-4b7d-b5f5-c08af6a9b667",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6dcd4bb2-3a64-4f16-bc00-1bad00a2f7e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ff4bbf56-2805-4a36-9b42-04a91da6526b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5b5cd5a2-2624-4a90-8bc8-fb00628c8519",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "bc869af2-774a-4025-a9d1-65c449d6d839"
                        }
                      }
                    ]
                  },
                  {
                    "id": "62c02f96-4982-4a50-a8e5-8cb7a9d30f53",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e051e135-ff4f-482c-83c0-e3cdb4bdfab8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5cccc539-4e41-478e-96b7-57a71b74ad5d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fe1ee5a1-5900-4e39-ab60-235ae5adbcd0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "32afdd53-9ed9-43d0-b0a9-d24d41318881"
                        }
                      }
                    ]
                  },
                  {
                    "id": "78b8afdb-7c79-4e2c-a0a0-1b2b0d441865",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8cf593d8-2f49-4468-828a-20ec38ab2fae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9fcb1a73-1ea2-40da-8829-4fa55aeb22c2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "24c57ac7-97fe-4a6d-ba35-9e8dfbefe785",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "cff75693-0645-477d-a3e9-1d64ebd8fd22"
                        }
                      }
                    ]
                  },
                  {
                    "id": "117874f0-167f-4a72-a878-df023f7f07e4",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b4075261-2fc9-443b-9fa4-6df60deefb0b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d33a250b-e6b4-4ed2-9c81-f647845589a5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "09b35ffd-6f7e-4d46-a6ce-d900ebc5d402",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a3ac4c9c-4048-4a8e-b391-70f89866585e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "de8fd90e-d714-4495-8f7c-b4748cb0e5de",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b256102e-32dd-471e-a3f6-f5c78fd7b488",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a6acadf4-53b5-439f-973a-09909289ddd3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f9242343-d5a1-4f80-a50d-ba36a4a069b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "543e556e-51df-4a51-8705-d27a7bb5afae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "92ab549a-d818-4a50-bf06-1faab4cb8d2f",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4ef8e756-1ddf-4602-b60f-60e0389c8482",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7808c8e9-0971-4e3f-a0df-163928934b84"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3995ced2-26ff-428a-b231-a46f6bab11be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b3c5edfd-125f-44e7-bb4a-520441cd7b35"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9d33f981-7ee4-4ab8-b475-dc09b8b1857e",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b33a5d9f-591c-4d78-95d0-c78b85c53462",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2abc0acf-0a56-412a-8ac5-29d2dc578e24"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0b8105e4-491a-4d32-acac-a51a546c7121",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "67ebb479-5aa0-496c-9732-30c64219d3b6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "05167879-c8e3-4ef9-98eb-68c4a8fbbf87",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "94a72d52-5791-48a1-be54-3b0e59d8ed84",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "53247113-43ee-4dd4-b602-f0bfc3fefdd9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "268b07b6-3801-486b-b794-ee1f9d4f0148",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3617f609-37f3-4181-93d9-990b4816518a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2657fc10-d9f2-47c7-8cfe-1fda0fb79379",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ac137054-1066-4562-aee1-d65718f9c3db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fa8d493f-1017-46e4-92c6-d279cf9ef64b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "874bc4a5-e60f-49db-9dd8-de2a158b2d91",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "af47eb7a-408a-4d42-bb5b-63829f672325"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "fa119ac8-343f-471a-8d83-fb6cc78f7544",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "79ec3623-226a-43eb-ab16-b370d80e982f",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9ebb24cb-8925-4608-9c9d-dd30ae4aa822",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "e2adcfb4-d622-4379-a793-2baeefd92137"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "20a51c35-2dfb-48d0-84dd-653df3aefd74",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "87786d22-4905-4719-bcb5-f75019c3578f"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "0ba05a9d-aa0c-423d-820b-7347bbb2c792",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "0ce3111e-a129-494c-95b9-7160749a99b5"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "5ab8082d-399f-4a2d-add0-b54814730587",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "08ce933f-b181-4104-98c3-42d90b839356"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "2b2f61bc-e232-42ba-b10a-2aaea5829238",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "f127ebf6-3667-4fe8-a030-ef9dded0ae71"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "dcf7f6d3-23bf-4de6-944d-de74acdae1fe",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "78b5c4e4-deb0-4a4e-9a64-69bbd47a843a"
            }
          }
        ]
      },
      {
        "id": "727f6474-50be-49e7-a8c1-0870ac45718f",
        "name": "Credentials - Update Status (StatusList2021)",
        "item": [
          {
            "id": "39f1616f-91f5-4e5b-b3d1-66a5909efc30",
            "name": "Negative Testing",
            "item": [
              {
                "id": "85cf5597-789d-4e1d-bc8a-d2ae24038b93",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "99ca8bfe-718d-4f6f-93fe-02f45b84309a",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3b0cde4a-2745-4b4e-bf87-f2664e7b5b0d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c2b02e84-ee08-4dfd-a8dc-a90989f0ba92"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "110846ed-69ae-4a51-b07c-eaebc91939e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "0b38e239-1e61-49f6-8963-67c968a8eb48"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e45b3f41-9104-45a5-95f8-31dcf44169e5",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ec132ea3-bd55-4d38-a56d-62470b138c54",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9c001472-d068-4870-b086-068ccba60de5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d44b0447-0250-461a-947c-9546bc7b8717",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "fc5bdbe5-7340-4d57-898a-a9a6a14de8c5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a91e601f-b18c-4fb6-82f9-1686463a88c4",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6ca3ae2c-7730-4b91-8394-b8052638bed9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "78de94f1-7d9e-476a-9648-2c96a818c1e8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9b9ec96f-e134-4930-932b-418cf8971c77",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "9da26494-be90-4639-af2d-9f9d64412b80"
                        }
                      }
                    ]
                  },
                  {
                    "id": "86161b7b-3518-4477-bbf6-a398f8f60e19",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "07ef26dd-ad4f-4713-89b2-d33a52847367",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a12fddaa-ef15-448f-84bb-f435f09549e2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "db26d270-20f3-47aa-b235-e8bd8b9a92c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "b4f51f6f-0165-4cb5-b0da-8f20e13b1045"
                        }
                      }
                    ]
                  },
                  {
                    "id": "960f2831-d84a-49c3-9bd5-02dd86ab4ba7",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4b13a95c-8f12-4847-ab4c-b166e3de0d63",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4008c379-70a1-41d1-8292-8627fa4b9841"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "daf9535b-89c6-4c14-aee5-7c01a7be2abb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "6967378f-c429-48f9-a360-346ff40ac064"
                        }
                      }
                    ]
                  },
                  {
                    "id": "802ce3e3-b7e3-4080-9f55-9adf0109575f",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bc8408cf-4a81-4527-b369-39af276f6beb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6e6642c0-c4e5-4cd2-a7a4-e12c58c366e5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "89275f97-80f7-4b66-a69c-6df3e44ee220",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "3219beb8-e2f3-469a-99c2-553d062496eb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f468640e-c669-4bd0-8bc0-eb977746253d",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "145fb5f8-d99d-4129-9b56-bbf645beca36",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c1df32fd-10b4-4bf6-ac8e-50000cb3e410"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6dcccba3-e336-4f88-936a-93dfe3790a48",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "3a344a8d-7ab1-4ea1-aaac-d9c5b9bb6c4b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "705f1de7-1832-447f-81af-7fe987e949ee",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "792ea035-1627-48b6-bce2-527cb73e5648",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b378aa76-3ae1-409f-9d64-48a0038fce45"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c15f2468-1496-47b5-b564-bb7e8ad4269a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "57208e28-002c-4ebc-87c5-81ee0cf60640"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e0117402-c8c3-4f43-bebd-307e83894886",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "969e56f2-8d20-447c-af13-3f9265bcd95d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "56b57b19-7963-4f33-b130-8ed7cba129d5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "be2d7b8c-9957-4b31-aa89-d61d18eea41f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "1c6a56d8-d906-4674-87e6-625d628dfdcd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3122b798-74b4-46e5-a005-c1eca77344be",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e846f061-2f8a-4ebb-8cbd-5b64fcb20fbb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "18dea249-8039-41ea-9050-ef8c43aaba55"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b02ee3bc-d9de-40a1-90aa-652b8924c4ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "be943a27-5e2e-4087-ac73-8b25ffb8df85"
                        }
                      }
                    ]
                  },
                  {
                    "id": "84147196-81d8-4375-9f26-243b8f477fb7",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e8315276-ee7c-4917-a620-5b9c670c1e25",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "27e4a907-33fd-48e3-8800-08f9730fbd46"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0a2eb0b3-cd77-4783-b923-29f9b352621d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialStatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "f65b7687-9fa6-4375-97e0-f0ec413258a0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8fd2b72d-e1d9-41a4-9f07-39dc9580ea83",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "526e43d1-5b49-43ee-9cf0-e0ec44215bea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f603e632-c848-4367-a1ef-5267cb4775cd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "22be4d4c-7ecf-48c6-8e29-1447869af156",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "1f2610c8-5a85-4006-ad80-b397e357362d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "084adf1f-71e7-4d3b-981f-8873c02cfc92",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a4428172-e9a5-41c6-ab6d-bf41375424b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e083e80c-410c-4096-a5c2-e352efb2d66b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a0d4b105-e562-46ef-b1ba-af7aaee6227c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialStatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "522ad525-2a07-4cfc-b8d5-122f181d5f9a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "813463fc-c936-47ff-aefe-29601a3140e9",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dc9bed7a-2619-4b21-9d0e-c975e2651824",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2d8959d7-ebfc-47a8-b746-188b41147a5e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "df771c77-1d80-42ff-b231-95894e5a8134",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialStatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "2bda061f-e978-4ffb-b6a1-b2b693edb66c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0d1c8a6f-072b-4f8f-b269-ee1576ce4bdd",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "47b55ac3-22f4-4b39-97ac-c4c61bd1a5ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aa891903-a03b-48cb-a833-c9e8b25c43a6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1b1690aa-5173-4103-abbf-9959304c29d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialStatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "aece056b-e4ec-47b9-83bf-e810a136e70e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b66ee8ac-2910-43ad-b862-9d5c32193838",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fff010b0-a4ad-4a8d-a3e0-8c6e4bbb7b91",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "851aaa78-2f62-417d-ad09-c81ef2f4d0f0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c05389cd-a438-4ec0-be65-6829dde1cf8c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialStatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "646c4c9c-ebac-4b92-9dc5-9f282d0f21e0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "803186d6-381f-4c7c-b314-719c1895fa36",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "87351095-0499-4822-a182-2151ec8d974e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ac7fa92e-2819-424c-b184-7ab2d872322c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2832712e-e586-4141-9bf0-e518c6d07d3a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialStatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "12de31e2-b583-4a1c-a8ba-6e99b8672ee3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "edb33f92-aebd-4833-b5a5-4872a865db38",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c837bae7-e29b-480c-9431-1a015db2d97f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bf14fd8d-5f00-40d0-b7d1-05fef7315908"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "18310bb1-a5f7-4036-9853-7d234331085c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "0d36d5e0-c68a-4eff-8db7-988cce728b15"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a51d8e68-80f6-42cb-b7d2-ca2b1333f61e",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3e116a48-94c1-4567-8336-ed83363cddb3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dd4b2ef0-b362-406a-9a24-f2b1aeb8265d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1110e570-eb8a-4d86-8830-1669e3c239a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialStatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1c44a45a-f240-4a5d-b4c6-5b4c11c9c99d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6737d367-bf8f-4d2a-a8bd-521783705b32",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b82d024c-6d4d-4f57-b33f-200dad0e8780",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bae4cad8-0345-4564-9d9a-23b7e0425e6b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "04fe185d-61ce-4950-ae16-106f58ce3c43",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "396cad21-997f-4e3e-9113-e6e5d50e65e4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "905e1211-1d67-463c-a6a7-00c497bb71bf",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "10f80d74-af9f-47a4-bfcc-bcdfd185db30",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "956f25ac-399e-4666-99ff-fadeb192a955"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ef0d32e1-6e5f-4f24-b7a4-9ee7392a5673",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "dc5e4506-f145-4776-bad3-cd2f1f6cc150"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5984ac3c-d10e-4c0b-b0e1-de34caf5ceec",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e6149950-a775-407c-b7d2-7b9bfc019b41",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3aaaa6b3-b44f-46cc-ab37-396353a93b66"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "df884edf-0d01-4536-81ca-9e08bfe72060",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6b60ee5d-cf0a-4ce6-a32f-26c3c99c96c5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "43f4a730-1eb0-4957-a084-b46229c9ab6e",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "22c98dc8-5ec5-44e7-a9ef-b324696bb357",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "782bf0c1-d109-493a-b8e8-6f68eb5f8ac9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0520fb05-4c8c-47c1-9bf0-240645286ce3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "07f86269-3bad-47d5-aab5-199b92176fd8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ccc3c323-6906-4669-80ee-24ee951ed8e5",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "92dfcf23-f2f7-4157-9b92-3efb38cd99e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7fffed4b-2de0-44a5-b517-8db7212f3a3d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "27116bb1-0796-4c46-96fa-7353febd3d7b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d02d1c01-00c2-4c10-88fd-7e178cc3ecf1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e8fb9681-bebc-4049-9131-0cea007ae3d7",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a2f5628e-f997-4d4c-98b6-4dc3e0879660",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1387203f-3bdb-4f83-90b5-5cadba67cbc5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0ae0ecce-3d89-4725-8721-0ea485f20068",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "fc659d0c-5785-45c8-9f06-6b5806f2f135"
                        }
                      }
                    ]
                  },
                  {
                    "id": "197ff5e8-e6ba-4559-b936-971309c62355",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "39f5457a-1286-4fe4-99ee-239939b8e9c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a9d5a248-deee-40d2-96d5-3b7bb46d5dc3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "487577b5-9c33-4593-8486-61e8f793e945",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ee923665-bdf0-48ed-9fbb-c57ce3d91f20"
                        }
                      }
                    ]
                  },
                  {
                    "id": "117cf485-dca9-4312-9f28-132e7cf1d809",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e2ce3852-569d-420d-90a9-618d74343b2e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ed54d896-bd28-40eb-bdbc-bed08ae3f6d4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2acd392b-da25-405e-a242-527370eb718a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1c83a977-9984-4aeb-984c-2f9207feac5e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "676d3c07-150d-40d1-9c40-d90e09edf203",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3224f0c4-f86c-48c2-85a3-6d56732543d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1db7a947-e454-4a7f-98bb-f721a1db4111"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "79738078-c867-4b6c-8f4f-fb8ff6ec9c52",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "32a5d4f3-2601-49ad-8006-584ff29bceb1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "227c233d-b24c-4960-b87d-5f87de13412c",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5f01370a-cd29-4274-a262-e3c49845dc00",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "945f3c01-068d-4c80-8600-ff656a06d480"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "88af2325-f3c2-445b-a5cf-f7de6a4b57b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3c7f75ca-60a9-40ea-b7c1-310401ac671a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eaac8eac-be6f-463b-9739-b5882e7f5836",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2c6688d3-67e9-43d8-a0c4-c1732b6a4b22",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cfdacadf-9300-4618-9378-95fec6a94cc4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0ca022f0-10ad-45f7-a1a8-15929d654715",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "998e4b57-6526-4d09-b51f-2fc719339ecb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2f6f5c6f-ed51-466d-bddc-c3c2f7e1326d",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0763f6ac-cec4-4aff-b0ea-6094a3fceb27",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e4e8acf5-657a-4031-ae89-30d473296170"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cea76907-b2cc-444e-9e38-e356b676f858",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c31bef89-2eb4-4c2c-8137-c52df029c658"
                        }
                      }
                    ]
                  },
                  {
                    "id": "88ee384c-2a7b-4916-8bed-f831eda4a485",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f5f0fb0a-72fe-4038-8713-36eee2c66e92",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "760912c5-d26f-482b-8d7f-0b6aae37479a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "546c70af-e874-482b-92ca-5394f042ac71",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1718d336-aa1d-464d-b6d3-189c2c0bd597"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f231c9af-73a4-4beb-8b2a-2d2722629552",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b6c82bf2-a7ce-49ee-8a01-9fdd711c77a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "83a1b025-d496-43b9-99bb-ba438baf0cc9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c442478a-03b8-48ce-95ce-e4af28c39e08",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "fcec2c44-7d8d-4e16-ab7d-a5a57fc3348b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "389c4bd9-4194-43db-99d3-d156431d4bf7",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fa08bb22-f58e-4233-a3a8-77ac84049e9e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2bd8010e-3202-4c8b-979c-0335f6c72ab5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5ef8abe6-695c-423f-afe1-ff98d212f462",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c78db5bf-9710-42b6-a374-b7c127d733f0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "119b1263-e51e-4d9f-b35a-193f1b7e2b51",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "269ad7ce-8889-4e24-8876-6967c256e518",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ddc5c556-b0fd-4b4d-b839-63afeb901b5d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d0aa226b-a341-46eb-955d-96ce3ba274fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7bee0bda-f8ae-4343-9464-48dd31ef8cc2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "32772602-2952-4ae7-bc45-adfb3e5c8533",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "57304af2-867e-4df0-bac8-cb3d35e0a7da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3a5cefec-e91f-4c76-b257-ca03158ccfe8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "30852db6-8087-45c8-b221-0f4607f23d22",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c82b22bc-f8dc-419a-839f-9105e358abdd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7d00bb8d-3285-4a8d-b023-a159c120bef3",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5c3bf679-2c39-4012-90f2-51741d567b3e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "75b3d907-ee26-4e25-acd2-6d1d311b2dd4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "acd6daac-bbc7-4d08-9d13-d7be9951ed5c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "87b2e793-9b2c-4e20-8d7d-ef2d940b6341"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "7c6ea379-63a7-4c41-a35e-2b710bd844ae",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "75743b3c-14ef-433c-94f6-b38555d99528",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aed16079-dfca-4751-af66-ebb975a18e84",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "f1f3a105-06fe-4040-addf-62c31593f06e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9f11edc4-3cb1-40d0-92f6-9bf3be4f729e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "cbd24dcd-72cf-40d7-929b-b3405b2e042c"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "6e2187c9-ac5c-4bde-b707-01ead881e280",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "cd133e43-c07e-4638-9276-2c8211016aec"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "3cff60ca-8e3d-416a-b50c-e05058db6420",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "045c163c-d6b8-43e2-b03f-ab6250962707"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "56ce0f17-a8c4-467a-9314-ab09c8209af1",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "904bb359-26e2-4bd2-8653-e6584ac55e69"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "43a825da-eec7-4400-9400-dd07672fb866",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "1742daae-1986-4610-bd19-56447b5918ce"
            }
          }
        ]
      },
      {
        "id": "d21aab3a-6922-46c1-bb8f-34553138a10c",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "d36c7b68-7a8e-4472-aa80-331845ee565e",
            "name": "Negative Testing",
            "item": [
              {
                "id": "8ae49c10-2666-4677-9e40-12f53cfe085a",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "ad2a719a-c55b-49c4-ab61-4f9d9c7a18d0",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a5c4a635-7d43-49c2-a3cd-52dd55b0e59d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3a53a05b-5c27-41c5-8864-c76e8fab1dd3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "33958a7f-34e8-4401-8cd7-bfd2892ece3e",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8af15fd1-cf12-450b-8677-511d37cf2094",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b15242a7-a51f-48d6-96c1-7708cbb8ca1b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "88cd3644-9c27-43d4-a4f9-74d745aaa73a",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ea80fabe-80bb-4bb5-9cf7-bbc06ea485ae",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8915cc0d-13c1-4f74-b394-5174ee691059"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2c218567-b373-4700-9b63-f6a11b8fb7f2",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cdac9fe6-d2db-4c9c-9b79-9ef774f2c47d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a6b231f5-b96e-4d5b-a7c7-314cfe290415"
                        }
                      }
                    ]
                  },
                  {
                    "id": "645e4c48-e69f-4634-b9d7-5a40e91633c0",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9dfef5ca-8021-4db2-ab17-fe1528e9b403",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2ae1766b-12dc-40ea-93a1-418ed4970e10"
                        }
                      }
                    ]
                  },
                  {
                    "id": "97496e0c-ee69-410d-b594-da5569d4ec24",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bab9e379-15d1-4c49-b270-0ca075b3f6c5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6997b2c3-8848-4d57-9c60-2aeb18ab80f1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "acf4d0e5-de04-4a56-b0fe-ca091f1fadab",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f45893ab-4d70-4a20-845a-f63a5be3b9fb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5e1d9ae0-9ca9-4cca-878f-510d3e59c663"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7bafff6b-6c0c-489b-9b06-2a8b86d632ed",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bc8a9a7a-6fe2-4cbe-9629-81e425938b54"
                        }
                      }
                    ]
                  },
                  {
                    "id": "12c05851-c0d2-448a-85c0-1458d3626b5e",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bf894703-f5de-48d4-99f2-a71a66f9fc5d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d8b2baa8-2b41-45ae-84ae-5a070300077f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b0a24a3c-ce3a-499d-9bba-9b4d5a340e9e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ef99e0fe-d83e-4401-ba4a-b08c8f4ba8f8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "244b31a9-f91a-46e5-9095-5c57ba3e4993",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "484b29b9-d537-4f85-bc16-3cb67a959cdd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "49ec91c9-5d23-4913-83da-daab563e7e69"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "92aa53c1-68b7-4474-9541-09015004705a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "435c91fe-4798-4345-83d1-e3e61151f3ee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3fc5a468-fdaa-43fd-9cc2-3c68153ff036",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "50df685b-289e-4b16-b9ca-95902926d3ad",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d996406a-a58e-46f9-af62-02d987926532"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "18efa056-0510-407d-b29f-beb6200f9216",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e933f21c-e5a1-4da8-ba85-b5661ae8f447"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a3f8f388-1f4c-42e7-b5fd-24514eb9ae42",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5162174f-2281-466d-bb04-00fbb622f8d5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8dac9dac-3a74-4bc3-8713-7d8f930e16d0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9e50cd7f-3d0d-481e-a232-a17345a712a2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f13a2c6b-dd73-4689-ad2f-24d800fb7a7a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "712b55c4-288b-47dd-8e28-0c4106476bb8",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "942c1532-d2d1-4b9b-897b-67bd2a6db2bd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "08525135-02d5-40d9-a65c-84145ec8416e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "531838e4-a1e4-459f-b734-53a78b594856",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9f4b039a-4531-45c5-b56d-bb2b7a2ba3e7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "69c9bd9c-9e1f-4f58-af09-49fb72a119c5",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a6a2d7ec-975a-447f-842a-43ca4d6c403c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f69dd734-dd62-4794-8021-f05a68ea6fe8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f5b8803f-8862-4f10-96df-8bb3c657d708",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "79a0c10a-0254-416d-b8d8-d6850b6d1648"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7dadd1be-a586-4dc0-b7f5-68453317bcd6",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "08246380-f329-443d-9221-f0aca36ed1a1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "421df55e-ccfa-403e-a0a5-c31424ac65b5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f965e89a-5bc2-4c04-863b-a18a69e2d133",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c30afdd6-c2d4-4f12-9450-86b6162e6dd3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4a857fe5-b238-4d83-9fbb-7077c365be5a",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "549b76b3-f814-4ebb-ac45-2003874ac642",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "400d085c-facd-4f1b-ad96-02a502bbc034"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2b3e6d63-112d-49a3-88cc-e4643d261bcc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5c89c483-9593-4443-bd3c-9a1ea4396a2c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "01eaec06-0e36-4062-863c-adeca24ab545",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "63820b6b-dc4c-4f21-a53a-4ed10a2eec37",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "178e3ee0-a91f-46c5-a64a-67be6e9bb386"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6ae7857e-dd7d-4c50-ad41-bd290c135948",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f181b550-6704-49b3-b3d9-36e9dc75efd9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0437a6c4-5132-4911-844d-3dacbea892ba",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9eaacb1f-e640-434a-ab76-29d03de16c56",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "13487604-0123-4f41-bf57-7b181a51cda2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "76ed8023-0e83-45e5-a4f6-ccff97762b08",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "65740103-156a-45ba-b567-95e0bdbf7372"
                        }
                      }
                    ]
                  },
                  {
                    "id": "84077f85-9fbb-499c-a4e3-7a7f9d7dc797",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e14e5453-0a80-4c9e-96c5-6559f59848fc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0cc62438-d037-4ad7-b52d-b50f8d111b56"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f4afddef-dd00-4607-a473-20d7ce497b16",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f446e0bd-6cb9-4414-9d69-5027b5a1470e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "48660032-76b7-45e4-8d52-e48bfb7b1fdd",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d885064b-c379-4b16-a2c7-3aa53dc3272b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ff3f84d3-ccee-43f4-b2c6-09ef929ca5d4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8980e6ad-7f69-4557-b419-18792de4d0bf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d31dec00-f176-41b1-860c-f25b6d449404"
                        }
                      }
                    ]
                  },
                  {
                    "id": "50b01af4-9893-4f01-9f43-f0c9f3d7cc2a",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "31a8a054-aecd-4799-8afe-390ecf7d6135",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4c6d0f2a-3b0b-4924-818b-11fef342a77a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ca55ed83-5fc0-4b92-ba0a-28ed699718bb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "de1d05e2-82ae-4301-8d60-647531b9fc61"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b2a19c02-1ce5-44b1-b344-982504ea1a5c",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c7dacd34-2f5c-405b-91ba-c628cf2c570b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "84afd485-0b8a-4a39-86e3-1601d0ae8049"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7fda88a9-55ae-4800-95b4-6e4a771908e6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d235b3a6-b949-4046-a826-1a85363e888f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "73b85e39-23fd-4c88-b370-8f7b695aa6ba",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e2640338-ee0a-4124-ac78-e7c185cbbfd7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "95f6e1cc-630a-47ad-9322-7de5853fbfb2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4f44125c-ee53-4874-88b9-83bd02a8b21d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "61672df0-a3f0-4c03-968f-878f3cd0cb05"
                        }
                      }
                    ]
                  },
                  {
                    "id": "78e14f94-8099-4329-aca3-d03f9e11a24a",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a4c4b29c-7142-4ef4-8181-21d69e7e2c6d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "68eae682-7979-49d5-a9ff-1b678f9ea0b8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "eb87e41a-5408-4582-b0ab-df07dcb1bc6e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0b8b317f-e26c-4237-b6a7-5797146b1fae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0fa28ae8-6a29-4fe8-95ea-62630bc49188",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e2c3dbfa-e6d8-49fd-a12f-65aa578c3430",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2346df92-379d-40a3-aa57-222985848926"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e6c92680-0cfd-4b47-bb93-8ba03f5261da",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0e11f4a1-92d6-46b8-88f6-973552d13b67"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a0dc752b-dd27-4746-949d-1e476f952a10",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4e43b245-aea4-43fa-a3a9-92bc0a11acaa",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "02828329-6136-4d50-a2a8-2b8b69e88a2f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dbcb23cc-0bcb-4adb-8db1-716b2948a863",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f26cafe4-8450-4ab6-b2e6-03c7bb81d3a4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9bf2574f-632f-48d6-a0b3-4488489f0a42",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "987bfe99-ad26-4141-82cd-45c87869da8c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d14753f9-faba-404d-85d3-bc3abccc45ed"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f445ce4f-16db-400f-acbd-0c2096fd5517",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e098d7fe-94ec-49a7-af9c-d952e96cbb91"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fd41bdf5-ba02-4312-9db5-c0dfe3f51df1",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "72f01929-2db0-4165-b394-8ce60b2c8d41",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "adab528c-03f8-4b53-96bf-deb11f2cc910"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cc3e1b16-f7dd-4272-81ff-19d6e70057c6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9010e697-89e9-422d-a4e0-913ab993096d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d468d8dd-f080-4b1b-98d1-6ec84d53afe1",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e4cec5c4-a853-4018-954d-329531bfe199",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e26adc9e-b567-4901-ab8d-f8dd6d0cafa5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dd71144a-6903-488e-b275-628e75025daa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "05024bb4-ac64-4ec6-993e-2f1d582382fa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7737b804-7467-494a-abe6-6a8a32d23645",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3e9f8826-0ac2-4b3d-b98f-55ba5c669bf6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "77ad1980-e04f-4dc9-a648-7beae279a5f1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "61b7d68a-2b86-4caa-ab7d-c19b30d9e071",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5180b420-fd5c-4359-94f2-284f1215cb24"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e4c47d17-1d1a-43fa-8807-b2ed1af7eb58",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "405efd06-609b-4419-af79-b63e32350b1b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a3c33a33-2490-4333-ad31-0c146448c5cf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "11b7912d-6ede-4c33-9470-b00b456c9707",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "19f6b3bf-0435-40cf-bd23-07070969869e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "429cd394-4c2e-47b1-89eb-da3e86a6b3ee",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d473b1b5-937b-4c48-9402-45a4357d2375",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4b418b59-77f4-4357-89bb-2b17b8934e3c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b10dcd46-1c63-4796-9209-9a65bae55646",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d4fd93d6-7a24-44b4-8f15-52455721a5e4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d6429f00-0d5c-4e02-b35c-6d63edf68c28",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "03a55b46-1053-4bb8-967b-83c6ceb0e55d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c722f068-4edc-4992-8e49-322373cf47f6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b279ac27-b789-498e-8b17-a2a93f7c9fe3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6009e84f-5d6e-4812-b7f8-c7a3ecd907cf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8f1603e7-4cb5-44e4-828a-fed18b7aa166",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ce53438d-5e3b-48ac-b659-18186057d083",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "be02bdd4-43db-4ebb-9b94-2269a2528f0b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "354809dc-dee0-409f-b221-2ec39e7dab5a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3700abea-8a90-4bcf-ae11-d4ce715f49b9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "31a29731-0ee2-4bb8-b101-183805968621",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "499f37a1-557a-409d-b8c6-01f5e3d1c001",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c13357c5-e6ca-4840-941b-92984fddda06"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9114537e-cd69-49a2-882a-296abeac6133",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8108d500-92d8-401a-a0af-65620b06f86a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3e2d48e0-da0a-4224-be57-85b398f8209c",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b212b038-6760-468e-bea1-42373061ff75",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "26916869-bc3e-44a9-bc4b-72cb9e40fe29"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9c33493f-0383-4e4a-8fc8-a6490a0e4125",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "882290a9-5acc-4113-bf7e-d40c930b52c4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "39993226-a4d2-4e17-a4b9-6e53d2fd1c31",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5580811c-82e7-460f-85e6-81feefe21db6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "90e14d5c-508d-428a-9025-59d2af07cddc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9ea5648e-dcee-4f85-974f-0edd3cf590bc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4b6dae2f-19c9-42cf-a12e-86767cfde7f3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b0674299-27cb-4b7e-85a8-20fec4311c47",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e720eb97-c653-4064-8342-7069b508b056",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cfd70fb7-da10-4212-adf9-b85b35bbfc74"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "523abf25-b786-4740-ba5f-5020a57c651f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a198f00b-43dd-4240-90bd-bc9310b0c8fe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c2f283a2-10a7-4d07-be45-93117ae74f53",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f9f4459c-ba92-4f3e-a4db-2f8679c3ffe4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dadd67e0-40cf-40fe-836a-9d13ad1f6168"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "eeaf0543-c492-4adc-8196-a83a88289974",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1fa5b97e-1a15-46d5-a06d-8020e9f6ee42"
                        }
                      }
                    ]
                  },
                  {
                    "id": "73ec5fbe-87c5-4e65-8488-a175430afad0",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c835c62c-9680-4ace-8c37-8a26b361f0db",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "52b886c5-b8fb-4c47-953a-6944ae5a39b1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "83d1421a-9220-4ee1-90a9-e651649e3ae6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "35ae25ed-2208-4689-934a-20203c0059dc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fb05d605-148d-4c21-b5de-40c040857277",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "464cd434-396f-498a-b3d5-8967828a089a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "34195cd1-97bc-4d27-9d61-2ce56d8bddf8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5c2c77c9-129e-4763-a4e9-53236e5141cf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f6b3bf6e-be42-48d2-8d3b-6d5a7f9f1d70"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e8954ca8-9e4c-4e4b-9f5a-3940c9d43ca8",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "312ab107-62a5-40b5-828a-89cf04bba441",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6143f1df-0ced-4f0e-b2c2-61b57ad5d7f5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e4dfb631-b829-488a-88f9-18e1e03162c4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "673bcac6-4573-448d-ac75-3385dd4e3e55"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cb3ccd98-6776-4b8e-a1f0-5d5704d1c191",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fb70cc50-4c15-4ef9-a4c1-214d934b46a2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a17a3c1e-7bbf-4484-afb4-eb243a1b4548"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9a069b9f-2e6f-4192-b82d-b43b59f8bd79",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "970b3837-f1c6-4d4b-9b2a-cbdcddc99643"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9f7b0953-c102-4997-ae1b-fd279c33a485",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6f64b3aa-dbb1-4918-a240-9d0c821f2d11",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fb001c65-205c-441f-a14d-2a1246b60934"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cc0a59ff-f542-4c0e-9e30-f148f027e62f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0930f33d-be11-46d5-b6bb-8322566f8765"
                        }
                      }
                    ]
                  },
                  {
                    "id": "35f07107-5f8a-45d2-8838-74102b9b2769",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4d4a1dd5-0e76-473c-a3fd-12cfa6d279be",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8a6abf6f-4ca2-4c42-83de-1cc0201d3258"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "377b629b-6d17-4ce9-967b-01335e7c36b1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7f6aad30-7bc7-46a8-8e32-8a933e7dc246"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8095f687-3014-4a62-baf5-4f4dd70a16be",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dd789cd8-2fc2-439f-9c64-413f3328610c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fb6721de-8efb-448d-bcbe-4f9f6c0836a7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "360f1b40-fc08-4127-b341-f04c61abb2c1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ecafc014-72e8-497c-a0a7-2a2bd7cc6ee2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e4482c26-9b1f-40fe-b790-f58e868b08a6",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0b0d12d9-a51f-465a-a040-bdf723476685",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b6990d2a-caa3-4d66-a430-f5b90877a37c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ba4dd786-faba-40a0-ba0f-8ecbea5b7ac5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "115d800d-ba40-4a88-a519-e6f71e6a0cfd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e2a374d4-8e59-465c-8ea0-00e8d90d711f",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fadfef64-829e-4ba6-af72-2c820a70fee5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e492d572-0e77-480f-a9f2-1823d48824b4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5300f82c-faf0-4ec7-990b-bd7c5a910dba",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6d12298a-1b02-4e7a-9fc2-99a516d68abc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d3a8fdba-9e98-4b8e-af1f-d0116db910ca",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "80331199-1ace-4530-aa80-0a7b34efb5b1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "20a059a5-d211-4347-adc5-b6aeabea8f4b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a7b0ff4-232e-48e6-a6e7-c5abf8fcd0d6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1988f46b-aee9-47b1-a1c2-0572949c055a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9e1c9d61-33f6-4fca-93d9-ba11ff7c881a",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5e46e0aa-7525-4e48-8907-88cbb1a2c13a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "293bd75e-fcfa-4978-8db6-f25184c80bec"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8aed4676-e17e-4b8e-9e93-18c907989dff",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e374123f-9e36-461f-9d1e-e5e90e92537d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "496aaf16-25ce-436b-8cd6-1145ec3e8e4c",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "69d69771-6348-42fe-8806-8e7c3d388f8f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6b7aeb01-2b4c-4a55-ac1d-2f119c34aedc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d859cb98-56bb-4c93-8d8b-67725054dfa7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "08958ad9-6cf1-44b4-8580-8f7ec6290de0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "61709cc4-87b8-4b40-bd81-0f30e5bb22d0",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "63fead70-961f-4a86-913b-de3136b39598",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "54f90ec5-9b35-413b-9270-47065c3a171a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ac0d0c18-967c-440e-bdbb-fefccea60281",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "781166b1-06dd-4168-bd60-1d126b53f17d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b10be92c-9088-4a8e-98c3-f335c7a936d9",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f4aaa6af-3d4e-4159-afde-c39ba751bd62",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "681eed91-d1cf-454f-a4b5-5c351186530b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "581bb45f-ea10-4889-9189-0009da6db647",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b0b7316f-ab57-47b4-b8c2-6dadfed554c6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "de6616b8-cea3-4ff3-a23a-6e17bbd985c6",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "84b0073d-1146-443c-899f-b848b2665a21",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5e15761e-5321-4bb8-ae0f-04b0720d0af7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1b047f17-96af-4f1d-bd51-74ed454a94a8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "46cb55f4-88db-4729-8471-273e55ce8219"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ef81019c-f482-4a19-a882-69940439f0dc",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "981bcda6-6f91-4160-b99c-8e8ce197eff9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bb3c0296-4aa8-4bd7-9a72-9a7384d5d69a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9f5395f8-a355-4769-b515-6a5a8d57afb8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "06bd6147-820f-4101-aead-64743f9c86b3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2681e517-af73-4737-8aef-9395c799b29a",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7c7f9342-4ff8-4e39-ac60-5cded5b95768",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "632642d9-9136-41ff-aadc-d5d24a1ab445"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed2c0f12-6190-4c23-ad1d-de984940b794",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "efc22003-2f37-4767-8d98-ad302729a59e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "27e49295-9874-4f41-ae15-0c99ad8245c0",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "91dd9fce-87f3-4962-9d17-cece75619cb0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3126a915-379d-4013-8e1c-a385e8dab117"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c24e2099-ea1d-4940-968c-85338ac14ec5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9c17b0c1-fdc2-413c-83d9-002cd4f4915e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7fbd0b07-6c06-41d3-a16b-551a7fb29477",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "09eb7ecc-6b5c-4a94-a46e-0387fd30cefb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "97dbe6f8-1c27-411b-9adb-00594bcec036"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f7d6015c-fdba-49af-8b32-3bbe98443542",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "13a34f90-63bb-4f40-b5b7-545c8281a826"
                        }
                      }
                    ]
                  },
                  {
                    "id": "055a729e-03c1-45b9-9d4a-3c10d14e785e",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ca69436b-9840-4899-9732-20cc75c40737",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f8b4c98b-08db-4ae0-8d90-07f458553a99"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5a2b1251-a6f8-4054-9120-c38837e64357",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7c42178a-4232-4717-9abf-c152d612eabc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "be371669-d0d1-4fad-8115-0fbdb705aea1",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5747b933-5d23-4dbd-887b-848cc4dfee18",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3599a965-2d45-47fc-89d2-a7823b98559b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ae1cb42f-f317-49d6-978a-65d6e3a6f241",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "57a60464-cbc5-4350-b365-0b7d3bba9531"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fe7dcf4a-3079-4d26-93a1-565a204e26e1",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c1b8c8b7-fbf6-4b9b-a3a2-d1235a889f19",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a2ff6ba1-fc37-4781-961c-e58cf7715d46"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2a37ac30-f430-4a69-a488-1e8dab5ba8eb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ee40a127-db31-49ec-b65b-39dce285e039"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2095af06-640f-4b8a-9a18-cacac5693084",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8873a6fa-eab9-4ac4-a5f0-bacfca3499fc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0dcfa5f8-fa82-48c4-a0ee-46b2f59cee98"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "59fd2a8b-5c7f-44b0-abf4-445daff718d4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b3797aca-caa1-4351-82ca-911a8b14d3a7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c6784fa8-fc12-45aa-9762-4713968934c9",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "22cf65eb-600e-4352-a890-a2d79e551d95",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0a85a6c0-ee36-4af8-9bf2-2566e144480a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3a691c15-a439-4dc1-b25c-8f8f42481827",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "39ebf40f-d62b-43d4-9fa2-570f90bf8c04"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0585f841-540e-4ca0-9f68-0c8665ddf3fb",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e740218f-e8ff-4f78-a52c-a7ebfe39d73a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "80ec631e-bf18-4c8d-a1f4-39b8c3660438"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "336534ae-689b-4ba0-9a4f-e8bec063d843",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2d1b9bbd-fda4-46ad-a4e3-97c2fb960966"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5523c0fc-58d5-4fab-8657-e8979751dc80",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3958206c-9fc3-4e26-8680-a3e3312825d2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "57746afc-7b17-4781-93d0-462fa54b4f11"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "71cdd02c-ed5b-44ec-bcd0-723a41671caa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ece70d2c-a942-440d-bcf9-2995244ca0d9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7f3847a1-c55b-4984-afc2-9d42466595ee",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "799acb91-2510-4052-a218-124e1b30260d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "75634bb8-db28-44b6-b90c-8a07bb15e119"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f1f869d7-7662-4d96-bdf0-adfcc0befaed",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "88703960-aed2-4f9a-88fa-d7d7be67775c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3dbdd45e-95db-4729-8773-61f77b33e5df",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "460bc182-3596-4b7b-bcf2-a62eeeb81f4d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a7fa4518-aafe-4050-b185-1f82da5f68de"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dd845eef-41cb-47dc-a4fa-22729632c595",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aa3fdb8f-9c27-4c67-8090-cbe1143677d9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "48c68357-3a20-41ad-b4b5-bc4d2392bc46",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "043245c0-1b1e-496a-8536-eba28fe08f58",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7e1cb477-ead4-4fed-8871-2c88d511d95b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "eb9d5972-1a28-4919-9a14-04fb458bd6c5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2bdf42b4-460f-4899-bb91-50e68e386dea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2ab0adad-74a0-4d24-8eeb-b4158cf68950",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "228c402e-c849-4a5d-8855-bdfdeabbc141",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ef93e2a9-0248-4c81-90db-d8d0addf126a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b40b877-cedd-4b87-8201-ed0dcc88f433",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9ef62a00-7dd6-4e42-9169-cfb5f78a8195"
                        }
                      }
                    ]
                  },
                  {
                    "id": "505f16e8-f0dd-4117-8259-169cebb460fd",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "feab5152-4073-45c1-a0d1-dbc7444c3382",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6a44fb7b-eba7-405d-a8e2-21c94219584d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "685cff96-df85-4605-8b8b-6748f63ad4c3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "585dc893-80ce-4e22-b8c3-40c84ded6630"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e217a3a3-ee3a-4f82-96d7-fa3b253c131b",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "09fbb284-5208-4050-9efa-e0b8e871188b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a39a842f-5159-4d06-96d0-a5cc4384b6bc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b35a9075-45c1-4201-8ca0-7a35c72ddb6b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "52a125c9-70a9-4fca-acdd-652fce2a5a79"
                        }
                      }
                    ]
                  },
                  {
                    "id": "87143cbc-94ec-4975-a118-f97609a723fb",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2306a49d-f344-4e08-92cd-c8d688b66ebd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "425a9934-41ac-4150-8f62-c50177abfb20"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ea66f1b1-bcd7-49b6-8b02-16b00d8ac9cb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "394e8105-e2aa-4ebc-ad9d-2cbf8bac5449"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aca71d41-ea3f-4ed0-944f-03a441911f0f",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a04e080b-931a-4e5f-8c8a-4a83e21c57ea",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0f658448-1723-49e2-99d8-e4aac997a682"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a5e20060-19f0-4a51-a56d-397ceece2536",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7af0051b-f367-4bb5-94a9-4fc907d84683"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9e998a2f-d7d1-4c12-b0e6-bdb66598df16",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c016f29f-de38-4c73-a516-5991fa183bed",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "be404812-4a63-413d-b75f-fdd9dad089bb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1cce3301-0474-4aa5-9772-87c48b3e1b16",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "359d239b-fc1e-4e4f-b414-58f6512849e0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "32768905-9ea4-406c-ab5b-da467b26d568",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "79745a28-15d8-4506-898b-255ad7c717d5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fa63120f-ac2e-4c97-94fd-a55635279244"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "50b5cdfd-ad17-4a45-b584-ff901a3f1b26",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "871a7fa0-2ff7-4c74-b9eb-80b52f2a1ed4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7ccb8cf1-aed4-4819-a55c-d3fad85a3fbf",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4ac01109-e454-4b01-b4dd-81faa696e174",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8c978c68-28ca-43f6-a74d-38bfb58df5b6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0f16df4d-2121-4458-a84d-7356ed4439f0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f6434d39-b773-4ecf-9e2f-91b1da6a6b49"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3280314e-1922-4c96-ba90-674816a40c12",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b3e4d94c-a6b8-4682-9208-a0e68662edb0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "251e0973-2fbe-4157-b023-e1db0c6c9b67"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d43adbbd-e669-447f-942c-93f270c296f6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5681dd3f-e0f2-4282-9b54-686918ad5e0c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "489ab72c-ea05-4b95-8237-7b52fb85694b",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fada598f-9a25-4853-8305-0ec0900c4e42",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f90e2c93-abad-4e4a-9087-65e0c3418ec0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cbecf322-a3b8-42a2-b7b6-2bd888a97928",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5d4dd603-07c3-44cf-a956-4ecf1a1eabfc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "779455a0-f44c-4f03-ac3f-f3934146d79b",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5f3bca5d-152b-4f25-b43f-8d4eab9759d4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f4039695-2aa9-4360-b496-23ba491cf5d4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b863056f-92f0-4959-a35b-c879b32f7735",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9dba74e4-cca4-411e-90c8-8af9f189255a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "94de5409-9f14-459e-913b-97f9f420d5c4",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d294cf44-ec4d-47ef-81ef-7cb7a395ab4b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8dba2a06-8708-4b87-95f4-6c5e869492e7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "701eee8b-f9e8-4a7b-ac52-2558c313a730",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ff5e77b2-0aa9-4d1e-8711-f7b3e7cf6292"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9dd4c0ce-bdae-4ae2-8358-0b5abd64cd5c",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "79bb340e-6dea-4744-a3c7-d6acd28e86d0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c698c086-4aca-4989-af69-a05b41381dfe"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "74d48f68-56e5-442e-be8b-8d279db647dc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ef8c903a-5e2f-4632-a02a-dfd701fb11a6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2865f004-53f4-45f0-af68-dd599d91a79c",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8833e234-b4a8-4215-9254-e1d8a5f51cb7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d0973d46-89ee-404e-b855-36e068e3ccf9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "257a3b5e-1ea9-4b6f-83ae-038981c1093c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "358c72c7-9858-44a0-a5c7-fb518dac2533"
                        }
                      }
                    ]
                  },
                  {
                    "id": "96c9e0f4-acf6-4361-a1f8-05541b6f00f9",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ca72a078-0810-469e-bfbd-a97b643f2a4e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "61c7d60b-ebc3-4c72-a136-1e12853fab73"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "80bc638c-6506-45d1-88de-8b822e0b2d94",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b52a4361-0016-42b8-9090-230d19dc1397"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dd744a4d-a43f-4821-bea5-539ca634806a",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a1cb35a8-7c94-44a9-b4f7-76a2649cb403",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7e670c5b-18e2-4eea-a466-9ddf85cbc3ce"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5bda11e4-7afe-40b3-b6ec-a1d7bde75f96",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7d5eae9f-638d-4a18-af1c-b46e676c9c30"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4692d11c-b761-490a-b2e4-5b6b43e02001",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "33504eab-5f9f-4bcb-a497-2f9cf016c951",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6286bd06-1c58-4453-8ecc-ee7c95c41fde"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d5e4351b-df7a-4063-8f7f-2aa433ab0268",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ddc8026a-4641-4ec2-9640-dc596b7dc427"
                        }
                      }
                    ]
                  },
                  {
                    "id": "db69cb12-c7d6-45b5-8389-37dbf5fd066b",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "59fa8bd0-d4d0-46c7-9599-eb2fbf04822c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cd196132-07b2-4a7d-9c33-a4f07de3e983"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b0330033-2f58-4831-aecb-a49d82066adc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d4e777fa-d4c7-4272-839c-be4b5397a263"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2c2d1025-906e-4d9c-9094-f3f27467bdcf",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "22bdc249-ead0-4c04-86ce-b240785b3dd0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "26f92d52-bf57-4ae6-8969-a9fc7a816c89"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4606f4f9-efce-4b7e-9be2-d340aabcc05e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9aebaa54-c2eb-420d-9a80-cff87e44d78d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cd57244c-f25a-4f88-8a64-c55b24df6f49",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bcab5bb7-6f04-4bbc-9855-d9044be5da06",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "49c6f46e-4180-4b12-b225-0cdc84ecab3a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8e9f1e7b-8c05-4895-99a2-c317cec231c6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2981b4fe-01fe-44ad-b48c-dbb7c8c07e32"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3e9acc38-d9e3-4332-b50f-5074d14fd8f1",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "550d3363-58f2-43df-afa0-97b51d23073a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e3227fe9-710f-45d5-b844-b4dbd83bb830"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c3919cd9-c978-404a-96c9-33ecd26fd9e8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "771ceaa8-5b05-40a8-9bc3-5982cc48efa6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "21da4728-f040-42eb-bbe1-30ef472df0b6",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aaf6789a-48a5-4bc4-b2cf-710de7fb9b13",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4805a9e7-aa48-437b-a6c7-fc2281cef21f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f88a0484-1d84-4cfc-9080-cc641c145d9e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e98ea20f-5326-4a24-8c44-205766fa321b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "48e23c6f-2768-4a8e-8840-18dfbc8bc8e8",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4d36d4c8-09fb-46cb-9ff8-c851deaa4f79",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "03e2fcba-9dc1-4658-bcaf-880686aaa541"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "114926ce-0d5a-486a-82c2-e68bcb46c5b6",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d80331e2-51bb-44e7-9ea6-f4991ccdaceb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "90b30676-ec69-4b2c-9877-68d377eef8da",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "490babed-5a87-4826-b8f2-c89b955e1336",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5078cb56-e94e-48d6-b0e2-1d9ed57e6282"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "34631ab1-0379-46ec-aa64-59cb3c4e5803",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "086d1984-e05d-43f3-9529-0fe315a54d23"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8902b5a2-b52a-44a1-9c5a-539de6847520",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5a7ff70e-810a-40a9-9a60-b70cb6884c37",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1f014f52-a254-4a8a-8657-08c5d16d491e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "06dde9cf-f4de-40f6-b63d-514d6dd5c93f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4cca66ce-406f-44f9-a9f9-dabb172a602c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bfe3c5fb-0ff3-4627-a6b4-c27eb648d434",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e8d4db3d-bdcd-40e6-9531-2d7f89de7163",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f014fd63-bebc-4e4e-9137-2fa90f05f4b7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e5a6d04a-7bda-4174-b47a-62c10dba758f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7107bcd7-fcb9-4d88-9ffa-59dc08fab312"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d30fa2ee-3e0a-4851-b92d-55cec26d6d5b",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4f041b2f-a770-4bed-b22d-700f7ebfd06b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2ada651b-1cdf-4c12-88b9-a09c6ca982e7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6911aa3f-d722-4cbb-a846-74eae58c70c4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7dcf634c-f499-496e-82b7-4a12ccc1206e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "05e4e353-d4e9-4ab2-86d6-f579a2c065db",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "97cf9fab-664b-4f9a-84b3-d5f8433d8687",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "63343e1e-4c3f-4bc5-a75d-12cd0f7296bb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c2402bac-1265-4e1b-8222-3fe7df0916b4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "40ccf5d4-e7ea-4db0-aad7-1ea69c809b0c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f8b41fb8-d2a5-40a5-a6b0-531994e7de44",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6e5a8e2b-37d6-48b0-9423-31406cd7ded0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3abfa507-061a-4ba6-b5cd-f298dc95bccc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bccbced8-b58f-45c6-ac62-55ae49a76cb1",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9adb8744-dca5-4541-babb-7ce899457e4e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5fb3d49c-29b8-4dd5-9824-a28584a5a7a6",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c10d497b-6f53-4cab-9c9c-6ba2b0c5f155",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2099d262-2315-4a93-886c-9deaf97c0dc8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "869fdaae-1160-4ee0-a848-88ca1df96480",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5a72a6e6-efc7-429b-8c31-d7d7809e7d7f"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "c0963ff6-7da1-484f-a991-652c106dea27",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "ddd12377-b97e-4d1f-b79c-2e7087deefed"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "2f6421fe-b671-47bd-8fc0-9573d0ca35a9",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "25aaade2-f2fc-4476-94a1-a473e31bff7b"
                    }
                  }
                ]
              },
              {
                "id": "6c414a6b-53bb-4da6-a262-ebf0bc4a48d1",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "50ca24c8-d803-4c19-a717-3dd1fed70acf",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bb1f2650-cffb-4fa4-bffa-d1dc31387024",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "ba3fc5b9-1628-48a3-8ae0-e58cb6011c2e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "45e17c76-47be-437d-8ed8-c4b91b037c13",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "81dbb752-f2f1-4bcc-a3ea-d47a96685736"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "9513b95f-293d-4011-ac62-983b3d275fbf",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "efa58f30-abdc-4025-a381-e997d74613ca"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "20bf7bd7-96a9-4e03-bb9e-eb5b2ca47a82",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "a9526608-48fb-4eeb-8ed4-713a00ec4c56"
                    }
                  }
                ]
              },
              {
                "id": "6cfce76e-afdb-4515-a902-92121b82222b",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "5fe52ee0-8583-42dd-9c7c-c1caa13da224",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "48a895a2-66a8-4d15-8d88-73f52b8550b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "4a913e2a-278b-4847-8df1-69faf428eefa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "26b4607f-08c4-4dd9-846a-b901b4a0ab49",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a35318c0-d38a-4fe5-83b7-47fd94175b6b"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "c1665f57-d26d-4a41-a335-f6bd741d02e5",
            "name": "Positive Testing",
            "item": [
              {
                "id": "4043c4e7-ee37-4b9b-b632-7248d91f168a",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "fc84d514-9b68-4ed6-bb28-c71d6a4634a8",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "9ec16f18-d201-4c8a-ba6b-c82640b675a2"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "b7aa851f-3ffa-4ee0-ae59-899fb6792e69",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "70514a0f-8c28-4350-a5cc-73121f3ef92e"
                    }
                  }
                ]
              },
              {
                "id": "99a555d4-c53b-4bb0-ae00-b3677e818fac",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "e1098260-ccd8-4d27-9104-d375d7a1f1a6",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "698d92ed-7aa8-439a-a8b5-d34e9d0bccdf"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "0632da2d-c90b-45ba-a44b-df7992971c9e",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "61feb23a-0309-4b16-9484-0fa735919196"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "554c7a4e-36d2-47b9-8787-21aad50e17c5",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "75fa6121-382d-4ea8-afd5-5b0f10b1abb3"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "c9477682-a2a3-4317-bf32-f63161477520",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "4fb804e4-f4f8-4dbd-ba43-fdc38f371286"
            }
          }
        ]
      },
      {
        "id": "df3093ed-2534-4e1f-8209-58dbabcff3cf",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "51b4d52d-7ecc-4cac-81ab-663274877590",
            "name": "Negative Testing",
            "item": [
              {
                "id": "bb81127a-826c-449f-baae-9dd827d11b41",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "165aad4c-92ac-447e-b339-5ed031da607c",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a48329b8-aeca-450a-bec4-fb6dd3dc86e6",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "ca6e9400-489b-4eac-940d-62ce17dd0dd8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "327bfcac-5cf0-43a0-b377-3c64a4285158",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "10dc0ea9-a4d8-4e29-8cbd-b09a946b326b"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "82e79be9-befe-4bb3-8aee-b3101bef2455",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "ec235774-1e97-490d-91f0-2c74b2f42c75"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "493f205b-af11-4295-9b13-72a3b579415b",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "43c234d2-b307-4c88-87af-aacdfcafd9d4"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "f1560c7f-1025-4ce7-a9bf-598126add4ec",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "e5184498-b031-42cc-9fb9-1a9ebd5d831d"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "6a86a4eb-e11f-44d7-a6fb-da281a2ea7bf",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "c6b5f9b5-c64e-44be-9552-24e413554a0f"
            }
          }
        ]
      },
      {
        "id": "711f2b7a-d52e-48b0-b3cc-a7b0ef4a7a97",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "c9c3a548-7380-41ab-bb96-bec0265c82bd",
            "name": "Negative Testing",
            "item": [
              {
                "id": "a74498ee-a599-4e2d-b9b4-e65335cd8597",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "78e53708-9deb-40c4-9238-b0e54146a968",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7c9cdb00-53bd-4aa8-9363-2de975cf07c9",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d38067f3-2c19-4458-849d-494cb1e582af"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8d4b845e-78cf-445c-8776-f5b1d5cb2ea0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "96905139-72ca-4448-98b9-c31d9019c5e5"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "ada07d6e-1128-4114-bcd5-695b035d303b",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "49a604f5-8fb1-4793-87a6-6022acc29ca2"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "641309c6-fcb4-4ac0-a594-030febd4a32e",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "77df5449-8bbd-4b3c-8917-cea0b315e175"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "6c0e84b1-7073-4b52-a456-7a5558bbc41d",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "62c6b474-60c3-4b77-91c1-00a728bd0a3d"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "e01cf8fe-4ffa-4c64-9c1a-1eda65e523f5",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "945528c0-9287-4d88-8208-302131c833f2"
            }
          }
        ]
      },
      {
        "id": "c5fce835-6340-441a-901f-5a32c16ab983",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "d83962f0-3c41-412e-95a1-b092ae7b74bb",
            "name": "Negative Testing",
            "item": [
              {
                "id": "27ace317-ac60-4d24-bd8c-12a89a2ca79b",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "95f0187f-7e12-4c36-8bf2-62f7e227b275",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7100da4f-209f-4975-bbe8-4cc512afca4a",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "de9a6cf9-44aa-4e7a-9943-30a763c5fc9f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "043f1753-5533-4572-9de0-080a61986f62",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "1c2c79ea-60b7-4e85-9611-f0b85ab787e1"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "870ea894-929a-401a-a8b6-3875e76db57f",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "adc64f29-d918-4391-b139-cffe75abf903"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "c7c3f918-ccd8-4721-ba02-51fd18440b5e",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "90d003c2-ddd3-4e03-bd15-8e91023688c0"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "7668974e-586a-4332-bcd3-0133160a50fe",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "71304d68-f228-4d05-b020-9cf92cda7af2"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "53067356-ea8b-4d4d-804c-3aaac9de19b3",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "c3e1240e-bd8a-4096-8e03-7b8ef5ed342a"
            }
          }
        ]
      },
      {
        "id": "c344f222-7f21-4007-befb-f4f5689bfeaa",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "9743df70-af0a-490e-9107-8a91b922bd0e",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "eda0587f-496b-4ced-a907-20322bcd8dc4",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "a34b9a4b-907f-4a51-b939-ca0078c44467",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "fbf81fa4-afe2-4478-b118-1bd8fe863e5e",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "3b21f22c-2b7f-485e-86b9-fad8bb9aeb2f",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 2091,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 285,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 573,
        "pending": 0,
        "failed": 2
      },
      "testScripts": {
        "total": 1050,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 1041,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 13.407017543859652,
      "responseMin": 6,
      "responseMax": 231,
      "responseSd": 25.532008529021123,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1709166831909,
      "completed": 1709166844676
    },
    "executions": [
      {
        "id": "39c5edf7-17e2-4459-bd37-eedf56d3857a",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 283,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "c3285926-985c-4fcc-8cfa-c8807d781373",
          "httpRequestId": "d92a8e47-cca7-4557-a155-400f169eda13"
        },
        "item": {
          "id": "39c5edf7-17e2-4459-bd37-eedf56d3857a",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "e91ff4b7-12cb-43b4-b05d-a32e0e413177",
          "status": "OK",
          "code": 200,
          "responseTime": 59,
          "responseSize": 0
        }
      },
      {
        "id": "34d3cee1-85cb-402e-a0b6-d5e857e8a638",
        "cursor": {
          "ref": "53124608-7293-470f-90e4-ecfc6df5d53f",
          "length": 283,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "d82b282f-e593-4473-9ce2-a00c38f12625"
        },
        "item": {
          "id": "34d3cee1-85cb-402e-a0b6-d5e857e8a638",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "e79cf43b-1615-43df-af91-8016280671f2",
          "status": "OK",
          "code": 200,
          "responseTime": 6,
          "responseSize": 0
        }
      },
      {
        "id": "1d562b97-46b8-4322-a2ba-dedeb30b73bc",
        "cursor": {
          "ref": "b1e89e6b-cb62-4d41-be0a-d2d324c68e05",
          "length": 283,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "1c86a34c-8159-4a25-8862-155d14b9a029"
        },
        "item": {
          "id": "1d562b97-46b8-4322-a2ba-dedeb30b73bc",
          "name": "did_json"
        },
        "response": {
          "id": "60bf8e3a-f29f-4d45-abee-5dc8784cef6d",
          "status": "OK",
          "code": 200,
          "responseTime": 221,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1cee6bdd-b903-456a-8e61-86d621aa3a06",
        "cursor": {
          "ref": "f8ecceb0-e1c0-4d4a-9911-e30f451c534f",
          "length": 283,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "f7ac8af4-2c3c-4741-8987-7e480354d79e"
        },
        "item": {
          "id": "1cee6bdd-b903-456a-8e61-86d621aa3a06",
          "name": "did:invalid"
        },
        "response": {
          "id": "d99fd92f-fcf8-40ff-adcd-80086cff0496",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1cee6bdd-b903-456a-8e61-86d621aa3a06",
        "cursor": {
          "ref": "f8ecceb0-e1c0-4d4a-9911-e30f451c534f",
          "length": 283,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "f7ac8af4-2c3c-4741-8987-7e480354d79e"
        },
        "item": {
          "id": "1cee6bdd-b903-456a-8e61-86d621aa3a06",
          "name": "did:invalid"
        },
        "response": {
          "id": "d99fd92f-fcf8-40ff-adcd-80086cff0496",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5fb461e3-96a0-42de-9ccd-b7a9a514d7b7",
        "cursor": {
          "ref": "4445e41b-33af-4c92-993e-516aaca59cea",
          "length": 283,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "40e6c9ac-75d3-4ec9-a588-a35ca9d00cc4"
        },
        "item": {
          "id": "5fb461e3-96a0-42de-9ccd-b7a9a514d7b7",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "fd2d92c4-5c4e-4725-840c-3ac9329cc0b4",
          "status": "Not Found",
          "code": 404,
          "responseTime": 64,
          "responseSize": 221
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e5237eca-d68a-4e90-bbda-5eaacc4c135c",
        "cursor": {
          "ref": "b85bd196-dfe0-42ee-878d-816f0ab892ae",
          "length": 283,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "af4c4883-56fc-4abf-83e0-42e8488eae39"
        },
        "item": {
          "id": "e5237eca-d68a-4e90-bbda-5eaacc4c135c",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "03259258-ba3b-4a62-80ed-0a80e78357f8",
          "status": "Not Found",
          "code": 404,
          "responseTime": 9,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b0ed0cce-f808-4369-a922-179ba94132dd",
        "cursor": {
          "ref": "1c8095d4-e152-4422-ac73-90cad2158151",
          "length": 283,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "dc4b0fa6-c12d-4e4b-8c0e-76dc79c1285b"
        },
        "item": {
          "id": "b0ed0cce-f808-4369-a922-179ba94132dd",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "8bfb8d1d-3cff-4385-9e8e-0330354fe741",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 9,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4b92bb9a-7855-4d7a-94dd-14a4f7ea8f34",
        "cursor": {
          "ref": "31c88f00-0bcb-4191-b78c-4b46c07d1d9b",
          "length": 283,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "75e04f70-3fae-4e43-ba83-a2d0a98dec4b"
        },
        "item": {
          "id": "4b92bb9a-7855-4d7a-94dd-14a4f7ea8f34",
          "name": "identifiers"
        },
        "response": {
          "id": "c9b0581b-89d8-4225-b75f-31f6eab9d3b1",
          "status": "OK",
          "code": 200,
          "responseTime": 231,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d712a81e-f269-4b4b-9ea8-0687a91df914",
        "cursor": {
          "ref": "4276c049-edbf-4d0d-ba58-ed868271699c",
          "length": 283,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "0787e7a3-8f28-4c24-9298-8640c81a474f"
        },
        "item": {
          "id": "d712a81e-f269-4b4b-9ea8-0687a91df914",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "6b25ae1a-e5e9-4d4f-aa6b-9c797f82b348",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 217
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "06603bbb-3b07-47af-bccd-002a01489845",
        "cursor": {
          "ref": "69426c78-8663-4d9e-ab0a-a3bb151a5a55",
          "length": 283,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "9b33800c-a55a-4a5d-a447-e8c9783c6e66"
        },
        "item": {
          "id": "06603bbb-3b07-47af-bccd-002a01489845",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "9883931e-26eb-4cd7-8c21-4d98de599e30",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "abe7e8cc-cda7-458e-86ad-2c1bc6603a5f",
        "cursor": {
          "ref": "85c7e09b-14d7-418d-af9f-15c6accd384d",
          "length": 283,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "64f4b8e7-4f06-4268-b5cb-445657cc73d8"
        },
        "item": {
          "id": "abe7e8cc-cda7-458e-86ad-2c1bc6603a5f",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "d544e55b-bb2e-4af1-8eb2-689e0311b6fc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eb84867c-1978-4414-910e-53f8f6b61291",
        "cursor": {
          "ref": "4c496f97-7d35-4300-a675-e93bc37f9dd5",
          "length": 283,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "d7fdde13-a871-4ea3-8939-bf6cb97b92ce"
        },
        "item": {
          "id": "eb84867c-1978-4414-910e-53f8f6b61291",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "aa73d62b-0660-4abb-9663-61649d8a259d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4498708a-f6eb-4311-8ef5-29ad7c2c2225",
        "cursor": {
          "ref": "85d481ad-a666-4d66-9ed2-a9bdc97cfcb2",
          "length": 283,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "16e32b26-13c1-4ddc-85b0-c7f046c049b4"
        },
        "item": {
          "id": "4498708a-f6eb-4311-8ef5-29ad7c2c2225",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "f19dee76-01b3-4231-af64-5fb20d0d3bd5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "21b405cf-42e1-4e94-b7f8-d2fa316f3d08",
        "cursor": {
          "ref": "81a5e00b-10b9-4fae-8843-20791ceb9d4d",
          "length": 283,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "462c6e34-7a32-41ca-90d4-1a3fb0d464f5"
        },
        "item": {
          "id": "21b405cf-42e1-4e94-b7f8-d2fa316f3d08",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "2b950b21-561f-4dab-9fce-41ba42b3794f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ec3c9a24-61ab-4ad8-ae1f-a3b01f0b2f30",
        "cursor": {
          "ref": "9bb76d29-b36a-4a44-a617-231ac6105021",
          "length": 283,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "35ca1a2f-0e2e-4184-90b4-4fdb0a5ce613"
        },
        "item": {
          "id": "ec3c9a24-61ab-4ad8-ae1f-a3b01f0b2f30",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "5b3c227e-a1cb-4ce4-aa8c-d3ba74135cf3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "78317963-83ff-471d-8dc6-4eddb5d94ea9",
        "cursor": {
          "ref": "877b70f2-73ea-4910-8255-a9ac75837a1e",
          "length": 283,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "34940b76-a7c3-46dc-9752-848372e5c7c1"
        },
        "item": {
          "id": "78317963-83ff-471d-8dc6-4eddb5d94ea9",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "e6f7a596-3612-4a8d-a477-49fb1761dc9c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "10a9ae7b-8d47-4df7-83a7-5b25e762646c",
        "cursor": {
          "ref": "3befb3ba-3c38-4b2b-89ff-1703fe9c4a50",
          "length": 283,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "561b89d9-6aa5-494e-95cb-5461d2131dcd"
        },
        "item": {
          "id": "10a9ae7b-8d47-4df7-83a7-5b25e762646c",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "e7515d45-1796-44fb-96a8-214983964f68",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "30d46a96-9cf0-4ee0-b87f-3bc55162f46f",
        "cursor": {
          "ref": "41111518-273a-41ef-9ef5-8af28c47509d",
          "length": 283,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "5a748ce6-4af8-4d46-999d-9f24d2d06c57"
        },
        "item": {
          "id": "30d46a96-9cf0-4ee0-b87f-3bc55162f46f",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "099b62a2-f890-4c4a-9ad8-7360aba84949",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e59344aa-beb1-4bae-afa4-21e08c3519bd",
        "cursor": {
          "ref": "56ec0ffb-9046-46f3-b94a-866367c33838",
          "length": 283,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "14d91aa4-66fb-42d8-8951-7a44765c15a0"
        },
        "item": {
          "id": "e59344aa-beb1-4bae-afa4-21e08c3519bd",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "e24b9817-48ab-4632-8162-696bd351bc9c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8bd44f73-9c11-4666-a348-9db9482d44ca",
        "cursor": {
          "ref": "ff4f08b5-f1e0-48e3-9d89-a334da89a655",
          "length": 283,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "ee273734-6414-4866-9487-ce97403179ce"
        },
        "item": {
          "id": "8bd44f73-9c11-4666-a348-9db9482d44ca",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "202b55b2-4268-4ec7-b2b8-46c3a34ab74a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0a1f53c4-b69b-4bd5-bbbc-6416b04bdda5",
        "cursor": {
          "ref": "a84a5cda-eab3-4151-8c06-8116a81fd3b9",
          "length": 283,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "547aaef4-d957-4ebe-9eda-fadaf972b55d"
        },
        "item": {
          "id": "0a1f53c4-b69b-4bd5-bbbc-6416b04bdda5",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "42973bda-01d0-4082-8689-fbb28689e8b8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "963f69b4-1d0f-4f32-953a-2f94346a4d01",
        "cursor": {
          "ref": "9f7d9645-a09f-4488-b058-692932da4eea",
          "length": 283,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "5cf8d188-017d-4a4b-ba31-148872ce6043"
        },
        "item": {
          "id": "963f69b4-1d0f-4f32-953a-2f94346a4d01",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "5841389c-29ca-438a-84d5-3afdcad2af9d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8500ea4a-257f-45cf-bddb-06964f6d201d",
        "cursor": {
          "ref": "4202f529-5eaf-4066-953f-7340e27158cb",
          "length": 283,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "5de6b1fc-4a72-4c9f-a1c3-d6a675405513"
        },
        "item": {
          "id": "8500ea4a-257f-45cf-bddb-06964f6d201d",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "0699f529-4e70-4249-84d2-3081115b58d4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "34b315bf-0fa9-4872-b1f2-28f490f3e6d9",
        "cursor": {
          "ref": "adcb66fb-fb37-4905-8310-cd1954221732",
          "length": 283,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "c221fcef-0ea5-46db-afe1-a73ef2660c59"
        },
        "item": {
          "id": "34b315bf-0fa9-4872-b1f2-28f490f3e6d9",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "6aff4125-d661-4ff6-8f47-a78c7b3f0273",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bcdd0493-260e-49e3-a5d6-76352bbec4c3",
        "cursor": {
          "ref": "5b61f029-1d14-473a-a18e-c812aa910648",
          "length": 283,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "a5baba1a-3e3c-49eb-b511-39e7185decc5"
        },
        "item": {
          "id": "bcdd0493-260e-49e3-a5d6-76352bbec4c3",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "ac9f0e7c-0145-4f7f-b22b-6c448706b43e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da9882cc-1bfb-44ff-952b-31c36e295a11",
        "cursor": {
          "ref": "74d9afd4-e548-4c9d-8269-fd134fae99cf",
          "length": 283,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "ce169c08-c62e-4326-a155-b697ac2143ea"
        },
        "item": {
          "id": "da9882cc-1bfb-44ff-952b-31c36e295a11",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "29271aab-8aa0-4d11-af8f-b7e95a3af67b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 146
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4fda1924-afc3-4eda-b9ea-69a114d499c2",
        "cursor": {
          "ref": "88d22948-adda-4ce4-ba5d-bfb4aadd7f11",
          "length": 283,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "4cfa4824-8c17-45cf-8577-98270e8c06d5"
        },
        "item": {
          "id": "4fda1924-afc3-4eda-b9ea-69a114d499c2",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "13db73ad-2a3b-425b-97e4-2598b32cccfe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2b7b92fd-aaec-40b9-93fa-93171dfcbe37",
        "cursor": {
          "ref": "9e1a9403-17eb-4ec8-a7c2-e7332f48cacf",
          "length": 283,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "ad67ff17-495a-448c-a44d-1d378ac7cc17"
        },
        "item": {
          "id": "2b7b92fd-aaec-40b9-93fa-93171dfcbe37",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "a573b7f9-aba1-412a-931c-66a1e86c5eee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "85c02824-b2cd-4953-9ff7-ba625d9be4da",
        "cursor": {
          "ref": "4a9adf0c-c397-42d8-88a7-1612fd4f6e91",
          "length": 283,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "1d123132-5b74-48ca-8192-02a3ec75aca7"
        },
        "item": {
          "id": "85c02824-b2cd-4953-9ff7-ba625d9be4da",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "ce4aaee5-edef-43a3-8c64-80839ae3f95c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2defae29-bb22-402e-8825-0857073f85b3",
        "cursor": {
          "ref": "e27bfdf7-63fa-4a8c-998e-5c7330a4d062",
          "length": 283,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "c9a5d74e-6a98-4149-8e77-e85d9ff77ce2"
        },
        "item": {
          "id": "2defae29-bb22-402e-8825-0857073f85b3",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "46427f60-6510-4265-8180-12a7c616f3b5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b6252bc3-9398-4334-9527-e05a313d2825",
        "cursor": {
          "ref": "a0cfe43f-902e-4379-b674-a82c0e77182f",
          "length": 283,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "fcc3eab6-4838-4e7c-ae3d-54fb1c28c23e"
        },
        "item": {
          "id": "b6252bc3-9398-4334-9527-e05a313d2825",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "11054065-4185-40e0-8a99-cb12f937efbc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "62ef3baf-1128-4bad-9218-6e69d5e8731e",
        "cursor": {
          "ref": "180185da-4f28-48e3-adcd-7e3289461406",
          "length": 283,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "7b81ebca-5eb6-4d5f-be9a-979e08b3faa2"
        },
        "item": {
          "id": "62ef3baf-1128-4bad-9218-6e69d5e8731e",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "c7934db9-5ab2-45bb-abcb-ae7ea7f6521b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "847c5c61-c6a4-4803-b564-7d5dd41e38f5",
        "cursor": {
          "ref": "71e968a6-ee02-4bc0-a7bd-75e88572b966",
          "length": 283,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "5e8f8eb4-7a80-47a7-8bc6-335bdf4cded0"
        },
        "item": {
          "id": "847c5c61-c6a4-4803-b564-7d5dd41e38f5",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "3c59426b-240d-470d-931d-c4553ce7fa60",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1ad33bba-8374-40ba-8368-b01b51a658b1",
        "cursor": {
          "ref": "4199ce43-058e-4338-b500-8bb5254685e8",
          "length": 283,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "0627075d-29ac-4492-9587-eed25aa7029b"
        },
        "item": {
          "id": "1ad33bba-8374-40ba-8368-b01b51a658b1",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "2b318404-ec06-4f6f-b157-9e6a6664c25d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b4274e29-8298-44b2-9ed4-641481fdb2e6",
        "cursor": {
          "ref": "6634504b-d086-489d-a947-2224ff691288",
          "length": 283,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "700d8c4f-2726-4168-8dbb-33a802bf43ae"
        },
        "item": {
          "id": "b4274e29-8298-44b2-9ed4-641481fdb2e6",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "c2083e61-f820-4b87-ac96-5bdf77e3f4dc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9885219d-f0c6-47f0-8fd1-cb835fd93b5e",
        "cursor": {
          "ref": "2ad9cd88-e0e7-4840-a5d7-af59f354a22a",
          "length": 283,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "407dbd07-bffc-4be9-beea-f30323b5134b"
        },
        "item": {
          "id": "9885219d-f0c6-47f0-8fd1-cb835fd93b5e",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "0b9361af-9f6c-4a03-ab20-bce0937d225e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "962a7ff7-c6c6-4c0d-b924-2a2da045bbff",
        "cursor": {
          "ref": "aeebb35a-caa3-4fba-8719-8b605d8ec652",
          "length": 283,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "78764cbf-896d-4349-b172-9f5ee34c927e"
        },
        "item": {
          "id": "962a7ff7-c6c6-4c0d-b924-2a2da045bbff",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "f060e595-77c7-4dbe-a203-7eb55edfc9b1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac6451da-14c4-4d72-a52a-5287a7f3b11b",
        "cursor": {
          "ref": "8e03ed8a-0c8b-4066-98ab-34f2a4f1c814",
          "length": 283,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "41162af2-f5ca-4a51-b4db-545924edd955"
        },
        "item": {
          "id": "ac6451da-14c4-4d72-a52a-5287a7f3b11b",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "919fba66-3a88-4a88-a823-b5ed0266ddde",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "83de9f19-f06b-4a6b-ab6d-578e0a6835da",
        "cursor": {
          "ref": "ec1e51d5-8a74-49aa-ad25-3fe62abe4153",
          "length": 283,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "89ee10bc-bbec-41c0-8986-0a455b78e6b6"
        },
        "item": {
          "id": "83de9f19-f06b-4a6b-ab6d-578e0a6835da",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "2bacd37f-2e4e-4648-9b1c-3596bf85046e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f70fc258-baa3-4e5c-ab7d-464768f8754b",
        "cursor": {
          "ref": "d5c43d33-a9f9-4d2e-b6cb-a702d7dd91a8",
          "length": 283,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "9dd4ea16-aec9-489b-b25b-8e31ca262ff0"
        },
        "item": {
          "id": "f70fc258-baa3-4e5c-ab7d-464768f8754b",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "105e2f76-3349-4e3c-8228-9cfb6356ed9b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "57305500-4bf5-474d-96b3-b3273e8e0c46",
        "cursor": {
          "ref": "023d3fc8-e163-44de-910f-db5e7d2ce376",
          "length": 283,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "5f90032a-8db1-4654-92df-e1c02141ec21"
        },
        "item": {
          "id": "57305500-4bf5-474d-96b3-b3273e8e0c46",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "b00b6456-f39c-4866-a8b2-5e2c88ac098b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "83f35f21-9d0f-405d-87a7-03cbfa3a31ec",
        "cursor": {
          "ref": "e3bf0033-fa49-4fe3-81fa-6de2c4425884",
          "length": 283,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "032266cd-bd8e-4ce1-96a7-97e873f23bab"
        },
        "item": {
          "id": "83f35f21-9d0f-405d-87a7-03cbfa3a31ec",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "d9843baa-a4da-4b78-b5a1-6e14a9ade417",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "805fa0b9-4b10-4319-b32d-e2a46431a141",
        "cursor": {
          "ref": "5700e240-2e60-4a81-8ecb-dd6bdca3cd30",
          "length": 283,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "34ddf918-039e-4576-850e-fc54bb16a394"
        },
        "item": {
          "id": "805fa0b9-4b10-4319-b32d-e2a46431a141",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "c49052df-06e3-4a4b-9cbf-41b3d576947a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4e83a8f5-4a6f-431e-8e00-f9d11bf3208e",
        "cursor": {
          "ref": "98063092-c156-43d8-8e00-13c6f87fbfa7",
          "length": 283,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "f724c08b-8e3e-468e-8cd0-4053b931919c"
        },
        "item": {
          "id": "4e83a8f5-4a6f-431e-8e00-f9d11bf3208e",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "30b671d0-e3a6-4be1-8a07-5e0849cd4563",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 35,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ecb2539c-ddbd-403b-98a2-48fbab439afe",
        "cursor": {
          "ref": "e0926392-4a0f-4369-b77c-9e186deda321",
          "length": 283,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "550543cc-11b0-4373-83fa-c008c768eeca"
        },
        "item": {
          "id": "ecb2539c-ddbd-403b-98a2-48fbab439afe",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "895f7e60-4790-46ec-8082-a6595482509a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b881ab3d-6454-4406-8fc7-a6334c40f91a",
        "cursor": {
          "ref": "a4af32e5-4bad-4500-aeba-96e0d887dc0f",
          "length": 283,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "d5e01aad-6ad8-4dc0-9207-f4d1ac30b9c8"
        },
        "item": {
          "id": "b881ab3d-6454-4406-8fc7-a6334c40f91a",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "4d00135c-38e9-40ac-943d-a755ae22208d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "82620f25-2878-4a55-a2ce-626048a01470",
        "cursor": {
          "ref": "ec30dcf4-577e-4b4d-9b7f-de7b0aaf26ad",
          "length": 283,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "7e714615-ca8b-45bd-986d-562ad0c5d827"
        },
        "item": {
          "id": "82620f25-2878-4a55-a2ce-626048a01470",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "4adb8d1f-599b-4407-8ec4-af3647bcf642",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "21988597-8175-4ed9-a6a4-2baa1dae2faa",
        "cursor": {
          "ref": "de18d1e8-8326-4f97-a040-55f2556e82a2",
          "length": 283,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "1e08c850-9cbc-49c5-8e2e-aad3e68be17d"
        },
        "item": {
          "id": "21988597-8175-4ed9-a6a4-2baa1dae2faa",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "91d8b73a-2936-48fd-b3ba-d4765f9994b8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "332db244-9c1d-486b-9083-f8b0ad2458d9",
        "cursor": {
          "ref": "80b4a239-53b6-4cd3-ba62-337982b22601",
          "length": 283,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "2d7b3a5c-d0a9-4008-bea0-af114ba83380"
        },
        "item": {
          "id": "332db244-9c1d-486b-9083-f8b0ad2458d9",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "b5888030-39c8-4c81-aabe-e0c26069f7cd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "79e66424-8908-4a19-a562-0e4dfed3c0b7",
        "cursor": {
          "ref": "0ce75123-6416-45fc-962b-a5dae265c4b6",
          "length": 283,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "dad1bce0-9caa-40fd-8752-768d788eb0d1"
        },
        "item": {
          "id": "79e66424-8908-4a19-a562-0e4dfed3c0b7",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "f925330a-623a-4d63-8f81-e13df9069067",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "93d4e868-97f2-4d42-83b5-df5b05ad451b",
        "cursor": {
          "ref": "117b5ed5-fa74-4fa4-be1f-d36beeba9467",
          "length": 283,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "ee15f56b-de89-403e-b984-d823904a1726"
        },
        "item": {
          "id": "93d4e868-97f2-4d42-83b5-df5b05ad451b",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "80911a47-617d-4162-a46a-99d54e7ab2f3",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 23,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9bc1c6bf-0e62-4aa0-9805-437977dc0d0e",
        "cursor": {
          "ref": "f9060f86-908c-411d-9e9c-d0465d4b38df",
          "length": 283,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "d023794a-eef4-4f2b-9fe6-ac1694c18092"
        },
        "item": {
          "id": "9bc1c6bf-0e62-4aa0-9805-437977dc0d0e",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "78c22181-54f0-4caf-b75b-6b96ec3870a9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "926bacf6-cff4-4bcb-b328-72ba068a1bde",
        "cursor": {
          "ref": "55c013b9-ccbd-4e10-9d2e-dc3ba88ff40d",
          "length": 283,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "74e6c926-f270-4c02-b688-9aba6885f03f"
        },
        "item": {
          "id": "926bacf6-cff4-4bcb-b328-72ba068a1bde",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "c98c87af-a08f-41d1-8341-38ac8ee88b6a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d75c1caf-0f2a-4a5c-8fc0-2aee57994099",
        "cursor": {
          "ref": "d18d6d02-4744-4622-b2ed-5a930630ab40",
          "length": 283,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "e13fe2ed-1239-498b-afcc-4e275ae50e03"
        },
        "item": {
          "id": "d75c1caf-0f2a-4a5c-8fc0-2aee57994099",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "9e0d112b-aab4-4f80-91ad-902ded20a372",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d2678ec-dd22-4889-a101-fc0fb09bf684",
        "cursor": {
          "ref": "1b1a78ed-0aa0-4c52-b6a8-f1ad47bac287",
          "length": 283,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "8cc03835-0e6c-466b-bf41-caef7e22abf3"
        },
        "item": {
          "id": "7d2678ec-dd22-4889-a101-fc0fb09bf684",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "37915b16-1fcd-46ad-997f-221d58e3b9af",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "64338a54-0c8e-4323-98c4-3aead278edf4",
        "cursor": {
          "ref": "e08a4ed7-dff9-426d-bf4a-a2370e4758ba",
          "length": 283,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "91a49887-713b-4b04-96d8-179cfa1beaf5"
        },
        "item": {
          "id": "64338a54-0c8e-4323-98c4-3aead278edf4",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "d0c1fab4-f6f7-42d2-9c12-4e37adeb3915",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7e630eff-a218-4335-8302-8203e5b891d9",
        "cursor": {
          "ref": "cec9e9ce-b783-47d1-9726-27e79e67a842",
          "length": 283,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "c8fd229a-5a26-468e-b1d7-2b16b3c8bf6e"
        },
        "item": {
          "id": "7e630eff-a218-4335-8302-8203e5b891d9",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "018b7e57-cfa2-4eda-b960-649d99ea5182",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cac8054f-fa1a-4d05-8af9-b30ad3f0f87a",
        "cursor": {
          "ref": "ac6544f5-e7c2-4fe1-b0d4-e33a4cb1c01b",
          "length": 283,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "8c8296ab-608c-45d8-a9b6-17cc2e4e02e2"
        },
        "item": {
          "id": "cac8054f-fa1a-4d05-8af9-b30ad3f0f87a",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "aac7a567-e39e-4ab0-b1df-c0b36210088c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0ea2cad9-8a23-4915-8214-2e03263b4624",
        "cursor": {
          "ref": "9b7e73cc-3cb1-405c-aa10-c00c5f5d562e",
          "length": 283,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "916a3c2d-58aa-46e7-8659-2601a13f67b6"
        },
        "item": {
          "id": "0ea2cad9-8a23-4915-8214-2e03263b4624",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "34ab112e-4167-4f36-bff7-39916e3b6488",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d2083b68-4c28-4fc4-ab8e-7065c6041ae3",
        "cursor": {
          "ref": "dbfb8028-841b-4523-b4c1-3f628cf95c5b",
          "length": 283,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "29d60b50-c894-4777-89f3-df0fc508d2b3"
        },
        "item": {
          "id": "d2083b68-4c28-4fc4-ab8e-7065c6041ae3",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "d794b59e-58fe-43b5-ab1c-42d864e2c304",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "798336f2-382c-452a-80c7-3000f37e18f7",
        "cursor": {
          "ref": "573ab59a-0ff9-42f6-beb7-cf9ff64da401",
          "length": 283,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "806e3e52-c8b6-45b1-b131-e41a09ed73a8"
        },
        "item": {
          "id": "798336f2-382c-452a-80c7-3000f37e18f7",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "0cf9a5c5-449e-42c7-83a3-b94d94d06dcd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "58b8e4e3-efd3-4598-ae67-5333053013cd",
        "cursor": {
          "ref": "c69244eb-a629-4384-89b4-9d626a3fe8f2",
          "length": 283,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "8b511516-7e3d-4657-a082-ee4a9794a9c8"
        },
        "item": {
          "id": "58b8e4e3-efd3-4598-ae67-5333053013cd",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "b37178b1-4942-4419-9e27-a145ffd2fcef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eba7428c-7ada-40c9-8926-8e64c946d6bf",
        "cursor": {
          "ref": "c33079e5-1c70-4a6d-9641-69d594d21141",
          "length": 283,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "1715c3c6-c08b-431a-8e12-0a70196b3700"
        },
        "item": {
          "id": "eba7428c-7ada-40c9-8926-8e64c946d6bf",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "245a4d47-835a-4eda-8ff5-237fcbc4c234",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "09888d5f-6786-4625-bf3c-337ed0f0aa25",
        "cursor": {
          "ref": "b3e0739b-3fec-4ae0-aa00-678bb84c8f3b",
          "length": 283,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "c814ae1a-f4f7-42a5-821f-f0321773eb99"
        },
        "item": {
          "id": "09888d5f-6786-4625-bf3c-337ed0f0aa25",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "2b1d54f7-fb27-4484-b51c-596e04b2f772",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 144
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b9b19819-90e0-4781-ba91-b28afa3ba9d3",
        "cursor": {
          "ref": "f7db36f6-26cb-4d38-8aa7-1b6c973b7520",
          "length": 283,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "28b3767e-d5e1-4ad4-94e4-0962eb3716b8"
        },
        "item": {
          "id": "b9b19819-90e0-4781-ba91-b28afa3ba9d3",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "36f464ec-9910-4fe5-97c0-0fa52cf243a0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "02920c40-6731-458c-ad81-535b85b14eaa",
        "cursor": {
          "ref": "1d278662-c7f5-49f7-b878-cc0237acd7e2",
          "length": 283,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "b9f7ff0f-4ac4-4320-a8c6-cedf563043c7"
        },
        "item": {
          "id": "02920c40-6731-458c-ad81-535b85b14eaa",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "60635a8b-9b17-4766-a215-9517654275c1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "52da9dad-ed29-4941-8fc8-3e24aac2753e",
        "cursor": {
          "ref": "4b0dbf0f-2cf7-42af-9af2-0ea90aba2a38",
          "length": 283,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "c8b67c3e-7211-425a-aacf-ae67c0744b4a"
        },
        "item": {
          "id": "52da9dad-ed29-4941-8fc8-3e24aac2753e",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "d0ea20c4-402b-4d5a-91cb-6d350fbccc70",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6f766753-e9f8-4f71-9c56-384d6abf5be7",
        "cursor": {
          "ref": "cd4469f0-5a91-48a7-989b-25c4e4469297",
          "length": 283,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "c4c7f1db-c13d-45ba-b8c9-53d89debe787"
        },
        "item": {
          "id": "6f766753-e9f8-4f71-9c56-384d6abf5be7",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "75e6cd2a-8ed2-4b0f-a5c7-3f831044f282",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "01111eef-d4fe-4508-9b86-e2d1998dde1e",
        "cursor": {
          "ref": "fc7344a8-58c5-42aa-96b0-99dc4cd77a49",
          "length": 283,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "1601009e-6b2e-4963-8a19-e4a34b138a40"
        },
        "item": {
          "id": "01111eef-d4fe-4508-9b86-e2d1998dde1e",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "9c85e825-9289-4942-ae4e-26c22468773c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0cb53fdf-de58-4e14-b092-ecb4016cd849",
        "cursor": {
          "ref": "63cb7dc3-3a2d-4e41-b7f7-7e9a3836d028",
          "length": 283,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "1e618e04-5638-4440-b4cf-4f2ebec6dd98"
        },
        "item": {
          "id": "0cb53fdf-de58-4e14-b092-ecb4016cd849",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "ae0faa12-daca-418b-b7f1-7ac66d288f90",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c3c8c4b8-ba7c-4cdc-86a0-48054e63efda",
        "cursor": {
          "ref": "3c2819ce-bfca-44ef-8246-24a66c0275a8",
          "length": 283,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "9fa3e81f-74d2-43f0-b6b0-533657cb4e72"
        },
        "item": {
          "id": "c3c8c4b8-ba7c-4cdc-86a0-48054e63efda",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "af1d5cab-17f5-40fa-b18c-17b015e6667c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 596
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "195c384d-c658-4cf3-b52d-417f2407a4fe",
        "cursor": {
          "ref": "656c0633-05ff-4ddc-8cc4-1c44c1bd2ff2",
          "length": 283,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "ade14be4-6138-477f-a425-2b423bae653f"
        },
        "item": {
          "id": "195c384d-c658-4cf3-b52d-417f2407a4fe",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "d6066888-a1d8-4b24-98ee-ac7ac21b0a5a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 595
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b39304a7-6cfc-427c-b6ab-2fc6d735efa5",
        "cursor": {
          "ref": "a9dc1a0c-4a0a-4de1-b109-40afafcea76f",
          "length": 283,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "9001de39-8e79-4281-a9cb-5c7b5cc118cd"
        },
        "item": {
          "id": "b39304a7-6cfc-427c-b6ab-2fc6d735efa5",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "f7bb304d-5335-4eec-9abc-f4dfc1fadcfa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 597
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0af21d07-e288-4437-98e1-2452154e454a",
        "cursor": {
          "ref": "57bab28e-b7ac-4996-8d00-ae599d9ac41e",
          "length": 283,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "b15e4229-3da6-4d8f-833b-348f2e88575d"
        },
        "item": {
          "id": "0af21d07-e288-4437-98e1-2452154e454a",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "20ef8198-e5c4-497a-947a-7556634c1e47",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "83924f0a-8db2-4dd0-8883-20da8a1c3445",
        "cursor": {
          "ref": "b8441858-7710-4c39-837e-8c903a767b19",
          "length": 283,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "53772c70-30cb-4920-aea3-0c2678cb582b"
        },
        "item": {
          "id": "83924f0a-8db2-4dd0-8883-20da8a1c3445",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "2726d459-0b89-47ab-81d1-0eb53a45a634",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 597
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "425f97a2-e809-4e18-9393-71b4923c9d65",
        "cursor": {
          "ref": "a736a33b-33bd-43c8-b4ab-71af23b1bfbc",
          "length": 283,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "b42874f0-85da-46f8-8f6d-e5b99930a181"
        },
        "item": {
          "id": "425f97a2-e809-4e18-9393-71b4923c9d65",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "55a0807c-53d2-453f-9a9d-f08416c6e395",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "60749409-c3ad-4f94-8673-791a5607128a",
        "cursor": {
          "ref": "1f115bfd-6079-4ae4-be57-0f9e008ca014",
          "length": 283,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "05c1543a-99d7-47b0-812d-a964cfb45036"
        },
        "item": {
          "id": "60749409-c3ad-4f94-8673-791a5607128a",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "bbcd9c01-33fd-4e10-bbee-038d69c8b4da",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 284
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5efbcf72-4379-43f3-aeb2-f6ebebd152e1",
        "cursor": {
          "ref": "fd7162d2-c3a7-4b85-8fa9-1e3ca59108c8",
          "length": 283,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "0c41f83f-7c70-470c-a7d6-cb8f88c3feaa"
        },
        "item": {
          "id": "5efbcf72-4379-43f3-aeb2-f6ebebd152e1",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "1ca41ce9-1ec2-4b99-a55b-3832781ff193",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1098c2ce-8dce-404f-bb70-6d8cc6a30c77",
        "cursor": {
          "ref": "ceaf17af-1499-4c02-9c8f-9203bc2b10d6",
          "length": 283,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "4463572a-d5a5-41f3-9c34-3ee660d9a0f2"
        },
        "item": {
          "id": "1098c2ce-8dce-404f-bb70-6d8cc6a30c77",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "8066a833-efdb-4da5-90f0-90560d1ccbf6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "47eeae50-9251-4c0e-ac3d-3a6a09f9ab6f",
        "cursor": {
          "ref": "7170f5f9-32de-4b3f-be03-00379ca49c9e",
          "length": 283,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "80a79704-d605-4cb7-a2a8-69ea15da6c4e"
        },
        "item": {
          "id": "47eeae50-9251-4c0e-ac3d-3a6a09f9ab6f",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "57208ae3-9468-4524-94bf-18078701a649",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b019523-8ce6-445b-a288-32deb7fdca41",
        "cursor": {
          "ref": "c344b922-36c6-433f-9154-bad3da97697a",
          "length": 283,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "c29f0afc-15f7-41dc-8152-179b05e51a0e"
        },
        "item": {
          "id": "6b019523-8ce6-445b-a288-32deb7fdca41",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "b2f825fa-4f43-460b-b832-64e0040b0ba2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb620bd2-3c2a-4d04-aa77-324086a52aac",
        "cursor": {
          "ref": "f9867d74-e7b1-4d28-8726-82f8e74a08b6",
          "length": 283,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "c7f0cdf7-1d87-41c3-baa8-188db885b6e0"
        },
        "item": {
          "id": "bb620bd2-3c2a-4d04-aa77-324086a52aac",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "4d892820-119b-4ed7-8520-e266174e578c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 169
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b282d897-b4d0-4e3f-89cd-271ef031d903",
        "cursor": {
          "ref": "0ff93edd-1949-4eca-9c18-b4be949cf103",
          "length": 283,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "723e4dc0-f08e-41cd-a4e6-e9adcbe1cf08"
        },
        "item": {
          "id": "b282d897-b4d0-4e3f-89cd-271ef031d903",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "041fcd4e-3c8a-4238-8706-bd7d5e0b8e83",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 355
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "64b936df-aa3d-4cad-bc36-1c7e2923889e",
        "cursor": {
          "ref": "f5dfdbbd-159b-4de6-bfe3-1ec4393db5b7",
          "length": 283,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "a1f203da-bf7b-44be-b3f1-ead8130aacff"
        },
        "item": {
          "id": "64b936df-aa3d-4cad-bc36-1c7e2923889e",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "4f713a68-f7b6-472f-b20d-510c135ef63f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 305
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d8fe269a-fe67-4ada-9e0a-113147eb6d22",
        "cursor": {
          "ref": "aab8fd0e-d761-4fcb-9bbb-2f39d4c07870",
          "length": 283,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "c3e2c52d-5a91-4266-9165-523077090ca3"
        },
        "item": {
          "id": "d8fe269a-fe67-4ada-9e0a-113147eb6d22",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "1760107e-2164-4d03-80f5-43aa73cd61ad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d5b7faf2-3afc-471d-a0f4-fb61340535d4",
        "cursor": {
          "ref": "5e770fbd-67cf-4326-ab58-d1772284dab8",
          "length": 283,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "9b53e63a-4ab5-4294-a118-0fc8c3fd4959"
        },
        "item": {
          "id": "d5b7faf2-3afc-471d-a0f4-fb61340535d4",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "b463603d-7841-4c8b-874b-7cff7c737882",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "87ea2f9f-398a-43a0-b92a-a18a0ab6ab2c",
        "cursor": {
          "ref": "5c6477cc-2796-43d4-9f93-450f358ff1f0",
          "length": 283,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "e73c890e-8861-4cf5-995f-e795f5edd4f3"
        },
        "item": {
          "id": "87ea2f9f-398a-43a0-b92a-a18a0ab6ab2c",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "16bfa5cb-4d1b-460e-aaa6-f51a1549d20e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b5f82347-f1b3-43e3-8255-2b533eed6b02",
        "cursor": {
          "ref": "0eb2613d-ae2a-4f44-8a7a-4151297ddd05",
          "length": 283,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "030fd789-de2d-4156-9507-4cf69013a355"
        },
        "item": {
          "id": "b5f82347-f1b3-43e3-8255-2b533eed6b02",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "b59c5fff-591d-4fa7-b243-38edb77290a1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 361
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b1a32f4f-88e0-48f5-a551-509e50613a6c",
        "cursor": {
          "ref": "73c270aa-c44c-4f7f-9d54-31ad91d6f85d",
          "length": 283,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "2bebdc26-234f-46d7-baaf-4c480b65ce68"
        },
        "item": {
          "id": "b1a32f4f-88e0-48f5-a551-509e50613a6c",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "06a2d86d-f13c-4ca5-b6e9-5512f5a33e71",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 402
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a3f64e4b-c473-4b48-aa8c-a7899760a31c",
        "cursor": {
          "ref": "bbca60b9-0af5-4f8e-adbf-bb1fafecf813",
          "length": 283,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "c898abb8-b1fe-4efb-b9d1-3ccfc269c32b"
        },
        "item": {
          "id": "a3f64e4b-c473-4b48-aa8c-a7899760a31c",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "1385423a-7e0e-484d-a43a-b2dd1bcfa06e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 401
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "19bbaf4c-fd5d-42e5-87c5-01c6aacb4cf6",
        "cursor": {
          "ref": "158f2dc8-b2b2-48aa-8e56-0b99d5d9a077",
          "length": 283,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "544d6cf4-aa8f-4aba-941a-099c235aaa4f"
        },
        "item": {
          "id": "19bbaf4c-fd5d-42e5-87c5-01c6aacb4cf6",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "178ea531-6202-4560-bdb5-07832c1befa7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7da7d2f6-88a7-4ab4-8d5f-7a5fd7e19843",
        "cursor": {
          "ref": "089fd6c3-2e77-4715-be65-7fdc2ad5cc7a",
          "length": 283,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "5a23e358-c7f7-4c53-a4b5-16332c8af104"
        },
        "item": {
          "id": "7da7d2f6-88a7-4ab4-8d5f-7a5fd7e19843",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "bf9bbed6-3fc0-41a0-b883-00ed77df0a3f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 220
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cf3bbfa5-691e-4c1c-80e9-8b0bf25b047f",
        "cursor": {
          "ref": "e01106f5-77c6-4ab9-92a7-beb8239e9c80",
          "length": 283,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "ee7c3f5d-1520-496c-bf85-7acf4ddfe287"
        },
        "item": {
          "id": "cf3bbfa5-691e-4c1c-80e9-8b0bf25b047f",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "45d650b3-6280-4161-a2c1-417d9f6ffac3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0a5dcd5d-7734-4363-b737-5b4efdc9f0a4",
        "cursor": {
          "ref": "3efe85a2-1cb6-43fe-9c9f-46db47c9b0d9",
          "length": 283,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "6ae1a31a-3e02-47a7-ad79-87c39fc1548b"
        },
        "item": {
          "id": "0a5dcd5d-7734-4363-b737-5b4efdc9f0a4",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "d4f79ef2-04ec-4727-bd4a-0ab86c46a25c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "efaa17f0-6e9b-434c-9c08-edbe2ca766d3",
        "cursor": {
          "ref": "10f2bffb-7e65-415e-8c7a-b9e989f39404",
          "length": 283,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "72474044-f150-4e31-9dac-69776dc078c2"
        },
        "item": {
          "id": "efaa17f0-6e9b-434c-9c08-edbe2ca766d3",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "7d706330-9fc8-4a1f-a130-becd0febee1b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 301
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9d9a6a58-02aa-44b0-b8aa-a1fb7baaf4d8",
        "cursor": {
          "ref": "2340a684-777f-47e4-adff-b1bad7a7da05",
          "length": 283,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "beb40543-9d71-4957-a6dd-1c559a92709d"
        },
        "item": {
          "id": "9d9a6a58-02aa-44b0-b8aa-a1fb7baaf4d8",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "9f374fb1-69f4-4fdc-9a8a-8a2f1824adc3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "62bbd939-598a-4599-8701-456570c8da5f",
        "cursor": {
          "ref": "efd3ae2b-fcd6-4713-b781-b08ed845c69c",
          "length": 283,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "4e941716-5a4c-4ed6-b5b0-ba5aa6e07b08"
        },
        "item": {
          "id": "62bbd939-598a-4599-8701-456570c8da5f",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "f1e5f37e-19b0-4250-af60-6df13ac8c08e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "158baad8-b25d-4008-a9c8-3a3383af4792",
        "cursor": {
          "ref": "446fb768-6667-4613-8d2e-6370e95b9987",
          "length": 283,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "ef18e708-0861-4e24-861b-dec7e5bf27c4"
        },
        "item": {
          "id": "158baad8-b25d-4008-a9c8-3a3383af4792",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "e3bd111f-45d9-44ca-8733-12dd09a0ec0e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "140e6256-697c-482c-9fad-f14bf0e3df50",
        "cursor": {
          "ref": "8f55233f-9c48-43e5-9d67-9aa99a55fb63",
          "length": 283,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "cc051e26-685b-40ad-bb75-78c8f84b06b3"
        },
        "item": {
          "id": "140e6256-697c-482c-9fad-f14bf0e3df50",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "ea0e427d-8f6e-4d74-a894-6b84ce1fbce9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "93e2cac6-4244-4e5f-b02c-b3e73194d0db",
        "cursor": {
          "ref": "7e21d2ff-34b6-4fae-9ed8-e7ccf603ce1f",
          "length": 283,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "09af970e-0e8f-4c47-b962-e89170a818e3"
        },
        "item": {
          "id": "93e2cac6-4244-4e5f-b02c-b3e73194d0db",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "37d630d4-570a-4b26-b66d-ebdc762298e8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4bd912da-144f-47d9-8a6f-a003ccd8722f",
        "cursor": {
          "ref": "051ca1bf-6ed0-4450-968a-a9cd8abe5bc6",
          "length": 283,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "c4dd4360-2221-4a46-8cbb-ffea2ed2b2a1"
        },
        "item": {
          "id": "4bd912da-144f-47d9-8a6f-a003ccd8722f",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "6531b419-b5eb-441a-a11c-216379e6c643",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 8,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "445b5aaf-e2fe-4707-9651-729a83eee288",
        "cursor": {
          "ref": "6d53e30b-0192-49d2-8173-ffb56cb64ca4",
          "length": 283,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "a4194047-d78f-4dd5-abfa-6aa11e08009a"
        },
        "item": {
          "id": "445b5aaf-e2fe-4707-9651-729a83eee288",
          "name": "credentials_issue.credential.issuer:dup"
        },
        "response": {
          "id": "8965a87b-12d8-4245-8809-0b196d1cff19",
          "status": "Created",
          "code": 201,
          "responseTime": 65,
          "responseSize": 919
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3f3bd591-d1f4-4633-9e8a-9273afe9770f",
        "cursor": {
          "ref": "8bcd5692-d8fa-4f50-9782-c6d2364279b3",
          "length": 283,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "23b51b52-6821-4873-bf64-d5392bf78997"
        },
        "item": {
          "id": "3f3bd591-d1f4-4633-9e8a-9273afe9770f",
          "name": "credentials_issue"
        },
        "response": {
          "id": "e0fc15fa-5d1f-43ee-a15e-1b90909d671a",
          "status": "Created",
          "code": 201,
          "responseTime": 180,
          "responseSize": 919
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false
          }
        ]
      },
      {
        "id": "3620959c-1489-44e6-acf5-b217805655cd",
        "cursor": {
          "ref": "eb629549-e448-4d3b-91bc-b236f5e4d432",
          "length": 283,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "529462a1-ee66-443f-85b3-c0ec6d1387c8"
        },
        "item": {
          "id": "3620959c-1489-44e6-acf5-b217805655cd",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "e42706cd-5539-4d99-925d-eaa47d271b8e",
          "status": "Created",
          "code": 201,
          "responseTime": 77,
          "responseSize": 919
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "e9ce70ae-0fa5-43b9-8dcb-adc328ff0192",
        "cursor": {
          "ref": "2a8d5c9b-a868-414a-8fb6-404c12652517",
          "length": 283,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "4f97e4fc-893e-4d87-a1c1-02854c8a1bac"
        },
        "item": {
          "id": "e9ce70ae-0fa5-43b9-8dcb-adc328ff0192",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "264d0243-a036-4168-870e-9486d6adc854",
          "status": "Created",
          "code": 201,
          "responseTime": 44,
          "responseSize": 919
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "372aab93-c998-4cd7-bf2a-b24af526c27e",
        "cursor": {
          "ref": "47394f5a-b4df-4280-be26-20aa0949bd06",
          "length": 283,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "535a9bb4-fbab-49e8-91a9-cd0543d76b7a"
        },
        "item": {
          "id": "372aab93-c998-4cd7-bf2a-b24af526c27e",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "3893adb3-cdd0-4f97-96da-f35916009cef",
          "status": "Created",
          "code": 201,
          "responseTime": 53,
          "responseSize": 930
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "6aecbc43-1358-4d22-a8de-c1a7443338c6",
        "cursor": {
          "ref": "3c5fd311-c3d6-4c7c-a2d3-0da19e687c48",
          "length": 283,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "4a04e3fa-77a6-45b0-a7ad-83dfe516a263"
        },
        "item": {
          "id": "6aecbc43-1358-4d22-a8de-c1a7443338c6",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "19075e6c-c7e2-4454-9f1c-5e362fd6137b",
          "status": "Created",
          "code": 201,
          "responseTime": 32,
          "responseSize": 909
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false
          }
        ]
      },
      {
        "id": "eab37da3-958e-4484-ae84-dfb3d0788d10",
        "cursor": {
          "ref": "00d48f73-9f58-46b2-b93a-95c5eaea1c4a",
          "length": 283,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "37ab627d-f11b-4412-8082-296f7bfa773f"
        },
        "item": {
          "id": "eab37da3-958e-4484-ae84-dfb3d0788d10",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "aacd11b6-cd69-4f5a-952a-241c3cafbf2d",
          "status": "Created",
          "code": 201,
          "responseTime": 36,
          "responseSize": 919
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "466825b6-2194-467a-a6d2-176716a9718a",
        "cursor": {
          "ref": "70e7c280-3bcd-42d6-86ae-429370154da2",
          "length": 283,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "335091df-482f-4f97-ab71-50ce84ca2358"
        },
        "item": {
          "id": "466825b6-2194-467a-a6d2-176716a9718a",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "3fcbb0e5-02c7-43db-bec8-762d64317610",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f3f009ce-862f-4697-ac56-d584bcbd50d5",
        "cursor": {
          "ref": "5c8ee0d2-a7e7-4d52-891f-0d78794348f9",
          "length": 283,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "5bf890d4-f7ed-4592-a258-a99333eebff1"
        },
        "item": {
          "id": "f3f009ce-862f-4697-ac56-d584bcbd50d5",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "cdf0daa9-0991-4235-adae-24cdb2dccaa4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 307
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6926222b-aeab-4836-b151-dff6eac25723",
        "cursor": {
          "ref": "d053be9b-a50c-4192-a8de-67593dcb1829",
          "length": 283,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "82ac5dc3-673e-4a30-b114-3ca24b81ba46"
        },
        "item": {
          "id": "6926222b-aeab-4836-b151-dff6eac25723",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "e2023e1d-233a-4ede-ae51-960ef9a118ce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 306
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4809d06e-e3a7-4897-9c0c-611ad33c4f8a",
        "cursor": {
          "ref": "54ed0dbf-7ce4-4c39-87d8-71ef4a54a559",
          "length": 283,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "41a38a23-57c7-4857-999f-d43237acae2b"
        },
        "item": {
          "id": "4809d06e-e3a7-4897-9c0c-611ad33c4f8a",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "3830cf42-505f-4462-83ca-5076193f94e4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c3d7dde3-67b4-4bb0-b2d5-6fe6e7c8a7aa",
        "cursor": {
          "ref": "be1d026f-2ec7-45f9-b326-f51d117270ee",
          "length": 283,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "c622f632-8a31-426d-acdb-08f9cda8d6c5"
        },
        "item": {
          "id": "c3d7dde3-67b4-4bb0-b2d5-6fe6e7c8a7aa",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "d99a1ee5-2ad7-4bbd-bfc8-36b5592a7f2d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "760a0da4-80d5-4aa5-bfac-e86a0dc69ae7",
        "cursor": {
          "ref": "45af5803-6e03-4f93-b6f0-65fe6524542f",
          "length": 283,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "16af9e38-e9e5-430e-929a-0fa03a48de37"
        },
        "item": {
          "id": "760a0da4-80d5-4aa5-bfac-e86a0dc69ae7",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "b4c772ec-d1a1-48ab-af92-49cbfae1781d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "872dbd8d-ed97-4341-a91b-9242357c70ad",
        "cursor": {
          "ref": "d60aab0c-8536-4a83-ad82-05043edc98fa",
          "length": 283,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "8398e806-f887-49f3-8b11-21cd26dbc45f"
        },
        "item": {
          "id": "872dbd8d-ed97-4341-a91b-9242357c70ad",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "1f0ea802-2616-474a-9829-e2357f07fcaa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1716c41a-76a4-4643-8a6e-a2a80ce06741",
        "cursor": {
          "ref": "5d656030-4b9f-47c2-8b54-d0dd5d9bb713",
          "length": 283,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "a94f9f04-eb0d-4732-a6e9-41969fbe8bb0"
        },
        "item": {
          "id": "1716c41a-76a4-4643-8a6e-a2a80ce06741",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "22c18e6e-3a3c-440c-a781-11ed01a5e0d3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 334
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3aecd8e3-757d-4019-bbd1-639996f18a11",
        "cursor": {
          "ref": "8bbabb69-71f6-40ca-8557-4a5413368f50",
          "length": 283,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "e792fe64-0514-4510-baf2-9c1161e1cdd4"
        },
        "item": {
          "id": "3aecd8e3-757d-4019-bbd1-639996f18a11",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "8e413faf-2958-463f-9026-86c1ef87b405",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ff9aa5e-5ad5-487c-ac2f-cb24c860376e",
        "cursor": {
          "ref": "cce9ea47-b099-46e0-8de7-fde89c9a62b7",
          "length": 283,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "61d907d6-5f81-4649-ba98-1c300fe49fdf"
        },
        "item": {
          "id": "5ff9aa5e-5ad5-487c-ac2f-cb24c860376e",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "7cac6ede-e9bd-4b25-929f-6d310117d06f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8f7f8bb8-727d-4269-854c-6e384399f7d3",
        "cursor": {
          "ref": "100c57c1-d3c2-472b-9cfa-80ce83dc0ace",
          "length": 283,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "8ee16de7-d8bc-4983-bd03-ac6e2834c981"
        },
        "item": {
          "id": "8f7f8bb8-727d-4269-854c-6e384399f7d3",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "1943abde-3528-45c2-8501-e3d1d272bebf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3115a6df-690b-42d0-9e8a-dcea8b3d1729",
        "cursor": {
          "ref": "4c425694-b318-4267-838f-5a6e805411a5",
          "length": 283,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "cdd153b1-f698-4f3e-9c8a-0d75b5982972"
        },
        "item": {
          "id": "3115a6df-690b-42d0-9e8a-dcea8b3d1729",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "88598a3c-d4b4-48de-8997-2480317e4ad6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6857e7ce-66c9-495f-a59a-bfbc5ea13094",
        "cursor": {
          "ref": "4e9bc0e1-feee-4c7b-8ccf-8e70a83205cd",
          "length": 283,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "ae5ee5fc-4805-496d-8d66-8829bf0939e8"
        },
        "item": {
          "id": "6857e7ce-66c9-495f-a59a-bfbc5ea13094",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "e026ae7b-a1ef-41f8-b988-d918e146933c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 598
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "719bf4ee-911f-4521-9144-fbcd5d1f40e6",
        "cursor": {
          "ref": "76ed1b23-0cc6-4f66-a6e9-9529068472c7",
          "length": 283,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "6c768f70-6610-401b-aacc-4f3289b50265"
        },
        "item": {
          "id": "719bf4ee-911f-4521-9144-fbcd5d1f40e6",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "38c3fe6a-280f-4dc7-b8df-18e41b6d6f10",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 538
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "33f3d202-14e7-4a4e-b566-b2bfba5b69c1",
        "cursor": {
          "ref": "7b39ad66-ff70-47f2-9182-80fc75aa626e",
          "length": 283,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "caa3af99-e5f2-45cc-b94d-f3913eb12455"
        },
        "item": {
          "id": "33f3d202-14e7-4a4e-b566-b2bfba5b69c1",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "5b313796-59ec-4006-afa0-a344c116aeeb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 537
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "70510a5c-b456-4bd1-99a5-04b20de13666",
        "cursor": {
          "ref": "4479e9fa-3379-41ae-96de-5e2f7f21ed29",
          "length": 283,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "e3ec0ed6-5817-458c-8439-7a6796605f6e"
        },
        "item": {
          "id": "70510a5c-b456-4bd1-99a5-04b20de13666",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "7a32c57d-d3ad-4cb4-ae4c-9e8c2a9ee6a2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "42b6b6fd-4a95-4fbf-aa0c-eb09debb2cd5",
        "cursor": {
          "ref": "672edd7f-f978-4ffb-8d4a-439fb52f8404",
          "length": 283,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "519a2bde-481f-49f7-b524-b9422119f8e7"
        },
        "item": {
          "id": "42b6b6fd-4a95-4fbf-aa0c-eb09debb2cd5",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "64c950eb-a0bd-46bf-b585-5e3eb55fe146",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "037d6ac7-5d5b-42eb-bcb2-8229af674fa8",
        "cursor": {
          "ref": "921754a4-23df-494d-8316-e16d7bfc51e5",
          "length": 283,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "366a37b0-e1ba-4df9-befa-016f05e17b1d"
        },
        "item": {
          "id": "037d6ac7-5d5b-42eb-bcb2-8229af674fa8",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "c0a0783e-0a52-44b4-b5fa-78786dfb4b3d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "727fdd1b-c1a2-4d3b-b668-19d6947ed22a",
        "cursor": {
          "ref": "a5958b23-918c-48f9-bb57-0cfa23bdfe10",
          "length": 283,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "13030f48-ffb6-4aa0-b490-6c7137bc78a1"
        },
        "item": {
          "id": "727fdd1b-c1a2-4d3b-b668-19d6947ed22a",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "1d3c2947-653d-4e6f-9cbe-f5c3c5389b05",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 352
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9ea7a5e4-68f2-4f01-bdf7-86aa5ff667f2",
        "cursor": {
          "ref": "ee04f5fd-1ed7-4bec-84e1-e2ff720c5f36",
          "length": 283,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "77bcec6a-b5fe-4a3e-9c27-08f6ab02f475"
        },
        "item": {
          "id": "9ea7a5e4-68f2-4f01-bdf7-86aa5ff667f2",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "cd3472aa-691c-476f-a7db-6431bd92c459",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 293
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e38b18f1-ae1b-4e49-8572-637b7b325e99",
        "cursor": {
          "ref": "9589a317-5bf4-431a-9740-1a5c1bd14f5b",
          "length": 283,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "4bcdcf8c-a6b0-49d1-b113-dd2aeb93b256"
        },
        "item": {
          "id": "e38b18f1-ae1b-4e49-8572-637b7b325e99",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "336c50a6-0d64-4250-af29-570a18328e66",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 292
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0d1df9c4-6328-4400-bd67-ba07382b03f7",
        "cursor": {
          "ref": "404385f6-b268-43e1-9f37-432ff4c49d3a",
          "length": 283,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "411791d4-7218-44d6-9482-fc9803e0ac3c"
        },
        "item": {
          "id": "0d1df9c4-6328-4400-bd67-ba07382b03f7",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "592dcbc4-7ce6-4b35-81f1-d4f84592e064",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "661d754a-9050-4ad3-b3e9-d7bc204b7e44",
        "cursor": {
          "ref": "74b7a3d0-f26d-4e53-8943-1c0b0132d300",
          "length": 283,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "3538eb12-838a-4f67-a7a4-b6811bfb326e"
        },
        "item": {
          "id": "661d754a-9050-4ad3-b3e9-d7bc204b7e44",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "d8b9f63b-7566-401f-a314-165bcab94ceb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 352
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e1e3cb32-4175-4b7d-b5f5-c08af6a9b667",
        "cursor": {
          "ref": "4c4ce773-8589-47d9-8a29-d6f71b5fb285",
          "length": 283,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "523cbfea-8685-43c3-b7c5-f29cee9f7abd"
        },
        "item": {
          "id": "e1e3cb32-4175-4b7d-b5f5-c08af6a9b667",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "5b88c3fe-a307-4d72-9996-aeeeefeb0b20",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "62c02f96-4982-4a50-a8e5-8cb7a9d30f53",
        "cursor": {
          "ref": "8f6412f5-b6b9-4bef-adf8-e0138346fb0e",
          "length": 283,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "d8378a89-f9a0-4fa0-886b-6847fcd245f9"
        },
        "item": {
          "id": "62c02f96-4982-4a50-a8e5-8cb7a9d30f53",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "989f50bc-0db6-4ec7-9357-26efbfdabab8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 352
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "78b8afdb-7c79-4e2c-a0a0-1b2b0d441865",
        "cursor": {
          "ref": "a76ec8a1-eacb-40ca-996e-3c2b861a5acd",
          "length": 283,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "fd5a14d5-f310-4379-836c-f346939bf07d"
        },
        "item": {
          "id": "78b8afdb-7c79-4e2c-a0a0-1b2b0d441865",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "f598b477-71de-4764-9465-dd3fa69950e9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 476
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "117874f0-167f-4a72-a878-df023f7f07e4",
        "cursor": {
          "ref": "44def666-ea2a-4a95-8c25-2ee850061274",
          "length": 283,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "831b93f1-8fd1-4570-b34c-769fc9caeaa7"
        },
        "item": {
          "id": "117874f0-167f-4a72-a878-df023f7f07e4",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "aadae6c2-3876-4089-b8ca-4cf412d8b7be",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 295
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "de8fd90e-d714-4495-8f7c-b4748cb0e5de",
        "cursor": {
          "ref": "fd9c23a9-ea27-4045-b473-e5ca36904c0e",
          "length": 283,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "e361907a-0160-4733-a447-1bb31f330dda"
        },
        "item": {
          "id": "de8fd90e-d714-4495-8f7c-b4748cb0e5de",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "9cf58346-5e9f-4170-9752-2c5a1db114fa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "92ab549a-d818-4a50-bf06-1faab4cb8d2f",
        "cursor": {
          "ref": "d80771e6-3fa0-4fe2-bc51-7e2fe09ea13e",
          "length": 283,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "e17f4b65-ccce-4e5d-83ed-2f4dd06149ad"
        },
        "item": {
          "id": "92ab549a-d818-4a50-bf06-1faab4cb8d2f",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "f7d1ed5d-81e7-4a3f-8c1d-3b4d322ed10a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9d33f981-7ee4-4ab8-b475-dc09b8b1857e",
        "cursor": {
          "ref": "068668ca-9ef6-4305-9019-735b7e47a21e",
          "length": 283,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "4304094c-c27d-43e7-8638-adcd1cdb97c3"
        },
        "item": {
          "id": "9d33f981-7ee4-4ab8-b475-dc09b8b1857e",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "86cbfbd4-9524-4c85-9a9b-891b8cd570e2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 476
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "05167879-c8e3-4ef9-98eb-68c4a8fbbf87",
        "cursor": {
          "ref": "adffc37e-2307-426f-ac2e-6d9848fc2343",
          "length": 283,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "5215d24d-aff0-4573-a2ad-60a4b36b18ab"
        },
        "item": {
          "id": "05167879-c8e3-4ef9-98eb-68c4a8fbbf87",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "01f4fc12-cef1-4e26-ba24-5d45e78ab59a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2657fc10-d9f2-47c7-8cfe-1fda0fb79379",
        "cursor": {
          "ref": "18055030-3d9f-4a96-9563-1bb951c73b4e",
          "length": 283,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "e1328b64-e9d7-4981-ab1d-f9e8617a60b0"
        },
        "item": {
          "id": "2657fc10-d9f2-47c7-8cfe-1fda0fb79379",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "c017561c-eed0-4c89-80e1-058d828accd5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 352
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "79ec3623-226a-43eb-ab16-b370d80e982f",
        "cursor": {
          "ref": "80b19295-1f38-4c61-8125-8ef0bbb96082",
          "length": 283,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "17c44032-a9ae-4192-8d14-50f0d7751a68"
        },
        "item": {
          "id": "79ec3623-226a-43eb-ab16-b370d80e982f",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "67d44cb2-4854-4730-9fc9-a675afe80504",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 8,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "99ca8bfe-718d-4f6f-93fe-02f45b84309a",
        "cursor": {
          "ref": "bd22993c-bec9-420a-9875-d531a6da5c4c",
          "length": 283,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "ecb470c7-49a7-485a-9757-9b1f98c65096"
        },
        "item": {
          "id": "99ca8bfe-718d-4f6f-93fe-02f45b84309a",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "d1270889-3558-4481-929c-08f3fb1779e7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e45b3f41-9104-45a5-95f8-31dcf44169e5",
        "cursor": {
          "ref": "35b38584-0447-46f2-8a2a-f760dd93a2dd",
          "length": 283,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "63318a42-2059-446e-a8f6-8999ad1cdfef"
        },
        "item": {
          "id": "e45b3f41-9104-45a5-95f8-31dcf44169e5",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "2d8a2582-1c5f-461d-b62b-35038495ceb7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 307
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a91e601f-b18c-4fb6-82f9-1686463a88c4",
        "cursor": {
          "ref": "f07f755a-f8f9-4d18-98b2-5d3394f0931b",
          "length": 283,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "0d76fbc2-e7e7-4fcf-a49a-c2a9d020811f"
        },
        "item": {
          "id": "a91e601f-b18c-4fb6-82f9-1686463a88c4",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "e06e6aa3-8521-4d56-af03-9742ca662904",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 306
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "86161b7b-3518-4477-bbf6-a398f8f60e19",
        "cursor": {
          "ref": "ffdf658d-6831-4180-a2c9-a1b8fbefdf63",
          "length": 283,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "af442d8d-c371-4798-b07f-2a9a6dbd3717"
        },
        "item": {
          "id": "86161b7b-3518-4477-bbf6-a398f8f60e19",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "ac6baaaa-3d9a-4869-8362-25673b20db63",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "960f2831-d84a-49c3-9bd5-02dd86ab4ba7",
        "cursor": {
          "ref": "fc291fe5-693f-46f5-8395-ea13cde946d3",
          "length": 283,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "3efcf24a-0f05-4aad-aa60-d4dd8f5dda85"
        },
        "item": {
          "id": "960f2831-d84a-49c3-9bd5-02dd86ab4ba7",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "3aa7d3db-7aac-4a20-9c53-a30d3b7f2000",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "802ce3e3-b7e3-4080-9f55-9adf0109575f",
        "cursor": {
          "ref": "663648c9-6be4-4561-be67-7b01995b7ba9",
          "length": 283,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "bab09294-9a8c-46ee-8acb-69b4b34ab4e7"
        },
        "item": {
          "id": "802ce3e3-b7e3-4080-9f55-9adf0109575f",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "5b26dfe2-66d9-4106-a564-96f3f37c3a58",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f468640e-c669-4bd0-8bc0-eb977746253d",
        "cursor": {
          "ref": "0385ebb0-6f96-4fd7-ac8e-bef79bfabc2f",
          "length": 283,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "a67e6559-94c1-4c50-be28-a54f78460322"
        },
        "item": {
          "id": "f468640e-c669-4bd0-8bc0-eb977746253d",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "20337c70-1008-4213-9b4a-8070a1f9c422",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "705f1de7-1832-447f-81af-7fe987e949ee",
        "cursor": {
          "ref": "5fb84a69-8804-4b03-84db-bd7bc74b9129",
          "length": 283,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "dd713083-7a05-4482-ab50-59f866c07ad5"
        },
        "item": {
          "id": "705f1de7-1832-447f-81af-7fe987e949ee",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "1376d7f2-35aa-4e31-8561-ee99c5073196",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 334
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e0117402-c8c3-4f43-bebd-307e83894886",
        "cursor": {
          "ref": "d76afa71-ca9c-416a-936a-1d8cb9609739",
          "length": 283,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "5da65cab-f452-437a-9228-f1b0b36dfbd3"
        },
        "item": {
          "id": "e0117402-c8c3-4f43-bebd-307e83894886",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "c6e8dfed-a8e6-44f2-a8a6-b10ce1d5a9be",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3122b798-74b4-46e5-a005-c1eca77344be",
        "cursor": {
          "ref": "30d12d57-308a-4b21-979e-d4140d936b96",
          "length": 283,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "47bac4a2-4020-423d-9ae1-23be91fc97a1"
        },
        "item": {
          "id": "3122b798-74b4-46e5-a005-c1eca77344be",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "c2cac673-f225-4125-b7a7-7b0aa512cc90",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "84147196-81d8-4375-9f26-243b8f477fb7",
        "cursor": {
          "ref": "2fd53802-3969-40b1-9add-2232e071782f",
          "length": 283,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "cd54ed58-fdbc-48fd-90f2-d191e5ecefe3"
        },
        "item": {
          "id": "84147196-81d8-4375-9f26-243b8f477fb7",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "0ce15fc3-99f8-4561-95ce-0d4d9fe14123",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8fd2b72d-e1d9-41a4-9f07-39dc9580ea83",
        "cursor": {
          "ref": "0112356e-3da1-4a59-8845-4ba57264d1bb",
          "length": 283,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "3b47e16b-0669-40b3-9627-ca2284be5f05"
        },
        "item": {
          "id": "8fd2b72d-e1d9-41a4-9f07-39dc9580ea83",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "4a1cf9cc-134d-406a-8c71-918a5c0c58b9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "084adf1f-71e7-4d3b-981f-8873c02cfc92",
        "cursor": {
          "ref": "17ff27a1-162e-46eb-9e4a-d76c4ca3c60e",
          "length": 283,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "369649e7-2e6f-41ad-81c5-5fa1d6744991"
        },
        "item": {
          "id": "084adf1f-71e7-4d3b-981f-8873c02cfc92",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "b648b539-970c-4936-8453-9db49c7cd0f0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "813463fc-c936-47ff-aefe-29601a3140e9",
        "cursor": {
          "ref": "85e20cf3-1a61-4325-b50b-4c73a9aa68a3",
          "length": 283,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "51c1f61d-0f9c-45fc-9f23-d71012f2b47e"
        },
        "item": {
          "id": "813463fc-c936-47ff-aefe-29601a3140e9",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "b7f3485d-fee3-42c9-b3a7-2badac2daaf6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 538
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0d1c8a6f-072b-4f8f-b269-ee1576ce4bdd",
        "cursor": {
          "ref": "c4e55198-9e0e-42d3-bda1-93816d2fa289",
          "length": 283,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "7a532527-a3fa-4440-82e7-b50beab1ca09"
        },
        "item": {
          "id": "0d1c8a6f-072b-4f8f-b269-ee1576ce4bdd",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "ca355db6-8fea-4a03-9a18-aa07f424e613",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 537
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b66ee8ac-2910-43ad-b862-9d5c32193838",
        "cursor": {
          "ref": "64014094-6edd-4301-bbf7-f8e1e342c0fc",
          "length": 283,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "476d3209-2424-4137-9c2b-eba06458d2c6"
        },
        "item": {
          "id": "b66ee8ac-2910-43ad-b862-9d5c32193838",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "0de52672-0868-4084-9a4e-ccf755aaaa6b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "803186d6-381f-4c7c-b314-719c1895fa36",
        "cursor": {
          "ref": "2d48b1bb-580a-4f21-b24e-fd5a32a9a86c",
          "length": 283,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "2831e295-3a77-4dd9-8cc6-f77ba5a0c091"
        },
        "item": {
          "id": "803186d6-381f-4c7c-b314-719c1895fa36",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "2849d2fc-19bf-4dd4-ad8c-12d5840cec1d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "edb33f92-aebd-4833-b5a5-4872a865db38",
        "cursor": {
          "ref": "0f7f1312-e10f-48ec-ad73-bbec16a0a861",
          "length": 283,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "df5af780-051c-4da8-be59-985ee13f1143"
        },
        "item": {
          "id": "edb33f92-aebd-4833-b5a5-4872a865db38",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "410a09e5-6959-410e-8425-6159aada6574",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a51d8e68-80f6-42cb-b7d2-ca2b1333f61e",
        "cursor": {
          "ref": "3ee8b1b1-efcd-4fe3-8162-88ee8bee9c5d",
          "length": 283,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "37931582-2f19-46b5-a0d8-3f1a5dc0c15a"
        },
        "item": {
          "id": "a51d8e68-80f6-42cb-b7d2-ca2b1333f61e",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "20e4e3df-23f7-4743-af17-5b92d43f246a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 352
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6737d367-bf8f-4d2a-a8bd-521783705b32",
        "cursor": {
          "ref": "21ef92e6-f85b-43f6-b93a-c5d1a915dfc4",
          "length": 283,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "f84cff5c-c99e-447b-9e6f-3dcaef8fb913"
        },
        "item": {
          "id": "6737d367-bf8f-4d2a-a8bd-521783705b32",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "96217e7e-e0c6-4ecd-a439-c2e6620eace8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 293
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "905e1211-1d67-463c-a6a7-00c497bb71bf",
        "cursor": {
          "ref": "475d37f2-823e-4a33-ba9c-d5d96bd6ef95",
          "length": 283,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "9e273c6e-bb48-4c8c-b8f9-b0df917e5368"
        },
        "item": {
          "id": "905e1211-1d67-463c-a6a7-00c497bb71bf",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "3a90b420-2175-4d42-b60d-597a7564635b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 292
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5984ac3c-d10e-4c0b-b0e1-de34caf5ceec",
        "cursor": {
          "ref": "8cbb2a0a-53b4-48b4-9019-8cdee35a099f",
          "length": 283,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "5d465b90-9f39-41d4-8781-bde3d690a26e"
        },
        "item": {
          "id": "5984ac3c-d10e-4c0b-b0e1-de34caf5ceec",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "994ecadb-75e8-461d-b2bf-996f45eab79f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "43f4a730-1eb0-4957-a084-b46229c9ab6e",
        "cursor": {
          "ref": "8a48d981-5a1e-40e2-8953-7063fdbe19ce",
          "length": 283,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "07a5ca1a-6e0c-4ab9-b696-ddca1e0676e2"
        },
        "item": {
          "id": "43f4a730-1eb0-4957-a084-b46229c9ab6e",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "7763a880-7e1a-42c2-b1c0-bf88c1da1fdd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 352
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ccc3c323-6906-4669-80ee-24ee951ed8e5",
        "cursor": {
          "ref": "9f3c7f62-198f-46c9-905b-d223d5cf7d74",
          "length": 283,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "94469e5b-d190-420e-a9e9-e17775677b10"
        },
        "item": {
          "id": "ccc3c323-6906-4669-80ee-24ee951ed8e5",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "60c0565b-988d-4181-b2b7-ba757dc8e46d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e8fb9681-bebc-4049-9131-0cea007ae3d7",
        "cursor": {
          "ref": "f4de3b57-11e3-4802-b964-c3e6cca585e4",
          "length": 283,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "dc96b1f2-5577-4d98-b28f-9ca305877317"
        },
        "item": {
          "id": "e8fb9681-bebc-4049-9131-0cea007ae3d7",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "1a48301b-48a5-459f-8ad7-5ceff43792b3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 352
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "197ff5e8-e6ba-4559-b936-971309c62355",
        "cursor": {
          "ref": "783df2c2-0ed3-4890-914d-9b8a3ec4d030",
          "length": 283,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "0878b64a-03eb-40a9-9339-f6ffc91122c9"
        },
        "item": {
          "id": "197ff5e8-e6ba-4559-b936-971309c62355",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "5a65c0e0-4ba2-4ba9-b29e-7430ae750b4d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 362
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "117cf485-dca9-4312-9f28-132e7cf1d809",
        "cursor": {
          "ref": "df9f4539-6b26-4d92-821f-1658631929f5",
          "length": 283,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "93d879ee-a69a-42a5-8056-aa751bee9188"
        },
        "item": {
          "id": "117cf485-dca9-4312-9f28-132e7cf1d809",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "44189645-1e3c-43e9-98ee-48f99067d0ed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 295
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "676d3c07-150d-40d1-9c40-d90e09edf203",
        "cursor": {
          "ref": "37bf93a8-5e17-4bdb-a2e1-d93f8d017c87",
          "length": 283,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "784f214e-6070-4a09-b37e-56e4ae6d0c99"
        },
        "item": {
          "id": "676d3c07-150d-40d1-9c40-d90e09edf203",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "13303f20-f005-4704-acdc-3474ef010f5f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "227c233d-b24c-4960-b87d-5f87de13412c",
        "cursor": {
          "ref": "dbec19d5-8b27-4883-9a69-bdebceeab99d",
          "length": 283,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "b746e00a-e79c-4ed8-b1ee-2cd7c87d304f"
        },
        "item": {
          "id": "227c233d-b24c-4960-b87d-5f87de13412c",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "16399027-96f1-4309-8a5b-560c17bcb86d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eaac8eac-be6f-463b-9739-b5882e7f5836",
        "cursor": {
          "ref": "f9d7175a-7793-4112-8194-ed14dd3bcd32",
          "length": 283,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "aa0f4dfc-3862-4db3-9d63-9b952b7ab379"
        },
        "item": {
          "id": "eaac8eac-be6f-463b-9739-b5882e7f5836",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "626037a1-e7e1-4d51-a1b9-eb01f20adf83",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 362
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2f6f5c6f-ed51-466d-bddc-c3c2f7e1326d",
        "cursor": {
          "ref": "21c2ab56-6234-461b-805f-0aa68dc12025",
          "length": 283,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "c681a346-eca5-4932-ba0e-e50d996be3e9"
        },
        "item": {
          "id": "2f6f5c6f-ed51-466d-bddc-c3c2f7e1326d",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "338a912f-5b1f-49f7-b75e-52bb012c635e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "88ee384c-2a7b-4916-8bed-f831eda4a485",
        "cursor": {
          "ref": "99ab1c21-8dff-4733-acec-15f422c6a889",
          "length": 283,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "87667467-1895-4c15-844d-57120d219a43"
        },
        "item": {
          "id": "88ee384c-2a7b-4916-8bed-f831eda4a485",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "fea0736e-1dd3-40d2-994b-8ffae0d4bb4e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f231c9af-73a4-4beb-8b2a-2d2722629552",
        "cursor": {
          "ref": "40e275a2-383d-4e6a-bc2b-7a9b93d293d0",
          "length": 283,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "bb7c1bd7-2f74-4fab-9f6b-f2830c3f1ae0"
        },
        "item": {
          "id": "f231c9af-73a4-4beb-8b2a-2d2722629552",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "b58a4796-7906-411e-ab89-1164a2706b4d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "389c4bd9-4194-43db-99d3-d156431d4bf7",
        "cursor": {
          "ref": "5c205b83-fd1d-45e4-b863-9a8d9b6eee60",
          "length": 283,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "159bae4a-4aa9-409b-9d9f-bd408191a5d0"
        },
        "item": {
          "id": "389c4bd9-4194-43db-99d3-d156431d4bf7",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "75fdae78-46cc-45ba-84ba-123f7fccd6e1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "119b1263-e51e-4d9f-b35a-193f1b7e2b51",
        "cursor": {
          "ref": "32f195d4-4038-44e4-b776-679ebf90ea26",
          "length": 283,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "a7848f4c-8b09-46c2-b0e6-e823a8250260"
        },
        "item": {
          "id": "119b1263-e51e-4d9f-b35a-193f1b7e2b51",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "b8315106-2ca9-4cfa-a044-82a77de70984",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "32772602-2952-4ae7-bc45-adfb3e5c8533",
        "cursor": {
          "ref": "6a44fdd4-fca0-419d-affc-d2bf93476b1f",
          "length": 283,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "4571e13d-930c-4e1d-a1d6-d6ad4df4d860"
        },
        "item": {
          "id": "32772602-2952-4ae7-bc45-adfb3e5c8533",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "a8087dbf-a5c9-4270-b2e4-1c1bae3206ae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d00bb8d-3285-4a8d-b023-a159c120bef3",
        "cursor": {
          "ref": "ba51f335-8127-4a39-aa83-ea72cae29048",
          "length": 283,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "e3f7ec23-4029-4ee2-b02b-09438821312e"
        },
        "item": {
          "id": "7d00bb8d-3285-4a8d-b023-a159c120bef3",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "5be1c153-5f35-4bd7-b642-dc2188a16499",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "75743b3c-14ef-433c-94f6-b38555d99528",
        "cursor": {
          "ref": "fe4ffbd6-5ece-416f-a005-983820e785d0",
          "length": 283,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "99c0e987-c615-4c4c-a6d1-c72489244861"
        },
        "item": {
          "id": "75743b3c-14ef-433c-94f6-b38555d99528",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "10706d9d-7ce3-4557-a396-2ece1abef6fb",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 8,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad2a719a-c55b-49c4-ab61-4f9d9c7a18d0",
        "cursor": {
          "ref": "3776d00b-863f-4a1c-b5b6-518e05b85a3f",
          "length": 283,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "a47ad0ae-b2fe-4998-b3fa-4efa2ae6c404"
        },
        "item": {
          "id": "ad2a719a-c55b-49c4-ab61-4f9d9c7a18d0",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "aec4f9dc-6878-4b7e-8fb6-e1cd84b779c0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "33958a7f-34e8-4401-8cd7-bfd2892ece3e",
        "cursor": {
          "ref": "8d85124c-8214-49df-a665-235f2b79e9c2",
          "length": 283,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "dced1ca1-bc34-4e14-8f15-d402f5b00bc3"
        },
        "item": {
          "id": "33958a7f-34e8-4401-8cd7-bfd2892ece3e",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "03211f3f-7f11-4355-834f-c23c10672445",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "88cd3644-9c27-43d4-a4f9-74d745aaa73a",
        "cursor": {
          "ref": "fd8f78f6-4404-4bf0-9183-ceb28d5cc65c",
          "length": 283,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "6af4123b-edbb-4547-a748-0100b831cf3b"
        },
        "item": {
          "id": "88cd3644-9c27-43d4-a4f9-74d745aaa73a",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "5755dbb0-20ca-401b-9c26-b63dfe8852f9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c218567-b373-4700-9b63-f6a11b8fb7f2",
        "cursor": {
          "ref": "1e7a6316-de98-4a66-9217-f16362924913",
          "length": 283,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "dcdd2e0c-7047-44b0-bdd6-b224507ad645"
        },
        "item": {
          "id": "2c218567-b373-4700-9b63-f6a11b8fb7f2",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "a882fa8c-58ce-4e3f-9612-056da2ecbaf3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "645e4c48-e69f-4634-b9d7-5a40e91633c0",
        "cursor": {
          "ref": "7b639552-9da4-42cf-816c-1ba631b51d88",
          "length": 283,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "f86a463c-9c8e-453e-8cd6-e23ac9f5bf5e"
        },
        "item": {
          "id": "645e4c48-e69f-4634-b9d7-5a40e91633c0",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "b48e0539-e01c-4504-97bf-93ded1046d60",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "97496e0c-ee69-410d-b594-da5569d4ec24",
        "cursor": {
          "ref": "13af5f78-50a2-46fd-b192-b7737ba838de",
          "length": 283,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "686b9f10-0358-4051-b63b-2aa92ae55e61"
        },
        "item": {
          "id": "97496e0c-ee69-410d-b594-da5569d4ec24",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "0001a54b-561b-4568-8b78-18a1bd1da0f0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "acf4d0e5-de04-4a56-b0fe-ca091f1fadab",
        "cursor": {
          "ref": "ab302c44-675f-4e66-98f1-028ef42ab76b",
          "length": 283,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "42acefa4-0e3f-4946-b29a-f66863e18c71"
        },
        "item": {
          "id": "acf4d0e5-de04-4a56-b0fe-ca091f1fadab",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "5deedddc-727c-4d53-8528-afb989c1e71c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "12c05851-c0d2-448a-85c0-1458d3626b5e",
        "cursor": {
          "ref": "e27550c9-debd-4359-b169-26575fa9e1b7",
          "length": 283,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "43ce86b0-479b-4c26-984e-718009cb0816"
        },
        "item": {
          "id": "12c05851-c0d2-448a-85c0-1458d3626b5e",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "5e8675f8-da14-4f72-b556-0c9e3bb72372",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "244b31a9-f91a-46e5-9095-5c57ba3e4993",
        "cursor": {
          "ref": "e2ac5b4f-c6e3-4078-b187-ca5d7d862bfd",
          "length": 283,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "cc8d6984-0cc3-49f3-bb83-41fdd429a168"
        },
        "item": {
          "id": "244b31a9-f91a-46e5-9095-5c57ba3e4993",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "561418b7-b1dd-4707-8588-cdbc8057ed1c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3fc5a468-fdaa-43fd-9cc2-3c68153ff036",
        "cursor": {
          "ref": "e7ff1e79-39ec-46c8-8dff-e1975bba0da9",
          "length": 283,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "eaadfef7-2e8a-43be-9139-f45666422432"
        },
        "item": {
          "id": "3fc5a468-fdaa-43fd-9cc2-3c68153ff036",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "c4c4cfc0-9744-4c36-bf86-5309ca59d6f5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a3f8f388-1f4c-42e7-b5fd-24514eb9ae42",
        "cursor": {
          "ref": "fdffae02-a27e-4eac-8296-fa3f354e37ff",
          "length": 283,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "3672b512-3089-4e8e-b2d8-6c4e6154f91d"
        },
        "item": {
          "id": "a3f8f388-1f4c-42e7-b5fd-24514eb9ae42",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "28b51b7d-8eed-49a8-8618-b970348231f0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "712b55c4-288b-47dd-8e28-0c4106476bb8",
        "cursor": {
          "ref": "80fc6958-3401-4731-8bdc-ccf7044f09dd",
          "length": 283,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "250149db-bcfb-48b9-bdb4-e659dee4ba06"
        },
        "item": {
          "id": "712b55c4-288b-47dd-8e28-0c4106476bb8",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "e45b92be-bddc-413a-93e1-081d7099f10f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "69c9bd9c-9e1f-4f58-af09-49fb72a119c5",
        "cursor": {
          "ref": "147005e5-06fe-4a6b-896c-c2b0e87d41cc",
          "length": 283,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "87ec9e22-9bba-49d1-b4ec-78af331e0605"
        },
        "item": {
          "id": "69c9bd9c-9e1f-4f58-af09-49fb72a119c5",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "cb271eaf-8815-4dba-8128-a38ce0382c14",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7dadd1be-a586-4dc0-b7f5-68453317bcd6",
        "cursor": {
          "ref": "c281ecb6-1470-4045-bbf1-c4030078a83d",
          "length": 283,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "23ce5809-aa0e-43a7-9c11-6c32790f0fc5"
        },
        "item": {
          "id": "7dadd1be-a586-4dc0-b7f5-68453317bcd6",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "4f1df003-4c67-4378-86af-e5a561ea815e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a857fe5-b238-4d83-9fbb-7077c365be5a",
        "cursor": {
          "ref": "527a64f7-441c-41f6-8d80-4bdffbde7771",
          "length": 283,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "e8e4fd05-f02a-48c5-98d1-131e8f4c7a8f"
        },
        "item": {
          "id": "4a857fe5-b238-4d83-9fbb-7077c365be5a",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "33617f22-ddc4-47ab-a581-2f4e15b802bc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "01eaec06-0e36-4062-863c-adeca24ab545",
        "cursor": {
          "ref": "6598283e-c486-4670-b010-09f79cb7c58f",
          "length": 283,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "7cccb424-e83e-4c5b-8a39-7c7e29adf3db"
        },
        "item": {
          "id": "01eaec06-0e36-4062-863c-adeca24ab545",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "05474f6d-6040-4005-932e-83f6d4e99bda",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0437a6c4-5132-4911-844d-3dacbea892ba",
        "cursor": {
          "ref": "ac4b3f80-fd14-49df-b647-85d312b10d21",
          "length": 283,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "49eb868d-c455-45c1-a03e-caee7b50965b"
        },
        "item": {
          "id": "0437a6c4-5132-4911-844d-3dacbea892ba",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "926cf011-8aa1-4175-bdbf-b6864fab6892",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "84077f85-9fbb-499c-a4e3-7a7f9d7dc797",
        "cursor": {
          "ref": "00f48771-e861-4074-83ab-1ff5047fce72",
          "length": 283,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "7a87cb04-1cc7-40f6-b360-63ee2c7758ad"
        },
        "item": {
          "id": "84077f85-9fbb-499c-a4e3-7a7f9d7dc797",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "b7021f8a-a659-4a65-8774-093ad815d5d6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "48660032-76b7-45e4-8d52-e48bfb7b1fdd",
        "cursor": {
          "ref": "4cae2848-577b-4837-8b25-4a8a4301e976",
          "length": 283,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "8e0cb314-1604-4e53-8236-cb57142081a9"
        },
        "item": {
          "id": "48660032-76b7-45e4-8d52-e48bfb7b1fdd",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "396c4e9d-87e3-4d93-a462-a47fadc6cd25",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "50b01af4-9893-4f01-9f43-f0c9f3d7cc2a",
        "cursor": {
          "ref": "949ecf80-d63a-409e-9c6a-eeba4a7c2408",
          "length": 283,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "64b3a17e-6201-4162-b2f3-b844f045e196"
        },
        "item": {
          "id": "50b01af4-9893-4f01-9f43-f0c9f3d7cc2a",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "f14cf93e-cd32-4d9b-ae46-eebf8b56938d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b2a19c02-1ce5-44b1-b344-982504ea1a5c",
        "cursor": {
          "ref": "62c132b6-7e03-4aca-b03a-4343d1f4918c",
          "length": 283,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "ca44882a-93f4-427c-b3dc-e53479a6210f"
        },
        "item": {
          "id": "b2a19c02-1ce5-44b1-b344-982504ea1a5c",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "783e1a35-c44a-4771-ac42-b4a3b085e924",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "73b85e39-23fd-4c88-b370-8f7b695aa6ba",
        "cursor": {
          "ref": "86b89c0d-6880-4a8b-8e31-dbec719a6707",
          "length": 283,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "50f86a0e-2cf4-4c5c-aac4-7a69a3b556d2"
        },
        "item": {
          "id": "73b85e39-23fd-4c88-b370-8f7b695aa6ba",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "b29cd0d4-6b03-4ccc-9ffc-ff0f9d77e7a4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "78e14f94-8099-4329-aca3-d03f9e11a24a",
        "cursor": {
          "ref": "e00b151a-02d5-4796-82d7-71ef0570c9c9",
          "length": 283,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "846c4dbf-b9cc-4f39-8c48-c3dcda3d4ea1"
        },
        "item": {
          "id": "78e14f94-8099-4329-aca3-d03f9e11a24a",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "3474a907-728b-4673-9532-5a655bffba44",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0fa28ae8-6a29-4fe8-95ea-62630bc49188",
        "cursor": {
          "ref": "6dd0e784-b5f5-4293-a5ae-f0b2bf7a5ef5",
          "length": 283,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "31b3f968-c8f0-4de2-a702-f57f62c9a274"
        },
        "item": {
          "id": "0fa28ae8-6a29-4fe8-95ea-62630bc49188",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "8b61f4ba-27ed-4708-b875-ecffa75ba789",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a0dc752b-dd27-4746-949d-1e476f952a10",
        "cursor": {
          "ref": "c02e084a-f742-482b-8f80-0d48db414985",
          "length": 283,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "293be99b-c7e2-483c-9d1a-d993bfa9adfc"
        },
        "item": {
          "id": "a0dc752b-dd27-4746-949d-1e476f952a10",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "4ec0fac5-f92c-4bb9-9a33-3fbdb7ad4b23",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9bf2574f-632f-48d6-a0b3-4488489f0a42",
        "cursor": {
          "ref": "b26c4f60-fa80-4fb7-abe3-2efdd254a611",
          "length": 283,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "a8634533-3c70-4dbd-b4f5-b27b68851e2b"
        },
        "item": {
          "id": "9bf2574f-632f-48d6-a0b3-4488489f0a42",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "0076ab98-99e2-4f60-9d1b-e87ccfd9bfa0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fd41bdf5-ba02-4312-9db5-c0dfe3f51df1",
        "cursor": {
          "ref": "9a27d728-00f9-47d4-8714-ab72508a090b",
          "length": 283,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "46a763e4-50dc-4a65-a846-4d73428bb9fa"
        },
        "item": {
          "id": "fd41bdf5-ba02-4312-9db5-c0dfe3f51df1",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "106f3ff8-1224-4c9f-8a3a-5b45b7d190c1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d468d8dd-f080-4b1b-98d1-6ec84d53afe1",
        "cursor": {
          "ref": "bb07f07a-256e-4aa0-8902-b3844427a387",
          "length": 283,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "1c076771-3ec8-4321-adc7-c2286cefabd8"
        },
        "item": {
          "id": "d468d8dd-f080-4b1b-98d1-6ec84d53afe1",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "9e4f7167-bcc7-4de7-a4ff-266294390ce4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7737b804-7467-494a-abe6-6a8a32d23645",
        "cursor": {
          "ref": "cfbef8fa-875a-4d51-9fbc-1592a98cbf3b",
          "length": 283,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "adc81b84-9d3f-4b8c-9f77-e1adaa3e560f"
        },
        "item": {
          "id": "7737b804-7467-494a-abe6-6a8a32d23645",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "756a99c5-b26f-4795-87b1-60a1db0b4fb4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 182
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e4c47d17-1d1a-43fa-8807-b2ed1af7eb58",
        "cursor": {
          "ref": "4cf8ffe0-4750-4029-a8f8-771c7e5c657d",
          "length": 283,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "061ce150-b20f-428f-bb3b-3e8d16e57e65"
        },
        "item": {
          "id": "e4c47d17-1d1a-43fa-8807-b2ed1af7eb58",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "f755e1f4-f18f-4190-909b-ab5d3eee3267",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "429cd394-4c2e-47b1-89eb-da3e86a6b3ee",
        "cursor": {
          "ref": "f47bdcf2-6bc2-44d7-aaa9-25ba71f7333b",
          "length": 283,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "31b36462-1fac-4490-8131-5dc89a42cdbc"
        },
        "item": {
          "id": "429cd394-4c2e-47b1-89eb-da3e86a6b3ee",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "b2c0e73f-9126-482f-baea-988791fd3274",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d6429f00-0d5c-4e02-b35c-6d63edf68c28",
        "cursor": {
          "ref": "ce95a624-3c14-48fd-9e35-5cee771f2eac",
          "length": 283,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "915e0611-e6d0-469c-9ae6-4599ac256c2a"
        },
        "item": {
          "id": "d6429f00-0d5c-4e02-b35c-6d63edf68c28",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "40150049-0bef-4d77-b0ff-32d40fb1d9cd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8f1603e7-4cb5-44e4-828a-fed18b7aa166",
        "cursor": {
          "ref": "b467755a-ce1f-4f04-82e5-311384449671",
          "length": 283,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "5c629991-46f1-4048-9ae4-20648f2695af"
        },
        "item": {
          "id": "8f1603e7-4cb5-44e4-828a-fed18b7aa166",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "514cf4c4-463d-4420-9485-90a952d8df8b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "31a29731-0ee2-4bb8-b101-183805968621",
        "cursor": {
          "ref": "ceda710f-d23d-42d8-89e1-dacaf75d98f4",
          "length": 283,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "fcf9cdc3-13af-43d0-9039-e1e01f3fe1a4"
        },
        "item": {
          "id": "31a29731-0ee2-4bb8-b101-183805968621",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "0bd12023-100e-48fe-aaeb-b412900c44c7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e2d48e0-da0a-4224-be57-85b398f8209c",
        "cursor": {
          "ref": "4c708878-5624-41b3-8b7e-643b6234d7db",
          "length": 283,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "57b9a116-1959-4ee1-ae83-8f27a0586227"
        },
        "item": {
          "id": "3e2d48e0-da0a-4224-be57-85b398f8209c",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "23fcfe2b-48ec-4dac-987f-b4b8278a31b7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "39993226-a4d2-4e17-a4b9-6e53d2fd1c31",
        "cursor": {
          "ref": "1c366f11-e0cd-40a8-8396-a81377a39eed",
          "length": 283,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "9393617f-7bd8-4b8b-81a7-ee681f5d4ce3"
        },
        "item": {
          "id": "39993226-a4d2-4e17-a4b9-6e53d2fd1c31",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "b6df0024-f516-4141-8b12-91ab00079134",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b0674299-27cb-4b7e-85a8-20fec4311c47",
        "cursor": {
          "ref": "e9b5c1d7-0e4d-442d-87c5-8c433f6be960",
          "length": 283,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "638e7ca0-1d5b-4e9b-bfed-be7bd9377ff8"
        },
        "item": {
          "id": "b0674299-27cb-4b7e-85a8-20fec4311c47",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "5461564c-85fa-4bd7-b306-aa1f15e47e06",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c2f283a2-10a7-4d07-be45-93117ae74f53",
        "cursor": {
          "ref": "bd509e5d-6b8a-4e7e-9f10-d7f349198c55",
          "length": 283,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "a1ab5af9-d70a-4e7b-9b99-db7c956c38c2"
        },
        "item": {
          "id": "c2f283a2-10a7-4d07-be45-93117ae74f53",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "c19ac5c0-da28-4444-a116-67a69addf894",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "73ec5fbe-87c5-4e65-8488-a175430afad0",
        "cursor": {
          "ref": "e26eea43-8880-4bb8-b1cd-56b9ae01b2e6",
          "length": 283,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "f633d3fd-2f5a-425a-91ee-a0e110c3916f"
        },
        "item": {
          "id": "73ec5fbe-87c5-4e65-8488-a175430afad0",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "ade3a312-d115-4c9b-a57e-983add2559f7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fb05d605-148d-4c21-b5de-40c040857277",
        "cursor": {
          "ref": "14c7ca84-ae87-41b8-88dd-43d082d19eca",
          "length": 283,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "69f7c468-0db6-4fa6-a913-581b3ef159cd"
        },
        "item": {
          "id": "fb05d605-148d-4c21-b5de-40c040857277",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "550b5f53-3266-4615-8655-637eabd87e34",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e8954ca8-9e4c-4e4b-9f5a-3940c9d43ca8",
        "cursor": {
          "ref": "5ad217fc-ecf5-480e-91e5-595022ff10d5",
          "length": 283,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "27ebe967-772d-4ae6-a73d-e36f161b59f2"
        },
        "item": {
          "id": "e8954ca8-9e4c-4e4b-9f5a-3940c9d43ca8",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "cb5501e7-b2b3-4303-acab-8f786b0e17ac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb3ccd98-6776-4b8e-a1f0-5d5704d1c191",
        "cursor": {
          "ref": "e56df4dd-c362-4e05-859f-0b628eb71929",
          "length": 283,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "f6776d0e-055c-4fc5-8bcc-2dea605f739a"
        },
        "item": {
          "id": "cb3ccd98-6776-4b8e-a1f0-5d5704d1c191",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "6cc13749-b4f9-4de3-a120-394c311d0ff4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9f7b0953-c102-4997-ae1b-fd279c33a485",
        "cursor": {
          "ref": "3c877905-e25d-4461-aab7-02076f7266a0",
          "length": 283,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "4d30554d-7274-4255-ad1e-1c17a4cf21f1"
        },
        "item": {
          "id": "9f7b0953-c102-4997-ae1b-fd279c33a485",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "09d62349-df69-45ee-8661-bb3b0beef54e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "35f07107-5f8a-45d2-8838-74102b9b2769",
        "cursor": {
          "ref": "57086588-b406-4308-8900-dd7597f8399d",
          "length": 283,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "676f336c-8ef1-4bc9-b0cf-dd20a0d862a3"
        },
        "item": {
          "id": "35f07107-5f8a-45d2-8838-74102b9b2769",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "4d5112b1-e687-4250-83e7-ec8b40e9d020",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8095f687-3014-4a62-baf5-4f4dd70a16be",
        "cursor": {
          "ref": "6c216b64-c11d-4a1f-ae14-786271aaa874",
          "length": 283,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "734b9f85-8896-460b-b3d9-d7095ab151bb"
        },
        "item": {
          "id": "8095f687-3014-4a62-baf5-4f4dd70a16be",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "75c405e4-cc40-4c0e-96a6-d38a75bcb530",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e4482c26-9b1f-40fe-b790-f58e868b08a6",
        "cursor": {
          "ref": "95c56fd7-e860-414c-900b-b4ade9e66949",
          "length": 283,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "ed3a7058-ded9-4286-91d9-02072b3383b6"
        },
        "item": {
          "id": "e4482c26-9b1f-40fe-b790-f58e868b08a6",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "99df3b59-7cef-47e1-97c2-ffa6beb24dbe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e2a374d4-8e59-465c-8ea0-00e8d90d711f",
        "cursor": {
          "ref": "9455e01b-1b80-44a2-835b-425ff7df50bb",
          "length": 283,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "d6a899e6-7645-4d09-a4dc-62517ab7c2e6"
        },
        "item": {
          "id": "e2a374d4-8e59-465c-8ea0-00e8d90d711f",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "ccf35934-5e20-483a-9fd2-24c69741c57b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d3a8fdba-9e98-4b8e-af1f-d0116db910ca",
        "cursor": {
          "ref": "6dc1a23b-441b-4fd6-aa1c-069d1d030475",
          "length": 283,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "650155e0-8027-46f4-bda4-f060f437824b"
        },
        "item": {
          "id": "d3a8fdba-9e98-4b8e-af1f-d0116db910ca",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "8e7f5984-b56e-4984-884a-e4bf33b340e5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9e1c9d61-33f6-4fca-93d9-ba11ff7c881a",
        "cursor": {
          "ref": "0eb56e6d-1371-4c91-a95b-50f77faeb9c2",
          "length": 283,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "f3df1369-3ce7-46d2-9d61-03c1aa6566e2"
        },
        "item": {
          "id": "9e1c9d61-33f6-4fca-93d9-ba11ff7c881a",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "c0431e84-a66b-460e-9589-98db454e7af6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "496aaf16-25ce-436b-8cd6-1145ec3e8e4c",
        "cursor": {
          "ref": "0c68c2c1-4ce6-4d67-9a87-50c54a0e668a",
          "length": 283,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "1916611c-7792-4035-bfd8-0a81952e16cb"
        },
        "item": {
          "id": "496aaf16-25ce-436b-8cd6-1145ec3e8e4c",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "04981176-f395-44e4-9547-620b72831b08",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "61709cc4-87b8-4b40-bd81-0f30e5bb22d0",
        "cursor": {
          "ref": "7e1337ba-9e80-4f06-b570-fcc583bb37cf",
          "length": 283,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "507f6b6f-6dca-4d24-8ed0-c8f163876991"
        },
        "item": {
          "id": "61709cc4-87b8-4b40-bd81-0f30e5bb22d0",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "9851b542-9f5b-41c6-be14-323d689fad03",
          "status": "OK",
          "code": 200,
          "responseTime": 13,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 200",
              "stack": "AssertionError: expected response to have status code 400 but got 200\n   at Object.eval sandbox-script.js:1:230)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:230)"
            }
          }
        ]
      },
      {
        "id": "b10be92c-9088-4a8e-98c3-f335c7a936d9",
        "cursor": {
          "ref": "cb8c5e25-7915-42a4-b915-f3ec7890931d",
          "length": 283,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "41689524-d74d-463f-9d2d-f27a4566064e"
        },
        "item": {
          "id": "b10be92c-9088-4a8e-98c3-f335c7a936d9",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "10efea15-6a6d-434f-89b5-c746c97b8882",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "de6616b8-cea3-4ff3-a23a-6e17bbd985c6",
        "cursor": {
          "ref": "c302659b-102d-49ea-8539-ed31375f13f2",
          "length": 283,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "18eb453b-366f-4789-a11c-81d204224c96"
        },
        "item": {
          "id": "de6616b8-cea3-4ff3-a23a-6e17bbd985c6",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "726297cf-cde4-48b4-a967-8364df3199ef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef81019c-f482-4a19-a882-69940439f0dc",
        "cursor": {
          "ref": "8598ab32-521e-4450-b5ac-1c2459c22b83",
          "length": 283,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "a48c513d-3d33-450b-9a9a-b11ca2514e6b"
        },
        "item": {
          "id": "ef81019c-f482-4a19-a882-69940439f0dc",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "9b19053a-5fd4-4e86-8770-3f21744a892e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2681e517-af73-4737-8aef-9395c799b29a",
        "cursor": {
          "ref": "c23e3b55-7337-4578-a76f-0293dcbf4e5c",
          "length": 283,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "e44dc22c-975b-400d-b7f7-f03777f39cad"
        },
        "item": {
          "id": "2681e517-af73-4737-8aef-9395c799b29a",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "ea4bd54b-cc2a-4f26-9374-f7bf97133a7a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "27e49295-9874-4f41-ae15-0c99ad8245c0",
        "cursor": {
          "ref": "dff42a90-c91b-457c-a1c6-52ee62475c06",
          "length": 283,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "0b2f4464-6e74-48b4-94c1-99ee3d9b0ec4"
        },
        "item": {
          "id": "27e49295-9874-4f41-ae15-0c99ad8245c0",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "a256a20a-4a1f-4084-a566-a39a16ebd637",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7fbd0b07-6c06-41d3-a16b-551a7fb29477",
        "cursor": {
          "ref": "f5aba4cd-294a-41f7-8036-c82ebd196369",
          "length": 283,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "62a719f9-3db2-43ea-897b-69128d0acf00"
        },
        "item": {
          "id": "7fbd0b07-6c06-41d3-a16b-551a7fb29477",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "3293bedc-5a16-49ae-be86-cab106d29973",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "055a729e-03c1-45b9-9d4a-3c10d14e785e",
        "cursor": {
          "ref": "e76a008f-3094-4b34-a7a9-76fa782279e7",
          "length": 283,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "e8edb056-5db6-4e21-980b-04c99a829f38"
        },
        "item": {
          "id": "055a729e-03c1-45b9-9d4a-3c10d14e785e",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "cca69574-762d-4e4a-a693-bfcfce6ea1ec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be371669-d0d1-4fad-8115-0fbdb705aea1",
        "cursor": {
          "ref": "cc5989c3-99dc-4e4f-bf6d-95b5301d5405",
          "length": 283,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "f28d58d4-f683-40f3-a3ca-e54935b7526e"
        },
        "item": {
          "id": "be371669-d0d1-4fad-8115-0fbdb705aea1",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "cc4a3c4a-f825-4fc1-a7c8-7c9ba87f036c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe7dcf4a-3079-4d26-93a1-565a204e26e1",
        "cursor": {
          "ref": "b2eda0a4-31ce-4295-a134-3b3c067ea41b",
          "length": 283,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "60ccb43c-bd00-4a72-bc73-c0433c5e1392"
        },
        "item": {
          "id": "fe7dcf4a-3079-4d26-93a1-565a204e26e1",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "bc95f694-0a96-4147-90cb-c2bdf2026ecb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2095af06-640f-4b8a-9a18-cacac5693084",
        "cursor": {
          "ref": "bb216d1c-9e51-4c41-87f3-9b2414f31174",
          "length": 283,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "af746341-0b65-4b78-a7eb-e969a8808738"
        },
        "item": {
          "id": "2095af06-640f-4b8a-9a18-cacac5693084",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "127a79fc-f52c-4296-b445-29899b2f04af",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c6784fa8-fc12-45aa-9762-4713968934c9",
        "cursor": {
          "ref": "9138b36c-91d6-4a3d-87d3-5e809d892d30",
          "length": 283,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "c76887bc-fee1-47dd-9b98-36305a955e3b"
        },
        "item": {
          "id": "c6784fa8-fc12-45aa-9762-4713968934c9",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "aea2d458-5c5d-4964-b17d-d0d8a107b212",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0585f841-540e-4ca0-9f68-0c8665ddf3fb",
        "cursor": {
          "ref": "ecc4bae3-7f67-48cf-8beb-ebd384e1e80a",
          "length": 283,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "cc1ef920-ff78-4e89-8897-926fb61fab0c"
        },
        "item": {
          "id": "0585f841-540e-4ca0-9f68-0c8665ddf3fb",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "30620936-bdce-42a3-b5d7-0aad31cb619c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5523c0fc-58d5-4fab-8657-e8979751dc80",
        "cursor": {
          "ref": "dbb57439-79ca-4adf-b469-77666f1da070",
          "length": 283,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "386db817-0459-4b42-bc96-63e7376fa602"
        },
        "item": {
          "id": "5523c0fc-58d5-4fab-8657-e8979751dc80",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "2d926767-5896-48d6-b08a-f78e6c82d61a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f3847a1-c55b-4984-afc2-9d42466595ee",
        "cursor": {
          "ref": "ded97680-8a67-47d2-bf76-b942b0071860",
          "length": 283,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "ceeae228-303c-410a-804c-5c9f65978c6c"
        },
        "item": {
          "id": "7f3847a1-c55b-4984-afc2-9d42466595ee",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "c1010397-ef68-442b-bb27-f854a2981ada",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3dbdd45e-95db-4729-8773-61f77b33e5df",
        "cursor": {
          "ref": "f8b20236-de7f-4e41-af05-666ae07f6584",
          "length": 283,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "3e46a1e7-3da9-403e-854a-3c777294766a"
        },
        "item": {
          "id": "3dbdd45e-95db-4729-8773-61f77b33e5df",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "02b5a834-e96f-4bb7-be22-efc947bbfd66",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "48c68357-3a20-41ad-b4b5-bc4d2392bc46",
        "cursor": {
          "ref": "8fd82b44-7bc9-4930-9479-e326ace7d209",
          "length": 283,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "bce7ec63-ce73-4879-8fcf-4b4ea7244c81"
        },
        "item": {
          "id": "48c68357-3a20-41ad-b4b5-bc4d2392bc46",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "b2ef43f5-f119-4810-b3b0-a1adcdc750ba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2ab0adad-74a0-4d24-8eeb-b4158cf68950",
        "cursor": {
          "ref": "afa36d42-0086-4c23-a275-f0419bab74a5",
          "length": 283,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "3395e65c-386a-46d5-b95a-675aa2ef2906"
        },
        "item": {
          "id": "2ab0adad-74a0-4d24-8eeb-b4158cf68950",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "0cb72d51-dcf4-487b-a08f-5e46a704a2e2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "505f16e8-f0dd-4117-8259-169cebb460fd",
        "cursor": {
          "ref": "d3623458-0914-4a14-b48a-7a3e6cd323cd",
          "length": 283,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "957c3e58-c57a-404d-a263-5afb3f66a7c0"
        },
        "item": {
          "id": "505f16e8-f0dd-4117-8259-169cebb460fd",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "73ecab62-4273-484b-929d-94d1af847f4d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e217a3a3-ee3a-4f82-96d7-fa3b253c131b",
        "cursor": {
          "ref": "39c9fcf8-eb82-4f9f-8667-8b527fca18e6",
          "length": 283,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "7feeb198-d0c8-4287-99f6-a6695d3e9f79"
        },
        "item": {
          "id": "e217a3a3-ee3a-4f82-96d7-fa3b253c131b",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "db093e1a-6b3d-43a1-b40d-a3784497d909",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "87143cbc-94ec-4975-a118-f97609a723fb",
        "cursor": {
          "ref": "d2f8e349-d151-4b54-9979-b8c326469f36",
          "length": 283,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "fa7c95ca-7487-4819-9532-27da5c285b8c"
        },
        "item": {
          "id": "87143cbc-94ec-4975-a118-f97609a723fb",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "73e2ad2f-2596-4037-b244-2d18e858439e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aca71d41-ea3f-4ed0-944f-03a441911f0f",
        "cursor": {
          "ref": "eb96a4ee-c467-438e-9af6-99a9845fd513",
          "length": 283,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "8791a670-c585-490b-a2f8-592d5840af39"
        },
        "item": {
          "id": "aca71d41-ea3f-4ed0-944f-03a441911f0f",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "7881f4fd-c59e-4842-9c27-d356d2ef5242",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9e998a2f-d7d1-4c12-b0e6-bdb66598df16",
        "cursor": {
          "ref": "cce1c117-6cbe-4e9c-86a1-5114839f2c31",
          "length": 283,
          "cycles": 1,
          "position": 251,
          "iteration": 0,
          "httpRequestId": "468a617c-ce23-4ecd-9082-e9b3ede11309"
        },
        "item": {
          "id": "9e998a2f-d7d1-4c12-b0e6-bdb66598df16",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "0543fb19-a894-4428-beb7-787a2517ec9c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "32768905-9ea4-406c-ab5b-da467b26d568",
        "cursor": {
          "ref": "07d26169-6344-4c08-97c8-0bf4058bd2fc",
          "length": 283,
          "cycles": 1,
          "position": 252,
          "iteration": 0,
          "httpRequestId": "6bb47712-4f31-4e7b-bdad-1e1ea415d548"
        },
        "item": {
          "id": "32768905-9ea4-406c-ab5b-da467b26d568",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "3ab4f68a-dc2d-4ed2-88d8-6e6938bbc1fd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7ccb8cf1-aed4-4819-a55c-d3fad85a3fbf",
        "cursor": {
          "ref": "1493c1fb-f09e-4728-8ccf-a56a856b68b5",
          "length": 283,
          "cycles": 1,
          "position": 253,
          "iteration": 0,
          "httpRequestId": "83f013ac-4d4f-4c52-a923-4eb192a7f225"
        },
        "item": {
          "id": "7ccb8cf1-aed4-4819-a55c-d3fad85a3fbf",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "bf345278-5565-41ba-bdac-115d7a046cfb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3280314e-1922-4c96-ba90-674816a40c12",
        "cursor": {
          "ref": "ebaba1b9-dc4b-408e-afa1-7fdebf4d9d3b",
          "length": 283,
          "cycles": 1,
          "position": 254,
          "iteration": 0,
          "httpRequestId": "4a5f8b06-a815-46b7-9f9b-52fed1007860"
        },
        "item": {
          "id": "3280314e-1922-4c96-ba90-674816a40c12",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "5fa1d2e3-d923-42ef-988a-3737de5eeeea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "489ab72c-ea05-4b95-8237-7b52fb85694b",
        "cursor": {
          "ref": "df7fb6ec-2240-4b3b-ba87-8d772922f956",
          "length": 283,
          "cycles": 1,
          "position": 255,
          "iteration": 0,
          "httpRequestId": "f2dfd749-88e0-4bb3-8d7b-48b1ec60a520"
        },
        "item": {
          "id": "489ab72c-ea05-4b95-8237-7b52fb85694b",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "129d92f0-ab41-4e87-a63d-14ed6e8ecf0e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "779455a0-f44c-4f03-ac3f-f3934146d79b",
        "cursor": {
          "ref": "0e21e299-1aa4-4ae7-b86e-ced49ddf6ea1",
          "length": 283,
          "cycles": 1,
          "position": 256,
          "iteration": 0,
          "httpRequestId": "5312ffe9-1f15-409f-872f-19b0264fd878"
        },
        "item": {
          "id": "779455a0-f44c-4f03-ac3f-f3934146d79b",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "9a47ac85-34a2-4b12-9d22-7ccb02547601",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "94de5409-9f14-459e-913b-97f9f420d5c4",
        "cursor": {
          "ref": "711c5d60-f3f1-426e-9dca-152a579f9e7c",
          "length": 283,
          "cycles": 1,
          "position": 257,
          "iteration": 0,
          "httpRequestId": "cbe153b3-322d-4345-ae0e-12ab4a86c9d1"
        },
        "item": {
          "id": "94de5409-9f14-459e-913b-97f9f420d5c4",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "9f9435df-52b5-4911-ac64-3a71d6f30f74",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9dd4c0ce-bdae-4ae2-8358-0b5abd64cd5c",
        "cursor": {
          "ref": "c080fa48-e7f7-41af-bcc2-b507fff4a672",
          "length": 283,
          "cycles": 1,
          "position": 258,
          "iteration": 0,
          "httpRequestId": "dcf4bf23-a30a-41cc-acae-be9a9478e296"
        },
        "item": {
          "id": "9dd4c0ce-bdae-4ae2-8358-0b5abd64cd5c",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "8b7193d1-60bd-4d72-8a9e-6ddafa39ec1b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2865f004-53f4-45f0-af68-dd599d91a79c",
        "cursor": {
          "ref": "ee9b41f1-b7b8-4c25-bb13-f0e2a3109897",
          "length": 283,
          "cycles": 1,
          "position": 259,
          "iteration": 0,
          "httpRequestId": "e291270a-00fb-400a-bfed-d185f961bbe1"
        },
        "item": {
          "id": "2865f004-53f4-45f0-af68-dd599d91a79c",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "cbce63dc-0ce8-4a16-bcf3-eca01c214684",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "96c9e0f4-acf6-4361-a1f8-05541b6f00f9",
        "cursor": {
          "ref": "39ea4bcc-de4f-4d40-9260-47a35d01ad42",
          "length": 283,
          "cycles": 1,
          "position": 260,
          "iteration": 0,
          "httpRequestId": "44250912-ece7-4a3c-96ca-f999e7b8de85"
        },
        "item": {
          "id": "96c9e0f4-acf6-4361-a1f8-05541b6f00f9",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "36b2119b-8f0b-4fd9-a19e-65f985b9a2f7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dd744a4d-a43f-4821-bea5-539ca634806a",
        "cursor": {
          "ref": "bfcba543-8847-46bb-9354-c70f1bb054e0",
          "length": 283,
          "cycles": 1,
          "position": 261,
          "iteration": 0,
          "httpRequestId": "99305d64-f82e-4a05-82d0-63cf6e8158ec"
        },
        "item": {
          "id": "dd744a4d-a43f-4821-bea5-539ca634806a",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "2f0efc3e-9548-4188-b81c-58fd7ad769f4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4692d11c-b761-490a-b2e4-5b6b43e02001",
        "cursor": {
          "ref": "a82de32b-c01e-41b5-ab60-af088b7bfada",
          "length": 283,
          "cycles": 1,
          "position": 262,
          "iteration": 0,
          "httpRequestId": "6dab3393-2186-47f3-9713-979a8390a7ed"
        },
        "item": {
          "id": "4692d11c-b761-490a-b2e4-5b6b43e02001",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "f0f84a41-f9a4-48e3-bfa0-f91f34423b08",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db69cb12-c7d6-45b5-8389-37dbf5fd066b",
        "cursor": {
          "ref": "5eccc453-8117-4815-ac36-c3a88dee27e6",
          "length": 283,
          "cycles": 1,
          "position": 263,
          "iteration": 0,
          "httpRequestId": "8d57b74e-b6c2-416c-9d0a-7115e9110ea3"
        },
        "item": {
          "id": "db69cb12-c7d6-45b5-8389-37dbf5fd066b",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "6a6da1b9-326d-4d13-aa91-e5b6893f55df",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c2d1025-906e-4d9c-9094-f3f27467bdcf",
        "cursor": {
          "ref": "d3bd60ff-fb1d-4a32-ac05-2a599358afa5",
          "length": 283,
          "cycles": 1,
          "position": 264,
          "iteration": 0,
          "httpRequestId": "522ddfa5-beeb-405b-a480-ab8d5d35f34c"
        },
        "item": {
          "id": "2c2d1025-906e-4d9c-9094-f3f27467bdcf",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "2470b677-3bf9-461f-aa3d-fe6795222602",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cd57244c-f25a-4f88-8a64-c55b24df6f49",
        "cursor": {
          "ref": "9421b75f-879e-4c4a-8195-48298af6a2ee",
          "length": 283,
          "cycles": 1,
          "position": 265,
          "iteration": 0,
          "httpRequestId": "00acd92a-f45c-42e2-9512-3cd0164c77ab"
        },
        "item": {
          "id": "cd57244c-f25a-4f88-8a64-c55b24df6f49",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "8c0a3042-9b7e-4af1-9e5a-8b78b7154e60",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e9acc38-d9e3-4332-b50f-5074d14fd8f1",
        "cursor": {
          "ref": "8989c979-3c46-4c29-ad46-8bb59198a1fc",
          "length": 283,
          "cycles": 1,
          "position": 266,
          "iteration": 0,
          "httpRequestId": "e64bd7f4-4697-45c0-86cf-e4fd32d93b9b"
        },
        "item": {
          "id": "3e9acc38-d9e3-4332-b50f-5074d14fd8f1",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "dbea4276-947d-4732-b80e-c4a315fc5092",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "21da4728-f040-42eb-bbe1-30ef472df0b6",
        "cursor": {
          "ref": "ecc9b39c-0df4-473a-b07b-50a233b0acf6",
          "length": 283,
          "cycles": 1,
          "position": 267,
          "iteration": 0,
          "httpRequestId": "1253aefb-404b-4635-a1c8-783bc630f83b"
        },
        "item": {
          "id": "21da4728-f040-42eb-bbe1-30ef472df0b6",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "098aa7e7-ba04-4bf2-8102-d331ab257c0a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "48e23c6f-2768-4a8e-8840-18dfbc8bc8e8",
        "cursor": {
          "ref": "c50875c7-ef7d-4963-8e28-96f349f1218b",
          "length": 283,
          "cycles": 1,
          "position": 268,
          "iteration": 0,
          "httpRequestId": "01ad786b-3cec-4265-9009-5d8f8f80b61f"
        },
        "item": {
          "id": "48e23c6f-2768-4a8e-8840-18dfbc8bc8e8",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "85753702-a590-423e-ba90-cef0272d8804",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "90b30676-ec69-4b2c-9877-68d377eef8da",
        "cursor": {
          "ref": "f52ec677-3532-4ba8-86bc-aa55d415bbe9",
          "length": 283,
          "cycles": 1,
          "position": 269,
          "iteration": 0,
          "httpRequestId": "3e2275be-87fa-4181-9d75-28f98164c797"
        },
        "item": {
          "id": "90b30676-ec69-4b2c-9877-68d377eef8da",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "cb43861f-afd4-4d7b-82d7-5b9682ff1027",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8902b5a2-b52a-44a1-9c5a-539de6847520",
        "cursor": {
          "ref": "031aab69-573e-47b5-af40-f20a82034826",
          "length": 283,
          "cycles": 1,
          "position": 270,
          "iteration": 0,
          "httpRequestId": "4bd8669d-90b5-4b96-a294-71c30fb6afe3"
        },
        "item": {
          "id": "8902b5a2-b52a-44a1-9c5a-539de6847520",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "3c04d383-bb47-413a-9e44-8040f712fd70",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bfe3c5fb-0ff3-4627-a6b4-c27eb648d434",
        "cursor": {
          "ref": "a4eaba0a-8276-4502-b59a-5c8adbe51f7c",
          "length": 283,
          "cycles": 1,
          "position": 271,
          "iteration": 0,
          "httpRequestId": "f678b72a-001b-4448-ad67-4915f43b582d"
        },
        "item": {
          "id": "bfe3c5fb-0ff3-4627-a6b4-c27eb648d434",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "f627646e-4790-49a9-946b-ec4ce54f9618",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d30fa2ee-3e0a-4851-b92d-55cec26d6d5b",
        "cursor": {
          "ref": "1e3849f2-3172-4e51-80c2-59140d928f84",
          "length": 283,
          "cycles": 1,
          "position": 272,
          "iteration": 0,
          "httpRequestId": "f8bf1428-7a48-45c5-aad8-7cd02493d94d"
        },
        "item": {
          "id": "d30fa2ee-3e0a-4851-b92d-55cec26d6d5b",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "16e10691-73ba-4057-9340-4efbc2fd82bf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "05e4e353-d4e9-4ab2-86d6-f579a2c065db",
        "cursor": {
          "ref": "ab740f06-78ad-4b49-8e70-00e444783642",
          "length": 283,
          "cycles": 1,
          "position": 273,
          "iteration": 0,
          "httpRequestId": "2a8932ca-ee76-4e99-9cbb-ef02494dc420"
        },
        "item": {
          "id": "05e4e353-d4e9-4ab2-86d6-f579a2c065db",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "897b465f-b647-48eb-b9db-42663e3cacc0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f8b41fb8-d2a5-40a5-a6b0-531994e7de44",
        "cursor": {
          "ref": "fb143000-4db8-4e17-99fa-590c0c6a33ee",
          "length": 283,
          "cycles": 1,
          "position": 274,
          "iteration": 0,
          "httpRequestId": "86077c95-1775-4074-8b80-97e315366461"
        },
        "item": {
          "id": "f8b41fb8-d2a5-40a5-a6b0-531994e7de44",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "b57f671a-434a-44f8-a836-f8dd5eed2d67",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5fb3d49c-29b8-4dd5-9824-a28584a5a7a6",
        "cursor": {
          "ref": "6f3c3742-7714-4c50-9c1b-f10ca01e8518",
          "length": 283,
          "cycles": 1,
          "position": 275,
          "iteration": 0,
          "httpRequestId": "4265408d-6cb0-4f88-98a4-fa24045c9171"
        },
        "item": {
          "id": "5fb3d49c-29b8-4dd5-9824-a28584a5a7a6",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "afdd8992-93f4-4cf8-9992-66a27963db74",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "50ca24c8-d803-4c19-a717-3dd1fed70acf",
        "cursor": {
          "ref": "c5334051-189a-4b6f-9977-c74518fa411f",
          "length": 283,
          "cycles": 1,
          "position": 276,
          "iteration": 0,
          "httpRequestId": "c5debfc5-3db9-4bee-aa2c-d12bec3012c8"
        },
        "item": {
          "id": "50ca24c8-d803-4c19-a717-3dd1fed70acf",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "c0a30b36-669c-4228-ae1b-45a2501c1fdb",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 8,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5fe52ee0-8583-42dd-9c7c-c1caa13da224",
        "cursor": {
          "ref": "2dc25f0d-ca82-4fdb-9b4d-bd796a77d450",
          "length": 283,
          "cycles": 1,
          "position": 277,
          "iteration": 0,
          "httpRequestId": "3bfcc8b6-0e0b-4c87-ab05-6e1430c34676"
        },
        "item": {
          "id": "5fe52ee0-8583-42dd-9c7c-c1caa13da224",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "54d2eace-a15e-483c-8c4c-d6a8c67a1ce7",
          "status": "OK",
          "code": 200,
          "responseTime": 9,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "4043c4e7-ee37-4b9b-b632-7248d91f168a",
        "cursor": {
          "ref": "0acaa770-d4f1-4eab-98b7-4f5335ca90b0",
          "length": 283,
          "cycles": 1,
          "position": 278,
          "iteration": 0,
          "httpRequestId": "4456ca34-b758-4749-8f43-2fead0afe0c0"
        },
        "item": {
          "id": "4043c4e7-ee37-4b9b-b632-7248d91f168a",
          "name": "credentials_verify"
        },
        "response": {
          "id": "d0050501-8dfc-47ef-8269-04592efc7689",
          "status": "OK",
          "code": 200,
          "responseTime": 22,
          "responseSize": 37
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "99a555d4-c53b-4bb0-ae00-b3677e818fac",
        "cursor": {
          "ref": "43d1fc9c-c229-4cb1-9b0d-9f90a66cb9ad",
          "length": 283,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "41abec31-e049-44cc-8305-acc72708a44e"
        },
        "item": {
          "id": "99a555d4-c53b-4bb0-ae00-b3677e818fac",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "e83cf3e9-2109-4b49-907e-bd79a9de838a",
          "status": "OK",
          "code": 200,
          "responseTime": 25,
          "responseSize": 37
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "165aad4c-92ac-447e-b339-5ed031da607c",
        "cursor": {
          "ref": "9491180d-d1f2-4e20-b3f8-e6d60bbba787",
          "length": 283,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "3512e1b4-4e1b-4be6-9d98-b35fab7d9855"
        },
        "item": {
          "id": "165aad4c-92ac-447e-b339-5ed031da607c",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "147c5418-1c8a-40fe-90b4-431110e16064",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 8,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "165aad4c-92ac-447e-b339-5ed031da607c",
        "cursor": {
          "ref": "9491180d-d1f2-4e20-b3f8-e6d60bbba787",
          "length": 283,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "3512e1b4-4e1b-4be6-9d98-b35fab7d9855"
        },
        "item": {
          "id": "165aad4c-92ac-447e-b339-5ed031da607c",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "147c5418-1c8a-40fe-90b4-431110e16064",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 8,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "78e53708-9deb-40c4-9238-b0e54146a968",
        "cursor": {
          "ref": "07459e6a-d254-4b3b-a9df-2fffc5c71c77",
          "length": 283,
          "cycles": 1,
          "position": 281,
          "iteration": 0,
          "httpRequestId": "13669926-4750-4d30-b535-fec17126f65a"
        },
        "item": {
          "id": "78e53708-9deb-40c4-9238-b0e54146a968",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "18d5f009-9574-4c6b-9086-9269b1cd5545",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 8,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "95f0187f-7e12-4c36-8bf2-62f7e227b275",
        "cursor": {
          "ref": "bd2bc1e3-e074-43b1-9f07-e4b720506d68",
          "length": 283,
          "cycles": 1,
          "position": 282,
          "iteration": 0,
          "httpRequestId": "834e7121-da16-479e-8d91-fe24422eff89"
        },
        "item": {
          "id": "95f0187f-7e12-4c36-8bf2-62f7e227b275",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "c31c9a4b-c0cd-40f4-a13f-f31b2473d6c0",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 7,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}