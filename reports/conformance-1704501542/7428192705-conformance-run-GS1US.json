{
  "collection": {
    "info": {
      "_postman_id": "0b8a4a7f-f952-4403-a9a4-909b37b8fa24",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "ea94b326-285a-41b1-b328-6bb898d0d886",
        "name": "Clear Cache",
        "item": [
          {
            "id": "0030ecd3-bf05-4d9d-aff4-df2afa00a49b",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "5752f50d-13ae-466e-bbef-5a8c9535da17",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "b9952448-7ab5-47a7-890c-f6971b5c99da"
                }
              }
            ]
          },
          {
            "id": "b1d49973-a645-4555-8fe3-e414ce282a19",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "593578a1-59b1-4bf6-8ad0-514be3db33c8",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "a22d401b-8492-4e07-b6a9-e18ed11f0341"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "c69ab9f1-80e8-49d2-870a-5a006462818e",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "499541f8-0419-4dc5-b828-98e4fb42aefd",
            "name": "Positive Testing",
            "item": [
              {
                "id": "914e7231-a0f8-4e42-864e-7e9f898e6fa3",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "08237bd6-b3ff-4593-a480-896308b64d21",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "b09ca0b5-8b09-441d-9c86-ce145d8591c8"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "aa24bfb4-2531-4eec-aaf1-fdde5d4b263a",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "a5047aeb-0136-427b-a687-3ecaee1119a4"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "c63b6477-d614-459a-b453-cf7586cbeaad",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "22315a93-4780-4b55-8b84-5b874a6c0d47"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "5b542720-28a8-4fb2-8702-5dd8e9fcd70f",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "0171e131-9b15-4ec4-8caf-dc53d442d5d5"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "4912ac50-7efd-43a2-bd23-52c22a01e315",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "d0bbe5f5-dc93-4884-8aa9-3106242f0ba1"
            }
          }
        ]
      },
      {
        "id": "6ecd7392-9930-4992-b774-f01ced074ccb",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "b6c35dcb-ecbd-40f2-b097-c33b9a274251",
            "name": "Negative Testing",
            "item": [
              {
                "id": "573341ec-c0f0-4df1-b935-9017599033b3",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "d8957e5b-f3c3-4d41-abe8-613bf76c4660",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5249a456-710b-43fe-96c8-f0e8e5c5f3a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "51d43e54-2ed1-4b0e-910b-8bce97493d1d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b0051705-e917-4708-9e6d-8846c72d1d7f",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7aa760fe-1808-47c9-ad32-d0785232229a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "cac18bb9-cde3-440b-8ec4-fcfcf442de0c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "648b9102-4b9e-407a-b944-8b52eeb70fea",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2ed914cc-e22c-4dc0-8ee7-ff25edb6a39c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "61891cdc-cfb9-424f-8154-d7ba7ef7ceb4"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "a7fc1925-fa8f-4e49-932f-e100adaee9b6",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "eab7552e-6dd9-4d3a-bd51-389de2ecb980",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b826407c-07d7-4d0c-83fb-227d273c4ed6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "a7f93733-cdff-45a9-910e-bbf8fac17367"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "18c1b23a-0c50-4781-b0a1-b5ddb68f37a6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c4af28f3-1445-42a4-a0dc-9ebea89285ce"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "8183d1c1-4073-4afd-aafb-406fc9c82f7b",
            "name": "Positive Testing",
            "item": [
              {
                "id": "b907ba2f-60ce-4f9c-a36e-f6b3a1c38b07",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "bad83adf-e1a5-457e-9f5c-9047d80562c4",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "4484fcdb-3386-4ad3-afcc-c0af4893655f"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "0082d13d-a81b-4c29-81a4-dae41f0f614a",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "e33bd58d-d40b-48bb-8cbe-076cd606bdca"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "c4e0f530-7b12-47f8-bfd1-23becf87afa2",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "b01c469e-d709-4ba2-9167-60af129ddb53"
            }
          }
        ]
      },
      {
        "id": "0ddbff13-ac6f-42fc-addc-850b0e1a2cf3",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "375d0088-e9be-4d08-8d12-931943dc857a",
            "name": "Negative Testing",
            "item": [
              {
                "id": "f4f1149b-1558-42e4-a0d0-112384fcd81f",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "442c63f0-5eff-4f72-8075-8c4b9a0b727f",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7b4d1348-fedb-419d-8421-53c02154ffed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "59dfe5e5-be9e-42d0-bec8-be75075a85a6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bfdf06a3-b1a7-41af-9ab4-665d429e47e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f930d100-5e1e-44ea-94ab-4f4bbb469183"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6fa297ab-974a-4a4a-9694-ef80717c5bcf",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "856c3c0d-2687-4b52-acf6-29602af23113",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1b59e8b8-6a8e-4b6c-a397-f8706bff44b5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a9a88cb8-2762-4a56-9cbd-5cd0ae4fcd80",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "8d97fda2-bc06-4648-8ca7-3992332c6584"
                        }
                      }
                    ]
                  },
                  {
                    "id": "72115514-5dab-4df5-86f6-502ce5551b70",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "07c777ec-07ff-4a45-99dd-4d2999962f5f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6ead0157-1515-4135-870c-72dd10850147"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aef86d4a-3ace-4d22-8e08-49e847046fc7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "aa91c966-5dae-4974-8d1d-6618181744e3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b7f33804-3594-4b55-8f41-ce519149cbbb",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fb745d50-1917-45bc-85a5-0b5d1b83f0f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "efcf2ec8-a212-4231-ab5f-5922df0c477d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e6302b7e-6787-458e-a31c-1368aa78c22f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "1d0fda96-2cd7-4d1d-81b9-c5ce40a5e384"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bb9441d1-afca-4b48-8c96-3e64452a77ff",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "99d9722e-4377-43fb-a9d7-45a4459b7f02",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1c773302-278f-408c-b63e-7e0e1f575aa3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "defec645-7ce8-4ead-ad9f-5fc7756bed08",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "4e0d3ec4-03e9-437e-8bdc-258e846f560a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c8620af2-c514-463c-815c-2c751ea93cb3",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4eb82a82-ece1-47c0-835c-1ab4c6ebd3b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dd9db651-90fb-4c11-8eb9-a66405d0307c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1e33feb6-0148-4c39-9084-2115a2775118",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e29e5fc3-97c0-4c5e-b839-c37cf9e09112"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ca19749e-d44f-49d1-a22e-6b1781a26d56",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "66f27e60-9f78-4e0d-9c4d-6bf647a949a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "132035b0-8a2c-4dc8-a29c-e6cc7004dc5f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d1a31523-49e2-40e7-a732-9cb070077bc0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "353df802-dd9d-4303-86d3-27f8686f1b14"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b5902403-bfa0-438e-903c-09abeac9b64d",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1e823f43-afca-4d83-85b7-78e7535b293b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c6fdc4bb-5131-4863-8b41-66bbde524257"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d089de39-7542-4338-abce-97e4d70a46a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d199ad5a-5381-4dfc-a156-3165af996f44"
                        }
                      }
                    ]
                  },
                  {
                    "id": "64ba10bb-548d-4b24-8856-f1aaf97f7de1",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f5a87c0e-cb3d-40b5-814d-5558c7565933",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1a6fcc8e-039f-472d-8a35-de8dfd060924"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4ff2f6f5-58c1-433b-baf4-2cf65188692d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "fd67706f-4197-474c-919e-ef27161f4e18"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5db10d6f-b3fe-46af-aacd-de3d1e6671d8",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8732677d-875a-4cc7-8748-9b24841cb5d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "96d4bdbb-8c1e-4152-b633-0e34d35a4d67"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1dd0f5f1-1326-4811-82d3-2ff95e804ac5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "19c8b7e1-0052-4dab-b04c-9efa653fd326"
                        }
                      }
                    ]
                  },
                  {
                    "id": "56dad71c-167c-4276-89bf-a7a5531892a6",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1fee7932-3213-44dd-b17a-2551e1ca7006",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "277a6e02-0a19-4c54-943a-28fd6290d366"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1c5f8842-3125-4ae8-8a0a-05c33f9dfe96",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a0532677-3bd5-4563-b552-2d3a89c650d6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8d275c5b-f860-4aff-a452-91992393d7be",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4ae1ad84-8fc0-4e63-9059-2d452dab68f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "00328707-8478-490c-b7a4-5f52d7a886f8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1d1e7359-4283-4cc4-8c44-a52a79572594",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "7faebfbe-c32f-49f9-9516-e10787ab41b7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "37ea5dc0-7db9-4596-a8d1-e0768e674eed",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "21f71228-62c5-411f-85a4-f0df5532ba46",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e33621f9-e54f-4580-ac5f-0336276b20ad"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4e48e0ef-208f-49e9-b623-36f0a06c460f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "7b6b4014-1e73-4493-9e50-d1025636948c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8acc69bd-dec9-47ad-b6db-aed0c9194335",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "683f2d8f-d19a-4a86-99bf-f64078702948",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9d18e382-4785-4e59-a731-a752d535c4f3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1ddf2097-a5bb-4b76-a36e-dddada96efc4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "171cb04f-4329-4b6d-aa7e-a5f7d1aea256"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a0ed5e3f-8f91-45a2-9561-9ec353ccbe2c",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5afb6f75-b7d7-4a3f-94f1-f60629743e1d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5a421979-8540-4c48-8d98-315209996770"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "58575dae-34b9-4178-b7ae-5ea508962f4f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "0dce15b6-f0d1-49ef-a84a-4a5260035438"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9217a03f-92b5-4cc1-9ff9-a854c104ede5",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c69de1f1-4888-4f7a-b55e-b715e90b44e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2fa982f9-aa85-49bf-8276-dafea6ec2476"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "511af024-fc11-44f7-b30a-b2bfd9413b9f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "bd6582c1-47e9-48ef-8113-af1736c11107"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d98bd6b7-d5d2-4bf2-a8a3-b1676cf77c02",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "080dd742-62ee-4241-9e70-ab6bf8efcff2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a6c7c377-669c-4118-bfc1-aa2a4788b44a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc580571-d0e2-4f8c-b695-99a4f7e986e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "8186d318-b2f7-4250-b8f4-2b4c9f7626b2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5d378318-013c-40c1-b953-c71d7891e5ac",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "73eb43d8-9808-4376-963e-4ba976cd028b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "89b85a5d-c742-4bf3-b829-bd636b074555"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9ab114b3-6d5e-453b-910c-71e53853f957",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "78941042-636f-405d-afa5-cf8c655f3bbb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4368b49d-0f9c-4bab-8790-698b2130a3ad",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "732caff9-cce4-451e-9e6e-00b246871f39",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a1defe76-3d36-43fc-9327-e64b7580a2b7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "48420ea4-5fd7-48d2-938b-559d7d14b57f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "362ebf10-0ab4-442a-b31d-cd8572686647"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7a28b7e0-cbfe-429c-81c3-d53b5e1f7805",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1cca20d4-b8c7-45a7-ab85-0644b43b21c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9642865e-af33-4029-bb70-59cb597fc5fb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "964a5714-58fa-4d16-8ae9-f8b113c81a57",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "257e4ae1-0209-4f12-8e53-0ed2b84b83b8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "850abe5c-0040-4394-8643-ea82e88e574d",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "03caa45c-8f0c-4b9d-b1e4-71317291512b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "674a4277-40ee-42f4-b0de-63965a066ed7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "93774086-3e22-49ef-bb39-54ee1d2e56e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "c6c13265-964f-4f22-911b-2bd29f1e32e5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a0747d9b-62f9-411f-82c7-2778335323ee",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "88126452-52d6-4fc1-9e5e-7fb4232332ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dff969c9-dccf-409c-8d4e-2501f078329e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fc631250-c0af-408b-a792-76ae4332370c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "62aeee31-6907-4851-9324-8c190d95fb09"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c3bc7feb-1ee7-456d-aaf4-91d0151ea303",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cb170038-9476-474b-ae1a-09bb8ff248c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ed4e7895-52be-4903-8b89-63cf855b442a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "37157993-8524-4cfb-aa78-dd8c761f338b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "f11e2b6b-88ef-41a4-a5d3-5046d52642ba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "413f5fc5-9805-429c-bd51-11acdce64105",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "acead328-7b89-42a5-aafb-433f66c6ed38",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c4af7c7e-1d4c-4b33-91b8-e58546c35b40"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3b55dafb-1931-4f37-98e8-8ced6b34661f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "56fb4413-debc-4782-8cab-b4cc502fed8a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bdcac0a1-1a21-4ddc-938b-89e9aa3033a4",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "48b8ef8c-4ba5-4355-ba85-b38844444972",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "699da878-a6ca-4ec1-98dc-73e4b904108b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9555fcfb-5158-4bf0-abf2-b9a52ca65bc3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "15be867c-9b5e-4a1e-9d2e-e54a58159610"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c3ee61a1-abff-4d49-8088-537aa81f3cc2",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9aa62e76-e8ca-4783-aba0-1336abd3186d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c60fd5f7-3e8c-4921-8dbc-29e5861fbbfe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "baf0f778-549e-42a8-8056-aad0555e9271",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "6f434a48-1aa4-4526-a21a-32d3d35f3f76"
                        }
                      }
                    ]
                  },
                  {
                    "id": "908fc506-aaf4-4999-82d6-64aedd140e87",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1b03cca5-0098-45c6-96d5-cf4761069ad2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1612540b-95c2-42fd-810d-9f15a3a37e42"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "edc72ee3-5114-482d-9146-afa26eedd930",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "b7ab03c4-aca5-4df3-ba23-4ef9e0ffb100"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a23403ef-4684-4b80-9609-face9b1487d5",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "87769813-ffc4-4d1a-ae9e-fb57d81f9fed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fec869fb-3f46-4c24-883b-7169bc54b066"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "71911189-afab-4972-a0d3-6296e3792732",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "1b3216ca-0953-4833-8167-d54fe8dd2e27"
                        }
                      }
                    ]
                  },
                  {
                    "id": "48582136-3afb-4892-87ea-6632116386a0",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6e846a0c-b8b3-4570-a95c-e380cf811ca9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "15ad3f8a-8abc-41ac-81b9-a78b2c2c1c92"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f5be807c-c593-4174-b577-56a51104108e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "54dadf0d-ca65-4edc-a021-6fae40539c59"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5ea8d1bc-6d1c-47ca-8947-89aa51539f06",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "351ed0cc-e0ad-46eb-b55e-9d83f9db5ccc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "077c6a6e-ccfe-44f4-84ec-fb2d8d9859e2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "04699668-a6d7-48f6-9937-b3a3840e0724",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "833338d8-f530-4685-b79c-fdc367875bfb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "41929891-78ad-4343-a46e-6db95a288144",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f9eacc24-abcd-40df-b842-5a14640d154b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e7bc10d9-5c27-427e-9769-4fa4d69ed34b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "58fc7f78-0aad-4942-af65-09d8096afc30",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "35dad6ae-ec27-482f-b3c3-790d8f729e5d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "34cd81d7-7943-437e-a243-72b33ea3b4bd",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5293e0ae-1acf-4b08-8ae2-9d79b7ddf685",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "112e8dcf-9cfd-457f-bd91-d2ab790a3ce2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f7dd1c58-5c5e-41fe-bee6-114e229eb480",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "6315863c-9d57-4496-b096-a5565354e2e9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3179a68b-524d-4fb6-8435-09b9c18a71ab",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e6083b48-2028-4698-b9dd-b6f8b5eb97f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "58b14955-b2fd-4757-9a06-5cadbccdcc3f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "934ec131-da02-4f04-a828-8732a31e9d53",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "c9453397-4e58-4c05-bdfa-e5c5905e00cc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2e491cac-d806-49fe-9d2f-e84340895b64",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "48233e1e-05c2-4605-8ba1-c28f746b7fcf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "52bff131-5791-491a-80ce-b1fad7dba3c4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "37b5ba3e-efe9-4abf-9bef-d4dd344ff45f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "89645490-a8ff-4460-88f8-58eb6b572c70"
                        }
                      }
                    ]
                  },
                  {
                    "id": "33202723-3be0-4779-91cc-53ae34756c1e",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9353b747-756d-4cda-940a-0e5dc0246d00",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a936ec7f-022e-4074-ba1f-57dae8e29e58"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a2c00204-fe4e-4819-b1c8-3a60209c52f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "8173f917-ce08-49af-a21e-e0a67ef8b13b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e1635adf-6c1c-4801-a6da-edc6022876e2",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff4021a2-a634-4a36-a753-68b02e21dd1f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "c5635956-1f38-4bd9-a41d-f95baa2a44da"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0e4b7d54-649e-4c3d-869d-3d911d602f9f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "f25d5996-fc7e-47d4-af0f-52cf0d0dd5e0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7618e799-adb2-4f4a-a169-e58ace81adcd",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "25e62cae-ce0c-455b-acaa-1c00c0e42999",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e22cef87-5867-4d38-a9f3-9cde2e779fe8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9303ab05-067b-40fe-a641-46c624519e93",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "c149d30c-2870-4539-99e5-caf45c27c965"
                        }
                      }
                    ]
                  },
                  {
                    "id": "add419b3-deec-4e79-a7d2-c8ceaa4695e8",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8c0d0e7f-f9fb-4698-8dfc-dab1a37b72dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "23e45cab-ee4a-49ef-b906-a799ca03d449"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ee0386f1-fe13-4168-91e4-c82fb0eb89da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "0b325f95-bb31-4c65-ad7f-6b6286ba4b9b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ac10198d-f54d-46aa-b617-c837fd7278c6",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1ca6f6fb-a6f3-4e0e-b190-acb01e405af4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a4ccee8d-b7e8-4ff8-8c25-d90d8cea472f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e35272dd-7d91-4cdf-a966-84e5f1ab68fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "6797104e-ef43-48ed-a15b-ca92e8a94fc6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dfb793c9-1e6a-4acd-828f-7889c2af4073",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "44beded2-0d20-4368-afdc-2053ee690fa4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "23b37691-4a62-4297-8128-073399d04904"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "be8c0d52-5ab3-4da2-8871-8fc47e7c42e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "053bc936-953e-4059-a47c-d46c7249a132"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8d5ce514-742d-4240-ad89-cc5f40e05a69",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "865138d3-90b1-4401-9b1a-d02edff6c741",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "31438773-786b-40c0-aad7-61c22a35042d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "200249df-8521-4c6f-a12d-877ddfc7db6f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "8699bddb-2e0a-44f9-a277-fdf6c0725799"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8ec13eaa-b2dc-480d-aae3-1e77e67998dc",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6cec214d-1452-4c00-8166-eb5d3243596c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d6a89355-f0fb-409c-bd43-c100bbeea396"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "639b1cd5-ba84-4869-bb84-7e6c33bc1d8c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "9d39dead-7867-4cb4-9a5a-a8711b90325c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e0732c5b-cbd4-4a71-b6a0-982c6fbff8da",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d321718a-a016-43ed-91ff-078fd713eef8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7bc3f78f-1104-4ec2-8d77-8b96058a46a4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "de6df71b-5b8d-440b-a4aa-9208f4ee962f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "4776912a-f4d4-440c-9f45-fbd21524c568"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dbe763dc-5a4e-4e00-9cc7-b62b726ab043",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "936b58ed-ea7e-4910-8f7a-ea5495112a7c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ce3807e5-ab13-4e10-9e7a-b7dcb5792766"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "63b84431-0079-4a2a-8071-010b2d0ff56a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "dc7b68ee-fb4a-40b0-84fd-e10ca21d5010"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9697621e-e5c3-454f-b4ae-7caa922f8f82",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "00a293a8-a646-4831-9fcb-151791f830b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "956cac36-dc02-4606-a591-e0e6673052f7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b5c2c458-7659-429a-b8d7-5c110b391364",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "2ce42d98-4e6f-4597-8587-f3156ce3fd5b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f70521b9-2159-4871-baab-0025ea4542e6",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4e7f0b06-baf4-41ab-928f-59a29b227a7d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "85386255-1223-4b0c-926a-4bb65349f97e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "643448fb-d850-4e78-b2b3-b56920e8442d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "30d7da58-02bd-4cab-a5cf-0b37755742bb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "42080468-3c7f-4442-bf8f-92be82b00c7c",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c5ce948f-2541-4688-9214-f60bf54152a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "de57a57a-4a2c-4add-9ae6-6584ceb30f8a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d7c1a213-5004-40fc-8058-21529f2950c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "2086c48c-afd1-4b8c-9276-9b33f0be774a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7c128b59-1231-4b11-a05a-7545c9445dcc",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ad916b45-1413-4421-badd-4463d55f58c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "faf4c514-5868-47bd-9fb5-da7ca472cbd5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e1b77b64-e097-4fb9-9fe6-31c9d37451a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "04c86335-b790-4817-b2ee-3fa39ce7d5fd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "113362ef-9d46-4354-8934-8c70ed55ca87",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0c5531ad-e39a-47fa-a88e-56c36d799c29",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cb198715-792a-4ce2-b7e0-08029ba8594f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e765c6db-83f6-4173-bb10-9c92c55d4b3f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "c0410cd2-42bb-46ee-87a6-20fae4348dae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fe175e29-954d-4494-bc87-dde9b24703be",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9b42e56b-446a-47cb-be29-56a697625d29",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a2885f49-c896-4424-9374-0053a8f1e52e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9c87df63-7bf9-4114-b0b1-7f4da7158cd6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "54e23ac2-bfee-479d-a8e5-76434f353254"
                        }
                      }
                    ]
                  },
                  {
                    "id": "10f1266a-4d63-4796-99e7-7d2ea9861758",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d1a302ca-d56e-4663-b68d-55ae97c6d46f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "58ed524a-225a-4410-ab19-99a3799da6e7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ffd85de0-997c-433b-b760-20a4e4cd5ff0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "92c33aee-0d4c-4fde-b299-8bf51f01a680"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b7968570-cfa3-478d-b2e9-ccb248c8c766",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fbf32e25-1259-490c-9cdf-5f22a32f6a5f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4de1127e-66c9-403e-8b53-c6efebfcb4f2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eb9564c8-fe48-4b9d-ab25-c74367d398dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "73ff0ab4-d518-446a-8c1c-671382e7732e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ed85acfd-206f-46f5-8a21-f63384ecae41",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0584b101-a2fd-4864-8a36-2c73fb276765",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a98e1d06-6693-44d0-a2d3-d1a6975ce5de"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e77ae92b-61e5-4f24-86fc-69592dabea1b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "9a9422a5-0024-4896-a94b-1709420afc56"
                        }
                      }
                    ]
                  },
                  {
                    "id": "01696e87-ceb2-4f46-a4d4-a5c2d64bd357",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fd8b33f7-7c9f-45fd-86b8-5d3feb0a0389",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8dcb59c6-f7c6-4ec1-9fce-252ca40fe218"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "82a7fdd8-49a0-4f5f-9d2e-83e9b76e69f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "7f662abf-5eb4-4503-a57c-4e5bd6bbfe23"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7502dd16-6e22-4029-9ce2-5cf2f1f68386",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "40dba581-3f61-4ed5-a7e6-e59bcc8d9d75",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "57693081-8db0-408e-9b90-087e1a96beb7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "89e3cf94-6d11-4f5d-8daa-2f2931109308",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "f5d7f5be-1c4d-4bff-907e-4f4fca72004e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "90321749-bb4a-4e19-a27d-5187c44b5d64",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8ef8f798-0a38-4e78-a0e4-0bcb4d218302",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c86cef69-0965-4cda-a46f-613c048cad03"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cf5171e9-81de-4994-962b-d8ade39ed923",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "cc8fb141-9285-4718-bb29-d10d28485c8e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cc71129a-d835-4e8f-ab20-c3a01cbad6e8",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d98ff262-5dfa-443b-ba0d-21ea211232d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f27bcc84-d079-462a-905c-d3e3107dadeb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "423d07e3-2f47-4472-b3e6-d518855580f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "f9d44c28-2b20-4ba0-923c-67086418fb33"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2189327f-6a1d-4f6a-94c8-9256116622bf",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bf67f164-12ab-4a42-b1bf-c875a410911b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "39f3a205-f45b-44ec-bed1-2752658e986a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "57919a05-c384-4eb2-ac5e-0d63e25678af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "7052f346-5c2f-42f4-88d2-fd040e115a8b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ca9779ae-f6c7-43f0-9b9d-c28477aae014",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "48c64794-d67d-41fd-aa80-bbae289316ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f3b027b5-ecaf-4b87-b4f9-c06c3b60b0ac"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "16eaaa7c-881c-425d-8abf-54a38e6b63f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "5276280f-3c50-470c-bee4-812a77d4efae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a1656c48-d425-49cf-8694-8151509530b4",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "94b26fdc-0743-491c-a961-e5e8c861c010",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "970ea25e-33bf-4adb-99c3-4730d2f933f3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ab3c4d19-5ddc-479b-9f4f-b7c6b3ce4841",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "bafeaef0-e678-489b-aaa5-e75df3b8fa0d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "325dff67-4472-4cde-a78d-7ef2d65dd0e3",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "74e7914c-bbd3-4d11-936e-5adff5b2df18",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2a22fe78-21c2-48be-9d8e-c6780de6337c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "acfd003a-f3cf-4d04-b4c3-4d453100e8ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "d8b51767-019b-4bd6-a559-3a8fb7ba5a7e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "959701bb-2967-484a-85ba-2af87dbc8f85",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2a173921-ecbc-453d-a398-a620216f3f98",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d89842a5-3175-4f2f-b4d8-ff829f5a7ad1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f9966c62-6182-48d1-859a-29c59422e131",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "a3031cd6-9f2f-4adc-8adb-3ffaa368a754"
                        }
                      }
                    ]
                  },
                  {
                    "id": "21ebe7c8-b133-4dfa-8815-907d476724b6",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8db4c265-5c88-4bb6-9e29-1e74ccd2e724",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "845c87a2-0d03-4fbe-9373-cbafe72bc649"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8a4e3cb7-d864-4959-9d23-b788965a568a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "74b6b12a-548b-49df-82b2-27c7fea45b7d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "967b5b2b-aee0-45a5-9eb8-2f5d7c850091",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "87b8ed8c-d511-4791-b342-7e49ea2f431d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9e336e20-874d-410a-a940-c65bebe4a4c0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6ae02a0b-5404-476d-a816-01ac6fe11a6b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "34a38e67-f3da-45b2-be19-94cffffb47a7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "862589ab-b869-4722-bb00-cdf39da632b0",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3e7cca30-c07b-445d-9392-f0f333bcd5e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b58e8c2e-7a78-4a33-a445-c66ff3c54ceb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "869cc147-5fe3-472e-b392-df694b536040",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "b714ae54-ef53-4322-9c14-3e6baa448b0a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "103b4dd7-d2c2-4518-b96a-772dfbb51f26",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b5b58575-95a4-4280-b309-577d63702278",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3c77586e-3e56-4561-bcad-d3a19f3f1166"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bf62e8b2-729e-4996-ae1d-679a90d9a5a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "92243709-d711-4e45-937d-2a9dabc7434d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c6e42934-3917-4f1b-bcd5-a9bb479511e7",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1dfb08e2-802e-41ca-96c7-ff1ebb59c1d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "20292203-21c8-4fd5-b07e-8bda97c77e6b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "361e28c7-77c9-4fe7-8aa9-5a21aa9111fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "f631efe1-3801-49ae-9bd5-811d78b52cd6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f36ad08e-64c5-469f-a4c5-4ea7ce7ba001",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b518ee5b-2f3f-4880-977f-cc6948f425fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "63479909-28d0-45d7-b840-713b360acf62"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5070ca5f-6437-4b30-b763-078893d2a084",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "9f9db446-eb7e-4c30-a06a-631a54f9a4cb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1721ad4a-a4c5-4fed-934b-109989071b9a",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3b37d7d8-1d80-4d2d-9933-148232355878",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "53767827-3de1-4ed7-bb0b-42c7b39d0cb7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "65549250-df4b-4242-90e8-41df7402059b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "69b0dc03-1c1b-4242-92c4-9f57e11aad8d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5b0a6ac3-78fe-424b-b56e-413b0f6c0abb",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0632b000-e5e3-4f2d-9740-266686ef8554",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4131e29e-fadd-4a14-a930-01c27bf09326"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0b0471a5-9d98-4245-987b-b775c436bac9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "976d89d4-377b-45af-8116-98c1bd0bf39c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3f8d5f13-d289-42f1-a068-6a5c2f9cbba4",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fad80dfc-0711-48b4-b22f-9fa166ba34a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "df63c930-e29a-48ec-9913-b3bf0541970f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "41ca4958-3e09-4816-ba1b-fc57630ae53e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "6075e88a-4145-444e-b60e-663dfd0c0596"
                        }
                      }
                    ]
                  },
                  {
                    "id": "602e50d0-c996-4762-b576-bd2aeaea0c63",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "adf3d39d-b809-4019-9f2e-32f6880965c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cf3886fd-d612-4736-8124-465542821ff7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e93d2474-8f61-4287-919a-4a8e8645b41b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "34bbd3a5-e684-4cc0-9b00-12684fbf1cb9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f136417e-1343-488f-8ce7-bc3118ab4bb5",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d8ad4f22-f844-4a67-ac33-6cac2ceede1d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "649e448c-5501-4ea7-a5f9-c333844f4c5b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "35b65991-3fa9-4bf2-a2d4-781770a255eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "a525b3bd-3902-4b88-905f-0d1f2188785a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7bbbea34-7f66-4185-b7f5-80e2bd3b1e6b",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a5207f1-dd25-4a79-89c7-2e254f5c2b24",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3ae6b069-75e3-4eed-a6f0-f237d417cd80"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8a438461-224d-4e8c-90f2-1bb478ec7855",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "3010a391-8837-4f5f-83b6-dd8b1d7e2434"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d01b9b38-dbe4-4522-923e-664278dcc008",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e49a7f7b-fc9e-4983-8790-fadbee7fa06e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "63a3c615-5e4e-48ee-97ef-44469c489759"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c468a248-6a72-44a0-9ed6-16e86c21c2d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "7fb25caf-544a-4456-b39f-e41cdb31be40"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a4b8bd3e-d48e-472b-8a14-c0c4f6d143a1",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fa295d1e-0ccb-4b29-9741-36d880ea7b56",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fe72b282-47cc-4b3a-a8bf-dd932ae34f05"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "30aef0da-c372-4aa4-8208-eb72f2db9362",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "5938e7ad-c64c-477e-8e4a-eee4f7469861"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fb9bb22d-7563-435d-919b-d4aa57330e7e",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c31a96a1-f09c-4ceb-8c75-105da1ea4af2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d50f7ead-51af-48b8-bc3f-109eeb7c9881"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f4899f21-2984-4dd3-8966-8d700c7e6388",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "046ccee4-c4a0-416a-bf41-e34a57bd2d1c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6b83d017-f50c-4cf7-9c8a-837f5c2810e4",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6d9b21c8-b396-4902-8b7e-6564ecbc2ac9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "69725a0a-5844-467a-8c14-5e43c31cf3c6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9dbcc4da-d3c0-4fc9-99d3-b81ee8641da4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "69db276f-0956-4db2-8db3-54f1efd50ad4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4b54001d-2bb3-4abb-9b59-79f11e91b276",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "316dee8b-1b29-4b9d-a2c5-e308b46f1b60",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bbc912ee-3dc2-44a3-8ec8-6880a12820df"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2bdb9fc7-1bb7-48e2-b8a9-b4ad64500a3f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "13cc94ff-2893-42db-8688-0013a8626ddb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ac281c2e-2b03-49bf-8f3b-f158a9a58dcb",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c54fad4e-a889-4102-8d7c-5909230c324e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4ebf4fd9-c113-4f73-9cdf-241b89cb4553"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6c97333c-c09e-4ec3-8023-35a428019bbb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "0b392073-c79d-45f7-b897-49aa1182f24f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d33dccc3-8191-481d-96d8-8d7d25fe664e",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a558a419-3a98-4a00-958b-f2932736b59f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "096320b1-7f0c-4fcb-a36b-4cd107c69c58"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b1f307e7-20b8-4aa1-a5b8-ba9860ef7be9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "824067b5-7af6-4735-aeab-44011a7b26c8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "64d84854-5c98-4862-8509-6b72788ae5e4",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e050514c-4a14-4296-ac74-782b6004d934",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fb8948aa-3fbe-445b-af25-3ba97b1d3c42"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c4937a68-db8a-4fa1-a107-0af3ff90a82a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "1fc5f1ee-1d22-4e1c-b2a9-6c098dacee75"
                        }
                      }
                    ]
                  },
                  {
                    "id": "38cced29-cebf-433c-9373-975cdd0ccf27",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "083586cf-2ed4-4a6e-8c21-e45e33e48d54",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "53dfc75f-b997-4cd2-bfa1-5edd014cc04a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "15451114-45c4-422f-85d3-e11d20b581bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "41fd0152-e73a-405d-8b45-961be0f6cb52"
                        }
                      }
                    ]
                  },
                  {
                    "id": "72e54879-6fa3-4911-912b-1ceade7243be",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6f0d5b28-9556-45b6-9cc0-773652fb3d46",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e14bee6e-441e-4f3d-939e-a25c71184792"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8b210ca1-ae20-4d1a-b279-83b8a047f5e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "59975d56-e427-4b67-a5a1-081a8bba26f0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "79d388cc-7838-4160-88f1-67a9e324a167",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e3384b61-0697-4e8e-b2a4-4ec941c3679c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "721c9d25-0b64-49a6-88e4-da4b35b4cad0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2d57237f-7f0d-4d5e-bb4f-ac1f37aff116",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "32e3c675-9882-4068-b9e3-2a38d278afe1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cf7132d0-f306-4051-a5e4-093f3fe7ecf8",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "76a0b725-a034-4dc7-9895-be0b86680a46",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7a33ccfe-92e7-4d64-9cde-537643e5cd63"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "deb85ea0-5eed-4ed5-a7e4-3d7f78ac2cbd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "879b5829-da60-4df5-8117-69d519b41ff8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6b7076cb-4c12-4895-b4ee-312216b84dcb",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "16d13a09-a142-4137-808d-e513df85eb77",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "96b103b3-2aec-44d9-934d-fd19b4ec23e3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3a68e683-8360-42a1-a126-2ecdafe01e3e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "55bc4fa1-6ff7-4bf2-a961-702ff1cc3e47"
                        }
                      }
                    ]
                  },
                  {
                    "id": "207b3e9d-2847-41f2-a24f-60e95b492a0b",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bc32b108-b23e-4be8-bf7f-f545b75f55e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c0e3a3a3-5731-4cab-a562-8f5ef526107a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6c9ab8fe-e59b-4a2a-9945-aa24af12c17b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "8b2cff8f-6cb5-493b-a420-f2c4ba0ee845"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9973a721-5246-4739-82a9-77e9e3c527e5",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "059e2775-cc2d-4960-950a-9dc2068064d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1eafd048-bd14-467f-81df-059142b0e4ea"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a8b8c8c1-cd9a-4b03-965b-01d3c9fb796b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "0420eae4-f276-4f56-b92b-a801bb781ccf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "66bed9dd-7d17-45f3-9c4d-66e186bc87fb",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "447d78ef-940b-492f-b9d0-e002e572d969",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "482a37e9-2a02-4e58-b89d-3bc20ddd02f5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b69120d5-96fb-4d1e-beb0-dda7e0474d85",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "7c5f559a-7d45-4dec-bf2b-a407ba6d4f74"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a91244c5-2b77-48b8-a39f-cc7f4fcdd95f",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "17b6856c-fe0f-4eea-830d-52a09c2e3d74",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5598d919-e22d-449d-af1a-f46d18093526"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bb942a39-4b40-4d6f-b4a1-f892c23ee261",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "fc89c18d-3ea5-4452-9f6e-0f735f87522b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3b816f5a-79fe-4de3-89eb-590a03e4c0bb",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3962a688-fca8-4804-a61e-052b2ccf9e85",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "61d70e80-dfd0-454a-8760-06037dbd6a41"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "13cf43de-d988-4028-a0eb-17bea8433306",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "a58fa200-ee8f-4484-85be-d6e4a2faaa7b"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "479f9a72-6eb6-4a33-b6f5-37f12dcd1bc4",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "e824c06c-37d2-4683-a009-1c054ad676d7",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dca668ba-7c82-4987-9ce6-59ffacab6bba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "d3ecf009-c35f-437a-aeb9-2aa41c345860"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3f7f044a-8607-4472-b9ab-1cd61fdba36a",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "fbe68471-3303-4ee4-9f81-1f0b9469cd25"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "ed8a32d8-63ef-4acd-a77b-8f3ce8fc1d3f",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "147575d4-636a-4f1e-8542-e53703dfb34e"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "0b81c89d-0eca-437b-b2b0-7e4e0ce55c9b",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "c6920d5b-a82b-492d-8e3c-ecd201ce0430"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "ecc5735d-277c-472b-87d6-ccae3703aa7a",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "6ec2464e-2eb7-4be2-8c14-3549b88a8469"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "5dac4dbb-fe8a-41da-9164-b52fad8e8e26",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "ab17c519-8f0a-4dda-8a75-6425f747a703"
                }
              }
            ]
          },
          {
            "id": "e3394583-905c-4afc-bbc7-9ccc07312469",
            "name": "Positive Testing",
            "item": [
              {
                "id": "296ca7ae-4c5d-4286-950d-e7a6dbc94016",
                "name": "Duplicate Keys",
                "item": [
                  {
                    "id": "c0df6081-da18-4392-a457-5ed3b8d18257",
                    "name": "credentials_issue.credential.issuer:dup",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"credential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"issuer\": \"{{issuer}}-ignored\",\n        \"issuer\": \"{{issuer}}\",\n        \"issuanceDate\": \"{{issuanceDate}}\",\n        \"credentialSubject\": {\"foo\": \"bar\"}\n    },\n    \"options\": {\n        \"type\": \"Ed25519Signature2018\"\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "text"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3c50fb7d-048f-480a-90d5-afb8f7e557ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 201\", function () {",
                            " pm.response.to.have.status(201);",
                            "});",
                            "",
                            "pm.test(\"response issuer matches request credential.issuer\", function() {",
                            " const { issuer } = pm.response.json().verifiableCredential;",
                            " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "e28c331a-16fd-4da2-a543-eaa608350d29"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fb0ec039-1d2f-4c06-9836-90fa3d803dc5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c7334ec0-d3a2-4715-a994-4d67b78cf17a"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "564570ed-c99b-4160-9051-17288fcbf3e0",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "b47eedf8-14c6-47bf-8b58-9bded409200e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "b1449d72-09eb-4c04-951f-6b9582962e58"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "cabcac28-e291-4aa6-8224-7ad95ac9c3e6",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "5732d36c-602b-4002-9f5e-ddd456779116"
                    }
                  }
                ]
              },
              {
                "id": "bfc4b47f-ae75-4423-aab7-11da7c14ddc8",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "1405dbd4-9d42-4ec9-b61f-a0b72dbe2715",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "78ac50b5-97c8-4b83-ac54-f2e7930bec6f"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "3e4928e6-0379-41a1-9a92-7196411a39ec",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "04624ff3-4787-4aa8-9acd-8d22202887ae"
                    }
                  }
                ]
              },
              {
                "id": "e1c6afd6-ce38-4b4a-ae0a-39e0282faeec",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "47c900ae-6de2-41c8-a448-33cbcff107ab",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "003205bd-f216-4a3a-82be-d6964ffb8a73"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "efe0714a-a127-4d52-96d6-0def14857aa8",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "34103afd-dc98-457e-bacb-63dfa0e53d11"
                    }
                  }
                ]
              },
              {
                "id": "dc292c21-78da-4c9a-b92b-6699ab29e40c",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "c9d6a324-e3d0-47b5-94f9-f45ecfb5cd7c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "d9633688-999a-4afa-ba08-822de6fe40c0"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "027013b3-08ed-4232-baba-1d00024a272a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "a0cfac10-4fa3-484f-8de0-7f66f32aa089"
                    }
                  }
                ]
              },
              {
                "id": "10917c10-33c3-4976-a3f1-a79ccdfe7540",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "f7ac5716-a610-4967-906a-6fb55a3b0710",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "5a4f0b6e-bdca-4e75-bd2a-d837103983ac"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "d2f7de02-52e5-42d9-814d-3e47d020641f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "75615b1f-abfc-49eb-b1aa-72dbb9f1b898"
                    }
                  }
                ]
              },
              {
                "id": "fd7b85e3-6d7e-4a27-b19c-9e5c19856692",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "4b519e68-7b69-4c2f-b161-06317bbf1571",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "755257fe-9eea-461a-864e-fc68e94f5ede"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "ac2ae2b0-4a35-4cb5-8368-a5c61b60bd08",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "248ecae2-d88b-42cb-bda0-a45b3fb926b7"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "32b295a4-8ad7-46a2-a520-24a987dc6a1d",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "92873fa3-598b-4777-a396-5cdc0934e097"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "99a8aa14-0431-4e3e-ac9a-4fcd65e951b8",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "f64fb1d2-18f6-4d9d-aebc-b567b5d4a2f6"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "d8c49db7-c610-45b5-8e5e-69e51638827b",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "e77ed713-c665-4e58-a076-f1c18256d1db"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "d9446a2b-caea-4d85-81e4-4b13cec77df0",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "1f4ac867-da63-4a0d-8a83-7053716ca22a"
            }
          }
        ]
      },
      {
        "id": "861697b0-b3cf-4d0c-9254-0793aeafa403",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "85068633-01bb-4b2f-a52c-61f53fb13402",
            "name": "Negative Testing",
            "item": [
              {
                "id": "e3b4546d-02ff-4530-8c60-8058497b8c6c",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "9a70c00b-cce9-4314-9a03-d75e655d5396",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e92706f1-9568-4243-ae22-d53e84797c92",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dbdd9b62-f2de-4d34-820e-62fd0826bc76"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "756ddf0d-79a4-42df-83ec-cf83e26312d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "75811240-c449-4a26-a0ba-c01653c0c1e0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a4c3ce94-453a-4e57-8511-412782b2da6a",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eb72d97f-231f-4824-a9ee-d486d7d598ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "96b4fb4d-4e00-401c-b343-baa787972351"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "db48e29a-49ee-4166-806f-22f2275278a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "cd07bdf4-b7e5-4576-87fe-0f4f44d2fdcd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b1c76ad2-8649-4373-b17e-4802ccad5868",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8663656d-552f-469d-aa28-acf2f78ff88b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ec7c5fb1-d3a3-4001-addb-16338adf15a7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6d1ce2d1-a9d9-4bc8-9c1a-6af53e0255c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "2a2f2d57-33d3-4ed1-a68e-f609e8c14b85"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a2ca240f-ffe3-4826-8391-3d5dfa2cbcde",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "11ec27d9-f89c-4ea4-aada-1426ab4a7c1c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fcf2547d-ff67-44e1-9729-f9dbe9e7b462"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b01d2196-635e-4cf2-b067-737df4992399",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "15a49da3-114b-4cf3-89ed-af05ac9d4d5b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "93298e35-536e-43cc-89bb-139034bbc45b",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "633e8079-1660-4f62-b0a4-e9c3cbb3c2c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b0134d6e-bdde-478d-b309-a3924d6c5e9f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ad5df85b-231e-429c-b661-2b20bc60921d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "5044f0ef-d3fe-49e3-97d6-d66d2d8328a4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "198ff548-0e46-4b54-b50d-549dc56c9ec5",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "60e8e211-de75-4f82-8cf8-cbd8a21ceba9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "db14a8e5-3c61-463a-af31-1933af35ff35"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "88503c23-b181-43ec-9f67-01cf7e6d6e0a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "054c510f-17c1-4cab-b445-b86fe605aa5e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d7f16446-b36f-4551-9601-c74ba6e48474",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bc36fb15-b681-4e5f-8db8-58d60bc731e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "02dce038-0335-4dbc-82ed-d9b2fba20874"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "99a456a1-e382-463e-b752-64a75c6c4365",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "b41090fc-aeea-492b-904a-e3c4899226ac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9f560ef7-9c36-49c3-b1c3-8750f67d6641",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "92871e4d-b848-4b9c-81b8-ded4624ee508",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0b2ae8c4-b0d1-46f3-bc18-6f648be3f3e3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f1e4b513-ae55-4b27-891a-48f87c712ebc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "0f46948b-1856-44fb-abcf-593e2fb65be4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7fbe27f5-4e6c-4548-8eb3-298b822d144c",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "07dd4d7c-cf1f-452e-a3de-83d7f90071e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c00e03c9-836e-4a99-804d-26d412c3e5fa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a49fba2c-4d7a-42c7-bdc1-6cd9be6fdb49",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "e07167b7-1678-4421-b497-145bbf8cccbe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ad3098f4-b632-4e76-8cfa-5b3da8a9039d",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cac32729-cada-4586-890f-e6d5f27a5cda",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0a5859ef-79fb-40c6-ad49-3d72b5cad996"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ceeb6bee-9b8f-4724-9866-42cceafc8710",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "cf25c324-7819-4840-86c9-6111d693abed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0fe1465e-9cca-48d0-82cf-2eefd3eae71d",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "267b28c0-bd13-4f1f-83ed-dd20ea358a3e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a64ee289-0298-4e40-a6b5-bb53a457f28e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "63e9637d-f202-4684-8dea-ea21291daedc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "52afb326-3ba5-4814-8686-7a32c6760953"
                        }
                      }
                    ]
                  },
                  {
                    "id": "03cce25b-cc8c-4e5c-a77e-9895c3605553",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "723a1ad8-8819-4f6f-9cfa-74576c1b0e37",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5c25ecca-7134-4746-aae6-8f62c45327b4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7ff6e20e-3ec2-42c7-8bba-d3f5e98537c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "38c36e3f-1c3d-4568-a8e1-978dd1d87c6e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ca0aa5ea-56aa-4fb1-bcad-86475d673d5d",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bebbdad1-77c7-4fed-8258-85d282d553b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e63ef70b-3e56-426d-8ea8-9baedf9329a5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "805b58d4-0051-4176-b8f7-e344feedf1a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "41f8dfa5-e9b4-4009-8cd2-10386e37390c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "91dd7148-0da2-4f77-b2ba-4576cd97676e",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4a396a66-96e0-4681-bc87-5ecade4e5f37",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4d79fedc-65aa-4a9b-b53d-df42b1852202"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b86c4633-02f5-478c-8c7e-2b657b76a03b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "ae1b6218-cec0-4398-b40b-093bcdfdb53c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "25fa4e0c-6d55-4a79-a708-a03f2d9d0420",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e0f2adf0-9378-4656-a968-500720360d43",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f07a3673-ddae-4b71-b698-ebdb4563d718"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a9f976f4-818c-4977-881e-3f04433245f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "bb341fba-dfd2-4ca6-abac-1e34bdbd495e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "79141f4e-2fad-48b2-876e-82290d23134d",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a3abc75-4b59-4590-80bf-d5ab2c9c098b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cf752ce7-7c2d-4073-900b-e6b1a2cd5f86"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a8ffed26-106d-4dcb-97b1-77c7dc9a71cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "cb4a98ad-ff5a-449c-9012-ae06b03007e9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1e90ed63-7880-4400-873d-84342f233f17",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1bb8ada8-f956-4cce-8ced-dc37c9e1b576",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "13458860-8e52-4d86-a466-434559374ba6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "928bbbf5-2b19-4918-9305-4eec5307b0b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "48bf5ffc-32d6-4495-8e33-991804571755"
                        }
                      }
                    ]
                  },
                  {
                    "id": "03fb5cdc-0d88-43cf-bc7e-b72061b6ae72",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0ac0f89c-7aac-4091-891f-e035803bd2dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5cf91321-0e69-42e2-b971-6ff03d99bd53"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f1751d8f-6334-46c5-9b5e-306dcc27c3e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "bb4403b7-3a49-4fd5-9177-e78aa72de8b0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6778fbbb-f49c-49df-b7ca-aa2aae12c7f9",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2e7df667-198a-4a9f-95cd-c89c1aaccd18",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f4a2c288-ef0d-4683-82be-66ab29bedcab"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "24d0204e-57ac-48dd-b8d9-10ae99decf9d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ba57e14b-ecd1-460a-a033-020f854e9b55"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0aeb5504-ab80-4405-af89-fce6e0775e2b",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "12c92dfe-b993-4817-a539-3ea5f3817e85",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b9fb9293-0bc9-476c-ad2f-53da7eff268f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b7d97855-d5d1-40f5-b3d8-24643dd43711",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "935e629e-3f07-4b18-8291-f3b61450b19d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "27113bcb-9081-40d6-9994-2a683dab786d",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "112bae62-6cff-4471-96fa-475cd11f52c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d2333441-de8b-4663-9863-df435c6ec472"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c2d60391-aac9-4485-a96e-59beb3040589",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "65b6ffe4-691b-452e-9c19-8be18eb921f8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "49da90f0-9b3d-488f-9ed6-01bfcd0742a8",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d63db012-3dcb-4a4a-a3f2-f8a1e19c5eca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "95f7b3d1-a0a5-44e8-845f-5347765cee31"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a5aeb604-ffd2-4475-abf5-f731ac9cea92",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5446df3f-53f0-4759-9b35-6cafe1addc9c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f9a79b71-4d52-4ca5-b951-9e0d76772706",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3ac4bcb5-a5e6-4748-9d73-856a30cc3680",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2de5fe1e-0da5-4839-a4ce-44bca0a20144"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a72245b8-bc24-4e1d-8af2-0a620e9dc415",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e9e50736-6f8a-4592-8680-c1aed9b02648"
                        }
                      }
                    ]
                  },
                  {
                    "id": "501fec52-8c05-419e-b175-f484f9433e0f",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bb52c895-1b6c-4b7b-bd9f-31efdd7c31b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7eae9925-3511-4ffd-a5df-71f512d6043f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2432399f-d2d0-40e9-92a7-0b999a06d200",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6469a14c-80eb-44c7-b421-198f7e690eee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "23d54f62-4686-4293-ace4-b7cf1df49913",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "20f89fed-19b0-4d9a-9598-4ae5484b9057",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "707b93e0-ced6-41a9-8224-0e8549bb3902"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b1c56059-1e51-4ffa-803c-66681d3c6ab2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e2609581-2a42-4a17-8ff3-127f1de21f66"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3f641c90-d73b-4826-8a0d-bca3f397386c",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf3a7504-8157-4079-93bf-f1a392d60e73",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "82fab85a-8c93-4e63-bb3d-f6002483c6ae"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bac0c41a-cf68-49a4-8308-78cfcbf8f74f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "beab95a3-55ea-430f-a86c-df2a81b85f88"
                        }
                      }
                    ]
                  },
                  {
                    "id": "00f1dcaa-7b30-4bcb-a9f5-b0af4ed64b7e",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4f7cfce3-56c6-4746-ba2b-e6e878769560",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "293e2875-4080-44d8-8419-913d7b86db92"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3714ed54-3a63-4010-b599-6c8db2f40468",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8c50ae25-bb55-4128-aab7-cc183889a720"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2d526d0e-7d8e-483b-a2db-61388134db4a",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c8cd752a-1478-4a7c-8863-a6ac61acbc66",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4af05c46-69b3-416b-be8f-82b6c101d959"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "73327a44-5fd0-4f33-b295-bd63af9bfd73",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e8a185e3-636f-414d-8bea-2af88d90d426"
                        }
                      }
                    ]
                  },
                  {
                    "id": "da1f880b-7dfb-4902-be57-391a5325e5a7",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d0522224-1291-4957-9a1f-a27d57b19bb1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c83cf734-b837-4474-b745-8fba22a36c9d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bbb05dc4-23b4-46a2-bd68-f7a644bc4cc4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "21697c83-bd4c-4365-86d1-2158f0c18e0d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f85fc67e-a167-4fe4-a6c2-75f41b4379f6",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4e143766-0797-4bbe-a7ec-1f0a8594f69c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b6432112-bb08-4299-99e3-cc2cb9865d2c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f35076cf-8ff0-4075-af67-f3633f16dbb3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d9ad6ff3-1992-4395-ae75-4942a0a31e0d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fd937959-f921-4320-a371-68c0881b7ede",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dc3e5536-b7d6-446c-b2e4-57904fab2205",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2f175615-84a1-45f4-94c8-2cb8c69d35e8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3ff91193-bfbb-43b9-98ab-a16228e40197",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "186dd21c-2784-4b90-8600-677a9fd033fe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "baa9b858-21cc-49aa-8b5d-fc3407eb4906",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b4ebdcdd-bd51-43c2-a8a0-9616687aba9e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "71db9333-a1ce-4456-b6fb-167b6d2aee7f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eec080ae-22c4-47e1-abc1-f4b5ac60b792",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d8a88b88-e255-4d76-be72-e2a4de3d160d"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "ac86f455-e090-41b5-b421-011ac5573162",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "50d1b84a-0757-4bdf-ba6f-4660c97f39cc",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a0d11f8c-426f-44a3-acbb-8540d2a5807b",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "ca670dfc-5073-4c4d-b64f-00b2abd08271"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d700aae6-ec59-4d39-b898-8e57e2b3a94f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "56767114-562b-435a-881a-81340af58a65"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "07677022-6219-431a-8326-3cbaa7748452",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "5e71b829-96a0-461f-8c0c-30e98e3b2d97"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "eca2c7c4-0cee-4ae0-a078-069aa7854eba",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "f2a223fa-93c9-4697-8b4d-046aab2f0a15"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "acfdb3c0-1fe2-4023-a06b-e89b7d367175",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "5e9077cd-d62d-4a0c-b94b-3ba05c145085"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "8832fa7a-6570-4efd-8400-c3950f68277b",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "c6a9dc30-00c9-4dfc-b213-05e4c31f07f1"
            }
          }
        ]
      },
      {
        "id": "0fb49f28-bb77-4362-b9a3-1660261cb5ad",
        "name": "Credentials - Update Status (StatusList2021)",
        "item": [
          {
            "id": "18f5b00c-6241-4614-9d4c-13e36bacd887",
            "name": "Negative Testing",
            "item": [
              {
                "id": "6741c2ad-8ed6-40bd-bf57-ca1f7a3929fd",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "b960d9e7-2bd9-413b-8bd5-4c44e5d1d412",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ad7305c0-4416-4dbe-b7ec-25d63820bb51",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "212a101c-f3e8-4e64-9743-0fcbac7d9252"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b91d7d7a-925e-4f91-bf43-2b9f738996c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "3ecca378-195e-4d20-99ab-a257e6671883"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4a6ba3df-0bf8-4b09-a793-3ec3431f986e",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8f6b5ff1-76ed-48be-ae1e-9a3cd887d316",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "155ebcc1-1c0d-42c6-90b0-f43f173341b6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3c730217-cc27-4494-b569-4803ddd3480d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "6f41baa4-e91f-4aad-9377-5136cbcf51cd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "25083eca-0db5-4a90-8e43-9a9d2cc5a6cf",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "498be3f8-6fda-4453-8a11-50fc1c06ceba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a3664e64-a704-47aa-9cc8-701aa16200ec"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bacbf6d5-58ba-471b-ab24-ed39def0f9ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "6bec978e-25c3-42a4-8821-0d1bac7d95a1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b8f9af7d-9022-4b26-b0d8-bc32bae9315b",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff3580b8-d739-4d0f-80db-5da669bab04c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ee87fb8c-4b9a-4915-84c1-607e0268290c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4f79033c-a11e-43a6-8c4a-ba9ef7d1cb93",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "37a20df3-b99a-4a83-9908-29695fa34a94"
                        }
                      }
                    ]
                  },
                  {
                    "id": "292b8f36-1e51-4f62-849e-df480d7aa25e",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "edc855d3-f6dd-42bf-b14c-a8299da07761",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "815d19c1-47f8-4640-9a2f-68246ad291f4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7590f3a9-661c-4bf0-b7b9-babf5a0071fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "ce382f82-d6b7-4c4c-97af-918a7b336cec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4b31034a-4d63-4a09-951c-3dc9561f9cc2",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fcffbc29-97da-4c06-80d1-f8269044fa6d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e160cfab-ba60-4350-99d7-b0c0f3a67169"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc224931-e2d1-4631-a5c1-6c3e8dd8deb3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "1e9da160-c515-4d4e-9900-e4488b2b8a62"
                        }
                      }
                    ]
                  },
                  {
                    "id": "610082bb-a25d-4887-8dad-5b696d0fb540",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7addd232-4b5d-4eaf-b7e8-f50bc1073284",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d7bb4f8b-7aac-4198-ad1a-e9235da30481"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a038f770-5bcd-4d04-b0aa-2aa1e4cfba74",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "8da5fedf-8edd-4c3a-9863-d9a84721b7a5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cdb92ec7-2ef3-4aa7-bf39-833e9ab11576",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "460901b4-ffe6-4387-8fd3-ed717000b01c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ca242b07-09b6-454c-a933-e9ad999bc96f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "86d5ebef-4f3b-4f79-8078-041b509f78fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "657dc87d-5edb-4eaf-9bb8-1d5d8deef910"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f078f81f-1590-4505-805c-8629f55a82cf",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "23abd032-385c-4925-9a18-fa5186316ffe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bacc1aa3-bb86-4152-9984-8fc8a3a0c667"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cc76826a-f531-4c36-bfca-e604ae38a730",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "e8417f22-94b3-4301-9ddf-5840fc1f1e3f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2c74d661-78e0-4a87-b20f-1f60a15b1912",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8fc5fd00-2702-4867-964c-5f656f8c3c32",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c76784ec-371b-42b2-905a-249bf5e13024"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6217a6c1-1b15-4251-a816-826b0eb8a93d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "0742b37f-9576-41d1-8707-40ebad25a2a1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b8cd8177-a842-4269-aeb0-d09b474bb3f5",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff1e0512-51e3-46b0-8876-31952a4d9a1a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e56b46f8-bbc4-4261-b420-37556ce76a35"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d7efd0da-5b30-41e1-b346-52e493cd0036",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "48ec71fb-fad5-4fcb-896f-d2c186550b75"
                        }
                      }
                    ]
                  },
                  {
                    "id": "74a68915-6bd2-476f-969b-95bc874b9164",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e034a6c7-8c17-4546-81da-81b9853d94ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f3de6958-b6c1-41c0-b9b6-991587daeac7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d5f83559-126e-476c-b14c-fa8b0342141d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "96e49ae0-a195-4168-96f0-a40c76f1a248"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c446cd85-d49e-4cce-a28c-dc3e68b519ad",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "03c6cfac-fc24-46f9-8b05-eb2295ac8a75",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5fb545d6-d13a-4880-bb83-d4b27b0e6c0e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed5fc6c9-8f29-460e-b9f5-8bae19c6b554",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "16975020-70b4-4778-bbd8-c8368a533ab2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3360d67e-2689-45e6-a6b1-6d53f166efa1",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b6132fab-369b-42cd-b20f-bb3f27ba6304",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5ba11c8c-c998-48ca-9dac-23d00f0864c0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "05e4ae9e-eca2-4c9a-bd22-6965bb22b089",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "793395bc-a2b4-45c4-9e93-530b8f73b9b1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fd32bf65-5e5f-43dd-ac08-820e6f9350a8",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1e8cdfac-213a-45a1-923b-eec2825291ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "13124555-8e9b-4594-9477-2d583c1e0421"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cfe6d5f8-8902-43da-9578-edeed511711f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "abc50651-c053-4c45-9112-0288aa7f8a6e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3ba65359-6bc7-49da-9e7e-8fb6995bc94c",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "55937b92-80ea-42aa-ad3e-0ef65a682205",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f5b4d7f3-7eb0-474c-be98-2c14993785e3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "14f68cc3-fd7e-4322-a5bf-f97b041478c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "d0cf5b9d-c951-4da2-92cc-30623b7027ff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7e8f6433-1176-4407-afcf-6baec1ce00cd",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6dcf8a4a-c128-474b-b5ad-9d637e937eaa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "709ecfd1-8d91-4632-8333-b4d9378fa2a9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1530a25a-1c4f-481c-b967-d9c0849713d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "82b600e1-32bc-414a-b292-18e8f1b19799"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0b906a84-5016-4131-825c-27c1e4158436",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3c082c7e-254e-4c79-ab16-3978278a37eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "36c0d885-a33c-4812-867f-5cd4278112ae"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "98380f12-2130-4b4a-aa85-bda8074b4d28",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "fd8d8039-500a-4dbb-86d7-85a3d09b1644"
                        }
                      }
                    ]
                  },
                  {
                    "id": "42c54027-cd5e-4ba0-8b23-2f491b4d67ac",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "780f62e0-eb86-46c0-9cb6-547a535ddb6f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b5750bcd-d1df-4ab3-a278-a64218a997f4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "82fa4437-0e1c-4a7d-ace6-ee02e65eb833",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "73656594-d3e1-4e12-864d-fcf3b554db5b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c3a9356e-abbe-41fc-82ba-ce6c15005a06",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d25a934-592e-49c4-a46a-30e9c806e796",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "315c79a1-7f4d-406e-8f5f-a80721ee6ce3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3fc64019-3e1c-428e-8bb8-5bd5d4ec191f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "811f1587-b789-4911-82a0-7c53e679c84c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5a32a44d-6bc3-4106-85b2-1491a71976ad",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cc9d0c36-f084-4983-9b9c-91d30bdaa704",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7777fa00-c8f4-40a3-9e9a-4638db1c1511"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "07957890-efbf-4502-918b-d5bfd3abe07a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e0f55e31-5752-46d8-aace-18b8fc75f244"
                        }
                      }
                    ]
                  },
                  {
                    "id": "020db9fa-ed5f-4b71-a5f1-c33e630ea3e9",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7c428608-b33a-48c9-8b4d-4e53f2481b78",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "732c2d1e-a936-4ae4-b6c1-b35efe2941ab"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e5d1a081-94ea-4e90-b94a-2f34d0467af1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d1ab27cf-3c06-424a-b824-48f67ea96c07"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d1a45638-f5ea-4f5a-9590-f27b1c59b343",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4ab24128-2acb-40ea-86d6-f36fefb66ded",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "277f7d4c-0e5b-4d5a-b7bc-5c480dc04c5e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "30de7108-5454-4b41-8de5-ba85b597945e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6c422f63-b6d3-412a-8f06-29af4f6a5727"
                        }
                      }
                    ]
                  },
                  {
                    "id": "12693a7c-fcc4-4707-a273-6373239a95b3",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2be0495a-c68e-4edf-b141-e02d2071c82e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "26bc1a8d-27bc-43f6-9573-2c5920886fcf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0526a891-3e09-4f00-b795-55534f632245",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ec7dffb5-5f89-421a-871b-7d9c25764143"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8fad6ab6-e1c7-4bca-9af5-332425327460",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "56a664ff-2ad3-45dd-8791-adaa20402ff6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3570b512-82df-42e6-8d58-2c693d9740fa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "960fc2d8-7a48-4ca7-ac72-1b7dabbc261d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b5832bfc-cf4a-482c-9f34-dd64e257b8c2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fcdc1638-8a29-4dfd-9f87-aac25551c9c6",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3e3908a4-e65e-416a-b357-04e40f3a1224",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1a566046-d024-4539-b39b-0aa7e789a50f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "37c7d659-f82e-4c82-a425-0fcecb724495",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b1db248b-3921-45e3-a22b-1b4bea14c2c5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5cbc3ae1-3ea4-477e-ab25-e3e937882078",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c662e7bd-bb6d-46fa-af98-ae0ee0299d85",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cbdbb61e-6716-4c09-a6d9-9e7c126d539e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f0310d1a-b06b-4c35-98ef-919f94a8b37d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9e669d64-14e2-4d86-835f-eadadc470f50"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2812ba1b-0327-453a-ba83-11afa0e1427b",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aed454b7-39cd-435e-b808-ce29303d5e74",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c291e38d-fdb8-4603-88dd-f01d68b8a421"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "daa39ef9-997c-4195-9ff1-110a326ecef1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0ff98129-20f0-404c-adb7-f00635019f54"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9d7c13ee-b11f-406a-9b3a-7706a8e2f67b",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "befd2b5e-27cf-4c53-a668-09a3cff46447",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "73b7da53-b78a-4415-84a8-3265da051a84"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "437a76aa-61cc-4bd5-9823-c3d4ca8d374c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1b8faaa2-f6e6-404f-b1d0-cb08f7f2649c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a3be3db6-0729-41b1-8e13-2245e83fac05",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a2081012-a694-4042-ab44-ed7f011b78fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "713d5c3d-a106-4060-9dbd-0ca22501e80a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "10c5cec2-2679-4359-8ade-9fbf56f59e4c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6f14038c-3c91-4ebc-ad77-a00660f9eb25"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a26591a3-315c-44a4-8780-956b6ed49162",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cfe9fd1f-acb5-49e3-89f2-f5f5ea467e05",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "60186a39-3a92-43c7-bc34-f784c7e6dbfd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e6e70502-7fbe-4256-942c-8308be0fbce5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f3574701-2265-4402-9d96-a8c0af3ecb7e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c3d8a13d-b4d2-4c5b-adfd-ebbbfeeb6d90",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ab4635cf-cef3-4167-964b-2359d85834b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8cc578a1-96b4-4328-b815-045a4d409503"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cfe10598-965b-4934-a645-3256358be6a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c20cf2bf-2953-4aef-98f4-a9dcee893b3e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5d37a425-4472-4ee9-8977-31fde8af3cce",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "260864c0-fd53-453b-b249-a92429de8945",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7a9f6eb5-a9a1-4da1-871c-c94272bd723a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cfc064f3-1a36-4e48-a541-9c8895428dad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "93c2a8aa-dbb3-4eae-a5b3-613d22fd6d6c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ba09faca-7229-47d7-aeea-296b0d88e229",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a480573e-9bfa-47e9-ae67-e935c42d111f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ce3375a0-e4b6-4f87-853c-bc7a1c3a84bd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "22422e06-8963-4a54-a672-a0df8fb64ecc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0194ea42-1e69-45d5-9546-5a56e618e2c4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d23c6a36-fbeb-4fb3-9baf-d72086783592",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "628af898-0854-4f79-9047-b42814d7c8b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "15a07353-4bf8-4d8a-b381-a27b2957de4c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "77b93916-1d14-4a28-96d7-7b9495090d20",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "361f3a85-f238-444d-bf3c-3989bad7d6bb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f3fdee44-995c-43f0-bf24-0ab5fce15fef",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8baff04d-ed17-439d-9a62-5d26af19f723",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8f4e4e00-ad8d-4864-b479-0a377230d499"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8f957b49-ba42-4a53-9633-bed2ad09bd28",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "15516cde-9620-416b-b0b7-90a899267d4e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b5715b1b-5225-4c8e-9541-f883646bfe1d",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c9879001-d59f-4b5d-b346-da9bc1cc18f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "112c3d42-6b82-4a75-a36d-3237b9746a9c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "07ab2aa5-abd4-4467-8925-01279a0f428c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ca02ee73-2c3a-44bf-9fd6-8e321a6f5820"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "2f316b2a-10b1-4c1e-84f1-f4eed7ba196b",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "4bdeb14a-d312-4502-955b-fbc9bc948e18",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4d46e113-0268-4b72-8bf4-bd9af7c35274",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "ba07fa2e-389d-42d3-aa97-3a6d000a461e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5e4eb6c8-e6e2-400a-9fe7-ef02bf616ec9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "e1962ae7-4e53-4345-80c5-aee5105b63c5"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "318664d8-488b-482a-8baa-1c82f1f12755",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "ce44db95-57c4-4999-8703-11f9a13ea175"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "5f2b3788-44f3-493a-bdba-f3841fbc9996",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e229e534-25dc-4903-b784-30255bd0000f"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "5479bd06-ea00-4fe6-bdfa-0f7020dcda14",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "1c0092cf-5010-4fe8-b8bf-ddfb09f082c0"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "5d344a09-dce5-4401-bf8a-10960ab3460b",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "4103033a-4a58-4d66-818a-2c89e2040c48"
            }
          }
        ]
      },
      {
        "id": "3c388b14-ad1a-4dc5-a3ce-c73355c8387f",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "cb7cf569-f005-4464-bd5a-fba993440fd6",
            "name": "Negative Testing",
            "item": [
              {
                "id": "7e69a399-b594-4372-af64-ebf7234da4f5",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "f7e429be-7248-410e-86ad-c74b1b43bb59",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8b4efade-ed8d-4701-9f6a-a1ead6bab2b7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b1689267-a534-43c1-9867-d0bb90b29339"
                        }
                      }
                    ]
                  },
                  {
                    "id": "582afa09-b1e5-462a-9134-c61d45810029",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a7f6cb3a-cacd-4e30-aeab-8a85b2c6d5d6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "509b3b6c-00f1-48a2-a3ae-6f9e79e9e1d9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2824af2d-9e34-4d31-b347-ae14a7eed168",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f21266ef-4c3b-48ac-a7e4-3d24f79a498d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ca549add-1342-4518-858c-a300db005702"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6c0073b6-e2af-455e-baa1-4af2c9ad6b53",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "49e6f304-c781-4b14-b3d6-4e5bcba31d77",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4a7f63dd-8c7f-4376-b4dd-98d6a5245ff7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "892b706f-f5c9-4554-8b7d-b869bd823dc5",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d10b7b40-1809-47f2-9934-1a49574364f0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "788f2b9e-1fc2-414c-9a77-fa290c17218c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "13cb7365-d9d7-44f2-89bf-73bdc7f160e6",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d239ea5-a26a-4442-bafd-bbbc0f7e22f0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "62ecb44c-924b-403e-ad3c-9849eacfe469"
                        }
                      }
                    ]
                  },
                  {
                    "id": "24bfd1fa-6f95-4672-9eaf-a0a4a72a75fa",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c31dfaeb-ce61-4b80-9698-3bf5ace4f4fb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c56b31c1-2a24-47d7-91ac-dc047df55dfe"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "85e1d08a-caa3-4f8a-b5d5-8f6305315b81",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "de1fcad4-5b74-4ed7-a8e8-ea871dcc8cbb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d58e926d-cbfd-40ba-94d2-df90c6d17448",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a369b8a3-f3d6-446e-9894-9222abc857d7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4917f590-5c75-4a8b-b2b9-d586175191a5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "31e7633d-2a93-4e82-a737-3f43fed7d1f2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "06898734-9d12-462f-9a9a-7a10ac203380"
                        }
                      }
                    ]
                  },
                  {
                    "id": "73514175-884c-4c14-80b2-49b867429a7f",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "13cee18d-5f48-40a0-838b-acb73d6403dd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "99e52d07-5251-4e2f-8091-ffc0781d7832"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bb639513-30df-4d92-9581-5c315b30c3b2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "17586127-7060-4b3a-b1ce-fd3e8613d64d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "edc60ec3-ce3b-4d73-bd45-078dc9c2be14",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a9b0c9dd-4b2f-4900-98a4-3d45cb2183b5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "66370782-9738-46a2-b617-c7023e1dbcf9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1fe203f3-6a42-4a87-a60f-ae89b83c185f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4c288ed7-005f-48f5-a3c9-99f39496ad21"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1c485a62-bd67-40bb-9122-da25674cbd63",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5c4f8d80-d285-45db-b1c5-93f3ef3fc60b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ea6dcaae-63bf-46f1-941f-99b0f8901f8e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "71938f71-51eb-4a42-b54e-238f34031f71",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f570b4d7-85cd-4a02-b751-92af144a1cae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "889c8376-4d43-4bc5-a937-d651f3541594",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a2bb6166-79c1-4716-9125-74eebdd47468",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e72a6ced-052c-4aff-9019-9e35aba18550"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "431ac28c-14fc-4c96-969c-b9b4945821e4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f53e00b7-cf1c-48eb-a04a-f9ce40070eeb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0d5a7e27-ae34-4e98-871f-a6f39d9b2c38",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "99a0b9dc-6618-41de-8fba-f3257e1e15d8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c53de68c-d74d-4911-9ebf-d733a7928575"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8eb15b2b-07df-4a3d-9a76-47e6f4f29bf6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "61ec5788-97d3-48bf-b2ac-a64bb3213fb6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f61752d8-5cf8-4a74-80e0-9e721acc453e",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0e6275fc-1417-4d6b-a774-f405151b783d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "278d59b4-0fb6-4445-b7d9-3e385b6888ba"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c42c7708-b791-4e1c-a0de-5139031a70ef",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "229445a6-065e-464f-b5ee-334f88c39c50"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4fa93868-db9a-4df4-ac82-14c230073d58",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9d280b85-2a69-46a5-b800-7341e9c2c8c6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1d7b1398-58e2-4725-80b2-2bd71c94ed7f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dc442ded-6bd0-4aa9-a561-e383decf1f8d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "54472028-7213-4a6d-91fd-adcdd6e28af4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fcb14ea8-749e-4680-bcc9-50f18139c5bf",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "99719e90-795c-49c3-b208-dbfdd3025ed2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4c7ec76b-4665-4467-bd01-e88471cfc24a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3edc9a0f-3346-4fe0-857d-9cd3a7d0e27d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3a7608e4-4567-4976-87c2-5755020d013c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d69d9d58-af15-4def-ae31-398e012535c8",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bea5ac8a-8a26-4942-9b2f-b6a9594d29e7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3bbc1ea7-4806-40d0-a71e-ca476a70d4e0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a178ba72-ec9d-4e18-933d-0c0e25df8db3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fe04f871-d9a7-4b52-9d2b-105d88b2b8ed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "61070254-6a3b-4ccf-8232-e1eb97d7596c",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "36b4f594-5bc4-4181-bb97-1755fad7e7d8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2b26a8ff-125d-4f66-9d9e-5b88717fc15e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ab1af3d8-35c2-4a63-81f4-130c88605214",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b447889f-647a-4e63-a93d-5c9785b5db6a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0175e403-f97a-43ab-8f7d-558e0709b54e",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3079e1a9-0098-4a32-a670-35c15f5db8bf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d032c75a-f70a-439a-b645-ffac9e0f4294"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "943b9035-1cbf-42ee-914b-5c72a7af3fd2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4b9a6976-bd7e-4bfa-b56e-f9beec98a3c0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7382ea66-2b62-4cc1-b601-a11ac9485b32",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f5aeacd7-80af-4219-94f8-759a84c111c6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "867427cb-4704-4669-98aa-bb48d82e24bf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "03bd1b61-4ac1-47e5-8f48-293decffbbe3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e2ff3102-4991-4664-8276-7dd2d4f991e3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "396bd29a-95d0-49e0-9537-ace0cb8a836e",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cee9f0d9-b97e-418a-8962-cbdafe3252cb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "898d6536-364d-4437-b205-7e810d6d25f9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "96155ef5-8b40-46a0-9e86-fcd7be08ca47",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fe11629e-505b-4dd3-9e54-53a84215d0cf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "503093e5-9e28-4b3f-b3c2-35d5211178b3",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "859fba9e-a4c9-4c2e-934a-a53f719cb3fc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "25cfc5ed-2414-4178-976d-ed5ad655e208"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d0f02fb9-ae37-489f-a457-f5b45682f046",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "63e1dcb4-c77d-4269-887b-62dfa91a9a09"
                        }
                      }
                    ]
                  },
                  {
                    "id": "980d1816-0115-4493-a736-9788e5a1ac2d",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bc241801-83ae-4d47-b1e2-c73ace64821a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c449340a-c807-4c86-a210-31d3bdc242ae"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8c535e24-c97b-43c8-9d5a-639bb1e47a62",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1e18164b-2a36-47c5-bfc6-18342173f978"
                        }
                      }
                    ]
                  },
                  {
                    "id": "415da7b6-4588-42e8-bdf8-de279329a70b",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "38f4b200-d722-4789-9d29-b45880847124",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e7dc436b-06b7-42a3-aabd-3e16598202df"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f5ad13cd-cdf9-47ff-80b8-58040d716d6e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a99a3510-3d22-475e-adf8-b2bd6c98d041"
                        }
                      }
                    ]
                  },
                  {
                    "id": "46a503cc-eeb1-462e-99c0-29c9d42c4202",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "feed067f-12fb-4ad1-a9f7-6a80cabf51eb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0740ba75-96c7-4f1b-ad9c-e868648bc327"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c4290707-608a-4c9e-a096-112e20938c10",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "baf1746e-46da-4cbd-b93c-a9802b1ae96e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "22a20f1b-f72b-4407-9042-02e82884927b",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d7d353f9-2b74-40f2-84bd-94112c120f43",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a08d771f-2325-4510-b548-5993d65c70fc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf441033-248e-40b4-bc44-894836c18754",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c907ebb0-fd85-487b-91d4-700330f7df83"
                        }
                      }
                    ]
                  },
                  {
                    "id": "92530453-754a-4ddb-a2f6-347f7727baa9",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "69518a64-deb6-41d7-a702-2944c27b5d82",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "eae97f6b-399d-4760-960a-c57f8a2c7e70"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ad6a4f1d-cd30-477c-8d3b-ca6d5e6410ce",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1c429b6c-caa6-4fa5-b80d-06a1c2c285d4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ad85a29d-48de-4fb9-89fa-6e069161bf8c",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9b9d6bd5-ee7f-46fe-8b3d-a772f760bd3a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f464da76-61d5-4adb-99e3-5f75d9bc229b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "44cdf012-9620-4fb6-995c-e959c987b40d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d1f406ea-a40e-4da7-8576-9dbfce790262"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7624737c-a608-4020-9b70-61069bea789a",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "638ff8af-fc87-4cf1-8e06-d7e438a7280b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ae30dfd7-f76d-4bac-ba41-f0fd6cc6748e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a8341fa1-4568-4e6f-ba70-f4c4e3069aa4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d0b7000c-9f4d-46ca-ba2e-4610fe4bf175"
                        }
                      }
                    ]
                  },
                  {
                    "id": "56e2e9c3-ba53-44a1-ab06-3c769836c561",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4127c531-5ac2-4c2f-b5df-d22ee0346dad",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ae6860dd-417b-46e6-915f-0bb4d875ccaf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d347c444-3abe-49a9-bf51-56ce80e7727b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "42490371-d603-4ca3-8b7d-0cdda2a6b56f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "55396e5f-ab84-455c-9d0b-fb75d9f1e22c",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9300abae-ab0b-4c79-b977-aac06bdbe703",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f4768c94-cd87-49e7-a183-cff2e6aa1d48"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b0e0f06c-c364-4a84-a69c-2c3c7ed365ca",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "68b0ec31-012a-459d-b485-50c3b5843af0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a2df4760-53e0-44b4-a266-d367c40f4964",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2ab7d941-63a3-48af-9faf-295157f8a609",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "eebdff8c-fcdd-4d5d-9c86-51f69d2d580f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "62c28e53-5852-4bfe-8bfd-8cf79cdb808e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2a64091d-23ca-4315-b640-88e156a5dadf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f86a1bfd-b73f-44fd-b6fe-e89ed6a49275",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3678b4a9-343c-4272-a1c0-5c037c36543d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "629f7ee6-957f-4bfa-9632-d8d34a8bca59"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1a8ff738-da81-4bb4-ae5a-ce6382e2783b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8a38896c-f147-4518-88a2-e8747fa467cf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5b2e4f28-823a-4ac1-8665-9a2dee904602",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5bd59ca2-d832-48d9-b849-a35bf8189e56",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "dcf7d949-c308-47b5-abde-dcb06799c603"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5ed330a1-d9a9-4cc8-8ad8-aee097a56765",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e0ae5188-b333-428a-be4d-6853174b43ad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3062bf70-dd2e-4865-b016-4b523be69f55",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a8048540-3ab1-4504-88e5-8d7e6e21a9f5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f5bd2658-d8ab-473e-8e5f-afe0de50a18a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b6e32d8b-5e60-497a-8282-e8efb59cd22f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2f57cb42-53e6-4e77-a66b-05251fd28f31"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e65c2859-6d32-4e67-aa39-28a772c2cc53",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4df468b8-1f94-4473-8dec-63b7f5cfa5c3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fd9dca1f-27ca-4ea1-980c-8a8ae77365a4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6744197e-6f55-4cc0-80a6-c445c76f6b00",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "59ca49a8-27fe-433b-93a5-2b093bd5a6b6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "54ecb40e-df1a-43ad-851a-3760f3c3fe79",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "160fa2cd-a66a-4a5b-afcc-5915455a2d3a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e154b7ef-7607-4188-8167-1f203a8198a4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "de3c7fdb-3adb-4e7d-b1c5-cc7a0c306dc8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e84def27-6db7-4ee4-88b7-0e1e0b571adc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "81eddebf-769c-486f-a596-59d8b900689c",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "941de8d2-aaba-4078-9a75-b3f56c5e30bb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0a0bc739-3abd-4503-b212-2ddfc7562e87"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2a1c842e-1b49-46bf-9044-e7a969d813ac",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eb218cbc-769e-4841-8eae-9cc845d956d8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "83e43749-9dfd-490c-a6ec-159189d56d0e",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1f1911ef-4749-4125-ad16-cf7678dd627e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "47be1334-3b89-4485-abed-2a82481fbe87"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9e5d0090-cf76-4239-a416-d774edd39632",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b7c03cfc-75b6-4fcd-9126-706c9b673b93"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a9fcfaf1-9ceb-47ee-ad32-98e36e844a06",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eaccd23b-afa4-40ef-90c4-3779c6ca176f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "621a28c4-2757-4e25-8ae3-db7d77eda589"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2a321ad5-6430-48ae-a6a3-c2baba080e75",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a6b4ba21-41de-4c24-ba32-5703a9758b35"
                        }
                      }
                    ]
                  },
                  {
                    "id": "616930eb-e702-489a-ba81-efd82266aee4",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9f451743-3fcd-4fa6-b8d9-f4758afa027c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "82289989-12f7-4745-b7c1-bc81d65357ed"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3176da68-3302-4aaa-95bc-85b700babac6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3089faf4-f673-46f8-b16f-96341679a098"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7ec5cfa9-cb67-4fe3-9b51-521bdcbbc8e7",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9409c841-d654-4945-abc9-60a5a59e923d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5c21c730-3720-43e5-9734-59e8c67b5276"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0ae698d1-c6f1-4850-acc6-a090dbd7d694",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "52c9bd80-df30-456e-aa3a-255b4a09f89c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f323e426-3cce-46ba-9b81-be01276b1697",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c48bfa27-64ff-4603-b27b-66383e2289c2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0c802267-a95b-4ae5-b56e-179bde2e85ee"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3144d561-9de6-4c7a-89f6-0a11627f68aa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f726f274-2fdf-4721-92bf-2e3aa2d79c3a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4c382c76-c085-439d-8b96-aeabeeac3ad7",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c4d59a33-52dc-452b-bad2-f3e03d638bef",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a21f70cd-cc52-4283-a2fb-bde87df49805"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "154ef212-df17-4e3d-be0d-38d415a2967c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cc04ee14-ad02-4980-acac-77e800832e8a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "60954c97-294c-4511-9525-58b4a054795c",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fabd75c7-8d57-4a01-bff2-8d6b0e66f483",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f72d102f-a060-4557-9bc9-d78d454a3857"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9589e13f-1af9-44c9-bcec-d440af39ed86",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "23097f4b-8251-4146-b554-63f1faf194f9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "636e1dae-c88a-42bb-9475-2204da597935",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c6dd3f16-6cb6-45a9-895b-f05f0a3c43c3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c6048a8e-ecb7-4b8f-bc62-f2c05e270f91"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "35ef5b1a-b159-4f5d-a6a1-3538eeb59fd4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "38ce1f0c-4e3c-430d-95e8-e51abd1d7f27"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0562d8bc-18c4-4631-bdd0-9350976d32fc",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4631be2b-c6d3-48b3-bc7b-59908d0e9064",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7d8b4920-912d-40c0-b03d-26268b444da8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1e5e6df0-3419-4ad8-9529-67fd77b1fb5e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5560643f-898c-489e-a926-49f7bdd62ac9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b7c45385-ca82-47cf-9bb1-de503ac9576a",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ce355a9b-fd8b-46a8-b1f0-4091d111cf59",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d9e7f748-747b-42a3-aed4-2fe258e20c64"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d7d23f99-493f-432a-a37f-cdb61d539037",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bcd3d918-5831-44e7-bce9-6084765d8db6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "66515cd5-fc7a-4dde-95ef-77736a0d69bd",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c43ac600-b377-4af6-a28e-e4e9616533ab",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6e5ad69b-7a76-4db3-a3ab-efbc3787fadc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "37558e4b-d13f-433f-a28e-ce58d5a10662",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "33da3993-b533-4538-98a3-636e34d8b410"
                        }
                      }
                    ]
                  },
                  {
                    "id": "11d57b2f-25bc-4a61-aede-354ff1ab65a9",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8726ac0a-42b5-4912-b0c4-014d8e5a43a4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e2938a5b-fd6f-491f-8bc4-c9ad0a37ac6f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "13b32e08-3368-49df-aa55-63cba73d2971",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "24184f8e-40b1-4a63-947b-b6c06b84865d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f2d1ace6-b2cc-421a-87a1-85725cae1864",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "09e9b4c0-f353-4ff0-95fd-59c5600f9d32",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6d21f0ff-9986-4762-a4e5-77ac4ca9cde1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "18da4e94-a1dc-45d2-bc11-65bebdf0014e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bcc0ad41-1c6d-4919-9304-4c00586b04eb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1541353f-5dd1-47f8-ba00-1b15da011bcc",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "37308549-6ca2-4e49-8455-48089376c923",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a3736132-bf70-4562-8aa9-e95b90d91ce8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8347311a-32e8-405e-bfb9-c35667f8b5a8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9c921787-043c-4ac4-bcf5-baf6dc7b7586"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5670d0d4-e843-407d-833c-09251801426e",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8e3584c3-744a-47e6-b063-28de61ec7a40",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f1b1c080-24f9-49a3-8c70-c4c422573be7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0b68dcc9-1fe4-43d6-a2c6-3784160ea86a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0c5043ab-dc80-4bbe-a6af-bef8b557a3fe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "854f4be5-325d-453c-842a-1f7b70ab6dc4",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3db078c2-d50e-4f3b-bd79-18c87ad1b1d8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c0cb50b0-37f5-4bf9-8dfe-623e9daa2b90"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ce63ed17-003b-4c1f-a907-9f9c45089d7d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a55eb208-b8fe-4368-af87-a400850dabff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "78bf2f4b-3299-4c3d-a1fd-be28a48eb034",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ad44e8bc-91d1-45bd-a5a7-92383b9b155c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "72bf356d-cc9f-4620-aaf6-b4ed0fbb8ab0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1db73fb6-dba8-46e4-b934-caa885e5ed97",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ba0cf91e-fd8f-4fd8-8789-3b1b952bcafc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6ac1c55f-b826-437f-b69c-ddae67b9ada5",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6719e178-1e37-473f-b909-15dfdd22d797",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7f462795-c1ad-4b98-b5e8-1cd8b014b039"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "db9ee070-99d9-49be-80eb-1769c8366d1b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "22835cff-861d-4e5a-9c26-2aeb8fb34cfc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b9fbb36a-ef06-4c9b-b872-7708efc50d0f",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "10ee00b6-2e90-4424-a8ff-6efd4bef8db1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1c119d8b-743a-4aef-8d3f-c2caf49adf86"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b5d936b2-c867-4c24-a442-3b92524e62bf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3b745ebf-f26c-4d2c-bee3-954e4286bf00"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3404c0e6-fa98-4a27-88b8-5be6a050d0f9",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "db004244-ac97-434a-b5f0-99d9b8601c1f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b095f565-8004-4a96-a5fc-c3354c52ebd1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9b4affc7-0c5b-4dd7-a5d1-72579d2262ce",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a6b7b368-4e36-4ddc-87ed-85e1c1160a34"
                        }
                      }
                    ]
                  },
                  {
                    "id": "097a6434-0064-4943-a09f-2c0b8a98d999",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "50e58947-269a-4568-bb01-79a1aacae4b5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9d3f533f-fbe1-4bb7-8413-99673fa0ffc1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0373969d-e232-4b6e-b954-8fd04367d085",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d32fc51b-fa7c-4b70-8df2-262ced611ffe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7f8b434f-9e6b-4222-9c5e-8cf6ae04427f",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5d147c9b-ebc6-4bd1-9e6f-bc30d707d4ea",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "30d82a75-9a5b-4081-bead-946e26c0c860"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1cb6c16a-7525-490c-957d-d3ded705c240",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6200dd8d-9706-494c-8776-16dec8ed84fa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bfce2e02-3e40-40a7-9cba-376a5a968307",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3a5b857a-076c-4d64-bfd2-655b86aec3a5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "413dc5a2-97cc-43fb-9b94-10fd1e8644d7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "48a9cde7-0d48-4740-97b3-af670ae957af",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e776c4ba-0067-4f30-888e-20464f889a08"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ed034e9e-19c9-4190-a402-b80c142384f6",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d1411260-83ef-43ec-9557-8f77e997d193",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3515f44a-57b1-4cca-b92c-53929d933f49"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "021d6733-99bc-4612-8497-22a9d2cf584e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e377f3d6-f7f9-4b44-b473-b60ac0c8bea7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7f8390f8-40e6-4d20-9195-c1c2e386b627",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "163670af-6ebf-4b82-94ff-600fe2737762",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "46f0ef09-b85b-4ef3-9fe0-18a8490742e0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1985c4ca-705b-4c38-805b-f88f608a2192",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9cfde4e5-078e-4c51-9c32-b3729a661dc3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "88846cab-10b7-471a-8de4-8b5fb7709dba",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc68c307-1653-4c00-9399-a93f7e76108b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "54c900cd-d08d-44ee-81dd-c9de43ab5232"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0789c20a-a66e-4241-990d-40ca7da8c335",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "950337d0-fdc5-475e-97b4-5ff69c5fc0c5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "272834e2-956a-42a2-be7a-2be44b7f618a",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "12917737-d091-4e66-8c9e-15f8d35d8879",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "60bb3c0d-6558-4e6d-b892-f4f65de1b207"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f23817c1-fd47-47fb-9bd2-563ae8521032",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "37680056-6894-447f-8591-7d602ba9bbca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "83203648-d29b-4cda-ba3f-f86bf66c90a3",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5c485e30-7785-409a-ae12-fbc9b4d51050",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bcb0efc3-4654-451f-be20-145e00df2a4d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "abb896db-9564-4b97-825c-7cc5def4d472",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "62271f0a-21c0-456c-8ae3-3cf249d774f4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ec6beb94-1b5d-4aa7-8221-93787dbed49e",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fbe23ac5-cf81-415c-8d52-533f17b8e936",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bcefa059-9b80-4364-ad6e-561cf5758f0a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "aec420c9-b059-4afe-a30b-2649813ef6d9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a3152c6c-72ea-421f-9f75-3717ef35dcd2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5d4594d0-826b-42c0-9095-fbcbe8afa17a",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c7bcc7f2-d656-4e86-aaf0-121972625f08",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8df2426a-da38-46ab-8c2d-b759ff3cf7e1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f1aad689-5f42-4584-800c-5d1083f3f8c5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "31eca008-47a2-4d45-9429-5d0ba8c59b64"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d9a0641c-d43d-4b80-881c-b53cc00aa319",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8a63ee6f-d919-4b25-bb49-fe8128880114",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "af474e3c-543c-4463-87b8-59c0cb4afd8c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c4ef86c6-9927-468d-b7ec-d3da9c870981",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "87fa1f02-6780-470e-83a6-7300c2fac346"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b095ed0d-3060-4fd5-b3db-234adb581603",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "31c4bf68-2765-4eac-8c1c-e9f5323bc42e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f0532024-37cc-49fd-be8c-013e84cee9f3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ae35b08a-695a-484f-9324-8d9c3cf7cf60",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "19546e8c-119d-476d-b157-ccdce4667a53"
                        }
                      }
                    ]
                  },
                  {
                    "id": "36d3c205-5a92-4d2c-9241-5bc47a08f649",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cf505b19-0b3c-4ebe-9131-37e50038f3a6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fbd056df-4492-4117-aaa5-03324f4665c5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "507ca56c-3a08-4e10-906e-b8ccf7521b10",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "04107f0d-6fb1-45c2-9074-5c1a0a83356e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "77b30f49-d291-411e-9c1c-38c24d212749",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f3b4ce67-9e46-4234-a131-eb48709ad6e2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7c94fc77-decb-44a4-bc5a-62bf92b4c2a4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6ec1ccc4-2f57-43e4-bd19-9f46899466ae",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8adaa767-f00e-4245-8b24-763e32ddca36"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e3c2de7a-f390-42f0-8b5c-024a05ea5b64",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "05381061-0674-47aa-96f0-2673cf4bf45c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "911a60e0-b262-4b2a-bb3c-0c91d4a7b559"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cb3106e2-eb4d-48ed-b3df-90b8b7b2b304",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "58ca327f-60f4-4c75-a3b9-7c62715ded9e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8557408b-9a27-4b81-a092-3e0e762ce88c",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0fd0f0cb-3026-4d8b-8b1e-ba0fec40d7da",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5cc9e1b9-13be-427a-9373-4b3fbf244459"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ebcf5390-feac-46df-ae20-257986b1d98a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "491b2a7e-6897-47e1-b4c0-cff7b103cf00"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a9fc12af-9c05-42cb-ba8d-be869675c34a",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "566ad273-bc48-4748-aa41-ee7e513240bd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b406c706-d058-47da-838e-e233a9544320"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7ae04723-6ef3-48e9-90a6-f8d4ff5fdfb7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f8596978-189c-4407-9738-5a634114831f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "161a71b1-1a35-4495-8896-022d9a78a678",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "631d092d-8b0f-470c-b9c0-13b3c2cf6d17",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "aaaa8a7e-ba5a-4a41-bc29-a1f5c75c91c9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0cf495bd-63d1-455f-bfaf-a39879bd3bb1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "638da5e1-e879-4ab8-9ff5-19f419039c33"
                        }
                      }
                    ]
                  },
                  {
                    "id": "27804a1a-3f86-4e46-a9f0-ad23ab6ea3ee",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aff5e26a-091b-40ca-9186-b1a51944433a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "41df5db9-6f87-4532-aaf3-91ea69fa80bd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "867009b7-4575-411c-9ee7-6ac065cce5a1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "442b7782-dc1c-467e-a5f2-a2cb50da2413"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bacb937b-328f-471b-a7b0-c64847b4c30a",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed376eda-4acf-4c44-b101-b9059991d835",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "94cdb116-7edd-43fe-afd2-a13dfdce6ccb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "39feb61f-2640-4254-b877-6c0925c14d86",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c0e24d7c-a74e-4c32-823b-c8e14427ac1c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b356f746-dcd5-48bf-bf6a-de93b618c060",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1f8967f2-9cd0-4d02-a52e-6a89b5e6210b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ded9a392-d0c8-4b52-8d2d-8ce9cbbb3fde"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8a14915c-d52a-4a0f-b00b-3eee7889f12f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8c28802a-79ce-44ff-805c-0789b8707e6d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "48673864-a196-400f-a664-7c04aca821e0",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "67b44eed-71d2-4011-bdc9-13d7c68d25af",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6ac47113-c553-49c0-a70e-23fd309344df"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "25ee5e2f-7220-4c78-ac70-98c9132aa5cc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "97e67ecf-b874-4df9-b56c-5255267a14e2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ab7ae859-a291-4e59-b126-ffdf3a144895",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6b8e912c-da74-43b1-a167-80aa24bce6aa",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "90dc96a6-6722-4d22-9647-0c08c89151b9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a837b548-d765-48cc-9fde-6ba726a62180",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5da6cd2c-b5d3-444b-8710-49685cc9e828"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0caa06c3-c72f-4ddd-9395-345df6863328",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "db2689fe-428a-4232-83d0-4aa17240f0f9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b9d7772b-7af7-46b2-ac5a-92b842cbbfbe"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "baa7ea95-8b1e-4ea8-9e56-508829514512",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "14567000-d97f-4fb2-b594-54e1b35c5090"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1a84d801-9322-4a75-b74d-29d1281aad68",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "173063cf-ee1c-449f-9d7e-e20d40761c14",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "41a1b00b-7a5f-457f-a799-5d51211a96d0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "af3fd55c-c8dd-4e47-8d3d-f2f9691102f5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1b4acf64-1126-43d7-8c69-666e5c5c0b34"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e323f653-df9a-4fbe-b164-afaa837e34ff",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "07f6c805-0b5c-414a-85ef-0f1fc7259d94",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0c9ee102-7bdc-45b8-b69c-97cb76e5b40f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d5852918-7eff-4089-90fc-50ecdb551c69",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "05aaf014-d67a-4ef8-9fba-b0f3f77def46"
                        }
                      }
                    ]
                  },
                  {
                    "id": "06526272-e8d9-4309-bc4c-c37de572df84",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "36ca2a4e-4523-413b-a5de-0ab35b545348",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b7bc4c27-8c55-48d2-896e-bbb44fa11dda"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bd23b38f-b514-4b7a-bcfb-7c246cc54984",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1d634efe-68a8-4942-83a7-14bc9dfde607"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f7116ea8-946d-4499-afa1-1c8aaddd8525",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4f97d146-51b7-458c-ac9d-85873be3cc45",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a7099114-f9fa-4f3b-93fd-cb7519c604c1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3bf8f3e1-2b93-4ea0-a295-b3a04ddb65e8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "41b456fb-a0a9-4085-a049-cbb521d7f79e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3e0cda39-420c-4399-9f72-04027d2b7208",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ddd51c2a-0ed7-4e64-a108-922f6397c369",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9c60123b-956d-4012-8200-4669885a0874"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "727f4f00-4dc7-40ff-884b-3b35e9a7013d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bc82f713-252e-43e4-84f2-5d2537b568b5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "99494040-6241-4454-bce9-5f95ae1501ee",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "96d062ea-2bbc-4290-99ea-382b58de78cb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "38a1bc80-f1b7-437b-bebf-34b1aec4903d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "aef143de-744a-4ac0-9755-2633a664bd77",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7f4d88a2-4a4c-4b59-af9a-3aae1c01bed0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "97892e7f-db48-4ea9-be03-7a4abbc63543",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "86e5c67f-684c-4ee4-b985-0876fecacf62",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "dd5dda62-6b58-4a5c-9c5e-76fdf330c4ae"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "89089eb2-1fcb-4381-aabe-6d73dc0e85fe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4584bb3b-4a40-44ed-85ae-bc98384acd09"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0ae3aaa1-6071-4bb8-9c61-690cdb5bb704",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8de53b9b-ae7a-468d-9c5b-4a9433d48a9d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1b0f978b-4fdf-4831-92f2-d0731bbd0a69"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff172886-18e3-440d-a6e3-e01d1cb95fc4",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1d61fcf3-3914-4aa8-9449-7da443a82621"
                        }
                      }
                    ]
                  },
                  {
                    "id": "96215326-2893-4509-aad1-58f8fd920810",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "352e0f33-edce-400a-9a6d-9f6dcec6b7ed",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "954fe9e5-3798-4972-b65b-82bbfe9d6df6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6953b15d-0cc8-4d24-96e3-6e5ea525c1cf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "79675caf-7c88-493d-a932-13c5484a2f24"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dfa8f15b-b8c7-4fc3-8c49-18eabf2f15fa",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "468f06f9-d883-4945-a50c-4e9303f8aec2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "37e02c14-d73e-44a7-99fb-82e44ba5bf12"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a1fc2fec-6289-48d9-9a1a-cd1c18127261",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3884f9bf-d50f-4234-a0e6-f5551330259d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2f5cbab1-7019-434a-82bc-7c9835363c14",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "612824d1-e2bb-458f-b313-623e60c1e8c9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e3826739-479c-4600-9bb1-91fafa074e3b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "984124ba-c7aa-4389-9c98-0ee8bb7e7106",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a535458e-f200-4921-84bd-8dc626257ff2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b1aafb77-cd5d-4d33-bbfc-9732c50c7e12",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "79e8c8a2-8aec-4447-b453-d66715631499",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b670d187-80bc-4c87-a87f-625909cc73f0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4e613026-c29f-445d-971f-0d92756fff98",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fa198ff0-6f9e-403e-bd19-d68eb904b969"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5c2bee1a-43c0-40d8-bc64-63a953a4db22",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3057db25-eff7-490c-b1cf-4fbcc44e6590",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1ef4bb4d-7fb8-49fc-8893-05c1fdc05be8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "055f27d4-180e-4477-a6ea-7114adf2d6d5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0cfb1951-352b-4f70-ac15-bbaea1eb513d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fa4941db-2c27-4986-bdc0-17a7d6ca7246",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d5f913b9-26ba-4bb6-bd6e-b3ef8405c172",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7c249ccf-7d1f-4eb7-974a-43aed40ccd20"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2993273d-665c-47a8-81a7-eb95a592bdb8",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b525828a-713a-4f3a-aa19-7fe83d1b7a8a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "307a9dae-13a9-4263-a238-31e2d64c25f5",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "87a18be7-270e-4354-b43d-a333c68cbf2b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "44b5ff5c-beaf-40a2-9bd8-f7ef4dd4e52d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "05dea649-fc3f-4ec2-8f99-6965c1a41ed1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8af72f2e-ea31-4ef6-8bfb-531f3f55997d"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "f7270188-7b28-4207-aa4a-7b4951f46e42",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e999a039-349c-4b99-9b07-b7b3924c6162"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "51fe9ef9-e25d-435d-a4c3-8418f11e6e72",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "90e38b2b-bad5-4a88-a071-e0622a23377a"
                    }
                  }
                ]
              },
              {
                "id": "2b926921-b42f-440e-8962-1279d48aeeee",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "d303abd2-3753-4655-bbeb-01937140dd88",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b7593c91-0f82-4906-bad6-698c8a12ecbb",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "16842dee-cde2-49a3-b5ee-06a3e06f0d80"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d7be7302-2e41-48f2-a18f-6c1d02f22625",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "9444684d-91b0-4d01-aeae-1a3a1d5abeb7"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "5c26b400-af99-42bf-8ae0-5cc7ebd71631",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "0c600823-d5c6-4ad7-a6ea-69f5f67dd8fb"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "77aa6382-64ad-46c9-a885-0ce0062e0ed7",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "037a2d33-86e6-4fe5-bf4a-4216383ef6af"
                    }
                  }
                ]
              },
              {
                "id": "974d4af8-3c3f-42b5-a2f7-4b1bbb392773",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "df34af66-bb87-451f-8ca3-6164ee47b88d",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9ce1eaca-86fb-491b-8a2c-16dfaea9406e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "9be7a7de-d308-4759-867e-8bef0ced9969"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "44619f98-99ae-4917-a332-9e4fc0febde0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e14e7d8f-c67b-4634-bed4-a51bf325bd4a"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "449f412b-1e5b-4b4e-8a90-dda2da9e8bea",
            "name": "Positive Testing",
            "item": [
              {
                "id": "b72b4955-ea0b-4c3c-9d61-03be8f05dd4f",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "f2149c4a-d90c-4a08-b6f7-973a514a2248",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "df62b1ab-01b4-4ffb-89a4-82da874edd72"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "2b3e2f7f-169b-46ad-a736-3e1789f8496d",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "dea071af-42ab-463d-b884-a1c862a1d983"
                    }
                  }
                ]
              },
              {
                "id": "8980c47d-e2e1-496c-a002-f89d68bd4a49",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "06b16a59-892b-439d-9ebc-f8d6fa7fe34f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "672cafb1-8e77-4ac2-803b-0c796a71dc9f"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "2a0431da-42df-4063-9f19-fedf8d0ea3df",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "c7499564-e08e-4693-9555-f226876d1aad"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "982a9324-f5a3-4490-abe5-07b6e1c1adc6",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "0645fb5e-4e5a-4271-ac12-a58b967e2617"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "002fbc83-e756-4abd-b681-9a2e6e99ee8e",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "bfba2e40-d3ac-401e-bf1d-fc4130bc1535"
            }
          }
        ]
      },
      {
        "id": "ac96065d-80ff-4c67-bc55-a942729abf29",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "bc268019-47a7-40e4-9a3e-1983413779dd",
            "name": "Negative Testing",
            "item": [
              {
                "id": "2ad64f17-aa61-488c-b392-03849cdc5467",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "cbe38405-1a97-4eee-b540-fb2ea9539b96",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "95f005c1-7f97-46c4-adbc-9fe22c121870",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "2c13b678-16ab-45cf-a5a0-3fc04e1888a3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fa05132f-883f-498b-8b8c-bc58e1a33ce4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "72cc8b43-fe91-4eca-bbcf-64b1398c03ad"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "af611afb-63d6-4da5-98b6-b8669fba1f45",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "138fad0e-adcc-414f-a470-1fd6d61a0ce1"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "154bdd39-1d44-4aa7-8416-e45d93c4b72d",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "88dc80f8-1388-483b-8333-c4662de464cb"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "0bf86452-7998-46cb-abc9-e0cc6d6f961d",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "c9cd658c-7bde-42c7-a034-0f52d0eab549"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "6d63fb9f-1188-4c4b-aaf3-5fd043d1bb6b",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "517e588c-5126-4819-9f4e-a72bff74287a"
            }
          }
        ]
      },
      {
        "id": "13da875c-2a27-4ea0-b213-6de9b89f6578",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "4363334f-d7e5-4cd2-999f-06f43305f48c",
            "name": "Negative Testing",
            "item": [
              {
                "id": "2f72b54c-2484-4f1f-93b3-bd480a5206a8",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "4db88d86-fdd3-4b91-b356-025d6935e1ac",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "23f2c646-3dd6-4f5d-8820-f513bcd95012",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "434dd51f-fa84-4bdd-b11b-570e5a5ffb41"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "59761374-7017-4078-834d-3806e00a48b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "a458741b-6261-49c2-9645-d552a4ada498"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "928686ce-2e72-4b7c-9ab3-e691ce8badb0",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "d06857fc-5b11-4050-9f63-9df04884919b"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "61a9c531-5b97-4dd4-9c7a-e3669f601470",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "bdd44edd-a8a7-4121-aecb-db4b44a82a6e"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "88289460-8382-4afb-b4a6-6b2299906ee5",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "e211fe54-297b-40b9-a771-ef5512349f13"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "fc88fc94-ab1d-49a7-a53a-eb19aafa3e1d",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "356860ca-2b05-4cbb-9d51-4b230c7a17c9"
            }
          }
        ]
      },
      {
        "id": "34e042a3-e42b-4a48-a26f-c6ccb4338763",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "677bf8a4-3b68-41f5-b5b0-cf83c2d1fa7a",
            "name": "Negative Testing",
            "item": [
              {
                "id": "288f4a28-18fc-4a30-9b32-3343e557fc2a",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "0c56d44e-8c10-4fb4-8fa0-1c7dcd69ffe7",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "329d6fce-65d3-400a-a718-14f68f8bb9a7",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "0d54f58a-39db-4edf-851e-270b862b3b44"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4e6c8019-56e1-4b6d-acc3-0cae7a44e607",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "e468b77c-ad3c-441e-8238-dcea319a7d08"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "ccb0a890-11bf-41eb-a30e-74260b449920",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "c886c0d7-bc76-43c3-9a4d-4d5d5378ea33"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "4b37ceb9-3769-410f-bb42-446fae925586",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "15c9910a-682b-4ba3-96ff-6746908fb80a"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "d862df2f-38be-418c-8fe7-11d12352d721",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "b236f47a-b2f7-4f13-8bc5-125be1d3a1ed"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "b8d0458f-416f-44de-a8c5-74244eb65890",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "4e790276-af3c-4378-9182-b7366411d0d3"
            }
          }
        ]
      },
      {
        "id": "52da307f-d3be-4f0a-ad7b-c0f315d3e7f9",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "96ce7d69-3447-477c-8f7a-11209cd2bc64",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "6a078b18-c3f3-46a9-8b03-2a6e2967bd84",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "cd04eb85-5624-4237-b361-73e59475746f",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "28167f2b-e280-4b29-9007-151ac1fa02bc",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "3c70e2be-f551-4ce5-af4f-328c5ee747bb",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 2091,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 285,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 573,
        "pending": 0,
        "failed": 24
      },
      "testScripts": {
        "total": 1050,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 1041,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 70.10526315789473,
      "responseMin": 4,
      "responseMax": 7797,
      "responseSd": 510.8185135955309,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1704501329879,
      "completed": 1704501358946
    },
    "executions": [
      {
        "id": "0030ecd3-bf05-4d9d-aff4-df2afa00a49b",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 283,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "8b63157e-6641-4e48-b2cf-f560d8dc1bf7",
          "httpRequestId": "8d02c926-f06e-44ed-9b2c-59d57481a477"
        },
        "item": {
          "id": "0030ecd3-bf05-4d9d-aff4-df2afa00a49b",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "6c31d15c-962c-4f55-a47d-166eab6846b6",
          "status": "OK",
          "code": 200,
          "responseTime": 64,
          "responseSize": 0
        }
      },
      {
        "id": "b1d49973-a645-4555-8fe3-e414ce282a19",
        "cursor": {
          "ref": "4c5ec9e4-f1db-43f9-86ac-23f0aa6d8291",
          "length": 283,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "7b53d1cc-a186-4d46-b0f4-fca7be1c81c5"
        },
        "item": {
          "id": "b1d49973-a645-4555-8fe3-e414ce282a19",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "8fa41817-70b9-4724-a11a-c688ee16bac3",
          "status": "OK",
          "code": 200,
          "responseTime": 6,
          "responseSize": 0
        }
      },
      {
        "id": "914e7231-a0f8-4e42-864e-7e9f898e6fa3",
        "cursor": {
          "ref": "90d1d455-bb0a-4c4a-8703-ca97fec66b3c",
          "length": 283,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "9525978b-1f07-4ca9-9b33-8ef208955403"
        },
        "item": {
          "id": "914e7231-a0f8-4e42-864e-7e9f898e6fa3",
          "name": "did_json"
        },
        "response": {
          "id": "0d48c3ec-05d8-44d9-aaea-0ddb9a9e3268",
          "status": "OK",
          "code": 200,
          "responseTime": 189,
          "responseSize": 2778
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d8957e5b-f3c3-4d41-abe8-613bf76c4660",
        "cursor": {
          "ref": "c14c421c-dfb6-4bc5-957e-82b26512ea82",
          "length": 283,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "fba231e5-a774-4b01-a410-c7e45e7a021f"
        },
        "item": {
          "id": "d8957e5b-f3c3-4d41-abe8-613bf76c4660",
          "name": "did:invalid"
        },
        "response": {
          "id": "1d0c40d6-017a-447e-b037-323492541731",
          "status": "Not Found",
          "code": 404,
          "responseTime": 806,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 404",
              "stack": "AssertionError: expected response to have status code 400 but got 404\n   at Object.eval sandbox-script.js:1:4)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d8957e5b-f3c3-4d41-abe8-613bf76c4660",
        "cursor": {
          "ref": "c14c421c-dfb6-4bc5-957e-82b26512ea82",
          "length": 283,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "fba231e5-a774-4b01-a410-c7e45e7a021f"
        },
        "item": {
          "id": "d8957e5b-f3c3-4d41-abe8-613bf76c4660",
          "name": "did:invalid"
        },
        "response": {
          "id": "1d0c40d6-017a-447e-b037-323492541731",
          "status": "Not Found",
          "code": 404,
          "responseTime": 806,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 404",
              "stack": "AssertionError: expected response to have status code 400 but got 404\n   at Object.eval sandbox-script.js:1:4)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b0051705-e917-4708-9e6d-8846c72d1d7f",
        "cursor": {
          "ref": "49e6b595-7884-4ff4-bcac-9497b16029d4",
          "length": 283,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "0d25fb70-be3b-4477-8e76-018fef9fcfda"
        },
        "item": {
          "id": "b0051705-e917-4708-9e6d-8846c72d1d7f",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "b697e83d-8399-4598-aba5-c7037c534c20",
          "status": "Not Found",
          "code": 404,
          "responseTime": 13,
          "responseSize": 127
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "648b9102-4b9e-407a-b944-8b52eeb70fea",
        "cursor": {
          "ref": "d2c0d6e9-5a4b-431d-b25d-d37208663116",
          "length": 283,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "df2d9c12-596e-40f7-89c6-cd7f4e3cf484"
        },
        "item": {
          "id": "648b9102-4b9e-407a-b944-8b52eeb70fea",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "e67f5e38-6bff-4f8c-a422-b4eccd093905",
          "status": "Not Found",
          "code": 404,
          "responseTime": 12,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eab7552e-6dd9-4d3a-bd51-389de2ecb980",
        "cursor": {
          "ref": "a90e393c-8bee-4ddc-85d6-a1e2e22c1f69",
          "length": 283,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "7a18f71b-3fc5-4a80-a197-c8072ce6b3bb"
        },
        "item": {
          "id": "eab7552e-6dd9-4d3a-bd51-389de2ecb980",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "c1ab00e3-f015-4d28-8219-bf64bbd3339f",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 36,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b907ba2f-60ce-4f9c-a36e-f6b3a1c38b07",
        "cursor": {
          "ref": "e0a5de1c-342d-4f47-87e4-db651a9ccbd7",
          "length": 283,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "83430cac-a3eb-40c6-98bd-181a9ffc184d"
        },
        "item": {
          "id": "b907ba2f-60ce-4f9c-a36e-f6b3a1c38b07",
          "name": "identifiers"
        },
        "response": {
          "id": "592a59c0-d237-40a2-8d7d-23ca16bc4f2f",
          "status": "OK",
          "code": 200,
          "responseTime": 28,
          "responseSize": 2450
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "442c63f0-5eff-4f72-8075-8c4b9a0b727f",
        "cursor": {
          "ref": "cd324f55-0b7a-4adf-a64d-7d11c42ab179",
          "length": 283,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "270770dc-9a5a-48b3-befa-2b8738dbec6f"
        },
        "item": {
          "id": "442c63f0-5eff-4f72-8075-8c4b9a0b727f",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "041f679d-9cd4-4f18-af70-814e5b5f56bf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6fa297ab-974a-4a4a-9694-ef80717c5bcf",
        "cursor": {
          "ref": "a3884920-1af7-4f05-9afa-76b6154c7797",
          "length": 283,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "059069e6-9d7b-428a-8b2b-15d0dd981787"
        },
        "item": {
          "id": "6fa297ab-974a-4a4a-9694-ef80717c5bcf",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "987c09ef-5aa2-426f-a5d4-73df2bc08887",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "72115514-5dab-4df5-86f6-502ce5551b70",
        "cursor": {
          "ref": "bd1f37ff-2772-4e63-a91e-9ca0c46d9b2c",
          "length": 283,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "b5d2039d-948f-4dc1-baa6-08cdf5e20dce"
        },
        "item": {
          "id": "72115514-5dab-4df5-86f6-502ce5551b70",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "d27aa9af-a943-4523-b332-10d9e2221f27",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b7f33804-3594-4b55-8f41-ce519149cbbb",
        "cursor": {
          "ref": "e0ae805a-3afb-46a8-88dd-dbbe423c3305",
          "length": 283,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "ecb9fc33-e492-4478-9bf9-0cbba90cdf1d"
        },
        "item": {
          "id": "b7f33804-3594-4b55-8f41-ce519149cbbb",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "98b4cadf-326e-4e30-96af-d2c32ffaafc4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb9441d1-afca-4b48-8c96-3e64452a77ff",
        "cursor": {
          "ref": "372050e4-3aff-4139-99e2-eb7b334d5a55",
          "length": 283,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "bdc4bdb1-bb86-4b2b-9ab3-dff641fb180e"
        },
        "item": {
          "id": "bb9441d1-afca-4b48-8c96-3e64452a77ff",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "2e43dbaf-0230-4a19-9204-c131579633b6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c8620af2-c514-463c-815c-2c751ea93cb3",
        "cursor": {
          "ref": "b56bf003-046f-4af4-b171-600b91c57ca4",
          "length": 283,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "02d90ded-5162-4e24-a146-6cad2a743fae"
        },
        "item": {
          "id": "c8620af2-c514-463c-815c-2c751ea93cb3",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "14bab798-2222-4707-9e2f-ffbd1ca72d92",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ca19749e-d44f-49d1-a22e-6b1781a26d56",
        "cursor": {
          "ref": "4d1dd87f-1c73-4e60-b672-21d34f1fb06c",
          "length": 283,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "3576cb68-20db-489c-8ee8-f4d5c213e3cf"
        },
        "item": {
          "id": "ca19749e-d44f-49d1-a22e-6b1781a26d56",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "953077bd-0d79-4c55-91e3-c254e4d5c08b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b5902403-bfa0-438e-903c-09abeac9b64d",
        "cursor": {
          "ref": "bfa6b91d-adfd-4f25-b401-11eac34a967a",
          "length": 283,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "31545d22-5d93-4a69-8be6-552aae43fa18"
        },
        "item": {
          "id": "b5902403-bfa0-438e-903c-09abeac9b64d",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "727caead-e9cb-40d5-94d8-8052685d90cd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "64ba10bb-548d-4b24-8856-f1aaf97f7de1",
        "cursor": {
          "ref": "10052079-1267-43e0-8c9d-86bb4c6c960b",
          "length": 283,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "74501678-e7f3-4fbd-a2ae-c64802591176"
        },
        "item": {
          "id": "64ba10bb-548d-4b24-8856-f1aaf97f7de1",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "395df522-69fd-4cf1-b19e-110d0b4c123e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 19,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5db10d6f-b3fe-46af-aacd-de3d1e6671d8",
        "cursor": {
          "ref": "3a752c62-6eac-44c5-9494-993c9580af97",
          "length": 283,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "4109afaa-6529-4903-86ca-de66c83f66b9"
        },
        "item": {
          "id": "5db10d6f-b3fe-46af-aacd-de3d1e6671d8",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "1c64b4c7-106b-4a2f-bfa4-1ab9918ad199",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "56dad71c-167c-4276-89bf-a7a5531892a6",
        "cursor": {
          "ref": "025c4007-0e5a-441c-8d81-893398aed9fd",
          "length": 283,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "33fe2c1e-f381-45b9-8a0b-e4082168678f"
        },
        "item": {
          "id": "56dad71c-167c-4276-89bf-a7a5531892a6",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "2a821e92-191e-4dbb-b23c-62af3ee29107",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d275c5b-f860-4aff-a452-91992393d7be",
        "cursor": {
          "ref": "d4af7524-ead5-4a59-8848-c45f98508879",
          "length": 283,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "c9690a3b-a5be-48d8-9f16-58de0a20087a"
        },
        "item": {
          "id": "8d275c5b-f860-4aff-a452-91992393d7be",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "51e63799-992b-4afc-bb80-3d44e47da844",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "37ea5dc0-7db9-4596-a8d1-e0768e674eed",
        "cursor": {
          "ref": "326eccdb-a256-4095-829b-d569c5bc8ea9",
          "length": 283,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "e8bb934e-5785-4b0b-b72c-30afa2b2e8de"
        },
        "item": {
          "id": "37ea5dc0-7db9-4596-a8d1-e0768e674eed",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "459f4e0c-2178-4ce8-adb8-163a0f6f365b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8acc69bd-dec9-47ad-b6db-aed0c9194335",
        "cursor": {
          "ref": "c2080e89-da69-4289-b522-ccc8b81e6b81",
          "length": 283,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "060e8cf6-0fda-40ff-95c7-210d182df63a"
        },
        "item": {
          "id": "8acc69bd-dec9-47ad-b6db-aed0c9194335",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "ad7c7111-5c12-4a9b-a88b-dbdafbe87be7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 18,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a0ed5e3f-8f91-45a2-9561-9ec353ccbe2c",
        "cursor": {
          "ref": "80264b53-8772-42e5-ab6d-106b6fa4db24",
          "length": 283,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "ecfe809b-afbb-47fb-afa5-8518fda3ca5b"
        },
        "item": {
          "id": "a0ed5e3f-8f91-45a2-9561-9ec353ccbe2c",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "25079790-d0c7-47fe-9f4e-4facf717f14f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9217a03f-92b5-4cc1-9ff9-a854c104ede5",
        "cursor": {
          "ref": "2a2870de-fa0d-441e-90a2-773ef8cadd1c",
          "length": 283,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "91d1cef7-79fb-40f0-8b25-3692591b8765"
        },
        "item": {
          "id": "9217a03f-92b5-4cc1-9ff9-a854c104ede5",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "efa5dfa4-ba50-413a-98a8-4e6e511d40b5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 19,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d98bd6b7-d5d2-4bf2-a8a3-b1676cf77c02",
        "cursor": {
          "ref": "d3146a19-1dd8-4e4e-b07f-ad6fee82ce3a",
          "length": 283,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "50e555a9-7f5a-4ba9-9773-00a3f3f4c432"
        },
        "item": {
          "id": "d98bd6b7-d5d2-4bf2-a8a3-b1676cf77c02",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "8c8f216b-819e-4b9b-8774-877de0d37ad0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5d378318-013c-40c1-b953-c71d7891e5ac",
        "cursor": {
          "ref": "715f9143-b48a-4eed-a4d4-3f6daf6e4d59",
          "length": 283,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "de2cf40d-5b5d-478f-bfb0-94c54ef49a0c"
        },
        "item": {
          "id": "5d378318-013c-40c1-b953-c71d7891e5ac",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "4a436ff8-0909-41e3-b453-bfed9ce667a7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4368b49d-0f9c-4bab-8790-698b2130a3ad",
        "cursor": {
          "ref": "bc365cca-27a3-46ed-b044-eb1343aa847b",
          "length": 283,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "e6535803-8b81-41cc-8523-1f511e207f4b"
        },
        "item": {
          "id": "4368b49d-0f9c-4bab-8790-698b2130a3ad",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "9d607578-6969-44ad-9e85-a201c61b1b71",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7a28b7e0-cbfe-429c-81c3-d53b5e1f7805",
        "cursor": {
          "ref": "721273e1-bb8c-414d-ac0f-56c66dd807a7",
          "length": 283,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "61b9da4e-ee50-458f-9a7e-07c693dc5a29"
        },
        "item": {
          "id": "7a28b7e0-cbfe-429c-81c3-d53b5e1f7805",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "0c8b5283-f93a-48e6-99dc-f13dae904e46",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "850abe5c-0040-4394-8643-ea82e88e574d",
        "cursor": {
          "ref": "86dfa8a6-d4cb-46ef-ad86-b53eb760c40e",
          "length": 283,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "28eb3a4a-9d71-4168-8cc2-90ca32e76e4c"
        },
        "item": {
          "id": "850abe5c-0040-4394-8643-ea82e88e574d",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "b2c7bab6-2f61-4d9f-b903-00f7d05e036a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a0747d9b-62f9-411f-82c7-2778335323ee",
        "cursor": {
          "ref": "8604fee6-c8a3-4faf-8c6d-9c3127d6c30b",
          "length": 283,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "f63985ed-02fc-4e13-9ecf-44705b426215"
        },
        "item": {
          "id": "a0747d9b-62f9-411f-82c7-2778335323ee",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "38197ea4-cee7-489f-a62b-8de560fecb17",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c3bc7feb-1ee7-456d-aaf4-91d0151ea303",
        "cursor": {
          "ref": "e9f22aa1-d9b3-4e78-93a8-c5f554d836c9",
          "length": 283,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "f387d712-f1e2-473f-b3c2-d6bbbbf684ba"
        },
        "item": {
          "id": "c3bc7feb-1ee7-456d-aaf4-91d0151ea303",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "c1e8b81d-c895-405a-bc8c-551031575bbd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "413f5fc5-9805-429c-bd51-11acdce64105",
        "cursor": {
          "ref": "adcc5cdc-f1fc-4f0e-ae3a-060be3073e28",
          "length": 283,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "f5acdac1-6885-47c3-bc98-d3e9448bbdb3"
        },
        "item": {
          "id": "413f5fc5-9805-429c-bd51-11acdce64105",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "001b08be-470c-4d57-90e2-dc0b139b68d4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bdcac0a1-1a21-4ddc-938b-89e9aa3033a4",
        "cursor": {
          "ref": "9c5b0a50-7ce1-42aa-9412-6228bc4c4f8e",
          "length": 283,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "20afda78-d254-44fa-86c4-bc3d9469572c"
        },
        "item": {
          "id": "bdcac0a1-1a21-4ddc-938b-89e9aa3033a4",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "ef91a2fc-088f-408a-b392-a97c21f9fa40",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c3ee61a1-abff-4d49-8088-537aa81f3cc2",
        "cursor": {
          "ref": "84656b23-561c-426f-8e71-d3bab5120752",
          "length": 283,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "858389c1-9325-4749-abd1-667d524bb6c3"
        },
        "item": {
          "id": "c3ee61a1-abff-4d49-8088-537aa81f3cc2",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "c8480381-80e7-4ed9-a4fb-8901616660e0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "908fc506-aaf4-4999-82d6-64aedd140e87",
        "cursor": {
          "ref": "f8faa370-c453-4a3d-8ca3-534e9586fbff",
          "length": 283,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "cfacd517-3fa8-4d23-826c-6a7b9072b68e"
        },
        "item": {
          "id": "908fc506-aaf4-4999-82d6-64aedd140e87",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "aa4b8e16-370e-4565-8f24-1fb76bc00bfc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a23403ef-4684-4b80-9609-face9b1487d5",
        "cursor": {
          "ref": "a8e43be5-409c-4b9d-a0c2-0f577ac8d4d4",
          "length": 283,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "1a35c2f3-329f-4261-b01c-300127bff1ae"
        },
        "item": {
          "id": "a23403ef-4684-4b80-9609-face9b1487d5",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "42d28f50-3aa7-49d7-af41-7562e3e47320",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "48582136-3afb-4892-87ea-6632116386a0",
        "cursor": {
          "ref": "0376c583-9d63-46b1-8922-a827ec1df0fe",
          "length": 283,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "13b8d1a9-1ebe-4815-bb0d-e414b84fb5bb"
        },
        "item": {
          "id": "48582136-3afb-4892-87ea-6632116386a0",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "9ddcc04d-7b9b-472e-b3b5-7e61498215bf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ea8d1bc-6d1c-47ca-8947-89aa51539f06",
        "cursor": {
          "ref": "7834cbeb-c224-4ddf-b166-f7d35f1f1cfb",
          "length": 283,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "f627cea8-8839-4215-9b69-68a9b39c4f9a"
        },
        "item": {
          "id": "5ea8d1bc-6d1c-47ca-8947-89aa51539f06",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "2f9c154d-0b6d-4a27-9bdc-b4f5f4a7503f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "41929891-78ad-4343-a46e-6db95a288144",
        "cursor": {
          "ref": "0e304493-4a78-420d-ab53-b2073c06a83f",
          "length": 283,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "d58ff678-f7a5-42e5-b691-3bd8f1535070"
        },
        "item": {
          "id": "41929891-78ad-4343-a46e-6db95a288144",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "031d8659-da22-4f74-a502-49a016a0553f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "34cd81d7-7943-437e-a243-72b33ea3b4bd",
        "cursor": {
          "ref": "46d61e53-8a2a-438d-9692-8fc39e5390bb",
          "length": 283,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "bd690135-99b1-4b87-a83d-76efe2662a63"
        },
        "item": {
          "id": "34cd81d7-7943-437e-a243-72b33ea3b4bd",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "3c6cc759-11f1-4912-9a2e-8cfc2273558b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3179a68b-524d-4fb6-8435-09b9c18a71ab",
        "cursor": {
          "ref": "c9d25329-8ee9-4e7c-a572-20cfc9072adc",
          "length": 283,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "496453e6-9d2b-443c-b4a5-75961af1dd42"
        },
        "item": {
          "id": "3179a68b-524d-4fb6-8435-09b9c18a71ab",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "40c98406-36e2-4488-ae84-51d59a1b4cc2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2e491cac-d806-49fe-9d2f-e84340895b64",
        "cursor": {
          "ref": "c940c775-feeb-4af7-b393-bd414f904573",
          "length": 283,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "5ad5b893-8616-4bcc-a20d-854dcae1bb58"
        },
        "item": {
          "id": "2e491cac-d806-49fe-9d2f-e84340895b64",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "1add96a4-e6eb-4480-8ef2-b6abbddee479",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "33202723-3be0-4779-91cc-53ae34756c1e",
        "cursor": {
          "ref": "32ec397f-e5f5-4867-9d2a-6a810d9b6196",
          "length": 283,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "fc76a54e-88db-4d53-9951-695cf8c37683"
        },
        "item": {
          "id": "33202723-3be0-4779-91cc-53ae34756c1e",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "18c77bfd-db67-428e-972c-cfa7af1b8cde",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e1635adf-6c1c-4801-a6da-edc6022876e2",
        "cursor": {
          "ref": "77921298-9f0e-4a6c-8555-6bb726894715",
          "length": 283,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "f598860f-0e10-4e71-8f1b-ab02a2b1e57b"
        },
        "item": {
          "id": "e1635adf-6c1c-4801-a6da-edc6022876e2",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "b6f1b13b-55d4-4d67-afae-16b74ddac7fc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:44)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7618e799-adb2-4f4a-a169-e58ace81adcd",
        "cursor": {
          "ref": "989dfa06-1d8e-41c4-9da2-71bd226dff8a",
          "length": 283,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "7d26e389-7d53-42ce-8aec-e95be3bcccee"
        },
        "item": {
          "id": "7618e799-adb2-4f4a-a169-e58ace81adcd",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "23143d1d-17f7-48ec-831e-01816c1725e9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "add419b3-deec-4e79-a7d2-c8ceaa4695e8",
        "cursor": {
          "ref": "351c51c5-94de-4d6a-80f3-43a917475aca",
          "length": 283,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "08e737e3-bb69-4c62-bfc9-cd91c18fb131"
        },
        "item": {
          "id": "add419b3-deec-4e79-a7d2-c8ceaa4695e8",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "c1fe6ea8-adf6-489f-a947-eb8db9478d79",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac10198d-f54d-46aa-b617-c837fd7278c6",
        "cursor": {
          "ref": "ea2c6053-cbac-47de-99b4-7509e19fc84a",
          "length": 283,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "20f57d50-7b0c-47c1-84f1-ae04b66eb940"
        },
        "item": {
          "id": "ac10198d-f54d-46aa-b617-c837fd7278c6",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "168d7360-9829-4901-b73e-9f7c34dd83a3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dfb793c9-1e6a-4acd-828f-7889c2af4073",
        "cursor": {
          "ref": "eecca3f7-e28a-45ce-a4a0-fe3caf54bda8",
          "length": 283,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "0c75b690-2ada-4bf3-b32a-ae11ca32cba7"
        },
        "item": {
          "id": "dfb793c9-1e6a-4acd-828f-7889c2af4073",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "b39e64eb-8d18-4c1b-8a97-8795ec7675c8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 99,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d5ce514-742d-4240-ad89-cc5f40e05a69",
        "cursor": {
          "ref": "7037f6f5-f063-48da-a32d-3b6d6b5a6edd",
          "length": 283,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "3a618313-a646-4969-baa9-de1205678e00"
        },
        "item": {
          "id": "8d5ce514-742d-4240-ad89-cc5f40e05a69",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "a8d512b7-61c6-43f5-bb03-762df9037aa8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ec13eaa-b2dc-480d-aae3-1e77e67998dc",
        "cursor": {
          "ref": "d69141ca-56a4-4207-9bfd-d320b558d3ca",
          "length": 283,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "923c4aec-e51d-4a3a-9158-e77ae435196c"
        },
        "item": {
          "id": "8ec13eaa-b2dc-480d-aae3-1e77e67998dc",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "cbb78439-8fd4-4fe2-bc67-3397fcb8316b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 19,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e0732c5b-cbd4-4a71-b6a0-982c6fbff8da",
        "cursor": {
          "ref": "79232f4d-93ed-4dc6-b8eb-a93a463ece0f",
          "length": 283,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "c4751d77-efb5-4643-9aa1-0f2fa2520aea"
        },
        "item": {
          "id": "e0732c5b-cbd4-4a71-b6a0-982c6fbff8da",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "08b23bf4-1f8c-41de-b9e8-f3fa912605c8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:51)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dbe763dc-5a4e-4e00-9cc7-b62b726ab043",
        "cursor": {
          "ref": "60e1b334-b4ab-47db-bf88-7c0ee3bbc9dc",
          "length": 283,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "bd910d8e-ea31-43ba-a928-751f3e23df73"
        },
        "item": {
          "id": "dbe763dc-5a4e-4e00-9cc7-b62b726ab043",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "ae0dafb8-11b5-4296-a22e-6f43e899952b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9697621e-e5c3-454f-b4ae-7caa922f8f82",
        "cursor": {
          "ref": "648232ec-15d0-48dd-aedb-3e4bb1755eff",
          "length": 283,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "3ae420e4-6f4b-4e9c-9b2c-365d73abbf56"
        },
        "item": {
          "id": "9697621e-e5c3-454f-b4ae-7caa922f8f82",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "1e28ff9f-753b-4c72-b34e-18bfb9721fff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 19,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f70521b9-2159-4871-baab-0025ea4542e6",
        "cursor": {
          "ref": "228b172f-773f-4ad9-aac2-b87a2c9affdb",
          "length": 283,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "469fb828-3277-4bdb-b73b-a4275922f685"
        },
        "item": {
          "id": "f70521b9-2159-4871-baab-0025ea4542e6",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "5ba8f06a-5450-45a5-909b-f287d96fda06",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "42080468-3c7f-4442-bf8f-92be82b00c7c",
        "cursor": {
          "ref": "340d5155-2a44-4a3f-93b6-0615c31a72e3",
          "length": 283,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "d0480571-5d5d-4e65-bd1a-8a72d50fcf7c"
        },
        "item": {
          "id": "42080468-3c7f-4442-bf8f-92be82b00c7c",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "60da8521-d6f4-4ae4-a6fe-df7c809777ad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c128b59-1231-4b11-a05a-7545c9445dcc",
        "cursor": {
          "ref": "e8a0794a-7ae6-4724-a970-7a9d10ffed7b",
          "length": 283,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "92bbfea9-1616-4772-af41-c01672e7db4d"
        },
        "item": {
          "id": "7c128b59-1231-4b11-a05a-7545c9445dcc",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "3758e31a-c960-45f1-b6bb-ed73982ea92f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "113362ef-9d46-4354-8934-8c70ed55ca87",
        "cursor": {
          "ref": "c48f1e54-cfdc-4599-bc0d-1b1fca6f61d9",
          "length": 283,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "a4523286-30bc-4c2b-a624-dd8894dc7063"
        },
        "item": {
          "id": "113362ef-9d46-4354-8934-8c70ed55ca87",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "3b54fca8-2b27-4621-a6d1-df299fc84b6b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe175e29-954d-4494-bc87-dde9b24703be",
        "cursor": {
          "ref": "d0166ae4-04fa-4abb-bdfe-c287e7474272",
          "length": 283,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "7434d70a-bad3-489f-bbe9-fc20d756fa5e"
        },
        "item": {
          "id": "fe175e29-954d-4494-bc87-dde9b24703be",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "d046b8f1-9678-4464-b7f9-13d6712409b2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "10f1266a-4d63-4796-99e7-7d2ea9861758",
        "cursor": {
          "ref": "90465ed2-de99-4cf5-817e-7bad171ae5b5",
          "length": 283,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "ea321268-eb73-4dab-9d95-8f1807e40310"
        },
        "item": {
          "id": "10f1266a-4d63-4796-99e7-7d2ea9861758",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "91b0e84a-9e89-48a9-a81f-23662cc670ce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 18,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b7968570-cfa3-478d-b2e9-ccb248c8c766",
        "cursor": {
          "ref": "5b92b278-41ea-40fa-9685-65b3d6025d05",
          "length": 283,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "b67c22e1-7f89-4857-bbfa-e23d80b19aaf"
        },
        "item": {
          "id": "b7968570-cfa3-478d-b2e9-ccb248c8c766",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "618d4c42-b6f5-4cd9-9994-dc7840e8d80d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ed85acfd-206f-46f5-8a21-f63384ecae41",
        "cursor": {
          "ref": "c08d552f-576e-4e0c-9798-bb54aadf6379",
          "length": 283,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "89a827cc-b496-4136-a8f4-24554abc571e"
        },
        "item": {
          "id": "ed85acfd-206f-46f5-8a21-f63384ecae41",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "9e334cb4-5eda-4610-bfc8-0eb6cec8d5c2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "01696e87-ceb2-4f46-a4d4-a5c2d64bd357",
        "cursor": {
          "ref": "5a526a70-ae29-4ec9-9712-b9e97fb86ce5",
          "length": 283,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "64c6f5b6-b20d-46a2-ab67-ee1818993e19"
        },
        "item": {
          "id": "01696e87-ceb2-4f46-a4d4-a5c2d64bd357",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "f7e81a66-5294-4b55-982b-62180e57a1f8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7502dd16-6e22-4029-9ce2-5cf2f1f68386",
        "cursor": {
          "ref": "bc05f74e-8aee-451f-8f9e-81053654d0c5",
          "length": 283,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "e4887223-cff8-48e3-a45b-7d1778bb5b9a"
        },
        "item": {
          "id": "7502dd16-6e22-4029-9ce2-5cf2f1f68386",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "484bcb68-c2b0-4bee-a15f-d2d827b811ba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "90321749-bb4a-4e19-a27d-5187c44b5d64",
        "cursor": {
          "ref": "b9663306-3405-4ef1-85b1-1317437bf2f6",
          "length": 283,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "a95c9a40-8122-49c0-aa4c-15cd0b53f9db"
        },
        "item": {
          "id": "90321749-bb4a-4e19-a27d-5187c44b5d64",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "a2209c1d-b9ce-48a7-8835-390bcff58801",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cc71129a-d835-4e8f-ab20-c3a01cbad6e8",
        "cursor": {
          "ref": "bd3c1371-620d-41ea-9e0d-6979f01548c1",
          "length": 283,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "571e1762-19f4-4bcc-88e5-3046759a3d67"
        },
        "item": {
          "id": "cc71129a-d835-4e8f-ab20-c3a01cbad6e8",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "2f6d193f-652f-422e-aa7b-6dd3934c7b3a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2189327f-6a1d-4f6a-94c8-9256116622bf",
        "cursor": {
          "ref": "93fc0d90-15af-4289-b775-8c529f067014",
          "length": 283,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "754b3387-b563-43dd-a4aa-86ef5e5db47f"
        },
        "item": {
          "id": "2189327f-6a1d-4f6a-94c8-9256116622bf",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "fded9c99-f2ae-4a65-9072-c4f8e810d444",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ca9779ae-f6c7-43f0-9b9d-c28477aae014",
        "cursor": {
          "ref": "a4e54e01-70d1-448e-b2b0-60d5964123e7",
          "length": 283,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "69727b18-b775-4150-983f-9878e7a4a495"
        },
        "item": {
          "id": "ca9779ae-f6c7-43f0-9b9d-c28477aae014",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "1dbfa739-ebbf-4c87-986a-497922eb43d8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a1656c48-d425-49cf-8694-8151509530b4",
        "cursor": {
          "ref": "48097134-6024-46c0-9e94-0ad6b4fea623",
          "length": 283,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "b5f82da0-71d7-4882-8b9c-f573ea3cdc0a"
        },
        "item": {
          "id": "a1656c48-d425-49cf-8694-8151509530b4",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "f2f8ca58-6674-448d-aa36-ddbeb1dc3d38",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "325dff67-4472-4cde-a78d-7ef2d65dd0e3",
        "cursor": {
          "ref": "fe4efb06-70e0-4049-b903-9848918644c4",
          "length": 283,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "73dc2ad9-8480-412f-a5e9-e12be2063a82"
        },
        "item": {
          "id": "325dff67-4472-4cde-a78d-7ef2d65dd0e3",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "704719c3-0329-4b48-bc50-2e8d4121cb9f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "959701bb-2967-484a-85ba-2af87dbc8f85",
        "cursor": {
          "ref": "da8c6908-515f-4120-a42a-f27c4d782864",
          "length": 283,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "46289c8b-2726-4eaf-a3b4-bf24158893e3"
        },
        "item": {
          "id": "959701bb-2967-484a-85ba-2af87dbc8f85",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "b34ef3cd-54fb-473a-b522-72c515537db0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "21ebe7c8-b133-4dfa-8815-907d476724b6",
        "cursor": {
          "ref": "f78e15d4-9a70-44a1-882e-876f8e686774",
          "length": 283,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "3f29c947-e0dc-44f6-aef2-5daf882d02b3"
        },
        "item": {
          "id": "21ebe7c8-b133-4dfa-8815-907d476724b6",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "d61bb54d-2258-44a4-8391-67b8a166e61d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "967b5b2b-aee0-45a5-9eb8-2f5d7c850091",
        "cursor": {
          "ref": "f71a4d08-7f90-472f-a7fb-d41d91ca64ea",
          "length": 283,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "3c5eb0c8-7e2b-45e7-b9ca-316b831558e9"
        },
        "item": {
          "id": "967b5b2b-aee0-45a5-9eb8-2f5d7c850091",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "7cb0e63a-4cb0-454c-b10c-ebfd31c31821",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "862589ab-b869-4722-bb00-cdf39da632b0",
        "cursor": {
          "ref": "b62c7900-ec2a-4494-ab56-b8d54c85b304",
          "length": 283,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "c7ccdf45-bf8b-4fb8-909f-8ad4de093ce6"
        },
        "item": {
          "id": "862589ab-b869-4722-bb00-cdf39da632b0",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "85d41750-5d31-404d-9d23-130205b0cea0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "103b4dd7-d2c2-4518-b96a-772dfbb51f26",
        "cursor": {
          "ref": "f24c8efd-4118-4bd3-a220-c46c0f0d951c",
          "length": 283,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "1a5ec8dc-b69b-4d86-96cb-68c77b232e6a"
        },
        "item": {
          "id": "103b4dd7-d2c2-4518-b96a-772dfbb51f26",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "71b1e8bc-f7ee-4c4d-8d0f-c70604dd4297",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c6e42934-3917-4f1b-bcd5-a9bb479511e7",
        "cursor": {
          "ref": "c616ce21-87b8-4f9f-be90-450ce1b5d320",
          "length": 283,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "2e10906e-b38a-4929-a22a-41f574327b3c"
        },
        "item": {
          "id": "c6e42934-3917-4f1b-bcd5-a9bb479511e7",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "a0b4404c-e5f0-4147-a7c3-c82ec7e701ab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 20,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f36ad08e-64c5-469f-a4c5-4ea7ce7ba001",
        "cursor": {
          "ref": "060b8313-c216-4f4c-a0a6-90088de9cdd3",
          "length": 283,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "91d657d2-6ff0-412f-90b3-705b7fb2a50a"
        },
        "item": {
          "id": "f36ad08e-64c5-469f-a4c5-4ea7ce7ba001",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "65bb28c5-b0d5-447b-868a-c870281fe2ab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 18,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1721ad4a-a4c5-4fed-934b-109989071b9a",
        "cursor": {
          "ref": "779c1b6e-2730-4c2d-827f-6852cd058f67",
          "length": 283,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "faf7e895-2238-4036-9684-ed23fd462821"
        },
        "item": {
          "id": "1721ad4a-a4c5-4fed-934b-109989071b9a",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "9e2fce2a-b22a-4b80-92b9-4e9bdb2adaa1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5b0a6ac3-78fe-424b-b56e-413b0f6c0abb",
        "cursor": {
          "ref": "85be4494-e671-4e89-a865-a4a16aa8bb36",
          "length": 283,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "6577d541-50bd-485c-8eb7-55864b1a3222"
        },
        "item": {
          "id": "5b0a6ac3-78fe-424b-b56e-413b0f6c0abb",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "450b8b8c-9d74-4334-8c54-7c855e23a111",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3f8d5f13-d289-42f1-a068-6a5c2f9cbba4",
        "cursor": {
          "ref": "f0da5b42-e9e1-49dc-be87-9974fd02ce0a",
          "length": 283,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "5a0f1152-dc7a-4a5e-825a-2ef1135e9fba"
        },
        "item": {
          "id": "3f8d5f13-d289-42f1-a068-6a5c2f9cbba4",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "ee990dd0-2b45-4baa-98b5-6d9b03d85244",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "602e50d0-c996-4762-b576-bd2aeaea0c63",
        "cursor": {
          "ref": "0f90bb51-157a-4317-a67b-5407d576606e",
          "length": 283,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "e0a923dc-d781-4992-b251-cb1d2714250e"
        },
        "item": {
          "id": "602e50d0-c996-4762-b576-bd2aeaea0c63",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "41e4a1e6-44d2-4d84-aa3e-9ed073d3bbf3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f136417e-1343-488f-8ce7-bc3118ab4bb5",
        "cursor": {
          "ref": "aa280cd3-72ef-4520-82f7-fe10f633cde3",
          "length": 283,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "c494779e-bab4-42b8-8e3a-faddade9b023"
        },
        "item": {
          "id": "f136417e-1343-488f-8ce7-bc3118ab4bb5",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "d063cb96-07e5-4ed7-8788-750c53ebe3d9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7bbbea34-7f66-4185-b7f5-80e2bd3b1e6b",
        "cursor": {
          "ref": "060cb4d1-50a4-44c3-8d01-635755a277a2",
          "length": 283,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "022c94c8-c877-4d56-b195-39ec1c695aff"
        },
        "item": {
          "id": "7bbbea34-7f66-4185-b7f5-80e2bd3b1e6b",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "38024ae9-8f8f-4ba2-a252-96927757e452",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d01b9b38-dbe4-4522-923e-664278dcc008",
        "cursor": {
          "ref": "37594ad6-144d-4844-ac2d-bd7ab408f60e",
          "length": 283,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "c61a2cba-3720-4929-8cbd-e34252e0493a"
        },
        "item": {
          "id": "d01b9b38-dbe4-4522-923e-664278dcc008",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "272324a5-08d3-4f11-b0da-2cab60a33c4d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a4b8bd3e-d48e-472b-8a14-c0c4f6d143a1",
        "cursor": {
          "ref": "d028b43e-6c65-4d25-be31-9e0480075e80",
          "length": 283,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "70ed33b4-eb31-4bf6-83b1-fcba9a97cb3f"
        },
        "item": {
          "id": "a4b8bd3e-d48e-472b-8a14-c0c4f6d143a1",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "c952750f-6e2e-44c9-8d15-559fb372b932",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fb9bb22d-7563-435d-919b-d4aa57330e7e",
        "cursor": {
          "ref": "6d11f020-aff9-4852-898c-8f327bee12ca",
          "length": 283,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "cabb28b0-4b6d-4440-94ee-ba9e528e2734"
        },
        "item": {
          "id": "fb9bb22d-7563-435d-919b-d4aa57330e7e",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "818293ec-0ff0-4a1a-867c-892912cce0dc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b83d017-f50c-4cf7-9c8a-837f5c2810e4",
        "cursor": {
          "ref": "ed9364f7-fa49-4b55-8e97-a323c27003bd",
          "length": 283,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "00b9627f-4f3a-46c1-84be-7269f8ebb295"
        },
        "item": {
          "id": "6b83d017-f50c-4cf7-9c8a-837f5c2810e4",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "dc19153f-3a77-4fba-858c-db3a3c19ed08",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4b54001d-2bb3-4abb-9b59-79f11e91b276",
        "cursor": {
          "ref": "c167efd9-e491-4929-a258-159e8bd4595a",
          "length": 283,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "a47e92c3-20ac-438c-a274-85e12235d8c0"
        },
        "item": {
          "id": "4b54001d-2bb3-4abb-9b59-79f11e91b276",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "9c203b20-5a48-447f-8596-1e29c45a3c41",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac281c2e-2b03-49bf-8f3b-f158a9a58dcb",
        "cursor": {
          "ref": "09445c70-0671-4666-8b11-30aff3a454c2",
          "length": 283,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "f95b7220-e631-4d29-8796-7fe1c9cd926f"
        },
        "item": {
          "id": "ac281c2e-2b03-49bf-8f3b-f158a9a58dcb",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "870ce904-0d44-48ec-878d-be40e33f4d4e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d33dccc3-8191-481d-96d8-8d7d25fe664e",
        "cursor": {
          "ref": "1c7f366c-6235-4d14-9467-59aa7435102f",
          "length": 283,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "db5bedab-2705-4876-aed2-4b36d0cd6e07"
        },
        "item": {
          "id": "d33dccc3-8191-481d-96d8-8d7d25fe664e",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "8f9729f4-d75a-4f99-a134-a9af74d31b9d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 20,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "64d84854-5c98-4862-8509-6b72788ae5e4",
        "cursor": {
          "ref": "141be266-169a-4392-8408-b9679518d6cc",
          "length": 283,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "17e0164e-6b8c-43ca-9165-ed2d8938287e"
        },
        "item": {
          "id": "64d84854-5c98-4862-8509-6b72788ae5e4",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "58fe25e2-3338-4816-b8ca-5ff53316d4d5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "38cced29-cebf-433c-9373-975cdd0ccf27",
        "cursor": {
          "ref": "625586be-3fb2-4bb7-abef-bb67dc258acb",
          "length": 283,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "6a58e0c5-44ec-4330-ba9c-31f8eb2218db"
        },
        "item": {
          "id": "38cced29-cebf-433c-9373-975cdd0ccf27",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "1bf7fd4a-9527-4141-8e1e-ef83ce096da1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "72e54879-6fa3-4911-912b-1ceade7243be",
        "cursor": {
          "ref": "c4661e4b-e806-4d2d-b0ae-bccc29cb1f67",
          "length": 283,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "3200e5bf-29d5-4e3a-8562-00261d420bbb"
        },
        "item": {
          "id": "72e54879-6fa3-4911-912b-1ceade7243be",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "601e24d6-96e6-4c98-9ab8-c221ebb2569a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "79d388cc-7838-4160-88f1-67a9e324a167",
        "cursor": {
          "ref": "640fffde-0c94-4e3d-86fd-934bdb13f969",
          "length": 283,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "e033b74c-72df-4fb6-b771-ba065e46ae5b"
        },
        "item": {
          "id": "79d388cc-7838-4160-88f1-67a9e324a167",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "de59ef5a-bb5f-4c22-b82c-08fe2f3f41ec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cf7132d0-f306-4051-a5e4-093f3fe7ecf8",
        "cursor": {
          "ref": "5b1d16d1-77d2-499e-8245-6ba1782dbfb9",
          "length": 283,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "04a1dbe9-eede-48f0-87cc-ba8dde3ca681"
        },
        "item": {
          "id": "cf7132d0-f306-4051-a5e4-093f3fe7ecf8",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "26033d43-0b3d-4b5d-bb5d-005a8458d022",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b7076cb-4c12-4895-b4ee-312216b84dcb",
        "cursor": {
          "ref": "ced27b0e-04ea-439e-8985-45872004b583",
          "length": 283,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "cfc3637e-16cf-48b8-b8ea-eb763429c309"
        },
        "item": {
          "id": "6b7076cb-4c12-4895-b4ee-312216b84dcb",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "9ba3374c-c910-4bee-88dc-efad0861e626",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "207b3e9d-2847-41f2-a24f-60e95b492a0b",
        "cursor": {
          "ref": "5f01ac58-5e56-45ad-a48a-6d2bc7e9879e",
          "length": 283,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "b081ab5d-2916-42d9-91b2-95e6d5cb9618"
        },
        "item": {
          "id": "207b3e9d-2847-41f2-a24f-60e95b492a0b",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "b207316a-6284-468f-9c8c-57f48b410f68",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9973a721-5246-4739-82a9-77e9e3c527e5",
        "cursor": {
          "ref": "26ccb5ab-3717-4cf5-9e27-d485f079c063",
          "length": 283,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "aa6b3059-94a9-4605-b1bd-64fc04f44267"
        },
        "item": {
          "id": "9973a721-5246-4739-82a9-77e9e3c527e5",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "876f884f-b07b-4b9e-a91f-85937dc55469",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "66bed9dd-7d17-45f3-9c4d-66e186bc87fb",
        "cursor": {
          "ref": "827f1eb9-7029-41a7-8b9b-d6c1d4752951",
          "length": 283,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "90d19eb0-ef39-493f-984d-3f7f99d7938c"
        },
        "item": {
          "id": "66bed9dd-7d17-45f3-9c4d-66e186bc87fb",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "c7890f5d-b1db-428a-8f43-9f20b77625e2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a91244c5-2b77-48b8-a39f-cc7f4fcdd95f",
        "cursor": {
          "ref": "25166771-0e45-466b-8d08-ce97e0603ab8",
          "length": 283,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "a3ff8143-767f-4d3c-811e-f9f2bf114bd7"
        },
        "item": {
          "id": "a91244c5-2b77-48b8-a39f-cc7f4fcdd95f",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "328b39a1-3b0e-4729-a301-0a643ce78e9a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b816f5a-79fe-4de3-89eb-590a03e4c0bb",
        "cursor": {
          "ref": "e83fac96-ccf4-4765-97d7-b21dac50b6d3",
          "length": 283,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "db35d8ba-356e-45e3-8ba8-37c42b714dea"
        },
        "item": {
          "id": "3b816f5a-79fe-4de3-89eb-590a03e4c0bb",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "e2576b1c-8ad6-44ce-a30b-f7a5be464bd0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e824c06c-37d2-4683-a009-1c054ad676d7",
        "cursor": {
          "ref": "833f3c6b-0b24-41ba-9c81-22640561dfe7",
          "length": 283,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "1ba83c6d-0f65-467f-b2ff-af3a014e7902"
        },
        "item": {
          "id": "e824c06c-37d2-4683-a009-1c054ad676d7",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "69a3bf2c-d09f-438e-8bf6-0fe00d276953",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 9,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c0df6081-da18-4392-a457-5ed3b8d18257",
        "cursor": {
          "ref": "57243342-fa3a-4186-b0b3-5b2b8d6339bc",
          "length": 283,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "75b6ef8e-2b77-44e2-9c2c-b3a2d7a5a497"
        },
        "item": {
          "id": "c0df6081-da18-4392-a457-5ed3b8d18257",
          "name": "credentials_issue.credential.issuer:dup"
        },
        "response": {
          "id": "3b4d7e16-4684-4bab-b207-e560ec492dff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:102)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 1,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:2:102)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:3:102)"
            }
          }
        ]
      },
      {
        "id": "564570ed-c99b-4160-9051-17288fcbf3e0",
        "cursor": {
          "ref": "6e4faec0-6016-42e4-848c-0a1fe40fbb0b",
          "length": 283,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "151fcae1-5986-412e-b35c-3077c923cf21"
        },
        "item": {
          "id": "564570ed-c99b-4160-9051-17288fcbf3e0",
          "name": "credentials_issue"
        },
        "response": {
          "id": "e8090d45-6399-4e52-839a-f379b30459f4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:103)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:103)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:103)"
            }
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 3,
              "test": "response issuanceDate matches request credential.issuanceDate",
              "message": "Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:4:103)"
            }
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 4,
              "test": "response proof.created is close to 'now'",
              "message": "Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:5:103)"
            }
          }
        ]
      },
      {
        "id": "bfc4b47f-ae75-4423-aab7-11da7c14ddc8",
        "cursor": {
          "ref": "062dd307-eacc-4768-aba7-bb3f29a619ba",
          "length": 283,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "4533c130-c5c7-46c6-a998-500d26b0e3ec"
        },
        "item": {
          "id": "bfc4b47f-ae75-4423-aab7-11da7c14ddc8",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "9a5a065e-8d0c-4ecd-9468-7a77a401e8ff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:104)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:104)"
            }
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response verifiableCredential.id matches request credential.id",
              "message": "Cannot read properties of undefined (reading 'id')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'id')\n   at Object.eval sandbox-script.js:3:104)"
            }
          }
        ]
      },
      {
        "id": "e1c6afd6-ce38-4b4a-ae0a-39e0282faeec",
        "cursor": {
          "ref": "70183c09-35fd-4bf7-98b9-365083fbc8be",
          "length": 283,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "6bb73510-3378-4e96-9c54-9ebd510f74e7"
        },
        "item": {
          "id": "e1c6afd6-ce38-4b4a-ae0a-39e0282faeec",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "26c2b5d7-42d6-45df-a0e6-bbaf0e40c57e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:105)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:105)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer.id",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:105)"
            }
          }
        ]
      },
      {
        "id": "dc292c21-78da-4c9a-b92b-6699ab29e40c",
        "cursor": {
          "ref": "7bae3222-6f05-4fd9-acf6-6c00a191afee",
          "length": 283,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "988cebff-db15-4f74-903d-249802635273"
        },
        "item": {
          "id": "dc292c21-78da-4c9a-b92b-6699ab29e40c",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "f11fc761-500e-4d5d-98ca-fdbbfd0b5afa",
          "status": "Created",
          "code": 201,
          "responseTime": 7797,
          "responseSize": 993
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "10917c10-33c3-4976-a3f1-a79ccdfe7540",
        "cursor": {
          "ref": "7eead002-44c6-4530-8d93-f4963f4c5a4f",
          "length": 283,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "69de289c-fdb1-4134-86a4-c4ace97fb868"
        },
        "item": {
          "id": "10917c10-33c3-4976-a3f1-a79ccdfe7540",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "f44d49ba-294a-4e05-a0c2-7ff1bfd90c59",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:107)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:107)"
            }
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response proof.created matches request options.created",
              "message": "Cannot read properties of undefined (reading 'proof')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'proof')\n   at Object.eval sandbox-script.js:3:107)"
            }
          }
        ]
      },
      {
        "id": "fd7b85e3-6d7e-4a27-b19c-9e5c19856692",
        "cursor": {
          "ref": "dc0f3bef-ecc8-4ce2-96a7-06fb3c4e6b71",
          "length": 283,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "61bec972-a554-40b6-9f0f-2b82e6d256c9"
        },
        "item": {
          "id": "fd7b85e3-6d7e-4a27-b19c-9e5c19856692",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "1d35d07e-ba9a-4cd8-b8e8-a71ae711eff9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:108)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:108)"
            }
          }
        ]
      },
      {
        "id": "9a70c00b-cce9-4314-9a03-d75e655d5396",
        "cursor": {
          "ref": "ae560d1e-cbd6-43a6-b83d-499265527816",
          "length": 283,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "4760aaa2-d8e9-4407-96a9-a855dcaef491"
        },
        "item": {
          "id": "9a70c00b-cce9-4314-9a03-d75e655d5396",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "3e1f4b21-0d95-4dcd-90c4-a102dc9ba9c4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 20,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a4c3ce94-453a-4e57-8511-412782b2da6a",
        "cursor": {
          "ref": "bfa8945c-e620-4c92-b5c9-cc2567251343",
          "length": 283,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "f1fb37c7-ae9f-4eea-82a9-0ff016fbd268"
        },
        "item": {
          "id": "a4c3ce94-453a-4e57-8511-412782b2da6a",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "d980954c-dd90-49ea-b31f-bdf95eba9248",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b1c76ad2-8649-4373-b17e-4802ccad5868",
        "cursor": {
          "ref": "f11d2077-de40-415a-bdc9-2a0d493e6ded",
          "length": 283,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "04f67c1a-86e9-4498-a2ce-7f0d9466863c"
        },
        "item": {
          "id": "b1c76ad2-8649-4373-b17e-4802ccad5868",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "1974bc44-dc4a-4ead-b518-a39b9f2f17bd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a2ca240f-ffe3-4826-8391-3d5dfa2cbcde",
        "cursor": {
          "ref": "2cc78811-2349-4684-9b42-099d3d89d3e0",
          "length": 283,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "b7c2caff-0aad-4625-820e-73eff904613b"
        },
        "item": {
          "id": "a2ca240f-ffe3-4826-8391-3d5dfa2cbcde",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "73ef6d66-d212-4f87-b9c7-ba3b745b15b4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "93298e35-536e-43cc-89bb-139034bbc45b",
        "cursor": {
          "ref": "a814e477-a1f7-4fa2-8eb6-3ec5dc20a611",
          "length": 283,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "2de8c08a-0014-47a4-b38f-976832d209d8"
        },
        "item": {
          "id": "93298e35-536e-43cc-89bb-139034bbc45b",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "4bb69490-c58c-43bf-9e4f-0e5b3e7ce4db",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "198ff548-0e46-4b54-b50d-549dc56c9ec5",
        "cursor": {
          "ref": "8fdac8b3-1309-4fd5-86d0-01c3ec615e94",
          "length": 283,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "26982776-0c82-4545-9d35-f3fe7b09ff33"
        },
        "item": {
          "id": "198ff548-0e46-4b54-b50d-549dc56c9ec5",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "789567eb-1313-4b3a-940f-1010a26e3c6b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 18,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d7f16446-b36f-4551-9601-c74ba6e48474",
        "cursor": {
          "ref": "fd0a2ba5-7a30-4e50-a020-e6869b4db029",
          "length": 283,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "7ca46ebe-d9cf-4edd-bc3c-c2a7fe5b970c"
        },
        "item": {
          "id": "d7f16446-b36f-4551-9601-c74ba6e48474",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "58cdbc0e-61bd-4cb4-b046-3e9458da9c2e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 18,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9f560ef7-9c36-49c3-b1c3-8750f67d6641",
        "cursor": {
          "ref": "76b6f79a-4f2f-4a7a-b950-adfa1afab323",
          "length": 283,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "0ec081af-03ff-4d27-978a-8e930e322740"
        },
        "item": {
          "id": "9f560ef7-9c36-49c3-b1c3-8750f67d6641",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "604af65d-4692-4fb0-b8ad-e42077c5383e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7fbe27f5-4e6c-4548-8eb3-298b822d144c",
        "cursor": {
          "ref": "12bc3194-f3ca-4a75-8e3a-a7f54c161bf9",
          "length": 283,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "0325506c-ba42-42c8-a52f-15f02d71404a"
        },
        "item": {
          "id": "7fbe27f5-4e6c-4548-8eb3-298b822d144c",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "6feb2958-1d44-454c-b649-8f8bdbe675f1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad3098f4-b632-4e76-8cfa-5b3da8a9039d",
        "cursor": {
          "ref": "d522e5da-dbd8-48f4-b9bf-aac1d4fa835b",
          "length": 283,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "62d7677b-ffc0-4e1d-b0b2-747b6b681dd3"
        },
        "item": {
          "id": "ad3098f4-b632-4e76-8cfa-5b3da8a9039d",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "bdf23aed-dbfe-4365-bce1-cb3c912404a9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0fe1465e-9cca-48d0-82cf-2eefd3eae71d",
        "cursor": {
          "ref": "c36f1662-95de-4c39-874c-987148ec1299",
          "length": 283,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "da86301b-f7cc-4f9f-a69f-d7586dbaff20"
        },
        "item": {
          "id": "0fe1465e-9cca-48d0-82cf-2eefd3eae71d",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "e9c338fb-f228-402c-8b0a-a401890367b7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "03cce25b-cc8c-4e5c-a77e-9895c3605553",
        "cursor": {
          "ref": "f1104458-5c06-4406-a47a-0bc197bb08a0",
          "length": 283,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "850409c0-a924-48c8-818b-8b0d2ebf0f1c"
        },
        "item": {
          "id": "03cce25b-cc8c-4e5c-a77e-9895c3605553",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "281eef55-dcb3-49c0-a28f-ef874e32dfbf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ca0aa5ea-56aa-4fb1-bcad-86475d673d5d",
        "cursor": {
          "ref": "ae4d915c-bce7-42e0-865e-8c567f170826",
          "length": 283,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "1a8d596c-ea2b-4b26-9147-144278e7089e"
        },
        "item": {
          "id": "ca0aa5ea-56aa-4fb1-bcad-86475d673d5d",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "c7045e0e-0143-468b-aea8-90e713c2aa2e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "91dd7148-0da2-4f77-b2ba-4576cd97676e",
        "cursor": {
          "ref": "9c568d2e-357b-43ab-9949-6a351f02d328",
          "length": 283,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "139f0b9b-5d28-47a9-931d-6eca4db00d09"
        },
        "item": {
          "id": "91dd7148-0da2-4f77-b2ba-4576cd97676e",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "8b7ebd03-9ef3-41d5-879f-5e7fa702a3e3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "25fa4e0c-6d55-4a79-a708-a03f2d9d0420",
        "cursor": {
          "ref": "d511eb13-bcf1-4a18-a72d-e5831612fc86",
          "length": 283,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "5efe1027-5498-4690-a192-848c94991e02"
        },
        "item": {
          "id": "25fa4e0c-6d55-4a79-a708-a03f2d9d0420",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "c5598ad0-6f6a-432f-bdb6-6aa3973b4c37",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "79141f4e-2fad-48b2-876e-82290d23134d",
        "cursor": {
          "ref": "ec3f458a-1e83-476e-9828-0dda48bca85b",
          "length": 283,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "fbd68fc7-cf09-4a7b-a544-a5ec186a05da"
        },
        "item": {
          "id": "79141f4e-2fad-48b2-876e-82290d23134d",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "69d7009f-7c96-45b4-947a-81d1ea2c7c84",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e90ed63-7880-4400-873d-84342f233f17",
        "cursor": {
          "ref": "36555238-a0a7-41c9-8486-ca0c7c72990b",
          "length": 283,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "f7864a87-7931-4310-a8bf-b8b32d1e92d1"
        },
        "item": {
          "id": "1e90ed63-7880-4400-873d-84342f233f17",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "1fe20c3c-445d-4c8d-b85d-0a76dd49a52a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "03fb5cdc-0d88-43cf-bc7e-b72061b6ae72",
        "cursor": {
          "ref": "3b8fa55b-ad9f-49e4-837f-d45dc60362a2",
          "length": 283,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "ea9c5664-d255-4910-8bfd-a433ec2f387f"
        },
        "item": {
          "id": "03fb5cdc-0d88-43cf-bc7e-b72061b6ae72",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "20028030-0293-453f-a537-4a5515b8d006",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6778fbbb-f49c-49df-b7ca-aa2aae12c7f9",
        "cursor": {
          "ref": "7e34beca-8516-4054-99e3-fc717190b555",
          "length": 283,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "fc790dbc-f1b6-44a4-9019-cb02b6cbf552"
        },
        "item": {
          "id": "6778fbbb-f49c-49df-b7ca-aa2aae12c7f9",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "d624adca-5e92-4b2b-aa30-828e634203d1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0aeb5504-ab80-4405-af89-fce6e0775e2b",
        "cursor": {
          "ref": "2122a4a6-8ab1-4b52-92fc-3f5a57d882c1",
          "length": 283,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "46179d09-71c2-4ba4-862e-20cef47d6af8"
        },
        "item": {
          "id": "0aeb5504-ab80-4405-af89-fce6e0775e2b",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "639d5955-36e9-4c85-a3f8-a5f0e3a20b8b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "27113bcb-9081-40d6-9994-2a683dab786d",
        "cursor": {
          "ref": "b836aa1a-a52c-4512-ac6a-39cb4f809f0e",
          "length": 283,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "781cd32e-ee29-44fc-baa4-c47fe128cccf"
        },
        "item": {
          "id": "27113bcb-9081-40d6-9994-2a683dab786d",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "4ab63eb2-da85-4ec4-b241-957118c55026",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "49da90f0-9b3d-488f-9ed6-01bfcd0742a8",
        "cursor": {
          "ref": "6ac814c1-07f6-47cc-8dfb-8c9582e08f40",
          "length": 283,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "3fce491f-6f3c-471e-864f-4d613b1e9914"
        },
        "item": {
          "id": "49da90f0-9b3d-488f-9ed6-01bfcd0742a8",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "26481ce7-0496-4183-84fc-2dba5c5b16ae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f9a79b71-4d52-4ca5-b951-9e0d76772706",
        "cursor": {
          "ref": "95d12731-f284-43cc-8bb4-c62bb98bea6e",
          "length": 283,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "cfa3d4d8-6c19-4186-abf7-7818dcf9eef2"
        },
        "item": {
          "id": "f9a79b71-4d52-4ca5-b951-9e0d76772706",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "b0cf51ec-98df-4829-918d-8a7a776d8340",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "501fec52-8c05-419e-b175-f484f9433e0f",
        "cursor": {
          "ref": "3adec960-888f-4c85-9a36-77b86963f13f",
          "length": 283,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "a96afc72-c092-4676-bc47-cb2702cc9089"
        },
        "item": {
          "id": "501fec52-8c05-419e-b175-f484f9433e0f",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "42bd933a-e4e3-4a99-ae57-8c480fb39974",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "23d54f62-4686-4293-ace4-b7cf1df49913",
        "cursor": {
          "ref": "2e3f59f5-3ffe-4eb5-9c63-3ab37d771f81",
          "length": 283,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "76e9a3c4-3aef-4b2c-b60c-9d1d09f7c4c6"
        },
        "item": {
          "id": "23d54f62-4686-4293-ace4-b7cf1df49913",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "7754b880-c673-497c-8bc4-b4dec674e513",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3f641c90-d73b-4826-8a0d-bca3f397386c",
        "cursor": {
          "ref": "a1018685-8647-4fc8-9d4a-39a16a8e497b",
          "length": 283,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "257085c8-66ce-4a64-8e06-9c85beda74a7"
        },
        "item": {
          "id": "3f641c90-d73b-4826-8a0d-bca3f397386c",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "497b9f31-062b-4c50-b3b6-68519cfd3708",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 18,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "00f1dcaa-7b30-4bcb-a9f5-b0af4ed64b7e",
        "cursor": {
          "ref": "b8238d83-1c51-4d76-a949-a19eaa0e2a5b",
          "length": 283,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "b24884b6-8ebc-4c29-ac3b-35d6251ff0d3"
        },
        "item": {
          "id": "00f1dcaa-7b30-4bcb-a9f5-b0af4ed64b7e",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "83ad750c-e590-49ab-8beb-0b5860a1a063",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d526d0e-7d8e-483b-a2db-61388134db4a",
        "cursor": {
          "ref": "eb7f1af1-1d32-45ea-a64b-a286e8ac2595",
          "length": 283,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "9d05fdb0-3cb2-4cda-a7dd-a3127bd7ec63"
        },
        "item": {
          "id": "2d526d0e-7d8e-483b-a2db-61388134db4a",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "9d93c611-80fd-436f-813b-2d813125403f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da1f880b-7dfb-4902-be57-391a5325e5a7",
        "cursor": {
          "ref": "00a932c1-a698-444f-9538-e940ac51177a",
          "length": 283,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "d2fc2084-9b89-4ab8-944d-73477d08a913"
        },
        "item": {
          "id": "da1f880b-7dfb-4902-be57-391a5325e5a7",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "d3aefd52-799b-40a1-b080-4a28bdcf5be8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f85fc67e-a167-4fe4-a6c2-75f41b4379f6",
        "cursor": {
          "ref": "ba5ca859-962d-4117-9a2f-56a332e51a86",
          "length": 283,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "11572222-d05b-41fe-849c-b40fa161b33d"
        },
        "item": {
          "id": "f85fc67e-a167-4fe4-a6c2-75f41b4379f6",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "e17b0fc3-7fa6-44c7-89bb-886a5affc279",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fd937959-f921-4320-a371-68c0881b7ede",
        "cursor": {
          "ref": "e12e1f83-2f67-4e8e-81e0-6c9fc02a7253",
          "length": 283,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "068bd1f3-0220-47d3-b600-847a0bd9c3db"
        },
        "item": {
          "id": "fd937959-f921-4320-a371-68c0881b7ede",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "8f83ca4e-1133-421a-8033-e96c22382b1d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "baa9b858-21cc-49aa-8b5d-fc3407eb4906",
        "cursor": {
          "ref": "0cb99231-538f-4b01-957e-56d81ed9cc2e",
          "length": 283,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "c812a4a9-0af9-4935-9182-41c0fab258fd"
        },
        "item": {
          "id": "baa9b858-21cc-49aa-8b5d-fc3407eb4906",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "972adc34-0dd8-49b7-9389-f44c52a0cb8b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "50d1b84a-0757-4bdf-ba6f-4660c97f39cc",
        "cursor": {
          "ref": "5e5634d0-9255-4264-9991-491294ddac5a",
          "length": 283,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "b0a2e0f5-4ca3-4aa0-a2b0-baa95b9588fa"
        },
        "item": {
          "id": "50d1b84a-0757-4bdf-ba6f-4660c97f39cc",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "4b06ea40-6552-45f5-a5f5-19f8bd3013d0",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 4,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b960d9e7-2bd9-413b-8bd5-4c44e5d1d412",
        "cursor": {
          "ref": "8224f1cc-e4ee-4e5b-b109-a53b1b9098bc",
          "length": 283,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "e69ef2c0-9748-4dda-b33a-28ee86840369"
        },
        "item": {
          "id": "b960d9e7-2bd9-413b-8bd5-4c44e5d1d412",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "f84a4c3c-bae7-4e17-ab5b-f4527e0591c6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 21,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a6ba3df-0bf8-4b09-a793-3ec3431f986e",
        "cursor": {
          "ref": "46739e2c-1291-476a-9697-3bac452bb29a",
          "length": 283,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "41feeea7-9519-4cd1-b9b8-858f2f6ebefa"
        },
        "item": {
          "id": "4a6ba3df-0bf8-4b09-a793-3ec3431f986e",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "3915db63-d410-498c-97dc-6b7c0ed51edd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "25083eca-0db5-4a90-8e43-9a9d2cc5a6cf",
        "cursor": {
          "ref": "fcf56b4b-d44c-4e5c-a1e0-3dfc0287ac2e",
          "length": 283,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "f05a9ca8-0186-4faa-a854-1cddf3bd284f"
        },
        "item": {
          "id": "25083eca-0db5-4a90-8e43-9a9d2cc5a6cf",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "c4cd80a7-044e-4a71-84bf-3be99de34801",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b8f9af7d-9022-4b26-b0d8-bc32bae9315b",
        "cursor": {
          "ref": "ebdebdd7-2ad9-4f17-8e93-5fba39198416",
          "length": 283,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "e7788652-9d93-4bce-ab2a-8903c258fec9"
        },
        "item": {
          "id": "b8f9af7d-9022-4b26-b0d8-bc32bae9315b",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "8a9fc635-525c-4292-9cc5-595432c65cbf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "292b8f36-1e51-4f62-849e-df480d7aa25e",
        "cursor": {
          "ref": "313b4143-60b7-4208-bfec-00eb4eb92372",
          "length": 283,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "277e9423-bb2b-4842-9fa8-9da296a04298"
        },
        "item": {
          "id": "292b8f36-1e51-4f62-849e-df480d7aa25e",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "75f1b12a-bd46-4b40-8f8d-7e75adfffe66",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4b31034a-4d63-4a09-951c-3dc9561f9cc2",
        "cursor": {
          "ref": "ec2c58ed-b937-418a-b58a-be0407463742",
          "length": 283,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "c06246b8-7c40-48a8-8181-f884a59a75c3"
        },
        "item": {
          "id": "4b31034a-4d63-4a09-951c-3dc9561f9cc2",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "b63f1666-f2df-4ff2-8e06-eb7e487f3cda",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "610082bb-a25d-4887-8dad-5b696d0fb540",
        "cursor": {
          "ref": "70e0d317-4538-45f8-b551-2d67bd394d82",
          "length": 283,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "f05d3522-1736-4cff-b19c-526abb72f5fe"
        },
        "item": {
          "id": "610082bb-a25d-4887-8dad-5b696d0fb540",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "7f694b57-3e8c-4c5b-a9be-5caf58a96ad6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 18,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cdb92ec7-2ef3-4aa7-bf39-833e9ab11576",
        "cursor": {
          "ref": "112c90db-0104-40e8-a601-af8debaacf42",
          "length": 283,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "dfc07396-0501-4135-bb72-240883eb5014"
        },
        "item": {
          "id": "cdb92ec7-2ef3-4aa7-bf39-833e9ab11576",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "647245ed-f8ee-45e9-8b92-7bc941c21db9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 18,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f078f81f-1590-4505-805c-8629f55a82cf",
        "cursor": {
          "ref": "c8cd2a6a-2fee-4043-a627-3f5fa49875dc",
          "length": 283,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "623ebc94-78ef-4ab6-bade-dc79bc1fc3c2"
        },
        "item": {
          "id": "f078f81f-1590-4505-805c-8629f55a82cf",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "0a9ed8fd-7304-4874-92fd-7c0bef87ac00",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c74d661-78e0-4a87-b20f-1f60a15b1912",
        "cursor": {
          "ref": "b28ecc15-0bd5-4b02-b1ca-9ab4ef813260",
          "length": 283,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "ba4b2d5c-fa7a-4e09-8696-7175bb3d4ac3"
        },
        "item": {
          "id": "2c74d661-78e0-4a87-b20f-1f60a15b1912",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "0dfe20e2-2272-4a65-a405-6d0dd8ae4b6e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b8cd8177-a842-4269-aeb0-d09b474bb3f5",
        "cursor": {
          "ref": "c2b9818e-89e6-4140-8023-1f4ec3037087",
          "length": 283,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "9e54cc70-55c0-45e8-b223-0b96836856ef"
        },
        "item": {
          "id": "b8cd8177-a842-4269-aeb0-d09b474bb3f5",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "8b50d578-3dac-4988-8c15-3417d4232d79",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "74a68915-6bd2-476f-969b-95bc874b9164",
        "cursor": {
          "ref": "52341433-c544-40e4-87e6-15d1ea85daaa",
          "length": 283,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "cfef711a-870b-4c4d-9f97-05fcad0d05a8"
        },
        "item": {
          "id": "74a68915-6bd2-476f-969b-95bc874b9164",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "72e65359-ecec-488c-b22a-4e10fc5b77ac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c446cd85-d49e-4cce-a28c-dc3e68b519ad",
        "cursor": {
          "ref": "34a225ad-9be5-477b-bdfe-36a40c50a64d",
          "length": 283,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "22c892f6-b653-4393-b848-eaf85bad93e8"
        },
        "item": {
          "id": "c446cd85-d49e-4cce-a28c-dc3e68b519ad",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "8ced00da-2f0d-411a-a75b-d43003a9f36e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 21,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3360d67e-2689-45e6-a6b1-6d53f166efa1",
        "cursor": {
          "ref": "5bbacacb-ff63-4c38-b48b-a8abd1ecc6c9",
          "length": 283,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "3d53d355-928f-4e0c-af28-dc9e4c6da471"
        },
        "item": {
          "id": "3360d67e-2689-45e6-a6b1-6d53f166efa1",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "fb31d646-f034-483c-be8a-5bab83d453cc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fd32bf65-5e5f-43dd-ac08-820e6f9350a8",
        "cursor": {
          "ref": "60b84113-f2cf-4c6b-ac2a-54b03cf999e8",
          "length": 283,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "a27d4f15-9d84-4e3a-afd1-13dad646d9dc"
        },
        "item": {
          "id": "fd32bf65-5e5f-43dd-ac08-820e6f9350a8",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "1ce124aa-1489-499c-91b6-0d1dc592325a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ba65359-6bc7-49da-9e7e-8fb6995bc94c",
        "cursor": {
          "ref": "49e97d94-e505-4ee5-a655-f573d4e93533",
          "length": 283,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "90baf082-f870-424f-a602-aac08c315893"
        },
        "item": {
          "id": "3ba65359-6bc7-49da-9e7e-8fb6995bc94c",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "a7377644-ebaa-4c0f-95a6-889ceee57b87",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7e8f6433-1176-4407-afcf-6baec1ce00cd",
        "cursor": {
          "ref": "9a28a487-b649-43bb-8c3c-2218d407177f",
          "length": 283,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "1773899e-ad00-4ae6-aa7f-fb7b31b8972c"
        },
        "item": {
          "id": "7e8f6433-1176-4407-afcf-6baec1ce00cd",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "db942453-0351-4dc0-a05b-238a73537971",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0b906a84-5016-4131-825c-27c1e4158436",
        "cursor": {
          "ref": "72072b22-f4a7-418c-81cb-d03856103b19",
          "length": 283,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "34e3a07f-addf-48a9-a4cd-cec6328ef8b1"
        },
        "item": {
          "id": "0b906a84-5016-4131-825c-27c1e4158436",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "2eb09661-7550-48f4-9021-06849e0b51de",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "42c54027-cd5e-4ba0-8b23-2f491b4d67ac",
        "cursor": {
          "ref": "b84ef0d6-6805-4f50-891b-47f4f3d74899",
          "length": 283,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "556e1a58-c3c2-4798-a18c-694526fe9204"
        },
        "item": {
          "id": "42c54027-cd5e-4ba0-8b23-2f491b4d67ac",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "d7268934-d031-4d5e-a868-e23139969ae7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c3a9356e-abbe-41fc-82ba-ce6c15005a06",
        "cursor": {
          "ref": "4642d944-df33-4241-867d-e5c26cdbb65f",
          "length": 283,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "356e449e-a479-4ef1-83db-6d9073b31785"
        },
        "item": {
          "id": "c3a9356e-abbe-41fc-82ba-ce6c15005a06",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "59d6f86c-3b0b-443e-823f-f4d788401776",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a32a44d-6bc3-4106-85b2-1491a71976ad",
        "cursor": {
          "ref": "3918aa0f-a67f-40e1-a574-ba0e9d505a49",
          "length": 283,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "e38446ca-4543-4de0-9653-a33f37e650f2"
        },
        "item": {
          "id": "5a32a44d-6bc3-4106-85b2-1491a71976ad",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "1a11a5d6-64b3-4a9f-9e33-f9dff75e5898",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "020db9fa-ed5f-4b71-a5f1-c33e630ea3e9",
        "cursor": {
          "ref": "a21c4f0e-0665-487f-921b-337af7aaee64",
          "length": 283,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "b70fa794-a2b7-4976-b405-0231077c19d1"
        },
        "item": {
          "id": "020db9fa-ed5f-4b71-a5f1-c33e630ea3e9",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "e53a2da0-14f5-48fc-9942-a1003ea5d389",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d1a45638-f5ea-4f5a-9590-f27b1c59b343",
        "cursor": {
          "ref": "75dbb8c8-47d6-440c-9b4f-203694dd4697",
          "length": 283,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "1f271ddc-d02b-4b77-b92b-361567099c81"
        },
        "item": {
          "id": "d1a45638-f5ea-4f5a-9590-f27b1c59b343",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "f63fafd4-fda5-44bb-a401-a4b4b4672729",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 19,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "12693a7c-fcc4-4707-a273-6373239a95b3",
        "cursor": {
          "ref": "da46ffec-493f-4432-a883-6884e5810736",
          "length": 283,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "219a94a5-cf41-4f25-992d-da5a246c9b40"
        },
        "item": {
          "id": "12693a7c-fcc4-4707-a273-6373239a95b3",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "47d57003-9d4a-403c-afbc-60b2cb69a9ab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8fad6ab6-e1c7-4bca-9af5-332425327460",
        "cursor": {
          "ref": "94540c2c-c3bd-425e-8b63-c0b77d4582cf",
          "length": 283,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "9e126008-3e81-4a08-8f60-f5d5b13c8699"
        },
        "item": {
          "id": "8fad6ab6-e1c7-4bca-9af5-332425327460",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "89023668-b09b-408a-8376-50a28faa0037",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fcdc1638-8a29-4dfd-9f87-aac25551c9c6",
        "cursor": {
          "ref": "0ea9009a-6d71-4026-8e60-7eb21c9e226c",
          "length": 283,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "9cd88f2b-9668-4241-8d68-dd929aa5a79d"
        },
        "item": {
          "id": "fcdc1638-8a29-4dfd-9f87-aac25551c9c6",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "785d2638-e63f-4acb-a2aa-e59dd344793b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5cbc3ae1-3ea4-477e-ab25-e3e937882078",
        "cursor": {
          "ref": "5907d031-4ce0-487c-a93c-09eb1c051d45",
          "length": 283,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "6fd1de8b-6d5b-42f5-a63e-873d23024f9e"
        },
        "item": {
          "id": "5cbc3ae1-3ea4-477e-ab25-e3e937882078",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "25625211-7456-4499-a948-5592ae34ff17",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2812ba1b-0327-453a-ba83-11afa0e1427b",
        "cursor": {
          "ref": "c8f2a196-e984-47b0-a8fc-1583507c739b",
          "length": 283,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "fe2b43fc-d836-40e4-a157-4167761cc09a"
        },
        "item": {
          "id": "2812ba1b-0327-453a-ba83-11afa0e1427b",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "c53d1d77-9d39-4a93-a38d-bbaa21f0bf9b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9d7c13ee-b11f-406a-9b3a-7706a8e2f67b",
        "cursor": {
          "ref": "cd49d110-c5d6-46e5-9d1c-37efe9bf64f4",
          "length": 283,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "e4425816-832c-4dac-8ef5-14c6784e7472"
        },
        "item": {
          "id": "9d7c13ee-b11f-406a-9b3a-7706a8e2f67b",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "9961fec0-4144-42cc-8a67-639c05810fce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a3be3db6-0729-41b1-8e13-2245e83fac05",
        "cursor": {
          "ref": "e16c5b20-3333-4c32-a3d3-055bb7c3705a",
          "length": 283,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "a16ce7ee-1df1-4dd1-a27e-9628d5c2e582"
        },
        "item": {
          "id": "a3be3db6-0729-41b1-8e13-2245e83fac05",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "36609d65-5a21-4ce3-8b3d-a33fd087ba6e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a26591a3-315c-44a4-8780-956b6ed49162",
        "cursor": {
          "ref": "96f5764f-881c-41cb-9ae7-27fbf403b449",
          "length": 283,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "a57efa9a-b609-4f68-946d-80a8142d180c"
        },
        "item": {
          "id": "a26591a3-315c-44a4-8780-956b6ed49162",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "e92487dc-3ae7-47b2-b3bd-80307ce63e6a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c3d8a13d-b4d2-4c5b-adfd-ebbbfeeb6d90",
        "cursor": {
          "ref": "f0175850-1055-41b6-8621-9f8de155fd85",
          "length": 283,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "b3bf3473-0837-467a-8143-5ef49fb69291"
        },
        "item": {
          "id": "c3d8a13d-b4d2-4c5b-adfd-ebbbfeeb6d90",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "ef57ec27-e352-4386-816c-a940de65f9ee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 18,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5d37a425-4472-4ee9-8977-31fde8af3cce",
        "cursor": {
          "ref": "e9a32302-11bf-47ed-8b38-5ff0a50761e5",
          "length": 283,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "6eb7a52c-88ef-4820-bf03-4f9b9364cfd9"
        },
        "item": {
          "id": "5d37a425-4472-4ee9-8977-31fde8af3cce",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "3a6015fe-efaf-4539-b434-c50d0d56e925",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ba09faca-7229-47d7-aeea-296b0d88e229",
        "cursor": {
          "ref": "e26e46da-abca-4aeb-b5a2-2c6cd9dc1221",
          "length": 283,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "c113a3e2-ee9d-475e-921b-d3c88ccf5741"
        },
        "item": {
          "id": "ba09faca-7229-47d7-aeea-296b0d88e229",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "dd58d4d6-bb12-4d6c-92fe-07e60eeec4a0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d23c6a36-fbeb-4fb3-9baf-d72086783592",
        "cursor": {
          "ref": "991785d7-fe25-4105-9037-9ec710c37bc1",
          "length": 283,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "b4b45e11-e5d6-4a5e-b0a3-3a618af8ab52"
        },
        "item": {
          "id": "d23c6a36-fbeb-4fb3-9baf-d72086783592",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "c3083ca1-3bea-4dca-9c28-d8856527b66e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f3fdee44-995c-43f0-bf24-0ab5fce15fef",
        "cursor": {
          "ref": "54d2507c-fa73-47af-82ca-a2b82be78601",
          "length": 283,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "e9394430-7d6d-4510-a920-26e59886a89a"
        },
        "item": {
          "id": "f3fdee44-995c-43f0-bf24-0ab5fce15fef",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "1bc1ef4a-81ab-4b09-985b-13f125df1c6b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b5715b1b-5225-4c8e-9541-f883646bfe1d",
        "cursor": {
          "ref": "41fc6a9b-6e1b-48f1-9c41-e8ced04fca5c",
          "length": 283,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "9aa546c1-4708-4f03-a4ed-12fd0537f0b4"
        },
        "item": {
          "id": "b5715b1b-5225-4c8e-9541-f883646bfe1d",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "bccf6f95-9d42-470f-a995-700503b268b6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4bdeb14a-d312-4502-955b-fbc9bc948e18",
        "cursor": {
          "ref": "bc7cdc54-eec7-4c7b-ab6b-8281881297fc",
          "length": 283,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "0bc2045a-2a2d-46ee-8b46-803e9f49776c"
        },
        "item": {
          "id": "4bdeb14a-d312-4502-955b-fbc9bc948e18",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "543820f4-7dc5-423c-9abd-61187048a61f",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 4,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f7e429be-7248-410e-86ad-c74b1b43bb59",
        "cursor": {
          "ref": "a2c5629e-7202-4d4e-8b01-d88df8cf860f",
          "length": 283,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "0f8b8061-0eb6-4535-aaaa-2c5ca7566495"
        },
        "item": {
          "id": "f7e429be-7248-410e-86ad-c74b1b43bb59",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "a8b265e5-9aed-4450-b929-75b6e87d4df4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "582afa09-b1e5-462a-9134-c61d45810029",
        "cursor": {
          "ref": "31258359-2d97-47aa-af5b-60bf9294afb1",
          "length": 283,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "b35173cb-d810-4c93-9aee-ea7efc95e73e"
        },
        "item": {
          "id": "582afa09-b1e5-462a-9134-c61d45810029",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "2cf97e11-1cdb-4b97-86fb-7a743f7fc9af",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2824af2d-9e34-4d31-b347-ae14a7eed168",
        "cursor": {
          "ref": "13636185-b54c-4db7-bc7f-ca641fa4e841",
          "length": 283,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "6a5a9b0e-a461-4f05-a0cf-13aa25049af1"
        },
        "item": {
          "id": "2824af2d-9e34-4d31-b347-ae14a7eed168",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "da0254b6-f312-4fab-8e48-85669bb65e7c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6c0073b6-e2af-455e-baa1-4af2c9ad6b53",
        "cursor": {
          "ref": "6f2e3af2-df7c-45f0-877c-4d08fb1ae56f",
          "length": 283,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "4129538c-a519-4712-abcc-9a4124ac98ed"
        },
        "item": {
          "id": "6c0073b6-e2af-455e-baa1-4af2c9ad6b53",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "aeba23d5-ac4e-4f75-ac0b-12fc9510870f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 20,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "892b706f-f5c9-4554-8b7d-b869bd823dc5",
        "cursor": {
          "ref": "2e90df86-b8e8-4848-a5a3-08c726f81ee1",
          "length": 283,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "f6f0a267-e1c2-4e17-8afd-069e11baf1f6"
        },
        "item": {
          "id": "892b706f-f5c9-4554-8b7d-b869bd823dc5",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "bc294b7d-6b24-4eed-a465-2385b2f6363c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "13cb7365-d9d7-44f2-89bf-73bdc7f160e6",
        "cursor": {
          "ref": "7c4cea0f-604e-4526-a9bf-caaa88ca36ea",
          "length": 283,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "1ae294b7-d1e3-4bda-b60e-f1b1e49d6409"
        },
        "item": {
          "id": "13cb7365-d9d7-44f2-89bf-73bdc7f160e6",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "55c61616-a711-404b-99a0-027025e433d1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "24bfd1fa-6f95-4672-9eaf-a0a4a72a75fa",
        "cursor": {
          "ref": "509f378b-8a7e-473e-b392-6c5f21820e65",
          "length": 283,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "a8e2ec60-a990-48ee-98f4-7b540be9e3f9"
        },
        "item": {
          "id": "24bfd1fa-6f95-4672-9eaf-a0a4a72a75fa",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "b5a61f11-ea03-4985-aa69-d3545e4684a7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d58e926d-cbfd-40ba-94d2-df90c6d17448",
        "cursor": {
          "ref": "3ff058e4-8928-4a2c-90fe-5221e4a6fd0f",
          "length": 283,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "93d29425-a687-4ea4-a1eb-cacc8180b78e"
        },
        "item": {
          "id": "d58e926d-cbfd-40ba-94d2-df90c6d17448",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "b34fcb7b-e4db-4027-a1de-abde2970692e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "73514175-884c-4c14-80b2-49b867429a7f",
        "cursor": {
          "ref": "0a0b9cdf-a547-4c69-99dd-24bfd8fcc24f",
          "length": 283,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "9f597ad9-e9e4-42c4-b7fb-1085f747a94b"
        },
        "item": {
          "id": "73514175-884c-4c14-80b2-49b867429a7f",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "daa41274-74f1-4f0e-8fb4-793b43a44058",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "edc60ec3-ce3b-4d73-bd45-078dc9c2be14",
        "cursor": {
          "ref": "4279ac40-d6ec-468d-b6fb-35c5b6bad5ce",
          "length": 283,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "326a8942-5d78-4a2b-8f7e-2c2913c2d964"
        },
        "item": {
          "id": "edc60ec3-ce3b-4d73-bd45-078dc9c2be14",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "a36a9cf0-9b5e-48c1-b050-5f9e93ee383c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1c485a62-bd67-40bb-9122-da25674cbd63",
        "cursor": {
          "ref": "71605ef0-0482-445e-80ca-6edc50a10df3",
          "length": 283,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "de2e3dc6-0cd6-48bb-842a-3982b4afedfa"
        },
        "item": {
          "id": "1c485a62-bd67-40bb-9122-da25674cbd63",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "25195d53-5d55-4e3a-98a6-04ed5b14d394",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "889c8376-4d43-4bc5-a937-d651f3541594",
        "cursor": {
          "ref": "35b1384e-2353-4890-9544-b7a1e00092b3",
          "length": 283,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "3696dab9-0182-43eb-a48e-c00bb7839d20"
        },
        "item": {
          "id": "889c8376-4d43-4bc5-a937-d651f3541594",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "3e3752ca-b368-4a92-8cb2-0aa8edf4716a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0d5a7e27-ae34-4e98-871f-a6f39d9b2c38",
        "cursor": {
          "ref": "6fb799c3-c5e6-4872-a4e9-e3ce4c9f853d",
          "length": 283,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "409515e1-0a67-4f93-9e4f-a1d10dc151ca"
        },
        "item": {
          "id": "0d5a7e27-ae34-4e98-871f-a6f39d9b2c38",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "2adb926a-6789-49d1-84aa-c1ba60de9502",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f61752d8-5cf8-4a74-80e0-9e721acc453e",
        "cursor": {
          "ref": "4b2b31d5-eb39-4c0e-b2f8-d55324cbb72a",
          "length": 283,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "c3d73e41-fcc0-43ce-ba0c-6b6e16e290f0"
        },
        "item": {
          "id": "f61752d8-5cf8-4a74-80e0-9e721acc453e",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "294819e5-2ff4-45c5-8127-0ce26b19823d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4fa93868-db9a-4df4-ac82-14c230073d58",
        "cursor": {
          "ref": "6ad63186-14ab-43f0-a44a-2b45d7b62eaa",
          "length": 283,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "51cd2b25-73ae-47ea-a52f-de024020861c"
        },
        "item": {
          "id": "4fa93868-db9a-4df4-ac82-14c230073d58",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "1b89dd10-ce55-49ae-9ead-178e42d9faf9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fcb14ea8-749e-4680-bcc9-50f18139c5bf",
        "cursor": {
          "ref": "4fdb536e-05a5-4dae-81c4-28631db8c2a8",
          "length": 283,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "0d2c6dd8-34be-4a5e-9547-c1f831ef5578"
        },
        "item": {
          "id": "fcb14ea8-749e-4680-bcc9-50f18139c5bf",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "2a695cbd-2cd2-42a1-a195-9d28b480e2a7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d69d9d58-af15-4def-ae31-398e012535c8",
        "cursor": {
          "ref": "5371beb9-ce27-4f59-8ee0-83fe371d0a7b",
          "length": 283,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "dce458ff-e67b-454c-941f-b10e75afb7a3"
        },
        "item": {
          "id": "d69d9d58-af15-4def-ae31-398e012535c8",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "a8879fd7-5870-48da-94c7-ec35dd62fc02",
          "status": "OK",
          "code": 200,
          "responseTime": 108,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 200",
              "stack": "AssertionError: expected response to have status code 400 but got 200\n   at Object.eval sandbox-script.js:1:196)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:196)"
            }
          }
        ]
      },
      {
        "id": "61070254-6a3b-4ccf-8232-e1eb97d7596c",
        "cursor": {
          "ref": "915b6557-5987-497e-b0ca-fac0c6ae0843",
          "length": 283,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "37b2dc8e-77be-45f1-887c-6d8d9d30409b"
        },
        "item": {
          "id": "61070254-6a3b-4ccf-8232-e1eb97d7596c",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "40bdf7aa-6302-4b99-925f-05d23fbd3863",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0175e403-f97a-43ab-8f7d-558e0709b54e",
        "cursor": {
          "ref": "841e19bd-bd39-4992-95d9-3107750d2c8e",
          "length": 283,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "a91c56c7-8931-462e-a785-4da01078201b"
        },
        "item": {
          "id": "0175e403-f97a-43ab-8f7d-558e0709b54e",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "3bde67cb-1af1-4e0e-bc7d-dcd7983e2142",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7382ea66-2b62-4cc1-b601-a11ac9485b32",
        "cursor": {
          "ref": "1ed04c5f-104c-4ee1-ab45-a17f1895e1ce",
          "length": 283,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "7a270a4e-4456-4fd2-9abc-c62977902491"
        },
        "item": {
          "id": "7382ea66-2b62-4cc1-b601-a11ac9485b32",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "f0f998c0-fa22-4581-8806-f1217b10e16e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "396bd29a-95d0-49e0-9537-ace0cb8a836e",
        "cursor": {
          "ref": "a6c8c090-c08c-4672-a72e-75307f461b2e",
          "length": 283,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "3a44a2a8-e276-4ce5-88e1-d32d89719e49"
        },
        "item": {
          "id": "396bd29a-95d0-49e0-9537-ace0cb8a836e",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "863beb44-95a0-479d-8788-d43f64d046ea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "503093e5-9e28-4b3f-b3c2-35d5211178b3",
        "cursor": {
          "ref": "1d34cd9b-7750-44b3-bdbf-ceb2729f0985",
          "length": 283,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "5e007b7f-d1cc-4459-bd17-3973d1e91cec"
        },
        "item": {
          "id": "503093e5-9e28-4b3f-b3c2-35d5211178b3",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "46aa0317-1b73-4e1f-98ab-6634552dc1c7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 18,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "980d1816-0115-4493-a736-9788e5a1ac2d",
        "cursor": {
          "ref": "7852070e-cb8a-439a-a266-da6d94a77752",
          "length": 283,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "ccafd80c-f3e8-4de2-aef6-fc77537b5b6c"
        },
        "item": {
          "id": "980d1816-0115-4493-a736-9788e5a1ac2d",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "72337a0f-c618-4f85-8ffb-0edfc7f945ca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 21,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "415da7b6-4588-42e8-bdf8-de279329a70b",
        "cursor": {
          "ref": "bfa16e31-7aeb-477c-b8ba-0f423e74066d",
          "length": 283,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "2f73fff6-731c-4623-8a20-f644761cf40d"
        },
        "item": {
          "id": "415da7b6-4588-42e8-bdf8-de279329a70b",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "86fb52cf-a682-4e4a-9acb-07041dd7a2ac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "46a503cc-eeb1-462e-99c0-29c9d42c4202",
        "cursor": {
          "ref": "e70610b7-4965-47cb-9c4d-49b9dbccc37b",
          "length": 283,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "878242ef-9055-470a-923c-e5afd289188a"
        },
        "item": {
          "id": "46a503cc-eeb1-462e-99c0-29c9d42c4202",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "0aca52c0-5b3b-47e5-ada7-4a1fdfd87431",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "22a20f1b-f72b-4407-9042-02e82884927b",
        "cursor": {
          "ref": "8e3cfed5-4f41-4e39-aea7-b38d4c4cf810",
          "length": 283,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "a4e866ad-050e-45e3-8c2c-612fd4f9d8b7"
        },
        "item": {
          "id": "22a20f1b-f72b-4407-9042-02e82884927b",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "3637bcea-9d70-44da-b435-2bfe1835589b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "92530453-754a-4ddb-a2f6-347f7727baa9",
        "cursor": {
          "ref": "f7e5ffb8-25a1-490d-b42b-55f301a79743",
          "length": 283,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "a95c8dad-97e0-402e-9032-1e880f33ead0"
        },
        "item": {
          "id": "92530453-754a-4ddb-a2f6-347f7727baa9",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "a861dba6-1093-4e4e-9efd-8de8c7f2c1fe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad85a29d-48de-4fb9-89fa-6e069161bf8c",
        "cursor": {
          "ref": "7e142e72-8712-4f01-9fe0-c43edcdaab13",
          "length": 283,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "8568f688-5ecb-41dd-9671-767b6b367813"
        },
        "item": {
          "id": "ad85a29d-48de-4fb9-89fa-6e069161bf8c",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "f2947537-985e-41c7-8b8f-f76a889a4645",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7624737c-a608-4020-9b70-61069bea789a",
        "cursor": {
          "ref": "8e2b4d1a-af3d-4ebf-a0b3-fc3cf8b8a27c",
          "length": 283,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "ea824ecb-d09e-4141-b505-79b51299237b"
        },
        "item": {
          "id": "7624737c-a608-4020-9b70-61069bea789a",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "f40055bd-3678-4f42-949b-7dda90043286",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "56e2e9c3-ba53-44a1-ab06-3c769836c561",
        "cursor": {
          "ref": "2db4e5f2-a24f-472f-8a3b-465380f77779",
          "length": 283,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "7fb68187-2fac-4248-95a3-307de080e64d"
        },
        "item": {
          "id": "56e2e9c3-ba53-44a1-ab06-3c769836c561",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "62bf5702-f1cf-4741-9fc8-df74b93c9cfd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "55396e5f-ab84-455c-9d0b-fb75d9f1e22c",
        "cursor": {
          "ref": "4bcde892-7bff-4737-ba26-008b276d2f77",
          "length": 283,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "c1a2d489-d5f4-459f-b25c-1bcb22eb0111"
        },
        "item": {
          "id": "55396e5f-ab84-455c-9d0b-fb75d9f1e22c",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "4b015337-bc7f-46ba-9465-e6d8fde1cb2f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a2df4760-53e0-44b4-a266-d367c40f4964",
        "cursor": {
          "ref": "f90747c8-7a4f-4eeb-a5c4-2b132783797f",
          "length": 283,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "2c79b707-b79b-4121-bf2a-60029da79a6a"
        },
        "item": {
          "id": "a2df4760-53e0-44b4-a266-d367c40f4964",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "cc68585a-8aa9-4fbf-a400-8905773e190b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f86a1bfd-b73f-44fd-b6fe-e89ed6a49275",
        "cursor": {
          "ref": "2b226d03-4170-44c4-9124-cf444b8610ee",
          "length": 283,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "4fa0b20b-41c0-439a-8e1c-181c766f9311"
        },
        "item": {
          "id": "f86a1bfd-b73f-44fd-b6fe-e89ed6a49275",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "6ad990ad-27e0-4e02-82d7-16f76e558cea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5b2e4f28-823a-4ac1-8665-9a2dee904602",
        "cursor": {
          "ref": "4a5119f4-d9e3-4dd6-913f-49107f2af19e",
          "length": 283,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "078549cb-1ce7-4df3-a0cc-a9f1279eceeb"
        },
        "item": {
          "id": "5b2e4f28-823a-4ac1-8665-9a2dee904602",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "c1f0bbfd-4554-4f7a-bafa-16f06affcb3c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3062bf70-dd2e-4865-b016-4b523be69f55",
        "cursor": {
          "ref": "c57b41e2-9497-47b1-8407-b1b1f36ea8d7",
          "length": 283,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "8a675cb8-0370-4f6f-93a9-8ee69b279a40"
        },
        "item": {
          "id": "3062bf70-dd2e-4865-b016-4b523be69f55",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "fd8c2578-dca3-41bd-97d5-05e6af3c0602",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e65c2859-6d32-4e67-aa39-28a772c2cc53",
        "cursor": {
          "ref": "9c5ea12b-0fde-4385-9a2e-340b8102285f",
          "length": 283,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "22567cca-7508-4ef0-a8c7-bc03757473d7"
        },
        "item": {
          "id": "e65c2859-6d32-4e67-aa39-28a772c2cc53",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "8ab2d9a2-2dc6-46b5-a907-77a416ac6d94",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "54ecb40e-df1a-43ad-851a-3760f3c3fe79",
        "cursor": {
          "ref": "4de08fda-0f1d-4437-9e95-9f7d7c84d426",
          "length": 283,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "7b7e4fc6-c642-4835-9448-b24996be424f"
        },
        "item": {
          "id": "54ecb40e-df1a-43ad-851a-3760f3c3fe79",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "cdc63572-25a5-466a-bf48-af6f24cadad6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "81eddebf-769c-486f-a596-59d8b900689c",
        "cursor": {
          "ref": "b78bcc38-7538-49de-a2f0-8f2705e496c3",
          "length": 283,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "2e00c311-e5fd-4394-9bc8-24e7c10a3db6"
        },
        "item": {
          "id": "81eddebf-769c-486f-a596-59d8b900689c",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "3b6c72c0-45e8-43ce-8801-2beedda4e880",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "83e43749-9dfd-490c-a6ec-159189d56d0e",
        "cursor": {
          "ref": "89c2d903-e641-4a9e-aafa-926ba4b5b7ee",
          "length": 283,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "357cb3a0-8523-4f7b-80c5-03f80ff4c72f"
        },
        "item": {
          "id": "83e43749-9dfd-490c-a6ec-159189d56d0e",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "5212fb72-3b31-422c-9fcd-80363ed45dda",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 100,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a9fcfaf1-9ceb-47ee-ad32-98e36e844a06",
        "cursor": {
          "ref": "a94e2127-6cda-49e9-be45-1ceaea472cbb",
          "length": 283,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "4e1f23c7-15a3-4d64-b8d1-e6e6449b84d9"
        },
        "item": {
          "id": "a9fcfaf1-9ceb-47ee-ad32-98e36e844a06",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "3b1f963a-7b66-45fd-831d-2ead170cd24f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "616930eb-e702-489a-ba81-efd82266aee4",
        "cursor": {
          "ref": "42c9d365-3862-42ed-b144-afeb9372401f",
          "length": 283,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "229b4b4a-0f18-4d66-af4a-f10fa963cef4"
        },
        "item": {
          "id": "616930eb-e702-489a-ba81-efd82266aee4",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "045f52be-a67e-4276-98bc-01549eb23205",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 18,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7ec5cfa9-cb67-4fe3-9b51-521bdcbbc8e7",
        "cursor": {
          "ref": "460f0da7-ba9a-4517-8a04-d48fbe6108ae",
          "length": 283,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "e3bb8b15-1f90-45e7-a05c-88ad0e37ebeb"
        },
        "item": {
          "id": "7ec5cfa9-cb67-4fe3-9b51-521bdcbbc8e7",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "bba9c617-377c-4e2c-9f75-ad51ca49e730",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f323e426-3cce-46ba-9b81-be01276b1697",
        "cursor": {
          "ref": "01e83ea7-c0a5-4ac1-9dfb-17eb13bc5261",
          "length": 283,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "3bc43d9a-fcbd-46f2-8784-096ba631be66"
        },
        "item": {
          "id": "f323e426-3cce-46ba-9b81-be01276b1697",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "826df3e8-3e13-433f-b8a3-42d7d269688e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4c382c76-c085-439d-8b96-aeabeeac3ad7",
        "cursor": {
          "ref": "8ac4928c-45fd-42be-a1ad-cde31d1c9daf",
          "length": 283,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "7881d517-8e31-49fd-b029-9cf775deea34"
        },
        "item": {
          "id": "4c382c76-c085-439d-8b96-aeabeeac3ad7",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "6e365005-1a91-4275-9880-2d62171552a1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "60954c97-294c-4511-9525-58b4a054795c",
        "cursor": {
          "ref": "118f2058-93f9-43bf-b48a-8cc4a0b8da43",
          "length": 283,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "2a557bcf-657c-42c7-970f-245379b12456"
        },
        "item": {
          "id": "60954c97-294c-4511-9525-58b4a054795c",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "eb68f45d-2368-4849-b160-dff939a2f037",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "636e1dae-c88a-42bb-9475-2204da597935",
        "cursor": {
          "ref": "090da703-dd93-42fd-8b70-abe56f0a0962",
          "length": 283,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "52534079-d3f6-43fc-9744-12333691fdc4"
        },
        "item": {
          "id": "636e1dae-c88a-42bb-9475-2204da597935",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "3e639d98-a923-48fa-b1e6-62d4b487f82c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0562d8bc-18c4-4631-bdd0-9350976d32fc",
        "cursor": {
          "ref": "425913de-4a4c-4ed0-9d39-232a0037c3a5",
          "length": 283,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "4a79ff03-6aa4-429f-8f99-8e4a0b4afe20"
        },
        "item": {
          "id": "0562d8bc-18c4-4631-bdd0-9350976d32fc",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "c86b44c1-93f4-4128-bee0-06b8bcf57aaa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b7c45385-ca82-47cf-9bb1-de503ac9576a",
        "cursor": {
          "ref": "d8667353-60a6-448b-ae30-5026fa24a45c",
          "length": 283,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "0b4faec1-4963-4480-b7f1-f7c2fcbaafb4"
        },
        "item": {
          "id": "b7c45385-ca82-47cf-9bb1-de503ac9576a",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "5495ab1f-9d95-436f-a230-b65611f60f42",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "66515cd5-fc7a-4dde-95ef-77736a0d69bd",
        "cursor": {
          "ref": "4c8c747e-6f3e-448b-92cc-473ba6191d9a",
          "length": 283,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "b546b364-a689-400a-9f6f-0f0b393e027a"
        },
        "item": {
          "id": "66515cd5-fc7a-4dde-95ef-77736a0d69bd",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "476ea8d6-1080-4991-9902-9dc7b3ce91ef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "11d57b2f-25bc-4a61-aede-354ff1ab65a9",
        "cursor": {
          "ref": "bccea67e-0d4f-409e-b996-88e1275d84f0",
          "length": 283,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "516f42f1-ef34-4c62-94b1-5adfd539c344"
        },
        "item": {
          "id": "11d57b2f-25bc-4a61-aede-354ff1ab65a9",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "870ea6d3-dee3-410e-9750-103c3d0d22b5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f2d1ace6-b2cc-421a-87a1-85725cae1864",
        "cursor": {
          "ref": "18ef561b-e2fa-47be-b33c-7994d4562eac",
          "length": 283,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "1f9d0ddd-cfcd-4920-8a4f-e75a9ade4679"
        },
        "item": {
          "id": "f2d1ace6-b2cc-421a-87a1-85725cae1864",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "2d7b8f93-733d-4345-9bd2-47f2567fa084",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1541353f-5dd1-47f8-ba00-1b15da011bcc",
        "cursor": {
          "ref": "120d7f46-d0f4-45d0-a184-c24d515a838d",
          "length": 283,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "7d649b7c-98aa-4f54-a2c4-d02cfe78740c"
        },
        "item": {
          "id": "1541353f-5dd1-47f8-ba00-1b15da011bcc",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "759ed98d-5965-42f9-a1d1-3adc6f2da6c2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5670d0d4-e843-407d-833c-09251801426e",
        "cursor": {
          "ref": "2285c507-8b2d-4ceb-8d8a-594876b0f56d",
          "length": 283,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "2567470a-7850-4772-b01b-d2574d2af7ea"
        },
        "item": {
          "id": "5670d0d4-e843-407d-833c-09251801426e",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "0ee8db6b-f71b-444b-8fb2-dab1d8ff2298",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "854f4be5-325d-453c-842a-1f7b70ab6dc4",
        "cursor": {
          "ref": "5d3982e6-9688-462b-acb1-61181804ff57",
          "length": 283,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "864c2b32-d56d-4ff7-ba4a-5a40e7baff32"
        },
        "item": {
          "id": "854f4be5-325d-453c-842a-1f7b70ab6dc4",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "86055d73-628d-44cf-8206-13a265b24d07",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "78bf2f4b-3299-4c3d-a1fd-be28a48eb034",
        "cursor": {
          "ref": "23aa796b-81b4-45ad-a137-08f8b7d48b7a",
          "length": 283,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "a1717aee-a5fc-4b6a-8e29-e330e1451215"
        },
        "item": {
          "id": "78bf2f4b-3299-4c3d-a1fd-be28a48eb034",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "84e2a363-47c5-45ef-be25-f1f89e7253f6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ac1c55f-b826-437f-b69c-ddae67b9ada5",
        "cursor": {
          "ref": "93b553d2-c55e-4c82-98d1-61522f9bf44b",
          "length": 283,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "6f22ed62-5776-4a85-b651-f724b51d864e"
        },
        "item": {
          "id": "6ac1c55f-b826-437f-b69c-ddae67b9ada5",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "4f1d6c1b-f11a-42d0-a357-4f4f0f240f23",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 20,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b9fbb36a-ef06-4c9b-b872-7708efc50d0f",
        "cursor": {
          "ref": "16b11e62-86a0-4aa6-b96d-9fc8f46d2b78",
          "length": 283,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "862c1d64-55ef-4557-83a6-8ad74655c402"
        },
        "item": {
          "id": "b9fbb36a-ef06-4c9b-b872-7708efc50d0f",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "6a42b150-27ca-4cb5-ad6d-4548bbe4bfc3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3404c0e6-fa98-4a27-88b8-5be6a050d0f9",
        "cursor": {
          "ref": "68824551-948c-43cb-b8dd-ccaa48059844",
          "length": 283,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "d0ca2440-15ef-4796-afd5-186ec8480ad7"
        },
        "item": {
          "id": "3404c0e6-fa98-4a27-88b8-5be6a050d0f9",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "f49ac92c-d4f9-47f5-975d-ee94dad41117",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "097a6434-0064-4943-a09f-2c0b8a98d999",
        "cursor": {
          "ref": "129d7453-f294-426d-b10c-6a9847d5ad56",
          "length": 283,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "a93c70e9-3e07-474d-ac2f-294668fdf4ad"
        },
        "item": {
          "id": "097a6434-0064-4943-a09f-2c0b8a98d999",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "2807ff98-b92b-4fc4-8143-b2da630b1d15",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f8b434f-9e6b-4222-9c5e-8cf6ae04427f",
        "cursor": {
          "ref": "8ec25b04-ba3a-4724-a0e9-a6effd7edbfc",
          "length": 283,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "5166da20-a1f8-4946-88d8-38e6f69de95f"
        },
        "item": {
          "id": "7f8b434f-9e6b-4222-9c5e-8cf6ae04427f",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "7a61aefa-23ca-447f-892a-086281ebe9d9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bfce2e02-3e40-40a7-9cba-376a5a968307",
        "cursor": {
          "ref": "06d95c20-01b5-4189-a606-c8aad89851a1",
          "length": 283,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "82c768c3-79a5-4a9b-9434-80b0ad9fc5c7"
        },
        "item": {
          "id": "bfce2e02-3e40-40a7-9cba-376a5a968307",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "4cc83a61-58ef-4155-b9d8-c0e192cef8ae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ed034e9e-19c9-4190-a402-b80c142384f6",
        "cursor": {
          "ref": "d3afe34a-5941-48cc-af1d-23916399bb2b",
          "length": 283,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "d59e6947-6b43-477d-b690-957bd53f574f"
        },
        "item": {
          "id": "ed034e9e-19c9-4190-a402-b80c142384f6",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "e2e79686-97d8-4c6f-a2c8-2205deff8917",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f8390f8-40e6-4d20-9195-c1c2e386b627",
        "cursor": {
          "ref": "aef8f303-d691-461f-ad0b-f02c667fafca",
          "length": 283,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "b9bd662c-c280-407b-b7bb-182df95a84e6"
        },
        "item": {
          "id": "7f8390f8-40e6-4d20-9195-c1c2e386b627",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "4bd2b320-3188-4f9e-9cd8-d06db78a6d81",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "88846cab-10b7-471a-8de4-8b5fb7709dba",
        "cursor": {
          "ref": "94d6bd21-9e0d-4fa7-bd62-730551ec0f4b",
          "length": 283,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "0f0978be-3cf4-42e0-93ae-057d4fa34028"
        },
        "item": {
          "id": "88846cab-10b7-471a-8de4-8b5fb7709dba",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "0876f600-93f3-49c3-801d-33ef26590570",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "272834e2-956a-42a2-be7a-2be44b7f618a",
        "cursor": {
          "ref": "52be35c3-639a-46cc-88fc-6437792effd3",
          "length": 283,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "75eb1be1-3dc8-4973-936d-ea19cc187fb7"
        },
        "item": {
          "id": "272834e2-956a-42a2-be7a-2be44b7f618a",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "0515bb7b-b95a-43c6-bcc7-0abc2af04eb1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "83203648-d29b-4cda-ba3f-f86bf66c90a3",
        "cursor": {
          "ref": "c3611a67-e7b5-43f7-8105-7e65776d0598",
          "length": 283,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "2ef580d6-5f8e-4204-8a90-40b0ff5b108b"
        },
        "item": {
          "id": "83203648-d29b-4cda-ba3f-f86bf66c90a3",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "a4cb5231-f6ea-4650-88db-b97bf474018d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ec6beb94-1b5d-4aa7-8221-93787dbed49e",
        "cursor": {
          "ref": "2a20db20-efa4-4549-b3fc-060a7c27edb6",
          "length": 283,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "9aea7d8b-1d0b-4fec-ac78-e8fe660e2fc8"
        },
        "item": {
          "id": "ec6beb94-1b5d-4aa7-8221-93787dbed49e",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "dfff258e-e002-450b-8421-6c604cf49eac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5d4594d0-826b-42c0-9095-fbcbe8afa17a",
        "cursor": {
          "ref": "7f475388-32a0-4b2a-871d-7ebc5764df46",
          "length": 283,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "a696d992-069b-4736-9704-9f73ff7749a3"
        },
        "item": {
          "id": "5d4594d0-826b-42c0-9095-fbcbe8afa17a",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "d7e11189-1d3e-48ee-9f39-cf400fbafd86",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d9a0641c-d43d-4b80-881c-b53cc00aa319",
        "cursor": {
          "ref": "0e68c815-169e-4bed-840c-40625ba08ff4",
          "length": 283,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "6e6c2c75-5034-4449-b96f-be7a70eb20d1"
        },
        "item": {
          "id": "d9a0641c-d43d-4b80-881c-b53cc00aa319",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "f255f8f5-9d45-49ca-a0ef-6d05896fe3f2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b095ed0d-3060-4fd5-b3db-234adb581603",
        "cursor": {
          "ref": "7aa09469-b7a3-456f-9a5d-042001efa1b9",
          "length": 283,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "c8c282b3-6ace-4bd9-a83e-21fcd1bd779c"
        },
        "item": {
          "id": "b095ed0d-3060-4fd5-b3db-234adb581603",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "85f93c6e-e383-419d-83e3-e4a5ebd38fef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "36d3c205-5a92-4d2c-9241-5bc47a08f649",
        "cursor": {
          "ref": "cc824e5e-2228-4d82-9214-9dac892f7093",
          "length": 283,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "65908be7-cb4e-402a-b02e-6b514da8eaac"
        },
        "item": {
          "id": "36d3c205-5a92-4d2c-9241-5bc47a08f649",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "d5d33765-7d39-4dd5-9360-83f1f8fa0e64",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "77b30f49-d291-411e-9c1c-38c24d212749",
        "cursor": {
          "ref": "96516713-b2c4-48a5-8ebe-fa108ccee5c4",
          "length": 283,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "877fb883-a01c-4077-a8b1-c15371b738cf"
        },
        "item": {
          "id": "77b30f49-d291-411e-9c1c-38c24d212749",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "84fbc82f-d7eb-45f3-8b6b-bca9c285969d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e3c2de7a-f390-42f0-8b5c-024a05ea5b64",
        "cursor": {
          "ref": "9d69ed62-8cb8-469a-b70c-3270ad296797",
          "length": 283,
          "cycles": 1,
          "position": 251,
          "iteration": 0,
          "httpRequestId": "c8820722-911e-4bdf-9768-fc2876151293"
        },
        "item": {
          "id": "e3c2de7a-f390-42f0-8b5c-024a05ea5b64",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "d467c008-c8b0-46da-ae84-7cc0e371a880",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8557408b-9a27-4b81-a092-3e0e762ce88c",
        "cursor": {
          "ref": "3a76d15b-328a-4dad-bc90-23678a3746b9",
          "length": 283,
          "cycles": 1,
          "position": 252,
          "iteration": 0,
          "httpRequestId": "38d41ede-227a-48df-ac80-fef53d91f9d0"
        },
        "item": {
          "id": "8557408b-9a27-4b81-a092-3e0e762ce88c",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "04954fba-4928-4343-ae4c-964ef8fe95dd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a9fc12af-9c05-42cb-ba8d-be869675c34a",
        "cursor": {
          "ref": "a8e28f5b-fc26-41f2-b9e5-7d4c8009c65f",
          "length": 283,
          "cycles": 1,
          "position": 253,
          "iteration": 0,
          "httpRequestId": "171fe2e0-b9cc-4068-9ca5-b1c62f6bc57c"
        },
        "item": {
          "id": "a9fc12af-9c05-42cb-ba8d-be869675c34a",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "80ab18e8-e2c8-46ed-92a4-ff965802c746",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "161a71b1-1a35-4495-8896-022d9a78a678",
        "cursor": {
          "ref": "eed1db4a-68cb-4121-8b93-1b3020b240d5",
          "length": 283,
          "cycles": 1,
          "position": 254,
          "iteration": 0,
          "httpRequestId": "543d3425-ab1b-471f-b93e-59a7f382c7de"
        },
        "item": {
          "id": "161a71b1-1a35-4495-8896-022d9a78a678",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "6bc18fcc-513a-403b-a087-c551b32ede8b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "27804a1a-3f86-4e46-a9f0-ad23ab6ea3ee",
        "cursor": {
          "ref": "d8a21184-75f8-4a82-b4ca-6f0123c9db28",
          "length": 283,
          "cycles": 1,
          "position": 255,
          "iteration": 0,
          "httpRequestId": "9ccc1026-025b-4315-bad4-d1a58520f409"
        },
        "item": {
          "id": "27804a1a-3f86-4e46-a9f0-ad23ab6ea3ee",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "02edd988-61a6-405d-b9ba-a14529ae3f18",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 21,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bacb937b-328f-471b-a7b0-c64847b4c30a",
        "cursor": {
          "ref": "407556a4-b083-4ffd-9ab2-f838c498ab24",
          "length": 283,
          "cycles": 1,
          "position": 256,
          "iteration": 0,
          "httpRequestId": "b4376e1e-722d-4c14-9adf-48b6d43240d2"
        },
        "item": {
          "id": "bacb937b-328f-471b-a7b0-c64847b4c30a",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "19bfb282-d33b-44b3-984f-dfcbf7d48dab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 20,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b356f746-dcd5-48bf-bf6a-de93b618c060",
        "cursor": {
          "ref": "2955c146-77ae-40b7-9e88-daf2276525d4",
          "length": 283,
          "cycles": 1,
          "position": 257,
          "iteration": 0,
          "httpRequestId": "7a41aff7-eb09-49bb-9a40-54ee2e7a82e5"
        },
        "item": {
          "id": "b356f746-dcd5-48bf-bf6a-de93b618c060",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "44c22cd7-5f32-4067-a646-ff587908b8b8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "48673864-a196-400f-a664-7c04aca821e0",
        "cursor": {
          "ref": "46dba4ca-be82-4182-afd0-e8a949d55e0d",
          "length": 283,
          "cycles": 1,
          "position": 258,
          "iteration": 0,
          "httpRequestId": "0ca50bf9-335b-4620-b324-25c110092e7a"
        },
        "item": {
          "id": "48673864-a196-400f-a664-7c04aca821e0",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "123e21f4-e993-480b-9ac5-cd91cd23e77c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ab7ae859-a291-4e59-b126-ffdf3a144895",
        "cursor": {
          "ref": "91e639d7-6430-4ca7-8e5a-5a118e1593cf",
          "length": 283,
          "cycles": 1,
          "position": 259,
          "iteration": 0,
          "httpRequestId": "4b01b345-7bbe-4b1f-a06a-ce03eb4da61e"
        },
        "item": {
          "id": "ab7ae859-a291-4e59-b126-ffdf3a144895",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "e393178f-c1cf-47f5-bb86-52919b6ab7d7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0caa06c3-c72f-4ddd-9395-345df6863328",
        "cursor": {
          "ref": "448ce74a-a363-4566-a1b6-ac6873e02e65",
          "length": 283,
          "cycles": 1,
          "position": 260,
          "iteration": 0,
          "httpRequestId": "4263f41a-9954-4f5a-82a9-0e0d3bddf7c4"
        },
        "item": {
          "id": "0caa06c3-c72f-4ddd-9395-345df6863328",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "6dc16fde-df2c-4db8-b89d-bc1565fee23b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1a84d801-9322-4a75-b74d-29d1281aad68",
        "cursor": {
          "ref": "89a8431a-9dfc-4bb6-8931-a728f302f21b",
          "length": 283,
          "cycles": 1,
          "position": 261,
          "iteration": 0,
          "httpRequestId": "4dfe6507-e888-480b-9206-946abb66a53d"
        },
        "item": {
          "id": "1a84d801-9322-4a75-b74d-29d1281aad68",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "0f28c0da-1ae2-4139-8747-40381928bf4a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e323f653-df9a-4fbe-b164-afaa837e34ff",
        "cursor": {
          "ref": "36edb199-3639-4845-aa90-fae368876281",
          "length": 283,
          "cycles": 1,
          "position": 262,
          "iteration": 0,
          "httpRequestId": "d4071437-2247-4c62-bb9d-1fd128ea7d2e"
        },
        "item": {
          "id": "e323f653-df9a-4fbe-b164-afaa837e34ff",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "adff7da6-0cab-4d4c-b37d-022872b3670e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "06526272-e8d9-4309-bc4c-c37de572df84",
        "cursor": {
          "ref": "fe853af8-5447-4bec-9b49-699bb9a33f09",
          "length": 283,
          "cycles": 1,
          "position": 263,
          "iteration": 0,
          "httpRequestId": "4d0be83e-5b7f-4fed-a7eb-55b26ed32d84"
        },
        "item": {
          "id": "06526272-e8d9-4309-bc4c-c37de572df84",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "bee45993-58c6-407b-b893-7287e9c6ba20",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 21,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f7116ea8-946d-4499-afa1-1c8aaddd8525",
        "cursor": {
          "ref": "102f7710-bfa7-461e-b9d1-0d63ecbed921",
          "length": 283,
          "cycles": 1,
          "position": 264,
          "iteration": 0,
          "httpRequestId": "4260cd5f-59bc-4ed1-8c9d-5367142d1335"
        },
        "item": {
          "id": "f7116ea8-946d-4499-afa1-1c8aaddd8525",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "f45e2c85-6253-4191-a5d7-24d9af166cc6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e0cda39-420c-4399-9f72-04027d2b7208",
        "cursor": {
          "ref": "752208a5-5a1c-45d1-8021-f39d4b38660a",
          "length": 283,
          "cycles": 1,
          "position": 265,
          "iteration": 0,
          "httpRequestId": "639001dc-63af-4abb-ade0-321e5494cddb"
        },
        "item": {
          "id": "3e0cda39-420c-4399-9f72-04027d2b7208",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "15bf2fdb-2efc-44c9-8564-a80d8a4d27a0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "99494040-6241-4454-bce9-5f95ae1501ee",
        "cursor": {
          "ref": "89a0b578-20fd-4f9f-afdb-7a2e2bbeb901",
          "length": 283,
          "cycles": 1,
          "position": 266,
          "iteration": 0,
          "httpRequestId": "0df744dc-33b0-4b1c-a174-4c85fd121964"
        },
        "item": {
          "id": "99494040-6241-4454-bce9-5f95ae1501ee",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "cc82c3c2-6e94-4fc9-8a23-b24bdcd95158",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "97892e7f-db48-4ea9-be03-7a4abbc63543",
        "cursor": {
          "ref": "b1367573-36d1-44be-a1bc-5c5b4f71c846",
          "length": 283,
          "cycles": 1,
          "position": 267,
          "iteration": 0,
          "httpRequestId": "73f6ce64-cabc-493f-a817-c1cf12af17cf"
        },
        "item": {
          "id": "97892e7f-db48-4ea9-be03-7a4abbc63543",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "b64fa054-975c-455d-aef6-8d138568fe0f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0ae3aaa1-6071-4bb8-9c61-690cdb5bb704",
        "cursor": {
          "ref": "b9eecf9a-8505-490e-ae93-3fcc9a6a041a",
          "length": 283,
          "cycles": 1,
          "position": 268,
          "iteration": 0,
          "httpRequestId": "735b6f6f-ee04-441c-90aa-d47ffc8d20b1"
        },
        "item": {
          "id": "0ae3aaa1-6071-4bb8-9c61-690cdb5bb704",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "f462e033-0686-421a-a489-de2cb6699bfc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "96215326-2893-4509-aad1-58f8fd920810",
        "cursor": {
          "ref": "fe2f5293-1bb9-4967-9e0a-9936b7d8bd01",
          "length": 283,
          "cycles": 1,
          "position": 269,
          "iteration": 0,
          "httpRequestId": "178d9567-480f-4511-abb0-91ae5eeef495"
        },
        "item": {
          "id": "96215326-2893-4509-aad1-58f8fd920810",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "d7c3dc64-8b9f-484c-a887-f3dac7772d90",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dfa8f15b-b8c7-4fc3-8c49-18eabf2f15fa",
        "cursor": {
          "ref": "6ae47b5b-e3a1-49a7-9e43-37cc4e96d0fc",
          "length": 283,
          "cycles": 1,
          "position": 270,
          "iteration": 0,
          "httpRequestId": "2eb97cf5-dd41-4f69-a96f-0d40d375133d"
        },
        "item": {
          "id": "dfa8f15b-b8c7-4fc3-8c49-18eabf2f15fa",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "fa55ec19-b0f5-4d2b-844b-68cc53afaa64",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2f5cbab1-7019-434a-82bc-7c9835363c14",
        "cursor": {
          "ref": "1c837361-e004-48f7-87d8-55409cd6e976",
          "length": 283,
          "cycles": 1,
          "position": 271,
          "iteration": 0,
          "httpRequestId": "8ba55f3b-494d-4e62-937c-d349f88f30da"
        },
        "item": {
          "id": "2f5cbab1-7019-434a-82bc-7c9835363c14",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "c0d072a3-10f0-44af-ae1b-8fe613bfb292",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b1aafb77-cd5d-4d33-bbfc-9732c50c7e12",
        "cursor": {
          "ref": "7200e5af-e776-4bc2-a3c5-afbc9f5504d0",
          "length": 283,
          "cycles": 1,
          "position": 272,
          "iteration": 0,
          "httpRequestId": "c4d032a0-0745-462b-88c5-00f738d03d97"
        },
        "item": {
          "id": "b1aafb77-cd5d-4d33-bbfc-9732c50c7e12",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "f25aaa28-198c-497a-bab4-082cce1a1554",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5c2bee1a-43c0-40d8-bc64-63a953a4db22",
        "cursor": {
          "ref": "68e24155-3780-4a3a-9d6c-390a6ddbb191",
          "length": 283,
          "cycles": 1,
          "position": 273,
          "iteration": 0,
          "httpRequestId": "fdaf858c-64bb-401d-aece-efad3db08c29"
        },
        "item": {
          "id": "5c2bee1a-43c0-40d8-bc64-63a953a4db22",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "61d40137-e03b-48a1-9426-e7f6cdc3ec85",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fa4941db-2c27-4986-bdc0-17a7d6ca7246",
        "cursor": {
          "ref": "8e7aa284-4b6d-4eaa-bd24-93aee03e6e8b",
          "length": 283,
          "cycles": 1,
          "position": 274,
          "iteration": 0,
          "httpRequestId": "3de5dcc1-3155-4012-b26b-1ccc60114077"
        },
        "item": {
          "id": "fa4941db-2c27-4986-bdc0-17a7d6ca7246",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "c3f70e78-8a27-4487-8233-56970c0692da",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "307a9dae-13a9-4263-a238-31e2d64c25f5",
        "cursor": {
          "ref": "17af93a2-acce-427f-b8ff-05fe01cbc0cb",
          "length": 283,
          "cycles": 1,
          "position": 275,
          "iteration": 0,
          "httpRequestId": "a36e67d2-1f1b-47a5-9f61-83e4ea810b9d"
        },
        "item": {
          "id": "307a9dae-13a9-4263-a238-31e2d64c25f5",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "e1058fb7-f302-4f72-8cba-8e092369deeb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d303abd2-3753-4655-bbeb-01937140dd88",
        "cursor": {
          "ref": "acd15ce9-416d-4951-b20d-98382972865f",
          "length": 283,
          "cycles": 1,
          "position": 276,
          "iteration": 0,
          "httpRequestId": "50052557-2f23-4b87-8468-8d74e55c04ba"
        },
        "item": {
          "id": "d303abd2-3753-4655-bbeb-01937140dd88",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "c337e070-bd58-48c3-83b7-86ff64e04e5e",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 4,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "df34af66-bb87-451f-8ca3-6164ee47b88d",
        "cursor": {
          "ref": "2ecb97e8-04e7-416f-bb25-fe18fff0e4c9",
          "length": 283,
          "cycles": 1,
          "position": 277,
          "iteration": 0,
          "httpRequestId": "d07a1477-f245-4696-b528-b50a15cb2733"
        },
        "item": {
          "id": "df34af66-bb87-451f-8ca3-6164ee47b88d",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "4aea12f7-5783-4f24-9b9c-b84e390914ac",
          "status": "OK",
          "code": 200,
          "responseTime": 27,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "b72b4955-ea0b-4c3c-9d61-03be8f05dd4f",
        "cursor": {
          "ref": "be79d666-53b6-4b3e-b55c-39c24a70d764",
          "length": 283,
          "cycles": 1,
          "position": 278,
          "iteration": 0,
          "httpRequestId": "b7804537-c413-42f2-8668-42e5d5190ce7"
        },
        "item": {
          "id": "b72b4955-ea0b-4c3c-9d61-03be8f05dd4f",
          "name": "credentials_verify"
        },
        "response": {
          "id": "944a670f-b311-4a02-9560-2e0537ddea8f",
          "status": "OK",
          "code": 200,
          "responseTime": 2147,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "8980c47d-e2e1-496c-a002-f89d68bd4a49",
        "cursor": {
          "ref": "ce6b5958-fac4-4b69-b125-73ffd4a5f59d",
          "length": 283,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "8427ec14-3c21-41db-a999-63d9f22f7ca3"
        },
        "item": {
          "id": "8980c47d-e2e1-496c-a002-f89d68bd4a49",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "70c902b7-15cf-468e-8f2c-31c7a028d87c",
          "status": "OK",
          "code": 200,
          "responseTime": 2575,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "cbe38405-1a97-4eee-b540-fb2ea9539b96",
        "cursor": {
          "ref": "919b1aab-7d2f-4225-9d30-da960beeb919",
          "length": 283,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "71a20213-fc3b-4b30-bef0-24041928bef6"
        },
        "item": {
          "id": "cbe38405-1a97-4eee-b540-fb2ea9539b96",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "4d40a68e-8389-40ea-9dd8-3a07a3b0574d",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 4,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cbe38405-1a97-4eee-b540-fb2ea9539b96",
        "cursor": {
          "ref": "919b1aab-7d2f-4225-9d30-da960beeb919",
          "length": 283,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "71a20213-fc3b-4b30-bef0-24041928bef6"
        },
        "item": {
          "id": "cbe38405-1a97-4eee-b540-fb2ea9539b96",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "4d40a68e-8389-40ea-9dd8-3a07a3b0574d",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 4,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4db88d86-fdd3-4b91-b356-025d6935e1ac",
        "cursor": {
          "ref": "0c52fa3d-906c-48d4-8d50-2fe8e47f18e8",
          "length": 283,
          "cycles": 1,
          "position": 281,
          "iteration": 0,
          "httpRequestId": "16319f8d-d4fd-4071-adb0-c577c8a7e72d"
        },
        "item": {
          "id": "4db88d86-fdd3-4b91-b356-025d6935e1ac",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "33159fda-ee19-4828-8c19-6dc1fef6cf32",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 4,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c56d44e-8c10-4fb4-8fa0-1c7dcd69ffe7",
        "cursor": {
          "ref": "a68f9c08-163b-4c5a-82ae-7a43a367ce17",
          "length": 283,
          "cycles": 1,
          "position": 282,
          "iteration": 0,
          "httpRequestId": "8bfb2161-5993-4196-b216-1646bc08885f"
        },
        "item": {
          "id": "0c56d44e-8c10-4fb4-8fa0-1c7dcd69ffe7",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "647ea2a5-7cf7-4f1c-9a56-ef6e86a873e7",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 4,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}