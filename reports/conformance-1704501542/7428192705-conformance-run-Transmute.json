{
  "collection": {
    "info": {
      "_postman_id": "0b8a4a7f-f952-4403-a9a4-909b37b8fa24",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "1a54bc4e-4b7b-4058-90c0-00bd1743baeb",
        "name": "Clear Cache",
        "item": [
          {
            "id": "5fcf961e-d2b8-495a-ac0b-75a6d6b215a0",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "6b21268a-3e3a-4bff-a01e-f0711fd3622b",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "ed26a94c-dbac-4a93-aa86-6fd3a6c0d3e5"
                }
              }
            ]
          },
          {
            "id": "c7f4d555-33d0-4eb4-9d52-25b4c2fc9ff9",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "9c8afd23-5b44-4c75-b0b1-e35e3127da8a",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "d31f9077-1ebd-4d4a-909f-4dbe1f75ba58"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "5602ad1c-fcdf-41b5-b647-e59d22092f4b",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "657c7fce-3b40-4ecb-8497-d1f620cba984",
            "name": "Positive Testing",
            "item": [
              {
                "id": "28ba013b-32f7-4799-aca2-54e543587a46",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "e4ed957b-129c-41e3-a87a-7279de893cc5",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "518bbc67-fdb5-4ccb-8bfa-6475e954f586"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "5b360057-e2e7-4868-a431-6e4f8122b7cf",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "91e3fcae-5b9e-4307-90fa-822c196ec52b"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "769b8eb3-70ac-4000-93e7-864e5f83068d",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "592e9b6d-f945-4ac6-b4f3-ecb5c719a090"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "e72300dd-afa1-4b68-acb8-2e5a1b6198f5",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "b3a4c9e8-fff8-460a-868f-c4ec12acef2c"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "8a664530-8ca7-40bb-b974-b2e314431a7c",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "23ffc8f5-beca-49d9-93aa-dba6045e7b5e"
            }
          }
        ]
      },
      {
        "id": "d20479d1-ba24-4ee7-aa61-583787989450",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "16e74b15-7912-47ab-bbc7-3b8718e7c592",
            "name": "Negative Testing",
            "item": [
              {
                "id": "7f626895-8b58-412f-9c00-57ffad4db5c5",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "41f027d3-2d86-432d-8bce-276b21920137",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a9f506f7-6f29-4772-8914-7502f5dbcd4a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "309c5980-e1d8-41e0-aa89-34e48f741d83"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f35902e1-48a1-43bd-98da-7b5f304e6d89",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2666428d-f5a2-4315-9cb0-2f13ed56ab4e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "1ff4936d-67a2-479f-9278-174fd7bc058e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c3553a2d-f596-48a9-9f30-13650a5c647f",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a1b6eed1-ffb9-4686-8a72-2d74a221d73a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "7dfe66a8-b812-4a0a-a375-de12e47cff10"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "be8f1074-22b2-4711-8e69-c31000f12918",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "15b57862-ffdc-48da-a957-68e5ec11846f",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fabcfd9b-0370-4085-838b-df3687e3b204",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "38b85b1e-df40-451d-a8ad-43a67e60ed17"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f290f9a3-faaa-4445-8b9f-7e168f2ed8d6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2f2213f7-0ec6-4f4e-ba3b-ddd91ef3e231"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "8e4fdf1f-018a-4e13-9e51-fffddeb56958",
            "name": "Positive Testing",
            "item": [
              {
                "id": "1a55d4f1-18f9-4f65-8ff6-adfc2b38910e",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "92855b5a-03a8-4ef6-9bd8-6030902b227c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "64ea3e66-51ce-4b40-8031-c5353eb0f5c7"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "773c44b4-18c3-49b3-85e9-31e0563f87b5",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "92940b27-dfcd-4e02-84b5-de00cf90a5ea"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "6324623e-74f4-4442-b8de-d4969884d828",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "ce0c05a0-b28c-43d7-ae57-09c57048072e"
            }
          }
        ]
      },
      {
        "id": "51381082-4cad-464d-8007-04e0c30e572f",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "9d352cd3-c513-4f4e-a7c7-5595f4039efe",
            "name": "Negative Testing",
            "item": [
              {
                "id": "30085005-67a8-4e74-b742-dfc3b23b753e",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "15fc6365-9b56-408d-b16e-ebba0c81b69b",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d7f10f83-8315-46d7-8735-d32fcc4e39fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1c916f0d-11b9-483b-a62c-5bd29e0d6539"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "23e0e81f-d4fc-4ad7-a485-5bdc2b169790",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "2d13bd4c-b563-4007-8700-d005f81f0a39"
                        }
                      }
                    ]
                  },
                  {
                    "id": "50335878-06a1-4e13-a202-a0dde20041ac",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fccdd7b0-65c1-4d1b-8e9a-16a1b9802201",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "77e3d462-5f25-44cb-8c9e-9fae32d892d1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b606b1a4-20d2-4d1f-940c-cefb2ee7f0db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "33ed2f15-df51-48bf-8268-105be9a269f5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0e4fa71b-e5fa-4981-a56c-80da414b6856",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1ca292b1-d4a9-4fcd-9956-12a936715cd5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5068eee9-01cb-4172-9864-46c817d12ca7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eedd94a3-5e3b-43d5-a6b4-ec9403e28735",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f83b9911-7c26-42a8-a775-e73b438340b2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bae591c3-1a1d-435e-874d-6ac6c2d17b4c",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "87223eec-d628-4726-93f4-f1e46a1abeaa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1d99f8e9-ad84-4eee-96d6-dc372a0323a1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "533f3c18-00d4-4dbe-984d-8c77e93adc1f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "25ade776-db3f-4427-8ae2-a812ff7ddf9b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b00f8896-30a7-41dd-adcb-bee9e4a7dc78",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a15ce8b0-915f-4ddb-abc3-661ef27b5fc5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1e035295-c66b-42e5-82d2-481cb70ead45"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f65ac097-f2a7-45b7-80c3-ed0b6efef3d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "3895a872-47c8-4a70-9a33-a12fe18ef778"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ad19942a-99aa-4549-a1c7-f56d1c590d75",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a5277e58-5edf-4620-9663-9275087492d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4b4146ad-b1ed-4d13-a592-dfdb39b3b48f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d225f2c3-779f-4c61-a052-cc4b7c274bfc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "090c5a10-9e75-43da-8864-10518da07d7f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c32f09d1-965e-42e5-b990-4c0e77e25323",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cd36946e-da16-4c9f-819e-616ffe03632c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ec5cb781-81a8-43a0-a474-2b8162ae4859"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c580cf18-a78e-442f-8f99-282cedae4de4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "aee279c6-d560-42e9-b76c-bafba627d273"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6790c954-1e31-45d9-9108-7612bf91f327",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2632b769-6086-4f7a-a1a0-ec81e9c8fab6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5a1e3cdc-d416-482e-9cb8-86fee42a67b9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b4e8821b-eae3-466c-9cb2-ca1c00c3f4da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b51fc7af-e115-4aed-9863-4c205725c0b3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "227326ba-7707-45f2-a656-554a2a0430b2",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6c29dc84-0788-4070-b6ab-b5ecf15b648c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "03d53f8f-65fd-4090-8572-de51c6d2d384"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b1d33d39-7c96-410f-8952-acb2e9ce46e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "5ddcca83-dd0f-43a9-97ff-d21bd57110be"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c9109550-6cdb-4aff-8130-6a28e77fbe9a",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2fcd9b33-26eb-4bc2-aa90-280f5a6a94e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "66bd9380-eef6-4157-b04f-d0fef6e48d1a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "868855df-9ac3-413a-9794-01d5f4518177",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ac85483a-6328-4ee6-9999-82ee97be2634"
                        }
                      }
                    ]
                  },
                  {
                    "id": "75679b90-286e-4d29-8940-d7dfbcba3c2f",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ca41b9b7-05a5-4791-b545-1c1dfe3fd451",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5b8dd438-44cb-4e6a-a70f-dbc8836b88ba"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "14b837c3-eace-4e2c-9546-f301ca0b610e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "bf74e239-588f-48b5-9fec-571d23dd1632"
                        }
                      }
                    ]
                  },
                  {
                    "id": "89dbf17d-23b3-4a58-9e4e-efdf80fa4381",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bf73d498-82d9-47a6-8b91-6c913e090fb3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a7aa0a17-77bf-4338-a2af-fa72784422f0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bc62a90d-528c-4873-bffc-5947dbe572c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "9da9d060-efe1-4005-b24b-e231040a52e6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "06f50e6e-a723-4093-9186-87a646c6f2e2",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "77437cc1-0d25-43f7-b2b1-a1a3cfc0000a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b9841430-d445-415c-912e-7887f1d56654"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5c863528-16c8-42b0-b3c5-63746cb4fd3e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f7b5f61a-c283-42d7-9602-786f3c725350"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c85e7f77-a04f-4a94-bd0a-f96229a36b37",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "de248070-86a7-43f6-a492-45c69165d513",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bbc4c53c-fa8a-4826-b489-b7b1b06e77f4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fa10442a-1d03-4ce4-b5b9-76dca1495eca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "864b0e09-bf66-4799-aab7-43f07e39710f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "27ac8053-4a47-4ac8-8492-9d9ec3aa5315",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ae1088a6-0187-47c7-b4c5-3579c3f1dcb8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4c34c841-616c-4032-b97c-034509fef307"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7902b505-10d7-4298-b969-6d01c58906f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "68aac068-3248-462b-be40-59b471a2a9ae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3af8c134-353b-44ae-ae13-04bf96f00c35",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a528d47d-5041-4243-9ee6-a66e45638097",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "98746296-015b-4296-b387-a88748a5978d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "03ba7559-2e72-4204-838e-e8d81d99fb58",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "0021f806-f34b-4181-b913-391208ccccdf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e77b32e6-5ec7-42cf-97ca-7c863ab6f653",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e6ab212b-ba3c-4f54-bbe1-388d9e298fa1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "37a93bb8-ced5-4023-91bd-1d0118cb8425"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b7f01589-e51b-43e6-9c2a-73376f71dd7e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "cce3fbfa-be5f-40ac-a717-031c671be216"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eb384e0a-7fd8-4428-af5a-5e525847c092",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "11ad3562-85df-4e73-8659-6890f98392f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9d621904-1747-440f-80a2-324959f2ec6f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "df008622-5f21-4457-b84c-02e17ebb9e4b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "f2192d5e-21de-4c8b-b93d-4e345fbad65a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "235ca9b3-7e27-4878-8b4a-f35f60217e4d",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "92240a29-d0f3-403b-9852-cb3df5236afb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c5835483-f17a-4083-95d0-94b5104f18a7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "517f7823-9aa0-44cf-8ef0-4624c2131c8c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "005383d2-5d39-4882-be57-874e155af586"
                        }
                      }
                    ]
                  },
                  {
                    "id": "76f699a9-3ff4-439f-a12a-3b25b0ac79db",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bb36bca7-aac0-484f-934d-a0288476a913",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ceaabaa5-298a-4f9e-82d7-f2d53c8e1681"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fab66c48-ed6f-4382-a3f6-a3f0daeb5ffb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "0e5c25b1-67e6-4ada-81d6-61d15bac2c5d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "da33938d-b7c6-4bbf-b96f-440b018b8337",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "39c8056f-bc48-4533-b75d-04a1a2ddc827",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "50ed2c9f-282d-41c1-acb3-811661858996"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "588791ae-187f-46e2-b62f-6d322ed3a5f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "e47f7652-ba7a-4f72-9ccd-5d321e67e6f3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ccfbebb9-b94f-4f4e-8b8a-ad14826caf31",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6f5a2db1-80b4-4e0e-9af3-c2def4807cef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "36f711e4-6df0-4eb8-89e1-7f66e217a5b6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a50bbcfd-f2a6-4b75-b5c0-7ac859361b96",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "456c91ee-8792-4443-8f42-008b4a46a857"
                        }
                      }
                    ]
                  },
                  {
                    "id": "85ad6831-7d22-44d3-90a0-934c278ba974",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8127e784-92ef-4dc9-bb1a-20eaf8c86ec4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e1ba26bf-bbf3-43c7-8556-f56f91d5683c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "736fb0bd-c42e-42db-98bb-4f1966fff68e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "97100837-5a5c-49a8-816e-cd54dcaef980"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5057d019-1f4e-4084-9877-b487fd78a2ea",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "533c09fc-17c5-43e9-ac33-fdae32f8fbea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5bc68a06-edb8-4410-b549-f94d4c23afd0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "42bd1db5-d74e-4ede-8865-1ee950b7908a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "dffc198d-1a40-44dd-9e9b-60b492fb6005"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3260e5f1-4f07-45d2-8ad9-0048b3143385",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0bb8c364-0674-4de0-b69e-0c8d611b35de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "22fd429e-36bb-45ea-a3c7-4d43f3b982c8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9d61e86a-45e0-416a-93b8-38e09c6e9596",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "20c61903-fa6f-4bb0-9b6b-921bfa6102c3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c0ad1c0b-4496-4dc8-b04e-58a4086ddcc2",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3875b8c4-c7cf-47fb-bb8d-1e7db246f6c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8fb6c32a-6b39-48db-bb9e-8a9d6ed41c82"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a0e75370-db7c-4d62-a8c4-9f67db2d6fce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "2233a055-a901-4ccb-a446-af95b101fbd5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "29e3bfcb-dc65-42b9-9f90-7f44f79f7256",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1be3a3d2-ef14-4c6f-9d89-bb83a3d73f64",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7a4139b5-2441-4426-b45b-d86aeccd39d3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7776fea0-9874-42b8-b98e-347abcdfdaf3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "4ca53447-5ae2-460a-8bd7-d078e3f9abcd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "88ae5b13-690d-4f9b-a3c3-6d87811c4d8d",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a933e0db-a410-43e8-be0a-75ee2966dba2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e61718c3-7e74-491e-833c-4e290af6b340"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f89b866c-bdc8-4403-8e01-13f26c044721",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "00a40ff3-795e-42ab-822f-311161daeec0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b32650fc-cced-4c93-8902-c2c3c1caa36d",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b2698620-d775-4327-a694-a111a4290907",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "51e877e1-d810-4b15-a0a5-bb9b65ea37c3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bb9fcfe9-de1a-4c4f-9e1d-e8a94ff9faad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "720faa20-b116-41bd-b0b2-48a9c42194b0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "68da0fb8-d362-4599-8a38-eb4f59bbff35",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "50632460-60e1-469f-b915-094aff59c769",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e102c6bb-87af-4525-ada5-08855edfa377"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0b71d4cc-37a5-4750-9456-0240044a6889",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "8d38ad3b-637e-41d2-8d1c-3d36afc4d5ba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "068612ec-4dd7-46aa-89ef-62ff3066633d",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e49e932d-ffa0-4254-a7cc-f255bae2b0d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5543cff9-966a-4778-b36e-005ae7830b0b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a78a8633-0ec5-463a-91a8-22cecb89a776",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "37ebe6b4-0da2-4f17-92ba-49c4b30f03e8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "56f5af71-9617-46a0-be07-8d647c9b5397",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d9485cfa-895a-43f3-9142-778e4d252da5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3eec2287-0562-43b5-b737-e07809866bc1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cb25fd57-42ea-4412-b2e7-b98d2008cbc8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "cfd9e1c6-8900-4d14-97ac-da5c1497e53a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "15a4c282-b144-4fd4-8bdd-38e175361c16",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "089ec93b-a3a4-4028-9db5-84c56e8d73ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e01b341f-4066-4d98-ab21-7c36dc50f1fd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f947d3c8-8bf2-4b7d-a18f-0d990663fffa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "889ea7bf-0bfe-4768-95aa-b9a7e0b4618b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8125784b-becc-4bdc-a673-902d1371b71a",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "05b1d464-d700-4c28-9cb2-1f0faa34d83c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bb9bc605-154b-49ef-9228-e02a2d85c940"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b6afee17-d496-43fe-b133-05bf1317ee33",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "2974ed02-363c-4add-b267-bda97e26cd27"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6f1b60da-0353-4af8-a9a0-4486431802a9",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "669cc86d-06b4-457c-805e-4d0ffb4f3dd7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "23d6d376-99bb-4ecb-a613-1d7c905c8f7e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "49d67cb4-edb8-4fd0-9f3e-2909e102e14c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "e001f286-35be-4736-9a5d-23eb186bbae1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8db905a6-3ccb-4df9-a72d-5618fdc3f795",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9e377191-de4a-4101-b054-a3ee55d46149",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "1df720ba-0912-4233-b3b4-dc34e752023b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2e5a1d29-66f1-4963-bf54-bbb0adadb239",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "78ebd6fb-187c-4a07-9713-f8bcabeada71"
                        }
                      }
                    ]
                  },
                  {
                    "id": "978ecfa4-681d-4e58-8010-b19b64dd9245",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e57b7660-c9bb-4fc3-bd28-fb42a6b4735d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4952a8ca-a8eb-468f-a6be-72f63bbc2b1d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aa4383c7-a0c4-40d0-9e76-2585e146aa88",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "97b47ee2-3c6d-4fb1-ab90-0e0da8862e3b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dee99a4b-4c70-43fd-88b3-e20c92bb4c52",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "79951776-1895-4cb2-9f2c-dda470b80596",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c8d1e3f1-4eae-48e8-ae38-bef9fea9850c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d23db2dc-82a8-497f-9cf3-45a8545a3210",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "0e9caefc-bbeb-4c1e-bc3d-159a95ace8b8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4e0aff74-cf2e-420f-bc18-8e9c1d73dfd6",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9f116381-64c8-4a93-91eb-55a8a8eb1d07",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4a15888d-5e3f-46b2-8f40-5144dc31be66"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dd807a9c-7ff8-4fab-ae21-e32d48ac72f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "6810d539-dee0-4bb7-8d47-93d4eab9efc0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3a3f214b-4c40-4298-b3ed-dea43957466c",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f6eef623-b75c-4032-a568-92a7090f170d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c599c037-4443-42ac-950f-eaef27551bc8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "004e9649-32d2-4842-aff4-e5c8f6041b45",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "5f9a59f5-9bbd-4bb1-b8ce-68babd94ab68"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e2072eed-a785-4df4-bc4c-efb7fbae0ae3",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dad54f0b-10a8-4e5e-b725-07d84224f2a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "49cc05ab-a755-48f1-b507-3d55c6d3b7bf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "427e323a-6601-4c99-a006-951f39fb1ba5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "4209448c-b7ed-4bea-b940-c4a584ae3f8c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c1709f2c-ef23-4510-bbb4-a8cf0d2b448f",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4113fb54-e093-4bd1-9e65-f7a47e2454ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "79d413bb-62d3-41b0-848d-b3131dfe87d6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d43d3736-c1b7-4ed5-8342-adff56e972c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "2c336a21-61d7-4b5a-99b7-ca8f8a3e50f3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c596e4a5-af4a-4ef3-8e62-41262ad9f061",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "469feefc-2df6-4821-a1b0-77f847283361",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f3434f88-5ebe-4468-88a0-5ef9fa38d963"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bea194b5-ba2a-4a2f-b965-4e27c83b1b1c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "14ca6248-e816-4d2a-8475-59ef342c81ef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d84d0411-d714-4ea4-a186-31e392f23b9a",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7619ac49-471c-41e7-a641-26bcc3c1a662",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2a7a13cd-9f30-47e7-9f1e-19859d1e1a91"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2106dd86-1c3a-4b95-8d8e-22c7804e0115",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "496376ef-d070-4548-b69a-2f081a1d9771"
                        }
                      }
                    ]
                  },
                  {
                    "id": "67abb920-c1b9-4e7e-b7fb-868aef789678",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "98bc0697-65d0-470e-a8e0-5fe810fab580",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aea5745b-a692-489c-abc9-3e008ad31aae"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8d7abd6f-1bc5-4d4a-b45a-37d7f096a977",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "86bd81a5-b410-4f20-824e-f080c0222f38"
                        }
                      }
                    ]
                  },
                  {
                    "id": "677d856f-e868-4739-84f7-b18145519065",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "03ddf778-4e9f-45b3-9000-9e316ecefc28",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "13e8a24c-9cee-4076-88e4-faefa2a46e9c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d2c06471-2ecf-4ee2-a0f9-511cc1a8bfe4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "c746c91b-2ae2-4692-b7a0-ee99053b6f1c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f9fdabd0-1f4d-426b-b8dc-72553bd6db0d",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2ce435fe-8a54-4e95-b3b6-a372e979cc15",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9ab9f845-3321-4c9a-b763-132cc94422c8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "77b2331a-1f2c-48f5-9922-6ed739900cf1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "fe5fec64-0637-4e19-8676-ac8570fd4a9d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d6c2956e-df16-451f-a075-7b3712f922bf",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "41aafa8b-67de-4600-8c5f-e294de8fe923",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1e6775da-55fe-4dee-9f50-df2554c3e371"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e1bea3f0-1091-4c39-99ed-a13998419cc1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "a6da9660-a3af-47ef-a420-4b7c820286fc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "57148f7c-1e05-409e-8a63-b99303be75b5",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cbda214c-b672-4991-85f6-9263ade593d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fbe6db94-e82d-4a94-b38a-c98410503713"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5b04c02d-74a1-42be-b106-9d189a5209c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "7a62f7f9-6030-4f34-9227-d152ae61c7ba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4a2664ed-4f51-4b7d-895d-5d5204cef8c6",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bcb13a1d-3ee1-420f-be76-de354e99d0e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "91d90a15-52de-49e5-a329-54546a7da867"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fe65aa7f-9656-483a-9b45-f8b42679a28d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "9f4694df-b6c0-477b-8952-a138abdf3c78"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6cab0769-eda3-4cac-9069-c12bfbfe588c",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3025ac7f-0d45-4552-90bf-fce9badea35b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7249f1a4-e05b-40cf-8271-6ff6ed1802dc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a1bdab7b-6c72-40a7-8170-8df6d048888f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "40954807-30a8-4188-a1e5-4b71f6f42da8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7286b299-7412-4d9c-a284-14fa09dec01e",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "66a2584b-9774-40dd-9130-e4261d58617c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0060c7a8-5563-4e78-b6e2-b04598ed23c1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0f36beae-7c4c-40d0-bafd-6d35e31ccaed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "7e1e74ae-543c-43b2-9a41-152359b22715"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d9704f8a-419b-4125-9071-d00752ee877e",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f3f06cf2-ea37-47fd-b327-07917991a41f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9d7e4f9e-aa4c-4310-93d9-43e3c58ab4e3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aaa9b546-f48c-4e0c-81d9-609c2ae08163",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "ef5e92c9-21b7-4144-bcd7-890597742511"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4ef4e449-73cb-4254-ae98-5cbbe7ea9f5d",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "775ab3fb-9aa4-495f-85b3-fb2eb269efa6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ecaa1ca1-b123-4ca6-80a2-af1d8ce0a180"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "870bd2dc-831e-47e1-a229-686d7e79841c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "3802c17e-ce16-4b23-9e5f-6971424ffe6f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7cef06fd-3dae-46fd-8e19-de8850defe25",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "df06e279-4ae9-487a-9115-90e452f9f1a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2868ad6a-11e7-44e2-a8a9-b17a0d726e65"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e3a7aa8b-de27-45a4-8e5e-00567c73d8b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "f091d774-c21f-4568-970a-c2c68136fa7c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4dfd0d4d-ff06-49d4-b5a3-2080626ad1e2",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c2067dd5-bf32-4ca1-afbf-ae9689ab1e62",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7121d290-3ea1-427b-8ebf-a428e85c84f7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a4f2129c-efba-4b9c-9c1f-ecc6628a49cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "56642238-ab37-4f0e-80e3-880161f7cf31"
                        }
                      }
                    ]
                  },
                  {
                    "id": "43c99bc3-c4a8-422e-875d-1654fb1f9d32",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5888972b-7b78-4eab-9fd7-ff00714fcfac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "866fe1bb-ec90-490d-aa84-6245c8cce20d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5cf60f1a-86bb-4615-9b25-f8671b617eba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "299850b8-03c0-43b9-9e9d-e5fd867b6991"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ec1bfff8-a77e-447b-916f-bcc4e45c3353",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bdf5b7f2-bb4e-4fd9-8e80-5d1f024c7b28",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6a8c5b62-59bb-4656-be3d-a72d6f94d23a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8110f253-4fe1-4c82-9c9c-533d4840940f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "d6d3dd87-68a6-4515-a15d-62497754a7b6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "587dce5f-f3d0-4f0e-9fd3-d1ddf5a50961",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "397ca013-2698-4a61-9c78-8e023652e82b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6f405c5e-2e66-45bf-9930-a45bc3c01009"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b535985c-e050-4544-bc4b-4b5eae19cf72",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "5c494e98-22dc-41a7-96d3-b25981d5f2eb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a5a41bae-b3b7-43ac-998f-ea8caf08cca4",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7f5c72c0-04ba-4da8-b71e-dae622467d33",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "57b38663-1cc7-470e-8115-4c0036b9dcb2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7715fea1-ff7b-47d8-9be3-e46dd29a43e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "95bec73e-962a-4cf1-b01f-79c6316665cb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e4e49606-c65a-4c5a-887c-ce0a1d70730c",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3adef3ce-4c6e-4da2-be59-7150128658c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d1817663-0bc3-4753-9036-66fd57644b06"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0e2eb733-e1a5-4b8c-bd62-ee9484cfe3de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "224217fe-2fe7-4f54-aa45-79175e81dc8c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "403cb137-423b-4530-ba0d-287e1ee8d083",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0b4928ff-b1c4-45aa-b11d-60a2b7e92a9c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5c6e718b-113c-47fa-93f0-bce3457fa558"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "35872f07-d202-48a6-b814-e68087c06626",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "0bb08062-378e-4f66-9c31-23376d54873e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dcef601b-54a2-4145-af4c-a1e23561d35f",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8a3288f6-1007-4ef5-aebd-30abe67edfc3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8af9b0a5-f896-40dc-8ee1-25b6882bb2c0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "033a0f91-9ae2-460d-9753-44901778771b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "db49528f-680f-4556-8edc-d4e7aa329c54"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6e1124ac-3b69-4454-b70e-b61e729cc889",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "48ed1dab-e6e8-417d-b4f4-039890351aad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "04171995-8772-4e22-8d28-c8b6bf51ab41"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1f1ee4df-0542-471d-9cad-51fb7cd72eac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "595ba96e-e450-4925-98b8-9db46cc931fd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5fc4ae84-3962-422c-af88-b0a6f2695c8d",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6edd43ab-6f93-40e9-9128-5e4ecf4099e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8c66b940-c686-41fb-bfa1-ce5fc9678aa1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "64b66beb-ba59-4a63-a2e1-d9d9a2c95c82",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "c8ac36d6-0247-4090-872a-8647079ef553"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1df28dee-91a4-4da1-90ba-58c646372ea0",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "568618e5-1ecb-418f-8bcf-99d755cf19d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "45b8f60a-03cf-475b-af8c-c79d4adda255"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ac1a845c-e959-4acd-a772-441f87721f00",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "c0a4aadc-a3a5-484c-86d8-74d21114995b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ecd3fce2-3f70-48d4-bc9f-c3d27d619caa",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e1de522f-afc9-44cd-8b6a-2268cc2be3ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "788a605e-5826-4a2a-953a-d52e10fefad8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c4e90ffd-31a5-463b-9729-18bd7080d9d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "432f0186-1f60-4769-b4c9-fcbc768b30dd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4cf8107f-d8dc-49b5-9304-8dfdcbd46c06",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0c43c826-4a01-4815-899f-5056aca300d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eb5cc74a-87a0-4d04-a959-4bdd90746391"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7dff99f6-9211-43c5-9648-cbd7f6d613f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "b2de0945-5fd2-4487-8aa9-c5cadfca4329"
                        }
                      }
                    ]
                  },
                  {
                    "id": "08142430-370b-4a25-a84f-7b1a099b246b",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ad001816-8055-49d4-8eb1-527b7e8a118c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "028d0e06-6d9f-43d9-b496-cb9125c64a3f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "36006a64-4333-423b-9457-af98f7d16c87",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "899a4abd-769e-455f-857a-b3cec6f82ec1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "380d0ceb-c7ad-465f-9614-748ed9fbf92a",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2cd32b5d-7b0a-494f-bdae-3925909d7bfd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "64e539ff-7d7b-4d7d-aac9-7676253dfc7e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f75973d7-1803-4c5f-a139-700397107c77",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "990d2fc6-4e30-4ffc-a30e-68c4e322adad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "41646f49-4928-4c2a-b6a6-b6446951de67",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "376a0382-b5b5-4c86-a7de-4b746b861fa4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dacef364-ab06-4914-8eea-08b78162c32d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "57e0e3e8-ed7f-4466-afc8-2a79b907f876",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "deea5510-a063-4538-b050-232004d8f5ea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "01f02cec-6bd1-4a28-8f39-831a10227451",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "449b4ff3-bfc5-4c33-a5e6-2ea0069847de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4952a958-1ab8-4d89-b753-5314ba06628e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3a27c625-9703-45ed-a591-4b7ad3c42fef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "0cc6de70-4c91-4e81-93cb-9b33244c8fda"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a9fb8c1f-b99d-4c62-9595-12f2e75ec2c1",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "28411a24-74af-4508-85a2-75cc1d816ffa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "00b43ed6-5e7a-453a-b7e8-56f986808823"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3f1ea25d-65d0-47db-9be2-79df3af69048",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "618ee611-5042-4d09-b6ca-d4f028963140"
                        }
                      }
                    ]
                  },
                  {
                    "id": "53eca08e-7436-4d97-9d66-577a6d81794f",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0bcff3c4-6e88-46fd-b0a7-92b14d83911e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9ecd28a9-2108-4278-8227-65f027544282"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0115f728-9de1-4d8e-8eaf-94c744aa9a14",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "e42eba39-4343-4694-96e3-2fe3e28b6326"
                        }
                      }
                    ]
                  },
                  {
                    "id": "24c2d9c4-5830-4599-ab47-5802d9ff26ed",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1e4a5bb8-af82-4208-add0-dc4702e52478",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "caf9d16b-836f-4a13-a247-c08536a8e5ac"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f0c8856d-5843-40ae-ac1f-fdfeb2a4c8e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "5d44483c-ed04-43f3-b795-d789dd73f0e3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b7975e6e-24e3-4db9-8256-0be52a4e5f26",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3981888d-eec2-449c-8a25-e18e00f6c4a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8b5fbfba-1f9f-4443-93f9-3b0edaa83512"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "86312c89-373e-42e2-b318-610ff0c62f0d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "3b791e3f-499e-478b-9929-49bcd2faf41e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9fc3d26e-95d6-479a-96b9-7eba1a9a4567",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "77403671-1a1e-4860-a05d-d1640f1a893f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "02705aa3-fc8a-46b4-a17a-dcfa798f49e5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0375fb48-8152-480a-90bd-5bbb54ff01ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "6be48d40-938c-449c-a4b4-634690ac884c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8669ef43-83bb-4188-b1ca-f843ccda344b",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6493e53e-5620-4188-9ef3-eba703894959",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8d8011b5-eb7c-45c1-ba09-018cdd7ce3aa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "13790ba0-517d-4456-a88c-585514904211",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "a60cbe16-cfe8-4a9c-8670-8eab48d1a771"
                        }
                      }
                    ]
                  },
                  {
                    "id": "77dd5dde-9791-454b-be79-bc1cdf4fe06c",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ca3f240d-9690-4868-8b7f-69abd447b574",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7210f3b2-9967-4444-81a7-73bc9a4ff61c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c29391fc-fa63-4a82-9947-1514d06d34cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "43ea03c7-a835-4311-a5ac-e0d586819798"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f7f236d4-1521-4787-93e3-ea26c2ec3c6f",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3e24ffc4-e3d6-4326-9a96-58b937c87878",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "86648b75-43a3-4749-aaef-924919b1e3ce"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c0200ece-2718-4c90-80d0-c0c11c817823",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "318888b7-be5d-430c-af43-889342185cde"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fd058ead-963a-4187-9244-0e402a756928",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "97ea9665-b633-4361-a620-649d1eff45dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c37dd273-c2d2-4645-8873-14e16d23a712"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "76e8b590-6047-4d3d-a695-cc3e6d029219",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "9c07c5d4-db6e-4a48-b3af-625a620f5ab7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "52c32caf-d79a-4ce6-8f18-367d1a161bd4",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "53ecddf9-0275-4197-98ac-2e71ac9655e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5d7b8ae7-3403-45ef-ac7f-b40039f2f106"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3e001248-3b9b-4979-9ff8-f8bfc796134e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "0cc9b3d1-b41b-473a-bf5b-c092226899d7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bc5cca7e-cc8f-436e-b70b-aad653c584fe",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c2c5f4f2-2021-424c-9430-82eb41577898",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8760f9b5-fb9b-4eeb-b314-19661281266f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e25bdc86-c63f-4adc-b273-8359545c88e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "3c4af4cd-e1bc-4602-b736-87d73e75dbd8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f6d71ecc-c298-4b58-9af5-e4eb5cd6c7f7",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c1909a77-cb0a-4ded-b956-b67c0be6b86a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "083a7e0e-6e9a-46ed-9bf3-72051c0eacfb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "62b52a3b-61d2-4d2b-bbb3-bd629220246f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "6080c924-9597-4a67-8296-b914c48cae8d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1ceb8ef6-bf05-4dda-8a7e-842781a42cdd",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ef1c17be-27db-45d4-ba18-df5c1c9612e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bf13f1ee-38ca-42b9-bfe8-9a06b2beaf87"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3e3447b6-2088-4a95-adb4-5523e788264d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "ce6a22e8-818c-4241-b4f5-2260caa7229c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "74cf4072-4cea-43ba-b8d2-2350ab0c4c14",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3cabf90a-05fb-49e4-9c02-408e3c83b3de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4935dd12-e67f-4f8c-be1d-b0fe9a65e8de"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aafad674-c565-4f49-adf9-75fc5d96b9dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "15eb8a9c-2405-4710-bcd8-0535de4deb9a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "42499b1f-2852-4f2e-b84e-888e22609b8b",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e2cb27d-a63f-4f53-8ec4-be1f433ed263",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "99d59d2c-a7a4-4b24-8e54-5a99e9d90be7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1c4680fd-3333-435e-92f1-35f12bd3fd2a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "774149e5-5122-4138-b67d-4f715543524d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e0d35825-004f-4588-8a6e-d48ef516c18a",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "39c17eea-7919-4928-9092-6b98359aa433",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "13775d93-a4b0-4c7a-a309-8eb1463c3468"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "606d8fee-1354-426a-8f6c-5c2d0fd1bc8f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "b8075ec4-f923-4ab3-a388-c1a801044748"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c5ed3848-ffb0-4ecd-9b96-0d6e30e8c397",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "08253173-589d-4416-8db0-da3a0e545527",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c84259e5-bdf1-4289-9e5a-8ae77583db0a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ab46f24a-a18f-4da3-a510-79ea5ae5e346",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "17363b3a-64f4-452b-b05c-1594d42eb08a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a3a1bfcb-3c33-439b-a737-fb9f3e78372d",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0040190c-7cbe-46ce-94b2-0e0ba8dbd16c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "23454257-94f3-4948-819a-22b401bb7b41"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc04de7c-6c22-458f-863a-4dfb169218b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "cca13d21-7c2e-462e-b991-803303a73de1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6df92350-6747-49fb-b780-3dc4376d1488",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9b0ad3c3-e74d-44ec-aa18-cb6d78dee672",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f7f92136-191e-4fa7-859c-db4337d8fe7d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eb1b6b8f-188d-44f1-9c44-d1caf63fe6f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "70a44be3-e5a3-4062-9f3b-971ce2632c8e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6f86de63-3e87-4c08-a4a2-1fbae58746a2",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "08adf6b7-b57c-4036-97fb-d028db3f536b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "1cd9b9d3-e8dd-4e2b-a0db-66983ca15f5b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5aac6986-676f-4bfb-8111-6c45be87c1d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "d1a145c2-93b7-4d81-a947-b0b87f0757de"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "256cfb0a-dd8e-4231-844b-22e6ad773600",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "e4940085-a1a9-4072-8511-faf7df839cae",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ab2d53ab-79a5-485d-b1d6-76174a5fd437",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "ee9a2403-650c-4917-bebd-7d0aaac95e41"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e180a887-06f3-4bac-9d8d-0f11426df4f5",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "3f7e9a95-e495-4d17-b3f0-0a31acf87561"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "fe8dc383-8f98-43da-b129-8f6779bb30c3",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "2ac9df8d-d1c8-4590-826d-bdbe622fc718"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "470ee1d7-1be6-45fd-b6d9-825967d96ab5",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "f396c5ab-2986-41fb-87b9-9f1cb38816ff"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "7c21bf18-06fc-4837-b1ec-8b80b8a9660b",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "caf8e668-b7fb-4e03-8eb5-8d5e7a518db1"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "875c5b68-09f8-4f46-b815-3b340a055459",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "bc063397-89a8-4972-839e-f8d99bca1e43"
                }
              }
            ]
          },
          {
            "id": "2d46ca49-54da-41b7-95c0-4fa012c25832",
            "name": "Positive Testing",
            "item": [
              {
                "id": "8ee061ae-e49f-4276-8cf4-8708e8db3f52",
                "name": "Duplicate Keys",
                "item": [
                  {
                    "id": "2dffbd54-a9b8-4f9d-86e8-14f1930e5b8d",
                    "name": "credentials_issue.credential.issuer:dup",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"credential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"issuer\": \"{{issuer}}-ignored\",\n        \"issuer\": \"{{issuer}}\",\n        \"issuanceDate\": \"{{issuanceDate}}\",\n        \"credentialSubject\": {\"foo\": \"bar\"}\n    },\n    \"options\": {\n        \"type\": \"Ed25519Signature2018\"\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "text"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4baa9267-40e5-49a2-8ad4-764058052b3b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 201\", function () {",
                            " pm.response.to.have.status(201);",
                            "});",
                            "",
                            "pm.test(\"response issuer matches request credential.issuer\", function() {",
                            " const { issuer } = pm.response.json().verifiableCredential;",
                            " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "ee47f0e3-552e-4f59-b511-0b556db854fd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c39b0557-c8e4-4326-aa3a-2fc8031baa96",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8caf365c-29e2-4a91-91f9-3bf364913cc2"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "bd0b8a54-6252-48e5-aea5-4ad0535d4265",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "587f9df5-3071-4f0c-b29c-21b5408a9b71",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "2df86edf-5eea-45af-865a-1eeecce8c50a"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "2cff2c91-1876-4e40-8d43-7445a9f0bed0",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "1e281e46-0479-43c6-9347-f8f0bfbe1cfa"
                    }
                  }
                ]
              },
              {
                "id": "8013763a-7cc5-4a8e-951f-47ebfaeda771",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "ebc90c8f-1946-44d9-a236-a7999786ed6c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "1f972f20-a294-47ab-972e-3ef6f94449a8"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "491ec159-ae8b-4918-9928-56ae3c20205d",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "0bf6449d-693c-4434-9f91-2064129a0746"
                    }
                  }
                ]
              },
              {
                "id": "b0d5da5a-81d7-4b7f-898a-53c58a93690d",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "8d5efda7-9900-4fd5-a658-48245e8ca122",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "10123d5e-3e50-44b7-9280-1f73a8ee534b"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "bc56fa19-1ad5-428a-976e-21560d91734f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "a02b066d-543a-4991-9a6f-041710f44ac6"
                    }
                  }
                ]
              },
              {
                "id": "5000f5ea-9a87-4da0-8cf9-f7c8722896d8",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "a6e4fa26-507a-454e-8914-95478233d1b4",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "8f0d2abb-8f5d-498f-bd0d-61e8014f48ed"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "e9e97444-a57b-4595-8484-6e662f279f6c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "b038073d-ad63-49b4-a49a-a5f600b2abf5"
                    }
                  }
                ]
              },
              {
                "id": "c5615c8a-e713-4457-aace-12ab6572f418",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "8ea0f69e-e3c1-41d0-9ad2-22d845cad8eb",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "477b57e7-2d70-450d-85a3-22d676701005"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "436d1720-5c38-48c2-a08d-69294781df3c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "939f09c5-617e-4f71-84f0-78e35a1ac2a8"
                    }
                  }
                ]
              },
              {
                "id": "0cc949b2-279e-41de-bd8e-4698d9934bae",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "1b3be003-1f02-4074-a747-0d410d0efbfb",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "5bd2a4c5-73ab-4fb6-8304-14916bbcea58"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "7b2a46a9-1152-404d-b3e5-0ba81b1f981d",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "5dda9e82-f82f-4f9a-ad41-8f892d2942b2"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "fdd5e4ca-d524-4a5d-b75c-36c39debdbd2",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "f34ec1c7-086f-4f1b-9bfd-d767856f8c3a"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "c7d41cfe-53f7-4d75-9cf4-42fa84bfb199",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "396b0a16-0330-465c-b113-4be5043e1125"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "1e2d11f8-bc71-43be-ba23-7f1066c59d93",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "6a9e0d37-59ad-409b-a55e-0b7241edebce"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "74e93c25-aec7-4fb6-9d3a-6026ecd4313f",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "955e1cb0-039c-40a1-b0a1-684d4b426223"
            }
          }
        ]
      },
      {
        "id": "24583397-9b42-4eab-9ad2-370e2c5bbad2",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "978e82e8-2147-4d22-b8cb-0aa35af51d14",
            "name": "Negative Testing",
            "item": [
              {
                "id": "01b23045-99e0-4cc9-9a39-0c456ca67fc1",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "d3ff1208-dbe7-4947-9c99-d799a5ece55a",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "33995c99-9f18-4b43-8c40-7625c9809225",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ecfe63c3-8841-4b35-a964-ce79658f7b82"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b0d60c46-a2aa-4f97-92bf-5f5bf5ffaf2a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "b4f156d6-e9d7-46b1-815e-b1b9a31368d0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "afa328ec-aef2-48a2-903f-10fe15056a40",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ca453c7b-d3e6-44c2-9bef-b954f2c882bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5d9bf998-e2ea-45f5-99c8-8d049bcf10c1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "014cb7be-c7d4-482d-b960-5eb9fe3eeb82",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "f3cd0b42-fc5b-426d-82e3-c352bbde855b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2fbe8f86-eb3a-46a7-b660-7ac06edca223",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e57b0b5c-4e22-4374-a37a-447902f7ccfa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "76dac0f9-0b42-4e80-9e40-9e95b424eb51"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e283d1b1-911f-4e6c-9a90-cd4c781b7ee4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "0d0e6012-778a-48da-9e30-f9f2151313a5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "80233861-dd15-4d4e-baf1-29170ed1ad2d",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "053f3652-39f1-4f0a-95fa-e54c9e08b7e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b87c22f2-bc28-401f-8cc1-a71a72c23419"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c67c3a01-dd86-4763-b49e-cab78f96d3c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "d5e86467-1ecb-4f0e-9c27-488e9a8793b7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e26d788e-9de8-475d-a29e-4f51d52cc566",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e3a73d1a-95a8-49c4-80b8-bcd58806c171",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "238b3fd4-80bd-41e4-aa8e-5834a2bad4c7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f6900037-5bdf-4c4a-b481-582f8289826c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "201e1ab8-c278-43e3-a697-a7343fcd52b2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7c0ffeb7-a511-4e1b-93f0-b0dee80066ed",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d1011a74-2e51-44a2-8e3f-d7a2ca27db6f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "56668eb2-690e-426c-ae08-d60efe25e5ea"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1420cd1e-9247-406f-baed-5b0863db6434",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "8f5f9a16-7b87-4126-b695-29d23b4cf5e7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1a4c19f2-9b0e-4a80-bee4-ace3c3d4900d",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4850e600-9ffc-4bfa-bc34-f1a693892568",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "25ccd0df-2f39-40b5-904e-b07712fc3030"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5a4fcb9b-0d3f-452c-a27f-8050b531a9cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "e961e29e-acc6-4d37-9775-7838c3134a87"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ada245e3-a734-4eab-aa38-46d266e3f408",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c232aae0-b9b9-42dc-8ef2-1797837225b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1caef62d-dc25-4d3e-8831-e95d58bc99fa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "098fb58f-0295-4173-b8e5-7ba8810da683",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "8cea8179-6004-49e6-ac7b-dae546be2d96"
                        }
                      }
                    ]
                  },
                  {
                    "id": "277846ac-1b98-44d6-b75d-42022bd4b73b",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3dfa7017-4706-4a37-a3ab-6156b210d990",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6028650f-e8db-469d-a312-670656a74a50"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1d7175fb-e6ec-40b2-8e60-c6a7fa95d637",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "8f3297da-66e8-413a-8ba6-36d7893a1c11"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e7078be6-44f8-4690-a16a-caa7b0e81fe7",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3ac144af-d191-4777-8ddb-e836c8f5007f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "646bd632-d5b6-4211-95bb-4a40b8c7c686"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0aa3ad78-8aa4-4889-bf7b-bf7c4e91e1fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "3dad817a-9cab-4e41-8d3c-531b6c29a555"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3cd05cc0-e745-42b7-aaa6-36e389a1da2b",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d475a479-c15b-4783-9944-1c2b8a823afe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "83b18e7a-175c-47f8-a658-8263cbd747d3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bd7a4999-dca7-4f36-9599-fdb42cbee9b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "c1e96103-0a3a-4772-9be8-c91dcddd6f84"
                        }
                      }
                    ]
                  },
                  {
                    "id": "18c66330-0ec7-4c49-886e-d19f647fcca8",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7b5ceb5d-5266-4d8f-9c50-133b96cd2c7f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "26e21c32-8d1a-43e2-8e6d-7952a3f97145"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fccc393f-249a-4893-bfa8-5434f4a5dd45",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "f3e1e4fa-27f8-4f35-8eb5-052a7c8ce728"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a5f54d13-1a49-4f3b-bcf2-447314b949f6",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4b146e02-4e0c-488d-bb00-a418b1be29b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b658e94b-669e-4ac8-a573-a14297f35b7c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f23fdb90-7962-4b7f-80b6-65532b206551",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "f1a8505c-a7cd-432e-9edc-4c7a6bec9ec7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "81187099-6a73-4a9e-a6e0-c7be91534686",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c53f6364-bc65-4458-8e03-972fe6459d63",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b5eeb4e2-b6ff-4fcd-8d40-43aa46d106cf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d7b182ce-9de8-4396-8f66-fe84443d705f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "f751fda7-9e95-404a-8a34-61f3d07584fd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "93b827ec-5202-4e26-bba3-c70ea70ed126",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b55899d2-a93d-4e76-856d-c64f63a2713d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "04102a53-81df-4514-8161-6485730abfa8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f45329fe-336d-4161-9bca-c6f604294a5a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "d0719fc4-e2a2-456f-9028-202e49e91004"
                        }
                      }
                    ]
                  },
                  {
                    "id": "faf0641e-349e-45f5-a846-972e7ef514d4",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "36b1a851-0b9f-4a56-9beb-d1f94011ab22",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "75379e42-8b52-473f-9a9a-460c3a2d6f7b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2bee7e37-530a-4179-a06c-5228bbd04ab2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "11be475b-53fc-4cdf-ad33-6da5cbfb166c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "591edec1-193f-4aa8-9f9d-d9786b360224",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "730e2f57-7772-45ea-b84b-d566eb99793c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bb517884-b4a5-4635-9971-6a641d0c0092"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "34cbfa62-edaf-48cf-ba86-0cfe4363819e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "2e19a0d0-29aa-4962-b079-7fe46e31f55b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e0a920dd-4cd5-4cf8-ba85-04bcb2a0a043",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d83497fe-1b4e-4e94-9123-7d44da2a8361",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bfc413af-37c3-48ad-80bc-b5501a37ae8f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "164df4a3-d9cd-4e07-8a09-a3217086b9d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "c40e8d1f-7246-4ed5-b2cd-0822385974db"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4d2331d3-dc05-43e9-864b-4553bcf7e1a7",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ede1da20-ab25-45cb-9790-efe96a552085",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1544312c-75dc-40f6-a62e-34992f8f2d67"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "15a2120c-6e2c-4ba4-91c6-f70685e09fcb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ca97d1d2-80aa-4e17-bf88-6170155d2c5e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "917130cf-f4c9-4405-8513-b58676529c5a",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cb7d4fa7-9694-41fe-acf3-333759e44001",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1f76f4f9-e2c7-46eb-ad99-40abf58a6f49"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c918368b-b757-4e12-aa5d-a0ebb276afc5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8c5fa258-38d2-414a-aa69-03d5176e5780"
                        }
                      }
                    ]
                  },
                  {
                    "id": "79cb7193-c4e8-4690-b363-949ada40b750",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2b85b5c0-236b-4926-b5e9-f6d0e49c9723",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6f76d5f4-85b6-4959-9129-967b17b5fb3e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eab63bc4-7627-4ee9-bbd3-568ab53ada67",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3db523da-f274-4821-bc55-38db53aadc6a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2c43bafd-9f9f-4419-85a2-eece8d416db9",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8aee7d25-21c6-43ab-9b7b-bc3d992e13af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b2d5ff07-e65b-4df1-9664-ed0c6e334912"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9693424b-9f33-4f8e-b682-8d8b2741391c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a2e3481f-4b99-4f2a-abab-d5fbfb8a90f1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5f0c3084-724a-4d07-a068-abe72e56f45c",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "81b44cc9-0bef-4f2b-81bf-9a81c3520c22",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7ea3fa44-c499-4632-a975-ce5bfe51a0b7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dfc2e0b3-65ab-4868-839b-53ce9db08882",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "63226f7a-e140-4669-b468-c9ded764312c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e96cea09-4489-4f91-b315-f54864cbf66f",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d67b3eae-7818-4572-b488-df93c4ec3d3b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a74ebbc0-c16d-4432-925c-69340d5c3eca"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bfda99b1-2dcb-4a96-b47f-62e5dfc8f6ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0f408dde-2ab6-499c-92b2-68c491829f1d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "341e73ed-76fe-4219-add3-4a2b46030ce1",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9ff99b0d-fe2e-4c89-8a81-6b79b79c2f2e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8ded9d25-0709-4f6a-9e32-ecedb04ffbb4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d60e9218-c0d8-4255-a0df-cac73a97ec06",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "76e230ec-e31f-4719-b45a-80a3b04049ec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "daf5930c-42e3-47c9-8149-1f2dc053d715",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b205e893-eecf-49a4-bc41-9e4c916b46b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2540eefd-ea4f-4a2a-a742-0259aeae70a3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cbbd82e3-4712-464a-b464-aeb239d1c2bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "009b58b9-2027-4fcd-bdeb-89cd3deab777"
                        }
                      }
                    ]
                  },
                  {
                    "id": "33df94d7-b27e-4362-9d5a-f518e3cba876",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8aabee0d-c897-4c9a-b74b-f5c12d496c33",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eb598c0b-b120-47aa-97dd-295bcba7348f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "56da5fb8-9339-4ec1-a727-42be7fda7cfa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5b0a766e-ec4e-40a0-a07f-00c18582a510"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ff94a8d6-3e4f-4a72-b1f8-b86b490dfc35",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a981c920-d5a1-4033-9d85-77e648952099",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ad2a2ee1-3529-4763-ac50-faecafe3e6ba"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e7cc0531-73db-4b49-93e9-387af747d957",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3d1d80b3-d4f7-452d-8917-0029f9fe2f4f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dceb221e-751f-4d6b-bbb6-081d0f13a061",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "88039e04-5136-4057-aaf1-c2ed7c551615",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "913d2e9a-1648-448d-a10c-10aec896e775"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "42130fcb-f05f-42b6-be42-4b1a69830965",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5e7022b1-a81c-4400-afd8-fc471a85bdb9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6005f11f-4eda-489e-9b26-14042b652d52",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c82261cc-ca70-408d-b078-753dcf578059",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "40aba107-abb2-4f7f-b8f8-b62d5e237050"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fb847ceb-4476-4d7a-a3ab-bd754626aa39",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7003e6e0-1e0d-490a-bdb2-c89810a513e3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d1d3647f-97d1-4274-99a5-f79887baaa81",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf6106bf-a0e5-473b-8e5d-48fb1414d2f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "985df2a4-c1c1-410a-92c7-b1cf116b84cc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6b1482d4-338f-47bf-8d0f-e87a0b458bf4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ac34d09e-dd1d-4c38-acb9-73ef9ef50653"
                        }
                      }
                    ]
                  },
                  {
                    "id": "74681b6e-b240-48af-bbb8-1b69a3654ced",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "358cb1b5-9375-47f8-a3e7-e34e10050125",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bf3097ec-e2f6-445c-ab52-1c789469fbd6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f5d7d926-b1f3-4743-94b5-d6c20e91054f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "bced38c4-ace0-48c3-b604-7ee6b6090696"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "b1a3a73d-55f6-4c56-aacc-0cb51b768a0d",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "7ea89c40-7fd9-4605-8aea-ed8e5ed4ef2c",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2f702475-2c16-4e3e-82b9-b89774caed54",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "5d69050f-a0b5-4ae2-8f87-13b033efcd97"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "527ad66f-39de-4384-be91-f1394ee850bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "1f2d77b0-d2e7-4901-bc06-27309e49ba58"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "06205656-e77b-483d-a3ef-08abba61353a",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "3d5e4e61-40c4-4feb-b8d0-13efb21c7267"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "b5ca3208-ff13-42fd-8d6f-56fab190ed6c",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "82ef46e9-1415-44c1-8915-fc6487425207"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "deac639b-9b67-461b-92ac-4e8149f05164",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "a0ed07ac-c927-4fd4-bd29-b3abbf2c4b2d"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "6877b14c-f2f7-439f-86f1-a88436914f10",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "5dabdc1c-7f8e-452e-81be-df7a2cb63c22"
            }
          }
        ]
      },
      {
        "id": "325b8555-9448-42ae-92a5-62e1495ae286",
        "name": "Credentials - Update Status (StatusList2021)",
        "item": [
          {
            "id": "4bf627eb-f2df-4a28-8cb7-0b0e44287dee",
            "name": "Negative Testing",
            "item": [
              {
                "id": "1a939886-34e0-46f7-a498-325d0127b17d",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "ef997b02-08e7-4ec5-867c-f45c16d8f493",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7e5226f1-dec0-4bbf-a745-8a401356bb9c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fa688c7a-6507-4b4a-8ce9-f7dd7e888f2c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1bd662bd-8712-4a3f-af06-03f3e59e27c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "31aaa9cc-7d96-46d7-913b-87178297e278"
                        }
                      }
                    ]
                  },
                  {
                    "id": "73c77103-5aef-44f0-b118-fd9a8917ef34",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f23f2c7b-d8e3-41e9-8bf0-abadcb315964",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "95e2a52e-b11d-41ed-9ca3-65634e1c243a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2c735ae5-9a2b-4762-a30d-6de550d003f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "cc8e1cf6-01e7-4f77-bfaa-edcbb1e7d6ef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "13cbb483-2747-41c1-87cc-cd3e5bcd9966",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6bcb16c7-947e-432a-9c74-4417f6df0b64",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "91cd4e04-20a3-4435-87d9-f40f1580ebbc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eff15886-ec8b-473e-85c5-6744cf13ec25",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "45356138-e223-4518-a483-6d223f34cb24"
                        }
                      }
                    ]
                  },
                  {
                    "id": "55256e01-766a-4924-9830-c7015417db26",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8a1f60c6-0fda-4ca1-8fdc-e1854461c5a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2f2f5268-2c74-4fe7-9a31-b4cf3fa61eb7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2b651b03-ece2-4efd-81f8-7b40d49b9563",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "10332cea-17f0-42df-aca3-711510e32061"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d6525c43-972e-4e81-81ca-50c3ce6240d4",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1e0d9b29-6821-4f13-a8ac-9550c2cff29a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "11466b51-75e6-4804-8153-08e09831fcd3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0639d43b-0e47-4db7-8997-eb75e6a18e93",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "3b903e34-47e9-4bef-8ce1-9f5b4450b19f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8336169d-0d4c-4ba5-952c-387caac03451",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "20448866-ec81-405f-b658-9840303be283",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f70da6a4-6e06-4a5e-9fb4-0d25e9128f77"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4c8183b7-055e-428f-8cf0-c742d1117a65",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "dfa23a20-cacc-472c-9316-93028d74135e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "083a0e04-597d-483a-beda-37a9fde7078d",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d44143da-57f2-45b2-96cc-a301363d2857",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3a826600-c775-417f-ac9a-325f4db7cd2a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ef20a891-1345-478f-a5f8-89418e2a6a77",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "7bc91d61-8f7a-4882-a341-a927a5b82747"
                        }
                      }
                    ]
                  },
                  {
                    "id": "34c59489-d20b-449d-b7ac-0ce76a141565",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6a832e48-b092-432b-8b4b-f54def85fede",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "779a50d5-cfa5-4ae4-aceb-89c350addfe5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2d2d81ac-a8fc-4537-88c6-c950b6ce92a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "bea2860e-e0b7-4219-a591-b60ef9d3dd29"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5c47517d-2772-4f07-8568-e61b230cfb06",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "55445efb-db7e-4322-9439-00158f371b79",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "45eabaa1-a20c-4ac5-b768-c1edc63c7321"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e405fda3-dbc6-4af0-bf75-5cee3381f603",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "baf5e316-820c-40f4-80e3-13e69b3df261"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e5097c4c-217c-4ddc-b5cf-5b4309370a99",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e995dad-347e-46e1-a396-cc46fbc4427a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "28865654-d44e-40b2-a4e9-2dc5ed15ca77"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "858ae025-ca4d-4b71-8164-196f9e05a4fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "523b8bee-bef6-43a5-809b-a9395884e3ab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0d649155-fc4b-4239-9abb-4d40c0d1bb24",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "115f02ec-8b81-46d1-81f2-4b458704fe5f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "db2e4308-75a1-4218-b171-55a568973a60"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "12d7e990-c698-44eb-b1b1-ed375c7ce9fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "4366d507-94e8-4768-8c4a-7d4747851505"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cd416021-95df-4892-96f8-e5cb9b449423",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a51d7c32-f81c-47ee-800a-c5f509cfc0fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "12015587-3847-45e6-a295-fc253e460ea6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c977d7f3-3a6c-45b9-b665-0e9145776562",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "1ea462a2-3df0-4309-8412-71d37c459537"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3fad80dc-900e-4d0f-82e0-4a22133b347f",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "26d79d5d-6e6d-4a42-ae9c-6060554764f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "388e3c04-03a7-4ef2-b526-885d90c081d5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b82366de-3de2-4979-b185-b0226afd17ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "046b53fc-6bdc-4fcd-8410-73dad9fcd1f7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6fcf86b8-8d5b-49a5-aae2-74a2ab545b7e",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "17d58d9a-9eac-4f5a-8c2d-42413ed73b4b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "85bb838a-de40-42b6-9165-4a4ffee58d7b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0900eb79-9bda-4697-bb87-ab7fc01dcaa5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "41149c7b-eb63-4608-9c14-44d995942518"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c15a1561-18d5-4d17-b0eb-e60d573d1e5c",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "159be1bf-d1f3-4999-b798-e2b177b80704",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a281023b-0e0f-45c2-acbc-50d72b6c1538"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "915caabb-85d9-4249-8867-368b72fda53d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "89e4a156-b6db-4d70-8a23-c0c979f26d4a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "612af745-bbff-4c85-bb0b-3e1f96249b82",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d9a6ade-93b6-495d-b599-f2e57aed56a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fb2409e6-f3b3-469c-a57b-bfde1851850c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1c2f2ace-5572-43b3-94b9-9f218aa04a68",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "178a6495-7e27-4c0a-85c5-b91db2882d6e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ea06bd9f-39d3-4b93-b8bf-f6dc6ea84a81",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b9ccb037-06e1-406b-8ec2-8fda8d7460f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5df51854-6ef9-4dc0-84f5-db3116483ad8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a589ce02-e3da-49ef-9942-409bf9902564",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "2d4e8b75-f1b1-4912-b6d2-884e5f2a137d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9d598f1c-b3ac-47ff-97f6-56e9c700a555",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2729fa96-4d2c-4e64-89f9-13eafbeab59d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4d1e6c56-03d9-49ab-8ed7-7f7f6136e893"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7130b8b8-5a25-4f78-a9c5-af055cee7ff2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "72f10984-8c12-47db-95fd-deea30e94182"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f4856fc4-753e-43f9-b898-7f133d66b0eb",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d1446afe-50ae-4c72-ad37-0b6abd5063b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4d01200e-7e60-46e2-8499-24688073c9a8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "743e94f5-46bc-4dcf-9880-c37ba1b3c31c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c86dcab5-3c41-4edf-877e-02a3a62d4f6e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "304afc51-b563-40c0-8230-f061d21bc403",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b5ae9277-5056-4426-b3c2-a1eefe7a15b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "90d569b1-668e-4036-bd39-727f3e97cc6b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "80a6d81e-310c-4fd2-b769-5013ede3fea1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8e624811-6b7a-46c1-82ad-37c9a6ca5bf8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5eb6dee0-dca6-4382-af18-714cac12dde1",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "95b15720-dc0a-44ab-b88f-004b71a5bd1c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dc2f5b18-8fa5-4d8e-ad0d-60de02b8ccfd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3743864f-aa90-4b31-973c-184d9ff8e273",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "653f075c-cc23-4926-b8c0-a48a47f097b8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b6967848-243c-4c92-9408-514b081dc299",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8636b949-0388-48a1-a14b-c8c0016385a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ab4d4bd2-75cb-4590-a3e9-f7deb3663366"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9ebd7ad3-683e-40df-8c7a-d9428e225cfe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "fe78fcf1-4ac3-424a-a465-63e3114e541c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7ebebfcf-148b-45df-8171-1c6f33029e54",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "68f07c89-6621-4118-b79e-b5fece7acb6f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b374bac1-839c-4c21-a0c4-8b9b492aa140"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "373b9c22-ad56-474d-b27b-f9bcc740195a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "afa68a8e-8300-4fb6-8e6d-1bc51b54133c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1a019a5c-9ad8-47c8-bff2-ec3921585e8d",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ecfe5ad6-64ed-4b97-bca8-3d54b9015630",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4b9ccfc8-c8ac-47f3-bcae-634c6904df4f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6bafe72b-1dff-467f-8501-44e6bd0cb723",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0d43244d-165b-4cde-bff9-82f400a6c974"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d0398dc3-4f30-4590-ac93-ed8e6bcc540b",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f009f5e8-57fe-4d51-89a0-e12615498538",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "702b26ca-72cc-4326-bda1-ef147258882d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "193807eb-cc2e-433e-875a-4cd50128ca73",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "90fe14c6-bc00-4d96-96e6-331345d22123"
                        }
                      }
                    ]
                  },
                  {
                    "id": "07c677c5-a91b-4e77-9ca7-22ac29f2f436",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cab694c7-61c5-4fc3-8ffb-950d5ab48cf8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4cafe9f9-f876-482f-849e-42eca5178adf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "af55f1b0-c15b-4be6-87cb-8df73df8feaa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ebb2e682-61ae-496f-a87e-00f7881fd37f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b01cf4f5-f994-4d37-b558-67be1a93f4ba",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ce4a7599-cedd-4723-849a-818523fe2196",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fa60cbf2-8827-4e0d-89f1-325b10b5add9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "110f7a34-7f3f-49fd-9c28-cef55b881ff9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1b1e59f2-f5a4-43e8-9a09-08666a25f61d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "99afc1dd-1fd4-46db-87fe-8cb7132e87ec",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "de684241-25d8-4bf3-878f-1c21c805ed5e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "812a4739-6a8b-4b44-9450-5418fc30d2db"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "09cc9077-219c-47d4-8ba3-1fc2234ff214",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "382743f1-70c3-4bcf-afd0-7b5e3f7396ea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8f5a3e98-3c5d-4def-a73b-ea151a35de78",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "689bd719-01ee-4ebe-a6c0-5c63fbd6e4ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fd2d2605-1afd-4681-8913-45d4fcc7bfd9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "158331fe-97e8-4255-b649-c56a35ecc05e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6a350b77-8516-4c4e-a8e4-c7e3d301df6a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1a511d0e-2c5f-4623-8c82-cb5adf7fba32",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d1caccb8-73f8-4dd1-9996-f332eedd04cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "636e4991-82ec-49da-9986-223b99d73b6e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6267e1ef-a3a3-44fa-829d-2b6b6df31c6b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7ea3e153-d44d-4e12-a7c8-cd9156cacc74"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d8f9cc86-f52a-47aa-b500-3b50d8dca4d1",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7ca9de6d-f585-4f71-95eb-464d83cdc474",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f20a4dad-0863-4af3-85d3-60b213d77f89"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0d5d72fa-1185-48b6-8e7f-d45532556a46",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "245a7bb7-e840-4ae7-a2de-27d8fe319d34"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b81f2ff5-a3b5-40d9-86eb-997ec09e8972",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "77bc83c6-2721-4461-82dd-2dbdcebcae14",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "952c573d-12e6-4c1d-b82d-618bb0961020"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b896c008-e2fe-4c83-9c02-451382a34da3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6acc4fc3-c1d0-4651-a3fe-14a0d718f6dc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "54629489-445e-44c0-92e4-3f1a0107c7f9",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8a13494e-bbfa-400c-ba0d-c05320b8e0d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "868398b0-ec77-48eb-a5ce-d83657094459"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "33f89cad-b8a7-416e-8854-31b0945dd34d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "30eb1d3f-29b7-4596-8740-4c2a34f678e4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "256e540f-670c-4de8-b3be-2d51d3d5a89e",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2b1b5c68-795a-4c90-a247-8456672a4234",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a7d2b754-00da-4f64-8d24-5485686cc425"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "165ce6ad-e5f5-42cd-bec8-2f8768da612b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7e38245e-b74c-437e-95cd-7bb69fc357b4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b1db7695-e860-40bc-982f-f898776ae464",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "07c30a67-9ec0-4655-ba9c-ebab4001d2a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7e92991b-e1b8-45f1-8ecd-c4fc82b01c6a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ef1f26da-1990-4736-999a-f6fead64f7a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0f83ec9b-388b-4957-aa3a-c7ef1df1ef92"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7e335523-c9e5-47bd-8baa-eceea22dfee8",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2855e9e4-e13e-4d02-bc06-7f3d15c81060",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "19680f2b-8f05-4c32-a966-ab3cb114ec6e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a9c040a9-a92e-48a4-b5ba-30e0de2a2a30",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "331555d5-f25e-4ed3-996d-68c2d798694c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e1e552a6-e186-4025-9a99-e52e2e1dda7e",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d6dd181e-8b7b-471a-b1ce-b07ab368e172",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5b3142db-701f-4ab3-a240-646d478fab0d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b5a894de-32cd-4095-a009-126f7c0f02d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1717bbfd-904b-4cab-abd6-8df6468298b0"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "97ebb711-5689-42da-b544-a6426babf94e",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "50a3043b-9a0f-4441-b53f-187d0de771fb",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9c7049d0-63fa-4484-8bc4-81dee77f2350",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "680726b3-0d2c-446f-b415-caf9fd080e7d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8f75f19f-297b-41a7-8882-f477deb2a6f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "d02f2825-e13c-4aa0-a565-fca3e23d12c7"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "fd72bf3c-79c9-4378-b28e-804188318b06",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "7f83412d-411e-4408-9e27-2f52afbb1775"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "5929aadd-23e3-4767-9e39-c9d5d70b2cda",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "5a0bd3a0-eb97-478d-9c27-5de04b592516"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "88cae3bb-715e-4b40-916d-84d995f6fa03",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "03c44a45-9f18-4309-8282-27cb9ae1fa61"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "cf15a160-00df-4a99-a674-490df547458f",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "b9a6c0cb-342d-4756-9f95-80a31368a79d"
            }
          }
        ]
      },
      {
        "id": "2637d3f3-7e37-498b-96c7-adfa3dbbb7ab",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "b9ff6ee2-593e-4d48-98a3-3a56a7e7daea",
            "name": "Negative Testing",
            "item": [
              {
                "id": "fbe64ed8-9a8d-4709-8e2f-7a2df5867895",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "1bdfbfb9-5fac-4c41-9be5-415b9d21e379",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "23dd369a-2e6b-477c-a162-49a2092fe38f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "56ccce90-5e42-4050-8686-a718ff2b9f86"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b63c2eb9-753d-4811-85d5-6bc621274273",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e95171d9-8269-408c-b9e5-618718f80287",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "11315e03-c2b0-40f3-8966-160ec7a4c404"
                        }
                      }
                    ]
                  },
                  {
                    "id": "98c988d9-717d-4e85-85f0-0712edb249a6",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "62354c45-bddb-416a-9635-5dc1fce74cf4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "98543279-10bc-4e87-ba4e-2341fddcc8e6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aeae142f-18c9-4478-9522-2565a67800e1",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3e617b12-ba64-4036-abf1-65455c96b01a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "050173f4-c150-4af8-9560-e85329fd30e9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "703bb29d-fac1-494b-8e62-d055a45f6cee",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "63296140-18b4-42bc-a171-2f2493e2afc7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c657fd68-43c3-46ea-bc0b-fdda4e577a80"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9221d70d-93d4-44c9-907a-5b378da16f34",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0c651b36-24a3-47a1-92de-59d2dbfc4e00",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "46f16d99-b6ab-4942-a5e5-4ad05b4d57d1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3789ec10-0d1f-4fd8-b931-1e5991dbd932",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "56f1127c-a583-46e2-a0d6-5c4f54732d1f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "145f0423-8e7f-4c3e-af10-97bba2097c05"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d2931f0f-106b-4a1a-a179-34941dbb0fca",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8fb856f2-406d-4759-aa2e-e71d28dc3dc1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7f53bc4f-a0e1-4f57-8123-8f4a37d499bf",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "98a6cc99-c0da-4870-91ca-1c5dd338956b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ccfa714c-86a6-4819-99a0-285ba8724c30"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "60296b81-e388-4ebb-a853-fc3c2b522ed6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "87f43ae2-f3cd-4148-b57a-cf5b45b5be5b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "28553638-9ccc-4a9a-8925-9ab5abe9f49d",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cbc87416-db62-4bd9-a62e-69399347eb6f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d0c32233-ed06-4c68-860b-78d297bab6de"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "337f6188-f25d-4cc7-990a-3a95de21b1f1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f3a84a31-8347-4d91-b962-64108cf454c4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5e8e6fcc-509f-4d4a-937b-5921c4fd5957",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "15083fd3-7198-4d33-a91a-6771514dc968",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3a250a96-5c06-42b8-9f5f-a662b89af618"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e106a34b-4961-4eae-bac7-eecaf349b2a9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4dac48a1-e61d-4de1-af07-6379d0c171a1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8cd5ee72-ff93-423e-8278-3254e943af18",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7dbe6d4c-174d-4737-8898-077b59a3d771",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f5f73161-ea62-40d4-9da6-bd8b6a6139fe"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "63bf53bf-0541-4e17-93d1-7899e98f233c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dec2c017-d235-478b-92a7-104c470eefef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6f9e2819-f7c6-4b32-aba8-5f56477a99da",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "af8ef9da-4bbf-406e-a1ef-437a0c96137e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "96c47e83-59b7-40b3-9940-a279880e96ee"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d567f9c0-e879-458c-ae77-b4bdeb398c34",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "66cccde8-3e1b-49f4-b24c-cce293546c57"
                        }
                      }
                    ]
                  },
                  {
                    "id": "40536ada-0493-4611-a0e8-b2740e9cd0f6",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b662f7da-f292-4d1a-8861-44a5d95fead3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7eb95c66-26cb-4649-8a5d-adbc013c8fa8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "52276d27-193e-4253-ba86-6418f453fc39",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a2e357b6-cb3d-4937-877c-d6b38d81cb59"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a3e7b4c9-ec82-49ba-9105-b7cfb5d77ae7",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "63d60ba7-210d-4e0c-8075-69b89d0f299c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "aa5d363f-3e08-42f6-963d-2a34282e621e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d5a5aefd-d505-4fb4-a8cf-3ae78a08b243",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "59d714ed-7773-40ce-8bb9-a97b42fe32e0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cb7dbd36-bccd-4b2c-8d09-2de9d3ca00ad",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "72a09e7e-a87d-4cf9-a47c-0f449ef3d1b3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e0837881-5065-42a3-a9e1-478931686501"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9f05c7d4-dace-4862-b3d4-77366e4e1197",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3cc5506c-cfc6-450b-ae2d-b86c9bc84ab4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "48ffbe49-1078-4828-8671-06e5654fe0e4",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1f54dcc7-669e-42bd-bdfb-ea4d3cad87bc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3d90236a-007d-4237-be9a-7b583c88f7f4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d6cffdb6-eb62-4e90-8b40-c7d62c325452",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b89f67c8-946d-4b7d-88ec-a5c3ffea20d4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "be45db94-8381-417a-8c14-e692e1ccb3da",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d6729a9c-40ed-44f8-bf7e-16579fc2db64",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a791ee34-aaf7-4c65-ba41-7664ed28c6c9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "474281ff-629c-4a5f-b11c-ee0d94664b8a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1e29b809-bbda-4dc3-b2d9-ccd59dd10dd5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "46ad79a1-7ba7-4478-bcae-ad4260743d58",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "05d4fcb8-78d5-438d-ae17-839b26c8c4dc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f1807671-719a-4c4d-9d70-d26e1cbb136a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "71129d82-1432-4055-ae0b-267197a9578c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9f9f5d40-76f0-4b8b-bb63-ffac3df9087e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5fbe99dd-8133-40ef-8aa6-3ab278240a72",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5aee3e9d-30d2-4180-854c-bd66e13e2f01",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "412079c1-9dce-4f37-9583-f9b24e9970a5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9592de4f-0279-4fbf-9943-3c889534b040",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "775361d1-1f7a-4777-b104-b519dc1891e4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "afc45003-3511-4ade-9776-1525907a142c",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b8ee163b-e87c-404c-a45d-46f6c52e4d66",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "096e3292-516c-4d0e-8ac3-1ab9c451ea41"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bd12b01c-24ca-451d-bc27-97556295bb12",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1a0cdb05-dc90-4158-a9b3-1050b0583521"
                        }
                      }
                    ]
                  },
                  {
                    "id": "726da8ac-889f-4179-9208-81c6496fdec9",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ec0f6c45-82aa-43b7-b197-ff711523b267",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "18d44cec-f7ff-4d08-93cd-cdcad937ae7e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1678341e-f73d-4301-b016-9dd3059dec07",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "56d0e738-a63b-43e3-8c8a-eb80532b91a0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "230f0c84-15d1-4b11-8d7e-3a949acec46b",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f7df985e-910e-489d-be56-ca7117b7e456",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f9489395-f8ab-47e3-bbac-11927840571f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "09255c7f-9166-45d1-94c4-c352a9ae29f7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0061453b-ada5-4df3-8062-9e6600c828d4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a3ffd38e-c4c1-4851-9a1d-e79edd7e9cc6",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8f27f14e-2464-4b38-91b2-94fea330fffc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7392d11c-97f1-46ea-9b39-7e9b2cb44505"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "43ecabe6-cc13-4a1c-af7f-eab8da15e323",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5028fe70-8b4e-4d36-8502-2a3a3f7eae7f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "72061827-e51b-4e88-bd7c-268c99204eb4",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8529dd65-a8ba-4c05-a055-e35dbe691868",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "511e0c1a-e84e-4cc5-9ae1-888844ee8787"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7ac5fe37-46a0-4e41-abdb-b853bbd63599",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "13b0dd01-1796-400a-bb9d-b2f61aea2c3c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "34de9f18-16ee-46c3-b5e1-e8cf0be53e68",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "28385857-b32a-4ac5-b5cf-64a462c0fc4c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "650268e7-eecd-4513-8003-6eeb530fdbec"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e5d4d1ba-0a0e-4f89-b8cb-63efe87ee47a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "60bdc089-73eb-4f20-9731-6e5fb878987b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0043cecd-7b0f-4379-99aa-678a0f4a092c",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a010e587-b46b-4a58-ac9c-54def760de23",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a26aabcb-0b68-4bdc-8639-1ca8f035fcd0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b2b4c857-9e50-4217-a433-cb106b4201c5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c725b11d-25ec-4cb0-95d5-a2badbebcd0a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a5e7e49b-216e-47c7-9023-d7d8054a4018",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "99c8ba28-6dfd-4523-9032-fdcfc80de3d1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2cd3572f-5d96-4f47-88ea-85d93bd48c78"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8fb5718d-b95a-452c-9e2b-03e4ee51160e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e7c459bc-10cb-40b9-ae4b-a1c6dff17685"
                        }
                      }
                    ]
                  },
                  {
                    "id": "20edeaf9-dc13-451a-a8c7-4b749cdf2bf9",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "23a2331b-a557-446b-a0fb-dc5c70d8c8fd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ea894ae8-804f-4e5a-8ddb-a36ec6109591"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9f51a289-d3b7-4a47-b05e-865ff3637166",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "51f5a02f-e66d-43a3-a76c-8e930d18147b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3cacece8-8b99-4abf-93ca-65931cc59abc",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ce2eaa30-3b2a-4e5d-a089-8fefa41bd86d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "479d2e69-086f-4556-91e8-4c26bc1e8fd2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d307452b-397a-4170-bd99-c635bbf9825f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "57d4d9f7-e0d7-4186-a0fc-4becaaca62b8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f75132f3-cea9-43e4-a197-3a51d7830cff",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bf5b17b7-9098-47ca-b2ac-bd070bd7ac4b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f3042663-c831-4d86-bcb4-52c008848d68"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "37af50a6-3702-47cd-8757-21bb2ccea447",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c2473527-1948-4435-b5b8-eb6675f0b352"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9ed5b205-cdc1-4e86-8884-07e178c3e940",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "476745b1-2945-47f7-81fa-6e316c8d64b3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "eef320fd-0ff1-4c05-ad36-baec48477b8a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c965d8f7-b45a-4266-83e0-cf86c46af773",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "48880956-4d5c-4707-9835-caec21091a9d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8be88307-dd44-4539-85c4-3aded0cc8048",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "33bfeb9b-dc36-4967-b419-e68ca2cfa6fa",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1fea6a87-889b-4aa3-a1e7-022cd7315fa4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7510ed4b-38f8-45a5-9e24-c1ad6ce1860b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e51a24fc-3f7e-4f25-9698-a2822c6f1b0f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c79cfea3-359d-462d-b7d0-f74468afb9c8",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e3eb2064-6aee-4efa-bd6c-98ac35d41046",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7f258273-257d-4bac-9456-73041e75af5e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "10be1e01-f2fb-4a5a-9f03-3fd1eb14e99e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "73bdde7f-1d74-48cf-b06b-1810d9ae5da6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d9130978-fbe8-4fd2-87f0-5e0079987d8d",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9478755a-ba1c-4a6f-bcd2-240d344feadd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "323bda4c-588a-4cd8-abbd-8fb169762c07"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "06353003-ef51-40c3-8732-5083dd7c46fe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d621f513-db7e-4995-8777-a8b0e44992e8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ab722180-0d40-4310-8962-c138575718be",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dd00e5cc-7726-4276-85d7-9ade7f5a496a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "afacba0a-5106-4752-8a27-27d8ea06713e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "834768d3-0418-452e-b1ac-18a8a59caa4c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fc1e0886-6b74-4970-bd85-1b9b6986d488"
                        }
                      }
                    ]
                  },
                  {
                    "id": "023f2130-1d5e-40bc-aa82-1ada65fc273d",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6f34f380-5afd-44db-8161-85c789e7ca76",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "45677997-ff1c-446c-a930-649ae9be6c7d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "572f76e3-1451-4ea0-9d27-084921b83789",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8ace69da-2236-4b56-b411-a9c3dff8e8d5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "da6e229a-2486-43f3-8d8d-9b9391b1e511",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d1d85d98-3efd-4224-84a6-207eecbd8be8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1e7e096b-21fb-42cc-976b-478de49e8f9f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2971580f-56fb-4e80-8223-5bdeb7cf3177",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "089a3fbd-8251-4cd0-a296-9c7f2d78a69d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9a2bd8ea-7f92-4fc3-9033-989e1bafebcb",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "da221b3b-add5-4839-a1c4-450ea0340149",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2a6c772a-4850-4487-ac2d-9612b588e4a5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c2523f4a-fc75-4d6f-8768-8e828f11a153",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b59a2db9-553b-451b-b3d0-055dd94d9618"
                        }
                      }
                    ]
                  },
                  {
                    "id": "70e3a82b-ef54-4074-b4d5-9f0e72f3e023",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "676d43f4-cba8-4147-a092-05fc5e5322be",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2ad68580-7b15-4ad9-92c6-2012dd5f5ba0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a7d27ef7-4913-4456-907e-6d4ae3c6c9b0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4ddb1a0b-aa75-480e-8009-fc541254b4cd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "08900760-256c-42df-9a49-d999a00bd09c",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "649a7602-0300-4ca9-b0ac-136f7d7221f3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "520dd4fb-7e55-435f-8afd-d82bff6bd489"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e461338d-855e-4107-8f38-70dadac65ae5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3892ebc2-0eff-4783-a2bd-88c974b4e9a0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "753fb01d-1dbb-4393-ac97-b644024f41cc",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0be8c65b-1798-43a3-9e6f-4c80c4a9942c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "22379c9b-c548-446e-8142-984be684a056"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4cf02597-3821-4b13-a7f7-f024bdeca7d4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5fda01c7-001a-4ae8-8d3b-68f87f77e979"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fdddd2b4-7c08-4c3f-9f68-cd35ba6e8847",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a9fce4b4-8978-45e2-aa18-db0f1a08fe37",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "31468b8e-b191-4241-92db-5be0222a5f3e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5571e585-4471-457c-91bd-578690ad3344",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cb30eb05-f971-4bde-ac4f-269a866883c1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c730eca6-3e0b-4ec5-8e6c-8bdadfa5e387",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "370f44ad-e926-4155-b6f9-258c31d219e5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "86669740-65c9-45c1-8dcd-c76eb68903f2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bfbf575a-e911-407a-bd5f-3f706d4ed7f6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "87c3910e-e394-470d-a47a-fea121e661a8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "10ab4c51-b791-4ddd-9d00-4fbe834e9e8e",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "26f1bb6c-1185-4cc1-a6dd-9c044d1694dc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2e87053c-b5b9-43b4-9593-e887112dc9d5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c50a2f90-8393-4ba7-9c27-659d63da6a55",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "028258c2-06af-431c-9dd1-cd4ddbab4946"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c31d0530-ae0a-4057-9985-26776f2355f2",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6fbb8d88-4b2f-4988-9f8d-ef9f69b14006",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "85da1499-593f-43aa-b444-47e886448928"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0a686b60-c881-473f-a2b2-dc9afe96f762",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d39a725b-a39b-4521-a72d-b068e30bfb9a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1a8c05d0-27bb-4a41-9a45-0ab47142c383",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7ead8608-1605-4bf9-8ff0-f2ddd00e7132",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "acc2c2ab-a3a3-43eb-92b6-b44e9959b350"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ebcbdc7c-d67d-42b8-92a3-f39341e4d02d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6e383af9-b95b-4536-a806-2c82fc049e7b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "39cddbcb-863f-4ffe-827e-49c3518b831f",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c2486c7b-1a83-4917-9ac9-35595bb4238a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2f39a77a-458b-462a-8f84-12dc94a8436f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "19fd80e3-4946-4153-b76e-61e400b8cc77",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "45a19bd1-08a9-4919-9036-dc175feacdd8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ff75e033-f0d3-41a2-9e51-b7d4e17af192",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "59e2f9fe-aabf-4ac8-9c1a-4b5941cbb55c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e1386c7d-9f2a-4a50-a3a6-cb91f75a18b1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f3409624-0a60-465a-b165-e48d3a93f06e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b51c2ba6-345d-4bff-888d-222e4d6e681c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b8bb4f67-1385-48dc-9fec-5782d00d593b",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "10f9f251-e55c-474c-9cbb-b78b75f7c597",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "de45e681-eaa2-42e0-a12f-3f88cf51306d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fa58f844-e739-49dc-bd8a-2fb0a5f7e764",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1fd10723-1f1f-4bc9-9320-fc3beea32881"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b9ebdcf1-1dd9-4da7-b439-b14078ceebe2",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d0f24745-f406-4515-aea6-c1654ceadf23",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "756a5439-32ab-4307-8aec-62ed12edd8b1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "176ebf11-e61f-4142-acc5-40bd37d307be",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1bd8b94f-07d5-4e7d-beca-9bb60091ccc9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0915d000-b16b-4794-8f22-960a08baf439",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a91335e6-5b16-4fc1-bf7b-4f327d1493e8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "66b46bbc-6855-487b-b4c5-0239e36f9cf0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c6a1767b-8333-42dc-8511-9f5d31cefde7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dd8e810f-f51d-4f58-a5ce-8c16724633ff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d3b80039-d6c6-400b-8825-8839ad0f37d2",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e8840b93-944c-4144-af72-166a49d7b05f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b7c702c1-2e52-491c-9157-3f88f4c51d13"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "015f5a5a-500b-44e4-a592-9cf0b4ffe3e2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4a5da5a0-69bc-4a09-be8e-62d344358dab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5a8b214f-d49a-4445-abd0-77754979c975",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b7f04a48-52f6-4b7f-b57d-050dc361044d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "25af1b85-2b76-4a49-9935-b3fcf215051f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c1a35961-c500-4038-beb7-1b868f7127c0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "42348094-28ed-4f0a-a104-613d4968258e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "357402de-47ed-4173-a67f-83f5f0bd13a0",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d88fcaf7-f87d-43e8-be3e-e5b03a23aee8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9b7670f1-d5ac-4da5-9cdb-6bfe9ef2252d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4de2a017-3169-48ac-82c8-4d2af54c97a8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e39fa210-2cda-4134-98da-d62ee82faa94"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eaf866da-2efe-4952-a3f4-2185971fb1ae",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "85fa404e-dd5a-4365-b6d5-5e1d8d4df8a3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "206e1ed3-19f9-46e3-92ce-834ade816691"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bcd443f9-4b5c-402f-88bc-62b2cfb1dcd7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3ed9bd1b-1edd-4198-af14-4ddf54d0c6ad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d1746280-a390-4857-af8a-3260f166bdf2",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "258a3519-2198-4773-bb88-413b31fa3dff",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3eb09a53-51bc-47b4-ba6e-cf414e70c42a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b20a321a-65d4-4a0f-8af7-7ec3cd99b04e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0cd6b1f9-6c08-46a4-9a98-5c7583705585"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e36d5f88-f706-46bc-8f46-dd5ad7d9b60e",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6514630e-b188-40a3-9f64-8692b73f884e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "42be873a-3122-4f2a-acff-66554a8cc850"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "29fa041d-cec9-4ee8-90fa-d2db88ef6e1d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7752c784-a90f-447d-b8d6-0166611b3009"
                        }
                      }
                    ]
                  },
                  {
                    "id": "25fc5add-27d4-4252-8001-ef81b3838710",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4a427f03-cbea-49ae-ad5f-1ca086347801",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6d38eb4a-d06e-48ae-a0f4-23f0cbe90942"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ec772553-1d14-46f1-83c4-5503c23b1a8d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "06d82530-0b21-4f05-811f-028c14ee165a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aa67f0c4-8a65-4483-888d-7482866503c2",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d93116a1-39e6-4d09-8c22-03ad71965f0c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0b65e811-6ab2-48a8-ba60-c2d5d68d86e4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c9fb4dff-d9a5-4810-a4b7-e2cc310ca1bf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d0c52e37-e953-4d83-ac0c-7797e05eb1c4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "54da0e5b-117f-43de-8f4d-ecbe7ec479eb",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eedcf6d3-9d5b-4272-bd64-3acd5d04d302",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0b1f87a2-8eaa-4490-89f3-4bb2b7d98fc3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d6380769-3dbe-416f-a988-2660ce1bfe0e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1a6cc92f-18a9-418a-9a1b-44ed3f42c4fc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8831b632-cefe-40bb-8b23-770bb7177a3f",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e3a82982-f4ba-49ee-a165-6585392377b6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "502bc55b-d9bd-436b-a17b-80b1ef209548"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e2cfba8-27a3-475b-aeaf-acb2693d9f19",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e67b25ca-f540-4fad-8d6a-e9c7d62f43aa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "47f3bb36-a96b-4533-88d6-07ba4693e002",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f1bd98a9-bdff-401b-8610-679494e230a9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "58888474-fdbc-4c10-944b-8998b45d0c39"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4a672871-709b-4550-af18-564f961caab0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0919f7b3-0914-476b-9a1c-64ba98c68975"
                        }
                      }
                    ]
                  },
                  {
                    "id": "529a10bd-dd5c-446c-a2d6-170b1ef9c6ff",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "88db013f-a671-4ec8-b599-f7ca4fa12d22",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c7038c7d-7d4e-4ada-8035-a8e70b9977c7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b571227d-7946-47e9-af5f-80b305966c3d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cf287494-b4a9-4a12-b5e5-073d389cfc6d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "554380b3-fb8c-4a6d-8996-3ac557d59732",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ada73d12-f6a8-417b-8438-b78c4262964b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c6c78d7a-7a00-4eab-a784-34bf39e85fe1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c1232622-cb02-4956-84fd-19c31222a8d7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c4035130-f25c-4405-b4ae-72e527b9e98c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "34dbcdea-6188-49b7-84d5-f1c299c4c440",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2c7d5f4b-b8ba-4f34-b53d-450efa86e923",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8fb357b3-87d1-4fe1-997e-c74c86aa0755"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a7d99ff4-0564-42db-b2c8-b77dd0449edf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "67d8286e-0c2a-41b9-b230-29da15a6880c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7b0620c3-8331-4a7e-95b9-15ca59c95382",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e9549382-3251-4923-bf76-af9f9829761b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cf8989cc-7b3a-4f4d-b1a2-f8aba6e96711"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "436a7f62-ed71-4503-8c68-9b69bfda3397",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cc17cfe2-4986-44b5-9963-4b4890540560"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7c0bf0c7-8870-4009-8a0f-8ffb275f6b60",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "07a959c2-01b3-4283-8e26-4703b33f2caf",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "af6230fa-a164-45dd-ace2-2d7718140f3c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e15e7280-dac4-49c9-b45e-a2f8259ac15a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "07b58687-ec19-4d40-afe5-243ba7d82616"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6eeb3fe3-7ea6-4286-af75-0f84d7e647c2",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "796d4412-b1bd-478b-8d11-999fa6692325",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d67da036-505a-47e2-9dd5-8b74eaa75e6d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a09d1d41-5f29-42e5-85a1-be47518dd847",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b8ceca4f-3bab-4331-9a1a-6e7dd98be7e3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f9c7fdff-08ab-4b20-8ae9-ed82e9fad005",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4c7813b8-2553-4256-b121-a66d3424eab7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9069d193-f61c-48b1-97a9-4af1eb572403"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f5a60123-13a0-4d54-931c-9624cc57aadd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "15f3b308-5c4a-4af0-b86f-17538b990fc3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3a078f0c-7276-4adb-8383-51362c83185b",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3a5d2b47-d210-4c74-844a-15dd7a74f46a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ee550556-7cc6-4af0-be40-37080cf597a6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b6fc58a9-a347-4625-a639-631da32abfa9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2821b316-a2c7-43f8-b164-e3a663fb02ca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5f083f0b-6e53-4324-978f-aaaccfc9a6df",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "21e0d648-b72b-47d1-aba3-de3a08991e66",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "79870100-69eb-4f3b-bd71-e3aa7ac1fe47"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e27aa7a-9278-4b8f-8b59-bf34f32101bb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "08ad784a-63a2-4e88-a6ab-92238ad4591f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "902aa97f-aca6-4bec-b341-7d8d748b779a",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e198ff52-66f9-4eda-bf9f-9e2a1265a489",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "27362f75-c892-4dd0-98ec-b3645de60c9d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4da42dc7-d63b-4979-b5c2-e02cb2579162",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f3edf05c-58a1-4286-9e93-ec59343a5092"
                        }
                      }
                    ]
                  },
                  {
                    "id": "95e7f843-2a41-4e4b-9fa9-33d36e7378e9",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a8c9e8cb-288d-400b-a8dd-f78684a86ad0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7dc36f57-2f5a-41a5-84f5-3af46f9f5b93"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8f90108c-c9e1-4381-ac55-cf5acfe26305",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9ad2b889-7999-4b82-b5ca-c6b75e214ffa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "484dddaf-7808-457f-9409-091887f3c3d9",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bb1b6217-957a-4b7b-b476-a77396eb5083",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2bed2ef3-b321-46e1-8a8e-03bd0e7e3222"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0062d761-2896-43fa-a924-1d0daf939ff7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4c8c8358-46dc-4aca-bbeb-149bb2a4d0e7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f0e13052-5af1-4e89-a204-9438371bb25d",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7f64d7bb-09c8-420b-be4c-3299bef78fc1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "69d09607-e408-41fe-b936-1ad4056d6b7f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f357c3c8-59cc-4e6d-8a1a-b6fa2134da8b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0b62e163-5344-4846-b058-680cb765c7e3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dd3fbc0a-55fd-4701-9e63-1a7d88221f52",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f09dba65-8ecd-475d-b9b0-d9f496760341",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "75e9e5f0-8c2f-4dd9-a20d-bb73af315ee9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "40da23b3-a03b-4396-b038-7a92f822f834",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "376cc128-797d-42fc-a3e0-5e4c233545f9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b57a2610-d693-4fe4-8291-5e41bf2da188",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "70ed42ed-0b06-4564-bb39-fb10297e8378",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "816625a5-8528-4680-a9b4-4c5b76fe86b9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1b6ee06b-655b-48fc-beac-c663ae28554b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7733bac6-c3ce-452d-8530-ff34faf96b84"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c5a4b59a-073b-41ed-91bb-df2b6787f0f8",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ca17e4a1-ce51-4b78-9fe1-143673b56179",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2ac811f2-04cd-4181-ae75-6cf84c7b0de4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf968256-e5cd-4bae-b897-4beb19b3e009",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9a20b653-3a84-4e06-9f8f-a8777f565ab2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "28b5f6da-3158-4412-84a4-8f221101b764",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f03b5709-bef7-43e4-8174-07adc94cf6b2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b627f80f-12ef-423a-81ed-9911715e59ee"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dfa5fa64-3296-4ffa-bc8c-8df350c26804",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fceeeb7f-5a6f-4e72-8c0a-f653a020bc82"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e59991bb-68b2-4020-b11f-bbc955467a77",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "64aebdd4-63eb-4fca-9cc0-e1cf727bacb5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cde2dee0-b82a-4d05-983e-b6fb40326e10"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8ae5953f-2c04-4ccf-81df-bb804275bd9f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "76402316-8d29-4635-85fb-e63429771c77"
                        }
                      }
                    ]
                  },
                  {
                    "id": "40957199-1264-4ed6-95d3-a2afa57fbca0",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e2866d26-f345-48b0-98b6-8374ca507e5b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "28a94dcf-3456-4462-9eda-7458cbe3b4dd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6a885931-789c-4c86-9405-5ddcede32554",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1c195493-8eda-40d4-849d-641651198e1e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d41e3a52-a519-4f5a-88de-093900f789e1",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3c7ab96c-22e8-43ff-abe6-d8973111e03c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "673234f0-8ddc-4917-b050-bc87ce64c6b9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1e3fcb68-476a-4646-8288-9a487a836d69",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6de2ddcc-a7c8-4624-bdf4-03ca396430c0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6c43fe2f-d2d1-4a8f-9e9b-bb842a0a1e54",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cc593aad-0b3f-45a3-bee4-566502a7974f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "05a04350-dc4c-40f0-8473-a6098c6d317f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "854513f4-fe1a-40ed-9c93-bfc1a5dcaa2a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8c7f003b-71fa-4cbb-8023-fbbf3ed52ca1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ebc846f9-9b51-4f82-a18b-049c6c30b22d",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a8873a5a-8d2c-44dd-976f-8dd4314a2121",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9cab3f51-f252-49e9-a040-979d2271463a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9e104cc3-3809-4ba5-a3e7-894dbb7d6151",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a0af793a-0e60-49bc-bbfe-c1e2366f6875"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ca25100d-448c-4846-94a0-067d51c84039",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7bcb694d-41b3-4221-bd78-9df0b1bd3ffa",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4999c513-8ad6-4715-a135-72be6b5df4e5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8455cde1-c76f-45a2-a8a9-9fe53bf4c7bf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6638b794-ff9c-4406-918a-288abd832151"
                        }
                      }
                    ]
                  },
                  {
                    "id": "24f9b32b-87e9-49d3-bb27-19b345df03c3",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4bf3c61d-3da1-475a-b531-358f86985bc9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b1d99b4c-3456-4b5d-bf57-5666444db3d6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "067cd07a-cfe1-4071-b176-d30c78c378ab",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8ba4ece9-9ec3-4349-a564-e0015c3d7b35"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1942817e-34dc-4661-a02c-5d9089e582a4",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "84a984ca-23ac-40ee-bffd-6934ffdd6270",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "dde8766c-e82d-460b-b62a-cc55c157925e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3aefc907-c19e-4113-a093-6b10f0900c27",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "67145e8b-fe8a-49aa-9a5a-447341593fd4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c50541fe-d1c8-4b50-b1e1-d9b41094f013",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8f777187-803b-43ff-b060-263a710c9a12",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "20e6069f-a72e-4c37-960c-02e377629c19"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "39ce7e6e-8aec-41b0-9b89-4e7c86309361",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c4319afd-38a9-4853-a216-d28627db5c78"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c4395766-db55-46a5-93dd-6e8fd135a042",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "614b112e-3a44-47b4-ad63-e2cf00d84c7b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b606697a-737c-4820-b6c6-6171dcbf3e64"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "41e8b7b1-52cd-4471-9660-4908250e298d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d927865c-cb4a-427e-8e69-1bac8f66ca62"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9d9a7548-71e8-4309-b57e-1c3ea9af6ff8",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c11a8dea-3dad-4226-b428-314651537e1a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4b26e791-1d86-4d8a-92df-3c3c9804fa99"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6fbc43ae-ffba-409f-9e7e-f6753f78bb6e",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "262111a8-4e19-4ad3-a367-78eb505b87e3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e1b14b7c-b259-47ca-8213-7b2bd444035d",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "81a1d1a4-2afd-40e8-80c4-d1f1f465e9e9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e7ac3e03-31db-4445-9765-00ba3032b322"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1ca64eb5-4b21-4c4f-be45-fc049797cb6c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "64543534-177c-4580-ac31-1157c4cb39d9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bf0dde59-6f3e-4972-bafb-fccadb6122a9",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c8d1ec34-29a8-41d2-99e4-d30a87c438dc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "62273f80-4d2b-4563-afad-054a004129ec"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3cdb73af-ec9d-4e40-b89c-b4f4d3f9f8f7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aa1e3b93-e76d-4c5b-b997-c16ac7200c72"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8662c90c-0dc7-44c9-b496-dc8c8991aed2",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "980bb0ff-8e0b-4406-b16a-ee0cc5250011",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6a3e41ea-7b0c-4acf-ae51-1eda24802f70"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5bfa3789-a2d1-4698-a576-686d7cb04111",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "44ea08c5-b786-4d37-9372-ae819e6b8420"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e8b331fd-c655-4849-81e3-0e3034aabef7",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f76d02a4-423c-44c1-9be3-8ba2d0445dfc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cf17aa30-d891-425c-b044-4c106c569afb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fb09a226-16ad-4052-8265-84d98eb8baef",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "49a113e4-9283-471e-b957-2b38cb8d2710"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f309452f-f519-4c22-9cf4-a4ea6483bbae",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "471af779-f090-481b-b50a-6ae128edd3bd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7ce99376-6d1a-46ab-9125-fa0a07862e2f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c515fc3e-86b1-4cb2-88e2-0cc700f71d2b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "12e41860-7587-454d-b159-2bfe37c27ee8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2641bcdc-25fa-4f9f-a76e-38ac8b569542",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "daa90434-cbbe-4b24-948f-2326da0ec2d1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e0254c7c-5f8c-46e9-9b7a-8c81dc13f4bb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1cedb3b9-7cef-496d-813b-6fe1fcd3b2cd",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d15bbcc9-f1c1-49bb-8687-81caa84b737e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a6b753ae-9c0f-4c5c-a42d-d38265e9c5f3",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ff3422d0-6d1d-43db-80f6-c5655ab6abf8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0a27f186-1e47-4465-ab60-99054007a592"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d978f13-71a8-408a-8ff3-5fc13f841e6f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f4e47b25-2b11-451e-a5ef-3bc8bc442349"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "7205c618-b2f7-4138-85fa-f04a979e4e25",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "1306d71c-545d-4d14-ac36-cfe1ff82c7c8"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "58fbd6fa-c96a-4960-a338-0c46c2207adc",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "e8305d7b-d677-4e19-87b9-027200800d7a"
                    }
                  }
                ]
              },
              {
                "id": "07b04f5e-84aa-40ae-ac63-e9a68a3d9170",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "754294ff-fbe5-4b1d-98a8-797f7ccf009a",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5e34e4c0-6cd1-439c-bd77-e1d22660ba30",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "a9b00f76-cb13-41c6-ade9-99ea08f4460f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d64bcc8-2def-4b36-b6f3-e4fdf8d1cfdf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "8c4c4791-e1c3-45fa-858c-88bfc9b8602d"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "473e782c-08fc-4d13-9752-55ab304baeb3",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "a127cac9-7729-413f-b8ac-5db740e22d2b"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "29a4d1e2-4ee3-4592-8666-d3baba3a6466",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "1abbdac5-91d2-4192-b40e-1ac9fbdb165a"
                    }
                  }
                ]
              },
              {
                "id": "aedbe8b8-bd4e-4631-bf6b-0a28d956d7a2",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "fe35814f-8eb0-44e5-8e4d-692d19cf48c1",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3bd86025-789b-4725-8da3-eafd5075a5d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "646f42f7-060f-4880-9428-708cbbe44a3c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "36a43606-bde3-462b-86b0-06682bd63fcc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "22878c9e-2722-46c2-a1b3-f7c8b9b02f68"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "58a96e19-d6f3-4e3c-9704-9ebed5bf8a82",
            "name": "Positive Testing",
            "item": [
              {
                "id": "fdb7900b-725b-48d0-95b5-33ee72953916",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "9cbdc7d0-80c8-4ff9-8442-a7309adc308c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "b86e2316-ea89-4a3a-92da-91c17d729de4"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "41534fa2-ad0e-4a81-bdf4-697691d638bd",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "8a465af7-7598-4bef-bd98-d8afe5e8864f"
                    }
                  }
                ]
              },
              {
                "id": "b6592135-71c4-45c6-8c16-ca33af85d5e4",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "65d61056-7625-4dee-b99b-3207ba136dd5",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "b4151e83-eaf8-42c9-af59-eac72ebd53e8"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "d14b46da-e1e5-4d6a-bc67-8813eae433b7",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "f24f9457-5c72-43cc-8f94-e34198f3a63c"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "d0caca35-12d1-48bb-8027-ead01836b5ea",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "70af764a-deb8-4330-9c64-da02bb0b9afb"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "9354925f-dd36-4996-a4a6-b643af85995b",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "6073f29b-9eeb-41fc-94c1-c3ad6eb5c9ef"
            }
          }
        ]
      },
      {
        "id": "8c323d31-3f2b-4fe8-b038-a2cc6057ed8e",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "bb382e4d-8804-43a0-83ac-3df8de9e3734",
            "name": "Negative Testing",
            "item": [
              {
                "id": "b652e7ef-88f0-4e6f-a16d-4b9486f85a12",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "f01fa368-d56a-4c88-af6e-0d541d6d662a",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "31815f4f-2e2f-4d3d-9ea1-e9c6aa96e916",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "9f161109-72ef-4138-ab8e-9bad5f0225ad"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3c49e118-bbff-4f82-b5bf-b6540da0caba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "55bcd3ba-ea44-4ce2-94aa-f7e082a9b954"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "dad84dff-0ca9-4290-a3ec-fdbad6e385cf",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "15fc48f6-ecb2-4ce2-8068-6180a8a826cb"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "ffe96e4f-190d-414d-bea0-b27a43d21ddd",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "53765bdd-0593-41aa-a97a-6f159d551009"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "fbb945af-381e-4546-92f7-136556cf7e48",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "011b5845-03ad-45b9-a5d8-b7f957041941"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "cbb71cb4-1277-4b21-a4d4-c893668a88e2",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "258721ec-8167-4d89-a9f3-e4c98b80bacf"
            }
          }
        ]
      },
      {
        "id": "579031c5-4c66-482f-a297-74715717c90d",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "7f4fc559-06e2-417b-adde-b0540e7f918a",
            "name": "Negative Testing",
            "item": [
              {
                "id": "aefffce1-f134-41b4-9537-42fb83b32782",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "ffab2f2c-e8b1-4b18-85fd-aecd86e8ade4",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "68bd52a2-59cc-4376-99f5-102a215ea25f",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "03824070-cf59-41f2-94bc-0a904433fe58"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "30b4f662-7041-4788-af68-c718f7212904",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "45be41ae-46ea-47cd-8857-4851a27fe15b"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "97402fa7-c2e7-4d6a-8b50-ccbd60a35517",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "47f43b2d-caeb-4557-b70e-68b18d2071c7"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "41e52ca8-f1a0-4d4f-a52b-5271652ad261",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "00e61260-e34d-4444-a8d6-3113678e045b"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "ee5f5a19-4b4a-4199-9ca9-d65cc66b14b5",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "8f203e4e-170c-4321-ad03-e8ebf84fe2f5"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "9a0bb5c9-36e9-479a-a816-fa2581b9fdd5",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "7c733dc9-ccfb-487f-b54c-ffae0670b7f8"
            }
          }
        ]
      },
      {
        "id": "49358717-5c7e-4498-9ec1-447efc11645b",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "1f72f89f-daa8-4ce0-83e8-9312d575f600",
            "name": "Negative Testing",
            "item": [
              {
                "id": "3c7c7928-19ec-44ba-b377-476123e16ca5",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "48ba3d2b-4a1a-477f-a987-80834270dc1d",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0c447bc7-1976-458f-ac01-6b81cac85a3d",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "7d2a9962-8ef0-4d8e-b6a8-b3de8431ed76"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "87f4cdce-9ba0-4f58-8b9c-c4a53a83a143",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "e31f483b-419a-4d3d-aad5-a30ee375269a"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "4c87f839-92b1-4b9c-8d41-c7b418f4e811",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "2d11de46-5bd8-4656-a909-9d984b35c9e4"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "8b1008f4-2435-443b-8509-9e235e15cb5c",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "be4b7f35-6d2b-472d-a38a-53b72ea73dd7"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "20be9cb0-f0cf-4f32-83e9-67644e9be412",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "35b2aa4a-ac44-4847-a7eb-5e652f31a3bc"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "888fb0bc-b633-4241-a078-876d2aa2e68f",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "24943849-c549-48d0-b59f-229b3de8f67d"
            }
          }
        ]
      },
      {
        "id": "59aab6c0-9d86-49c4-a014-71f35f0e9157",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "fc765d7c-77db-41e6-a979-84fee44b56af",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "7aca371b-42e5-43c1-97bb-c6fdf0f80fcd",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "ac83ddb2-aada-49fe-8fa4-13bceb5a01a0",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "7afc98ff-dede-4722-8dfa-2decd6c268cb",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "ccf304cc-e128-41da-af93-5b324587e9ee",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 2091,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 285,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 573,
        "pending": 0,
        "failed": 9
      },
      "testScripts": {
        "total": 1050,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 1041,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 114.5368421052631,
      "responseMin": 12,
      "responseMax": 2979,
      "responseSd": 330.5955968289038,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1704501328653,
      "completed": 1704501370551
    },
    "executions": [
      {
        "id": "5fcf961e-d2b8-495a-ac0b-75a6d6b215a0",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 283,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "780519f9-8ac3-4e1d-a1c9-99ef84d8ce7f",
          "httpRequestId": "eeb3d899-2af4-4fa1-8274-7f108b9b2045"
        },
        "item": {
          "id": "5fcf961e-d2b8-495a-ac0b-75a6d6b215a0",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "c3f60ca5-e10a-4085-83a5-735279e22420",
          "status": "OK",
          "code": 200,
          "responseTime": 52,
          "responseSize": 0
        }
      },
      {
        "id": "c7f4d555-33d0-4eb4-9d52-25b4c2fc9ff9",
        "cursor": {
          "ref": "af2ebc28-58ce-4112-84e1-1248d58be126",
          "length": 283,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "f28870e3-f8cf-47f0-be9c-aee0779fae17"
        },
        "item": {
          "id": "c7f4d555-33d0-4eb4-9d52-25b4c2fc9ff9",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "9d49dc3d-d56e-4029-9164-5987aaa3d429",
          "status": "OK",
          "code": 200,
          "responseTime": 12,
          "responseSize": 0
        }
      },
      {
        "id": "28ba013b-32f7-4799-aca2-54e543587a46",
        "cursor": {
          "ref": "d4cf76f7-1740-49ae-b601-c5e0b552023b",
          "length": 283,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "f8eb2d3f-8fef-439a-b937-de6eb1d06e68"
        },
        "item": {
          "id": "28ba013b-32f7-4799-aca2-54e543587a46",
          "name": "did_json"
        },
        "response": {
          "id": "2485e5f9-c173-4888-915c-796eee8f2b20",
          "status": "OK",
          "code": 200,
          "responseTime": 642,
          "responseSize": 1640
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "41f027d3-2d86-432d-8bce-276b21920137",
        "cursor": {
          "ref": "3bf3781a-ecd8-47cc-b513-9b168ca43430",
          "length": 283,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "792699cd-1407-4068-b0c3-670ea3ecd505"
        },
        "item": {
          "id": "41f027d3-2d86-432d-8bce-276b21920137",
          "name": "did:invalid"
        },
        "response": {
          "id": "9e0523e0-0e87-4f42-8a7a-b26299d75364",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 270,
          "responseSize": 353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "41f027d3-2d86-432d-8bce-276b21920137",
        "cursor": {
          "ref": "3bf3781a-ecd8-47cc-b513-9b168ca43430",
          "length": 283,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "792699cd-1407-4068-b0c3-670ea3ecd505"
        },
        "item": {
          "id": "41f027d3-2d86-432d-8bce-276b21920137",
          "name": "did:invalid"
        },
        "response": {
          "id": "9e0523e0-0e87-4f42-8a7a-b26299d75364",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 270,
          "responseSize": 353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f35902e1-48a1-43bd-98da-7b5f304e6d89",
        "cursor": {
          "ref": "e8817553-a9ab-47c6-b3f4-2c00a47d35d2",
          "length": 283,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "8671a7d0-2c6e-4af1-8ace-a1b3fe81310d"
        },
        "item": {
          "id": "f35902e1-48a1-43bd-98da-7b5f304e6d89",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "aa887990-9397-43dd-a730-b764baeb50bf",
          "status": "Not Found",
          "code": 404,
          "responseTime": 117,
          "responseSize": 78
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c3553a2d-f596-48a9-9f30-13650a5c647f",
        "cursor": {
          "ref": "905aa61a-7b17-46ad-8813-699c2030f2db",
          "length": 283,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "8257fcf3-7eb6-4c7b-9496-9c73e894953e"
        },
        "item": {
          "id": "c3553a2d-f596-48a9-9f30-13650a5c647f",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "8107f29a-8238-4144-a6b9-f4550a05453d",
          "status": "Not Found",
          "code": 404,
          "responseTime": 59,
          "responseSize": 78
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "15b57862-ffdc-48da-a957-68e5ec11846f",
        "cursor": {
          "ref": "854e87c9-c743-4075-aee6-152a70f1cb11",
          "length": 283,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "e1c6a4d2-7515-4fe8-9e57-27fffe7ef1c2"
        },
        "item": {
          "id": "15b57862-ffdc-48da-a957-68e5ec11846f",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "3e745d97-a166-42e4-9014-673c78ce3780",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 58,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1a55d4f1-18f9-4f65-8ff6-adfc2b38910e",
        "cursor": {
          "ref": "27bdabef-201f-4ec6-8165-c96d41cb7f89",
          "length": 283,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "a15ac08f-c86b-4a97-ba5a-a0c5bb22072a"
        },
        "item": {
          "id": "1a55d4f1-18f9-4f65-8ff6-adfc2b38910e",
          "name": "identifiers"
        },
        "response": {
          "id": "fa68ec88-6db6-4ef6-90be-e47fad96b843",
          "status": "OK",
          "code": 200,
          "responseTime": 306,
          "responseSize": 1656
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "15fc6365-9b56-408d-b16e-ebba0c81b69b",
        "cursor": {
          "ref": "f0cdb73c-8f18-4c04-a305-a41c4a01d8b0",
          "length": 283,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "2fe528c0-173d-4242-be64-35e4a39754ce"
        },
        "item": {
          "id": "15fc6365-9b56-408d-b16e-ebba0c81b69b",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "b4cdb983-157b-4917-b244-fb4655d35f7a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 301
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "50335878-06a1-4e13-a202-a0dde20041ac",
        "cursor": {
          "ref": "39eb70db-069e-4cd1-bcd6-d6ac22d3a720",
          "length": 283,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "9f6403db-9e3f-44e1-860b-227e663ce3b6"
        },
        "item": {
          "id": "50335878-06a1-4e13-a202-a0dde20041ac",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "008d0808-d7a4-40d4-be65-db14cc7b2ad6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 511
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e4fa71b-e5fa-4981-a56c-80da414b6856",
        "cursor": {
          "ref": "0ba065cd-25fc-4c75-9dd9-67aea21d7440",
          "length": 283,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "501d0a44-8442-48ca-a8b2-7e471314782b"
        },
        "item": {
          "id": "0e4fa71b-e5fa-4981-a56c-80da414b6856",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "0724a4b3-0510-45d6-a70f-931d78b0c045",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 519
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bae591c3-1a1d-435e-874d-6ac6c2d17b4c",
        "cursor": {
          "ref": "79a188b9-17d5-43c2-abee-a0c89af3888a",
          "length": 283,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "e6cf8291-7115-49e4-81bb-5e51a30df97d"
        },
        "item": {
          "id": "bae591c3-1a1d-435e-874d-6ac6c2d17b4c",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "7aa27a98-4cbf-407b-b160-b7e55499850c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 516
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b00f8896-30a7-41dd-adcb-bee9e4a7dc78",
        "cursor": {
          "ref": "d9fd2fbf-6603-4212-bcc0-2e82b468c7aa",
          "length": 283,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "db071264-ac01-4e79-9cd0-a5ceac4bb9bd"
        },
        "item": {
          "id": "b00f8896-30a7-41dd-adcb-bee9e4a7dc78",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "9b64212e-1029-4c79-8419-56bba3b3ef1e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 518
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad19942a-99aa-4549-a1c7-f56d1c590d75",
        "cursor": {
          "ref": "c4223fa6-52b8-4825-92a5-f760fa6927f2",
          "length": 283,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "5709575d-6f90-4ab1-a3a8-2aa587ae40c3"
        },
        "item": {
          "id": "ad19942a-99aa-4549-a1c7-f56d1c590d75",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "5a96fa1d-bdb4-44c5-9141-fec0ebaaf14a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 565
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c32f09d1-965e-42e5-b990-4c0e77e25323",
        "cursor": {
          "ref": "fd30ea36-b7a3-4480-822f-2a3c97625eab",
          "length": 283,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "c22a3a45-d528-41fa-aed5-dbc67a5f594c"
        },
        "item": {
          "id": "c32f09d1-965e-42e5-b990-4c0e77e25323",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "866160a4-0edf-4b81-91f8-81fbbb55a56a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 554
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6790c954-1e31-45d9-9108-7612bf91f327",
        "cursor": {
          "ref": "58d2d193-dd6b-47d1-aae7-927d68bdd499",
          "length": 283,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "749c5b5f-5602-4107-9fe3-ca42a392c5ba"
        },
        "item": {
          "id": "6790c954-1e31-45d9-9108-7612bf91f327",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "98b7f647-3a57-4d99-9761-96844e4355d4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 603
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "227326ba-7707-45f2-a656-554a2a0430b2",
        "cursor": {
          "ref": "68720a1f-7511-4304-903e-d54adf2e8a04",
          "length": 283,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "024427c3-f943-40d1-acf1-82227beda2ea"
        },
        "item": {
          "id": "227326ba-7707-45f2-a656-554a2a0430b2",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "fe5b1ae8-22b6-45c0-846d-773b5784dd68",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c9109550-6cdb-4aff-8130-6a28e77fbe9a",
        "cursor": {
          "ref": "c78b5c8d-60af-4f6d-9ebe-6bd56e167bd4",
          "length": 283,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "c28d27ab-e594-4fbb-9075-112e31708002"
        },
        "item": {
          "id": "c9109550-6cdb-4aff-8130-6a28e77fbe9a",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "9ca7c018-47c8-42e0-8d3a-c47a829bd3ba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "75679b90-286e-4d29-8940-d7dfbcba3c2f",
        "cursor": {
          "ref": "887de97a-4bf7-41df-b871-dbd00221de17",
          "length": 283,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "5b735b20-1506-4e51-8ad3-7c4a8576c23c"
        },
        "item": {
          "id": "75679b90-286e-4d29-8940-d7dfbcba3c2f",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "b968faa4-2981-4f9b-b7a7-29fcdd9dc328",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "89dbf17d-23b3-4a58-9e4e-efdf80fa4381",
        "cursor": {
          "ref": "b8c3bf97-32ec-4ad3-aa74-33b9c04825a9",
          "length": 283,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "6a00bb19-a7cb-4d19-8170-9949ea7bd1b3"
        },
        "item": {
          "id": "89dbf17d-23b3-4a58-9e4e-efdf80fa4381",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "e484dcc0-7fb3-4212-aafc-3373ce65790f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 612
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "06f50e6e-a723-4093-9186-87a646c6f2e2",
        "cursor": {
          "ref": "d13f265b-5a93-40ca-8c55-ad1a0427fb5c",
          "length": 283,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "c2096a9a-b96c-487f-a395-fe06fffda2ae"
        },
        "item": {
          "id": "06f50e6e-a723-4093-9186-87a646c6f2e2",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "4bb2b07b-ae87-4236-81e9-fa19492069d1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 627
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c85e7f77-a04f-4a94-bd0a-f96229a36b37",
        "cursor": {
          "ref": "96fd4e41-bdf5-4ec7-85f4-2d0a1fac9ae0",
          "length": 283,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "0bc5337b-dacc-4401-93c8-2d2260ede478"
        },
        "item": {
          "id": "c85e7f77-a04f-4a94-bd0a-f96229a36b37",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "4678c70f-6155-4583-a4de-947d6754ab0b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 583
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "27ac8053-4a47-4ac8-8492-9d9ec3aa5315",
        "cursor": {
          "ref": "73198a26-2bc6-44bf-aada-3afa449f448a",
          "length": 283,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "3d62098c-1095-494e-9681-172b32ce47fa"
        },
        "item": {
          "id": "27ac8053-4a47-4ac8-8492-9d9ec3aa5315",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "80432a65-910d-4bc7-acf8-846057e72222",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 580
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3af8c134-353b-44ae-ae13-04bf96f00c35",
        "cursor": {
          "ref": "730d07f8-4bbf-474e-8baa-8f3cf26714c4",
          "length": 283,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "7422742f-061e-40c7-bfc1-26d42776bfc5"
        },
        "item": {
          "id": "3af8c134-353b-44ae-ae13-04bf96f00c35",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "e73bb4e3-83fb-43dc-a858-7bf8a777d3c5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 582
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e77b32e6-5ec7-42cf-97ca-7c863ab6f653",
        "cursor": {
          "ref": "72171cd5-fe85-4354-89f6-4da8ea92d8d7",
          "length": 283,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "6aa6a3f1-8c67-4a7b-9628-99e86812317b"
        },
        "item": {
          "id": "e77b32e6-5ec7-42cf-97ca-7c863ab6f653",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "5b603e53-3a13-40de-a459-e8b05e316355",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 632
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eb384e0a-7fd8-4428-af5a-5e525847c092",
        "cursor": {
          "ref": "05910ebf-a2bb-463d-827a-f883be0bb6d2",
          "length": 283,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "5d6b5a23-b2fd-4898-acb3-39d0e42e8b89"
        },
        "item": {
          "id": "eb384e0a-7fd8-4428-af5a-5e525847c092",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "7ae88347-031f-4a3b-9d55-5373d578a67a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 560
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "235ca9b3-7e27-4878-8b4a-f35f60217e4d",
        "cursor": {
          "ref": "9b491ba3-0ad9-4e1e-a2f2-d7754fc45038",
          "length": 283,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "698e09ce-33fa-42e5-b9a0-c9445d65e0da"
        },
        "item": {
          "id": "235ca9b3-7e27-4878-8b4a-f35f60217e4d",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "ea8da5ee-2b1d-4a3a-bbf9-5e76df808f0d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 555
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "76f699a9-3ff4-439f-a12a-3b25b0ac79db",
        "cursor": {
          "ref": "10a7134d-079c-4146-8d2d-937b930d6a2e",
          "length": 283,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "64be52c2-1b6d-4d3a-86c5-63aeae5a62a3"
        },
        "item": {
          "id": "76f699a9-3ff4-439f-a12a-3b25b0ac79db",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "b8bf28b7-5bc3-42b0-bb42-58eb8ee574bf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 552
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da33938d-b7c6-4bbf-b96f-440b018b8337",
        "cursor": {
          "ref": "6713c829-4686-413a-b04f-5d6f778a5bda",
          "length": 283,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "c14254dc-a357-4a59-add5-44ab61741d26"
        },
        "item": {
          "id": "da33938d-b7c6-4bbf-b96f-440b018b8337",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "2293f672-9af9-4b44-8125-2b9d95f7946d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 554
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ccfbebb9-b94f-4f4e-8b8a-ad14826caf31",
        "cursor": {
          "ref": "ec7aca69-fee2-403b-8a82-fc9f0546a22b",
          "length": 283,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "c6fa2612-3a5b-4289-a91c-17bbb931480a"
        },
        "item": {
          "id": "ccfbebb9-b94f-4f4e-8b8a-ad14826caf31",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "3a9540cf-3852-4dcc-854c-0b20268e2474",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 552
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "85ad6831-7d22-44d3-90a0-934c278ba974",
        "cursor": {
          "ref": "1f8e066a-e119-4d93-8d59-9a0a6ff4f846",
          "length": 283,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "305c5bf8-6dcd-4eea-9261-0a809fab6ba2"
        },
        "item": {
          "id": "85ad6831-7d22-44d3-90a0-934c278ba974",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "1ef3cd3d-133b-4173-a5d8-147ce894da36",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5057d019-1f4e-4084-9877-b487fd78a2ea",
        "cursor": {
          "ref": "6173d154-18b0-41e2-b421-1ffd0b277764",
          "length": 283,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "686e5e7a-0a6d-4272-849f-11bdb595cc5b"
        },
        "item": {
          "id": "5057d019-1f4e-4084-9877-b487fd78a2ea",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "15c9e747-ccf6-4d6d-8b4e-a48b59f53a53",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 574
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3260e5f1-4f07-45d2-8ad9-0048b3143385",
        "cursor": {
          "ref": "7512a8e5-7183-44d9-a5cf-bf60d250f2ce",
          "length": 283,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "01cad4e3-bbca-42ec-95c3-0393bb0cc470"
        },
        "item": {
          "id": "3260e5f1-4f07-45d2-8ad9-0048b3143385",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "f10bb119-d6d0-446c-966f-d54da3d4de3d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 600
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c0ad1c0b-4496-4dc8-b04e-58a4086ddcc2",
        "cursor": {
          "ref": "f41f8275-2afa-424b-b014-5bf27c86ebfd",
          "length": 283,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "f501a5cc-72d0-4922-bd62-33e4201b7f9a"
        },
        "item": {
          "id": "c0ad1c0b-4496-4dc8-b04e-58a4086ddcc2",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "a10bc90f-8266-4347-95a0-66d7c55190e2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 590
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "29e3bfcb-dc65-42b9-9f90-7f44f79f7256",
        "cursor": {
          "ref": "2b9324bf-3cc3-4bff-a150-b532ae5653d4",
          "length": 283,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "a4dd00a9-a909-4a81-9375-9184cd2bf4ff"
        },
        "item": {
          "id": "29e3bfcb-dc65-42b9-9f90-7f44f79f7256",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "2d0e6c87-fda2-4c4e-b36f-e2c60e97fce9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 587
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "88ae5b13-690d-4f9b-a3c3-6d87811c4d8d",
        "cursor": {
          "ref": "e76802a6-a6c7-4dd2-b130-ad4e2870527e",
          "length": 283,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "d8af08d1-c4f3-4c43-afa9-4c0b7fa8210f"
        },
        "item": {
          "id": "88ae5b13-690d-4f9b-a3c3-6d87811c4d8d",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "f93bf46d-1600-4350-81b3-8ed472ebfdfa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 589
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b32650fc-cced-4c93-8902-c2c3c1caa36d",
        "cursor": {
          "ref": "e0e5bc0f-3cb2-4a09-bcc6-4184b8d6a332",
          "length": 283,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "e9099a67-f532-45dd-ab01-2a3816c1d086"
        },
        "item": {
          "id": "b32650fc-cced-4c93-8902-c2c3c1caa36d",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "09447445-24ce-48bb-bc25-f07d7d26e146",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 587
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "68da0fb8-d362-4599-8a38-eb4f59bbff35",
        "cursor": {
          "ref": "ef51f5da-28bc-4b2b-830e-6d3786553d09",
          "length": 283,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "2a016101-3cf9-4e08-86cf-b0f2fae0b66d"
        },
        "item": {
          "id": "68da0fb8-d362-4599-8a38-eb4f59bbff35",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "9cea4c30-adf9-47b4-aa3c-bf611d8af4bc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 512
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "068612ec-4dd7-46aa-89ef-62ff3066633d",
        "cursor": {
          "ref": "32aae980-9ab8-4d1c-bf98-4f1f905e94b4",
          "length": 283,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "58014f01-785a-474e-b06d-d5db37016760"
        },
        "item": {
          "id": "068612ec-4dd7-46aa-89ef-62ff3066633d",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "2a223b7f-b8ca-4b65-9297-c7f4791270be",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 1012
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "56f5af71-9617-46a0-be07-8d647c9b5397",
        "cursor": {
          "ref": "8ab73e01-62ac-428d-a335-fe363d5fd212",
          "length": 283,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "ce7406de-e2f1-46d0-85d5-63eb3b79ba40"
        },
        "item": {
          "id": "56f5af71-9617-46a0-be07-8d647c9b5397",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "0dbac66e-25d1-4569-a423-927652f26bcb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 941
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "15a4c282-b144-4fd4-8bdd-38e175361c16",
        "cursor": {
          "ref": "b17a1cd7-1a0b-4623-866e-b93bad2c5ae5",
          "length": 283,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "f4e3390a-860a-403f-80c1-09e34e0d86d2"
        },
        "item": {
          "id": "15a4c282-b144-4fd4-8bdd-38e175361c16",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "73478265-d97f-4d0d-a6a6-16818c07ed1f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 938
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8125784b-becc-4bdc-a673-902d1371b71a",
        "cursor": {
          "ref": "4aa853d0-2a9c-49e7-bfa2-44bf5842b9a5",
          "length": 283,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "9f7de142-56ad-42cb-a8ce-607590998ca2"
        },
        "item": {
          "id": "8125784b-becc-4bdc-a673-902d1371b71a",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "d868f697-f782-4ff1-a3f0-6b918def16f7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 940
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6f1b60da-0353-4af8-a9a0-4486431802a9",
        "cursor": {
          "ref": "957ed1e9-31da-4ed3-943f-ab2ce1e8825d",
          "length": 283,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "17c09f38-d4f7-4a87-8bdc-04c5da574535"
        },
        "item": {
          "id": "6f1b60da-0353-4af8-a9a0-4486431802a9",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "0bb5f5a2-a38d-4649-b1c3-fa37db7eec90",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 1343
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8db905a6-3ccb-4df9-a72d-5618fdc3f795",
        "cursor": {
          "ref": "ee319a03-f2d0-44aa-84f6-9873674edce1",
          "length": 283,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "5fca95dd-9f93-4e21-893a-986d9302c370"
        },
        "item": {
          "id": "8db905a6-3ccb-4df9-a72d-5618fdc3f795",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "811cf369-ebcd-486b-8e64-6d6517e8187c",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 325,
          "responseSize": 90
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "978ecfa4-681d-4e58-8010-b19b64dd9245",
        "cursor": {
          "ref": "a3ef19b8-bda9-49b4-9dc2-dd4b1e7776d2",
          "length": 283,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "0efc1342-12a1-49eb-99c1-dba91c299664"
        },
        "item": {
          "id": "978ecfa4-681d-4e58-8010-b19b64dd9245",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "71ee368d-918a-45ca-98f0-fc5c1eb567b8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 971
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dee99a4b-4c70-43fd-88b3-e20c92bb4c52",
        "cursor": {
          "ref": "7e4f9a39-60ec-44a5-9aa3-2706149cdd89",
          "length": 283,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "5b4399a6-6134-4410-8f9c-f9aab4ce0bc0"
        },
        "item": {
          "id": "dee99a4b-4c70-43fd-88b3-e20c92bb4c52",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "828e3da7-ca45-4444-aed5-1057d87bbdfe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 1351
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4e0aff74-cf2e-420f-bc18-8e9c1d73dfd6",
        "cursor": {
          "ref": "599fd21c-fd2e-4fe3-8075-bd7b807cc1ea",
          "length": 283,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "a2efc15c-ffd5-4ca4-96ae-851de52e1feb"
        },
        "item": {
          "id": "4e0aff74-cf2e-420f-bc18-8e9c1d73dfd6",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "e880b828-2ec6-4564-b2a3-89e2a7061f31",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 1280
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3a3f214b-4c40-4298-b3ed-dea43957466c",
        "cursor": {
          "ref": "4c49f7b5-f790-4c57-9cda-1e4c3cb7b221",
          "length": 283,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "4d1f6ba2-3bb1-4689-a431-8a68a32efea9"
        },
        "item": {
          "id": "3a3f214b-4c40-4298-b3ed-dea43957466c",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "4fafff77-f4a1-4822-a91c-4e15b1284f7f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 1277
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e2072eed-a785-4df4-bc4c-efb7fbae0ae3",
        "cursor": {
          "ref": "f97d6fe3-c836-47f1-8f28-450944b63c57",
          "length": 283,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "40fc7440-4d38-432e-b37e-9999938c27e4"
        },
        "item": {
          "id": "e2072eed-a785-4df4-bc4c-efb7fbae0ae3",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "cdf45632-480a-491c-b1d1-172e10fed8a0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 1279
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c1709f2c-ef23-4510-bbb4-a8cf0d2b448f",
        "cursor": {
          "ref": "83416467-bf47-4a47-b161-20646fe54f1a",
          "length": 283,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "3ba3cc0f-d29e-4238-bc51-95fcb53af0be"
        },
        "item": {
          "id": "c1709f2c-ef23-4510-bbb4-a8cf0d2b448f",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "1247407b-cace-49a4-a9b3-e51f7dc41ea9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 1682
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c596e4a5-af4a-4ef3-8e62-41262ad9f061",
        "cursor": {
          "ref": "29183a22-5911-4cf9-9f0f-1aca4a67b724",
          "length": 283,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "46259fdb-8916-4797-ac3e-66c5dcdd1642"
        },
        "item": {
          "id": "c596e4a5-af4a-4ef3-8e62-41262ad9f061",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "b3f4d1cb-d44c-4a18-85b2-4c2495aa2a98",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 328,
          "responseSize": 90
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d84d0411-d714-4ea4-a186-31e392f23b9a",
        "cursor": {
          "ref": "55709460-8d5d-47ce-b301-1e3a889bef71",
          "length": 283,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "8ce8abbd-ba87-4202-b325-932281898435"
        },
        "item": {
          "id": "d84d0411-d714-4ea4-a186-31e392f23b9a",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "bfb6a7fd-6e3d-4881-9dfb-069357b8704d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 570
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "67abb920-c1b9-4e7e-b7fb-868aef789678",
        "cursor": {
          "ref": "20504993-9889-4fe0-b9ea-9324f07b1629",
          "length": 283,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "9b5ac08e-73e2-42df-9639-a55ecd7ad28e"
        },
        "item": {
          "id": "67abb920-c1b9-4e7e-b7fb-868aef789678",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "d0823016-4797-435e-9656-5405981ef6ba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 604
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "677d856f-e868-4739-84f7-b18145519065",
        "cursor": {
          "ref": "50cd1a5f-cd8c-4e18-976b-5f741f442f18",
          "length": 283,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "2855806e-de97-4dda-9da3-f4622ee4529a"
        },
        "item": {
          "id": "677d856f-e868-4739-84f7-b18145519065",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "fedb5813-82fd-41a4-a2c8-964930587e99",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 585
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f9fdabd0-1f4d-426b-b8dc-72553bd6db0d",
        "cursor": {
          "ref": "906c2d5c-3e37-4808-b096-e48fb663a9d8",
          "length": 283,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "07f945a1-99d1-486d-bfdf-ae7b9fa6968b"
        },
        "item": {
          "id": "f9fdabd0-1f4d-426b-b8dc-72553bd6db0d",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "9207defb-2db8-4dc1-b89a-69970061bed6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 582
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d6c2956e-df16-451f-a075-7b3712f922bf",
        "cursor": {
          "ref": "531e9584-7663-49dc-99f7-d95b98220477",
          "length": 283,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "42e32678-9873-429c-be4b-afb5eae6ea5f"
        },
        "item": {
          "id": "d6c2956e-df16-451f-a075-7b3712f922bf",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "79819636-9b62-4178-b4dd-e5eb2bbff645",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 584
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "57148f7c-1e05-409e-8a63-b99303be75b5",
        "cursor": {
          "ref": "488f1bc8-78fe-48cf-9929-8e488e95af53",
          "length": 283,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "dc183cec-8f14-46b5-8d68-413079a0af43"
        },
        "item": {
          "id": "57148f7c-1e05-409e-8a63-b99303be75b5",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "f35d3fc6-76b2-41b5-a742-3a6e7b04e0c9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 582
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a2664ed-4f51-4b7d-895d-5d5204cef8c6",
        "cursor": {
          "ref": "57101dd3-1ea9-40db-be1a-22c5d3eed639",
          "length": 283,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "6c60aa33-f1f8-491d-bf95-1e94ad2b4dcd"
        },
        "item": {
          "id": "4a2664ed-4f51-4b7d-895d-5d5204cef8c6",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "113493a3-4473-45f9-accd-945e833e832b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 635
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6cab0769-eda3-4cac-9069-c12bfbfe588c",
        "cursor": {
          "ref": "45b64b11-48fb-4332-b108-7908bfe147af",
          "length": 283,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "2e63995a-f04f-4d1e-8deb-3643ecb97835"
        },
        "item": {
          "id": "6cab0769-eda3-4cac-9069-c12bfbfe588c",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "a911063a-d010-4cb8-9e03-cc73c8f9bae6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 584
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7286b299-7412-4d9c-a284-14fa09dec01e",
        "cursor": {
          "ref": "eb0d78fb-f53c-47fc-aad7-62d3cb213e54",
          "length": 283,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "babaaded-c56d-40e9-ba0a-e9e5bbf49839"
        },
        "item": {
          "id": "7286b299-7412-4d9c-a284-14fa09dec01e",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "62cd4107-9d47-4be3-8984-fc519d81c483",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 1055
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d9704f8a-419b-4125-9071-d00752ee877e",
        "cursor": {
          "ref": "d0cd75c7-97f2-4d26-9c72-6611590eb5a4",
          "length": 283,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "20be33c9-5f70-4c6f-9348-7fda3719eeeb"
        },
        "item": {
          "id": "d9704f8a-419b-4125-9071-d00752ee877e",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "d6158697-3939-424d-b90c-a4f2de7171ce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 864
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4ef4e449-73cb-4254-ae98-5cbbe7ea9f5d",
        "cursor": {
          "ref": "308c5ad0-a40f-4d2d-a88f-515e22b275b7",
          "length": 283,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "d40dba7e-2405-4faa-95d9-12eacee054a2"
        },
        "item": {
          "id": "4ef4e449-73cb-4254-ae98-5cbbe7ea9f5d",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "ec160729-7cb4-46e6-882d-b3b34ddd75d8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 861
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7cef06fd-3dae-46fd-8e19-de8850defe25",
        "cursor": {
          "ref": "42f2ffd9-44b7-4514-ab45-ea2632dd2998",
          "length": 283,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "680d6407-5bce-4e4a-b672-cf362d1fcbd4"
        },
        "item": {
          "id": "7cef06fd-3dae-46fd-8e19-de8850defe25",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "bf705423-c2f1-4cca-9e99-bd37de8a2cce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 863
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4dfd0d4d-ff06-49d4-b5a3-2080626ad1e2",
        "cursor": {
          "ref": "d529c068-06eb-45b7-aa07-701f7b653995",
          "length": 283,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "81949c07-88c1-4453-b9b2-328ecf23ca92"
        },
        "item": {
          "id": "4dfd0d4d-ff06-49d4-b5a3-2080626ad1e2",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "b0207104-5fb7-4fa0-b19d-4708295fc60b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 876
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "43c99bc3-c4a8-422e-875d-1654fb1f9d32",
        "cursor": {
          "ref": "9c80cfed-fb16-4757-bb5b-a24cf1e6d063",
          "length": 283,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "b61d647e-2eef-4ac4-8b89-3444f8206502"
        },
        "item": {
          "id": "43c99bc3-c4a8-422e-875d-1654fb1f9d32",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "ed18da63-efb2-4c93-bff5-9f07747600ac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 1370
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ec1bfff8-a77e-447b-916f-bcc4e45c3353",
        "cursor": {
          "ref": "deebf1d1-d1e8-43b1-a0ab-e2ec691e92c3",
          "length": 283,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "230bed84-efb2-4340-b739-9f85c1524387"
        },
        "item": {
          "id": "ec1bfff8-a77e-447b-916f-bcc4e45c3353",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "2e1b743b-7c80-4749-b355-38d7d68bc851",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 1356
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "587dce5f-f3d0-4f0e-9fd3-d1ddf5a50961",
        "cursor": {
          "ref": "ebc636f1-79f5-4640-9ef7-93460a8df915",
          "length": 283,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "0c9cd576-1093-4039-b51f-7ad8dcf36e5e"
        },
        "item": {
          "id": "587dce5f-f3d0-4f0e-9fd3-d1ddf5a50961",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "32fedd13-dc83-48ef-b580-21be97ba5a29",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 1353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a5a41bae-b3b7-43ac-998f-ea8caf08cca4",
        "cursor": {
          "ref": "db7dc12c-5b02-4bba-8deb-452c3fcd71ac",
          "length": 283,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "cccb5cce-99ff-4b87-a1a1-c2d412192a9b"
        },
        "item": {
          "id": "a5a41bae-b3b7-43ac-998f-ea8caf08cca4",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "3d9d2bd6-8066-4b7c-a327-b33207e2079b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 1355
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e4e49606-c65a-4c5a-887c-ce0a1d70730c",
        "cursor": {
          "ref": "c13ddc21-83e6-43eb-a586-bd8980695687",
          "length": 283,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "453abdc4-d033-4875-9602-64a9a758de5d"
        },
        "item": {
          "id": "e4e49606-c65a-4c5a-887c-ce0a1d70730c",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "4906a230-db01-4a92-ac15-4aaec149a045",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 1353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "403cb137-423b-4530-ba0d-287e1ee8d083",
        "cursor": {
          "ref": "3fa30cda-cdc1-4383-ba2e-f3db2ff9934a",
          "length": 283,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "6534e6d0-4ad2-4399-beab-8872bd772a37"
        },
        "item": {
          "id": "403cb137-423b-4530-ba0d-287e1ee8d083",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "80ad20cd-a724-4395-b93d-0bb127a43371",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 545
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dcef601b-54a2-4145-af4c-a1e23561d35f",
        "cursor": {
          "ref": "dee1bc3b-99ab-441d-b082-3b620da3239a",
          "length": 283,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "599ed81e-561a-4aad-9aa2-1bc03e913625"
        },
        "item": {
          "id": "dcef601b-54a2-4145-af4c-a1e23561d35f",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "234424d5-d95a-4d5a-ac4d-0881ef7a7d91",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 523
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e1124ac-3b69-4454-b70e-b61e729cc889",
        "cursor": {
          "ref": "0eacf475-82f6-4310-ab2e-036ae1303749",
          "length": 283,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "6649d96c-e6a5-44b8-bc13-ff53ec5dd648"
        },
        "item": {
          "id": "6e1124ac-3b69-4454-b70e-b61e729cc889",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "761acf19-ad72-4110-a8dd-9c58da33d338",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 526
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5fc4ae84-3962-422c-af88-b0a6f2695c8d",
        "cursor": {
          "ref": "eea33130-2d58-43d5-b71b-c5b3fa6c5c4a",
          "length": 283,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "8c2e24f7-6e23-47fd-8d0b-05c6c23f4d18"
        },
        "item": {
          "id": "5fc4ae84-3962-422c-af88-b0a6f2695c8d",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "d3f34cc9-7a26-4058-b940-f0d8c14845d3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 523
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1df28dee-91a4-4da1-90ba-58c646372ea0",
        "cursor": {
          "ref": "3a9f8288-30cf-4fbc-b825-aefcf89ca6ed",
          "length": 283,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "1bb1de4b-5864-49ab-99ca-a0cc8739694b"
        },
        "item": {
          "id": "1df28dee-91a4-4da1-90ba-58c646372ea0",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "81380b9d-1aeb-4ce7-b5b4-f86f7a108d14",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 525
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ecd3fce2-3f70-48d4-bc9f-c3d27d619caa",
        "cursor": {
          "ref": "0b561712-010b-42a8-80e5-8dbd9924b773",
          "length": 283,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "8a6c4677-47e7-47e8-b3a9-fe7397cb2dad"
        },
        "item": {
          "id": "ecd3fce2-3f70-48d4-bc9f-c3d27d619caa",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "a3f6fd57-6388-4cfa-9942-d2ba6083923e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 523
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4cf8107f-d8dc-49b5-9304-8dfdcbd46c06",
        "cursor": {
          "ref": "229fb183-341d-4b8e-9739-136982a6a864",
          "length": 283,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "2e03ddb8-6793-441d-a64b-6c0f6d334279"
        },
        "item": {
          "id": "4cf8107f-d8dc-49b5-9304-8dfdcbd46c06",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "061dc5b1-2cf1-46c8-8574-3d2389507f66",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 560
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "08142430-370b-4a25-a84f-7b1a099b246b",
        "cursor": {
          "ref": "b78a2f77-4a3f-44aa-8735-a093acc8a21a",
          "length": 283,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "9d409999-c0f9-4577-a45f-0da429fe01a8"
        },
        "item": {
          "id": "08142430-370b-4a25-a84f-7b1a099b246b",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "6d21af42-456b-45c8-a0ed-23a736641611",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 802
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "380d0ceb-c7ad-465f-9614-748ed9fbf92a",
        "cursor": {
          "ref": "55003c21-efb8-42f0-ae42-16d7bbe1d34c",
          "length": 283,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "eb37206b-f424-4e06-8482-50301bb411b7"
        },
        "item": {
          "id": "380d0ceb-c7ad-465f-9614-748ed9fbf92a",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "ea923baa-f13b-44a5-8a9d-d0702b8a0a83",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 783
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "41646f49-4928-4c2a-b6a6-b6446951de67",
        "cursor": {
          "ref": "3e4a338e-ac2b-4c65-ab25-31a1f17c952c",
          "length": 283,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "ac540fd0-27c0-45f6-ad26-b12c7287a511"
        },
        "item": {
          "id": "41646f49-4928-4c2a-b6a6-b6446951de67",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "20c67e2a-3f0b-4c90-802f-02ff7292f95d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 780
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "01f02cec-6bd1-4a28-8f39-831a10227451",
        "cursor": {
          "ref": "2b2d38a2-cd28-46cf-a5a9-c7118ad8613d",
          "length": 283,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "969de244-fb30-431c-8b6e-7badc8154900"
        },
        "item": {
          "id": "01f02cec-6bd1-4a28-8f39-831a10227451",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "c656e2ba-83d6-4e7c-a586-9486547933a9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 782
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a9fb8c1f-b99d-4c62-9595-12f2e75ec2c1",
        "cursor": {
          "ref": "264c140e-6bd9-446f-a792-82bf40ca5be0",
          "length": 283,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "ed5f02a9-0820-4df8-a37b-85959eaa59bb"
        },
        "item": {
          "id": "a9fb8c1f-b99d-4c62-9595-12f2e75ec2c1",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "fe5eb100-d122-402a-8f15-cfccde5623f2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 780
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "53eca08e-7436-4d97-9d66-577a6d81794f",
        "cursor": {
          "ref": "e3b46544-a79a-45a6-ae32-afd25550c11c",
          "length": 283,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "788c26fb-9226-44e7-8015-afa85bbc132e"
        },
        "item": {
          "id": "53eca08e-7436-4d97-9d66-577a6d81794f",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "14608f26-6bce-41f0-8e09-0a72a7432f0f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 651
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "24c2d9c4-5830-4599-ab47-5802d9ff26ed",
        "cursor": {
          "ref": "3a3ee22f-2300-45bb-aade-f1e2e49b925a",
          "length": 283,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "c3181990-e06b-4494-8518-4da827c83277"
        },
        "item": {
          "id": "24c2d9c4-5830-4599-ab47-5802d9ff26ed",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "64d99fed-9506-4c40-89d4-8798c6a35ff1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 629
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b7975e6e-24e3-4db9-8256-0be52a4e5f26",
        "cursor": {
          "ref": "8b245322-ebc2-4c8e-98aa-7b212d3c351c",
          "length": 283,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "cb761d6a-0666-48dd-b8bd-18de90c3dd2e"
        },
        "item": {
          "id": "b7975e6e-24e3-4db9-8256-0be52a4e5f26",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "c06e7bbc-a23c-4580-ac77-622e22164adb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 610
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9fc3d26e-95d6-479a-96b9-7eba1a9a4567",
        "cursor": {
          "ref": "923909ad-4563-40a2-b006-e1d7e359752c",
          "length": 283,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "df6f92a6-1386-4779-ab91-9ae045890049"
        },
        "item": {
          "id": "9fc3d26e-95d6-479a-96b9-7eba1a9a4567",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "be0d6b96-3e62-457b-98f2-4fa38a02e5e8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 607
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8669ef43-83bb-4188-b1ca-f843ccda344b",
        "cursor": {
          "ref": "885d2ae5-d766-45fb-945a-de3019c015f3",
          "length": 283,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "82fdfda8-9df5-4bfd-bbfe-5a00a5bf82bc"
        },
        "item": {
          "id": "8669ef43-83bb-4188-b1ca-f843ccda344b",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "4163a419-0473-46d5-b3bd-cdadd8cf2255",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 609
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "77dd5dde-9791-454b-be79-bc1cdf4fe06c",
        "cursor": {
          "ref": "54c47504-d080-43ce-b2ab-3927939e1a4d",
          "length": 283,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "23dd0420-516d-42bc-8c76-2cf3048d5e0e"
        },
        "item": {
          "id": "77dd5dde-9791-454b-be79-bc1cdf4fe06c",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "19aa197a-0e12-4617-a85d-aa61b0e8ba9e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 607
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f7f236d4-1521-4787-93e3-ea26c2ec3c6f",
        "cursor": {
          "ref": "f0fdd692-9ce9-4fc1-b70a-a0da0fbffa64",
          "length": 283,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "ea138120-de3d-41a7-934c-ad09fc10fe3b"
        },
        "item": {
          "id": "f7f236d4-1521-4787-93e3-ea26c2ec3c6f",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "a04f2514-4fa8-4942-8bc6-0fc5ffc6899c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 660
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fd058ead-963a-4187-9244-0e402a756928",
        "cursor": {
          "ref": "fc6a0a93-fe28-4d01-b8e2-01b03afb97f3",
          "length": 283,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "f8eb686f-2933-4b79-ad70-34cd538f4ec1"
        },
        "item": {
          "id": "fd058ead-963a-4187-9244-0e402a756928",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "f59233f0-3f36-4a31-95e9-8c13f2bdc349",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 640
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "52c32caf-d79a-4ce6-8f18-367d1a161bd4",
        "cursor": {
          "ref": "4e62a45b-5dd0-4441-9bfd-8f12479a2af9",
          "length": 283,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "7c9de0c5-841a-4181-8b76-0b8995e0e571"
        },
        "item": {
          "id": "52c32caf-d79a-4ce6-8f18-367d1a161bd4",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "cbe9d95f-0eda-4028-97fd-9785c3064dad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 622
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bc5cca7e-cc8f-436e-b70b-aad653c584fe",
        "cursor": {
          "ref": "39054a2f-db8c-49ab-8bc7-1a01b60caec1",
          "length": 283,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "01752760-d3b7-494e-9705-3343e42f0439"
        },
        "item": {
          "id": "bc5cca7e-cc8f-436e-b70b-aad653c584fe",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "c50bcf24-0f8a-4fe2-8672-324eddd035c2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 619
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f6d71ecc-c298-4b58-9af5-e4eb5cd6c7f7",
        "cursor": {
          "ref": "4b0d363e-111a-4165-b5d4-1854d761418b",
          "length": 283,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "6173fe0d-5b16-49ba-8ade-b43056bff2ec"
        },
        "item": {
          "id": "f6d71ecc-c298-4b58-9af5-e4eb5cd6c7f7",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "5e4e904b-d88e-4231-8cb4-c9cf08cd144d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 621
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1ceb8ef6-bf05-4dda-8a7e-842781a42cdd",
        "cursor": {
          "ref": "88e50a8f-e86a-4732-a877-2116524a2471",
          "length": 283,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "ddc12ee0-b442-49f0-bc7d-5c83f2039582"
        },
        "item": {
          "id": "1ceb8ef6-bf05-4dda-8a7e-842781a42cdd",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "5d9120f0-0732-4143-b97f-d9ac0809851d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 638
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "74cf4072-4cea-43ba-b8d2-2350ab0c4c14",
        "cursor": {
          "ref": "8f5f10f2-0b41-4434-a2cd-d38a45dfcc15",
          "length": 283,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "473353b1-8fc7-461d-8eda-f1082e79770e"
        },
        "item": {
          "id": "74cf4072-4cea-43ba-b8d2-2350ab0c4c14",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "eaf69062-0dce-4a0e-92b1-5a1fbba99da0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 656
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "42499b1f-2852-4f2e-b84e-888e22609b8b",
        "cursor": {
          "ref": "d194fd29-ca41-4cf8-be55-95c0b07dbd73",
          "length": 283,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "7d29032d-01cd-4a8d-bbcc-5ced818e0dd0"
        },
        "item": {
          "id": "42499b1f-2852-4f2e-b84e-888e22609b8b",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "c77b4a92-ee07-47e1-81da-f8a68bba84f4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 914
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e0d35825-004f-4588-8a6e-d48ef516c18a",
        "cursor": {
          "ref": "d254cea6-157a-4312-a9e3-c3d621d7f2dd",
          "length": 283,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "55611b91-d72c-4182-8a2f-c5cbabed7cb6"
        },
        "item": {
          "id": "e0d35825-004f-4588-8a6e-d48ef516c18a",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "fdae2253-acb6-442b-a8e3-caadd281fdf0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 896
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c5ed3848-ffb0-4ecd-9b96-0d6e30e8c397",
        "cursor": {
          "ref": "cf05b8ce-5e7f-4c6e-a17a-8abdfdff09fe",
          "length": 283,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "42d7f08e-46bb-4639-bf02-58774b4b9e53"
        },
        "item": {
          "id": "c5ed3848-ffb0-4ecd-9b96-0d6e30e8c397",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "647417b3-416b-49b9-becc-cfc73624dd39",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 893
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a3a1bfcb-3c33-439b-a737-fb9f3e78372d",
        "cursor": {
          "ref": "f4d4ffd9-6e4a-4dcf-bd3f-e87c3cfb3785",
          "length": 283,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "356784dd-dc9f-4ded-ab82-ea500563f487"
        },
        "item": {
          "id": "a3a1bfcb-3c33-439b-a737-fb9f3e78372d",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "48e015d7-037b-4d77-af6d-0eae10c17b65",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 895
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6df92350-6747-49fb-b780-3dc4376d1488",
        "cursor": {
          "ref": "eebae9f1-d824-4dbd-8501-4f3cd9a765cd",
          "length": 283,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "0833244e-b9a4-4b1c-b077-6b2bd354d350"
        },
        "item": {
          "id": "6df92350-6747-49fb-b780-3dc4376d1488",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "fd46e71d-6ce4-4380-a982-04be4d30b264",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 893
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6f86de63-3e87-4c08-a4a2-1fbae58746a2",
        "cursor": {
          "ref": "e2d2fde8-1ec0-4f3b-9710-36fd6fbb196d",
          "length": 283,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "8b19f18d-799d-41a8-ac14-3302e10cc29f"
        },
        "item": {
          "id": "6f86de63-3e87-4c08-a4a2-1fbae58746a2",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "9339f940-3580-46c0-8a1f-e980a9975b42",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 719
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e4940085-a1a9-4072-8511-faf7df839cae",
        "cursor": {
          "ref": "589a919a-279b-4eea-99d7-7a6e910b51a7",
          "length": 283,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "5c2d03c2-3418-442d-8e8c-ebaf98baf0b1"
        },
        "item": {
          "id": "e4940085-a1a9-4072-8511-faf7df839cae",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "cf9f9cdb-a956-4cfc-94be-5ff8c6f309a9",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 55,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2dffbd54-a9b8-4f9d-86e8-14f1930e5b8d",
        "cursor": {
          "ref": "a3bcc5c6-2998-4be2-9a01-fbc457fa3e54",
          "length": 283,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "7c9dc6e7-f8c4-4809-b59c-7ffd8b9af290"
        },
        "item": {
          "id": "2dffbd54-a9b8-4f9d-86e8-14f1930e5b8d",
          "name": "credentials_issue.credential.issuer:dup"
        },
        "response": {
          "id": "5aff44b9-5bb3-48fe-beee-290eab930034",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 842
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:102)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 1,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:2:102)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:3:102)"
            }
          }
        ]
      },
      {
        "id": "bd0b8a54-6252-48e5-aea5-4ad0535d4265",
        "cursor": {
          "ref": "aa2f44dc-b039-4f8c-a803-06478c021f82",
          "length": 283,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "0c4b8b42-52c6-427a-92f3-5d21318b1a9c"
        },
        "item": {
          "id": "bd0b8a54-6252-48e5-aea5-4ad0535d4265",
          "name": "credentials_issue"
        },
        "response": {
          "id": "3ab26d4d-f694-42ba-a1a6-ad42bafa195b",
          "status": "Created",
          "code": 201,
          "responseTime": 2979,
          "responseSize": 707
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata.verifiableCredential should have required property 'id', data.verifiableCredential should be string, data.verifiableCredential should match exactly one schema in oneOf",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata.verifiableCredential should have required property 'id', data.verifiableCredential should be string, data.verifiableCredential should match exactly one schema in oneOf\n   at Object.eval sandbox-script.js:2:103)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false
          }
        ]
      },
      {
        "id": "8013763a-7cc5-4a8e-951f-47ebfaeda771",
        "cursor": {
          "ref": "5903ca82-811f-4f5e-ad74-def61ecadee0",
          "length": 283,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "480f4911-1cc3-4e61-a7d1-8d79f88fbeca"
        },
        "item": {
          "id": "8013763a-7cc5-4a8e-951f-47ebfaeda771",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "cff3bc5e-9ee4-41ee-930a-a0df2fe8227a",
          "status": "Created",
          "code": 201,
          "responseTime": 2603,
          "responseSize": 760
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "b0d5da5a-81d7-4b7f-898a-53c58a93690d",
        "cursor": {
          "ref": "c491c68d-a0b0-4fc0-90d5-cc092d1f8dfa",
          "length": 283,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "392ceb5c-52df-48a5-a679-d1a457f82ed4"
        },
        "item": {
          "id": "b0d5da5a-81d7-4b7f-898a-53c58a93690d",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "491ce680-b623-4dd6-a977-a6a24a73fcba",
          "status": "Created",
          "code": 201,
          "responseTime": 2143,
          "responseSize": 714
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata.verifiableCredential should have required property 'id', data.verifiableCredential should be string, data.verifiableCredential should match exactly one schema in oneOf",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata.verifiableCredential should have required property 'id', data.verifiableCredential should be string, data.verifiableCredential should match exactly one schema in oneOf\n   at Object.eval sandbox-script.js:2:105)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "5000f5ea-9a87-4da0-8cf9-f7c8722896d8",
        "cursor": {
          "ref": "a2120ecc-a4f7-4462-8be3-af161fa49ee7",
          "length": 283,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "c0373923-9b9b-445d-9d42-efdc9e391180"
        },
        "item": {
          "id": "5000f5ea-9a87-4da0-8cf9-f7c8722896d8",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "d692c9a2-5add-474d-9872-32d2b02e66da",
          "status": "Created",
          "code": 201,
          "responseTime": 2218,
          "responseSize": 718
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata.verifiableCredential should have required property 'id', data.verifiableCredential should be string, data.verifiableCredential should match exactly one schema in oneOf",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata.verifiableCredential should have required property 'id', data.verifiableCredential should be string, data.verifiableCredential should match exactly one schema in oneOf\n   at Object.eval sandbox-script.js:2:106)"
            }
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "c5615c8a-e713-4457-aace-12ab6572f418",
        "cursor": {
          "ref": "d51b21c2-2a3d-482a-8ce8-d131533a016e",
          "length": 283,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "8503c528-42e1-427a-8370-9a46f02bfe4d"
        },
        "item": {
          "id": "c5615c8a-e713-4457-aace-12ab6572f418",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "e4c130aa-2823-4987-8ec7-859c19a70608",
          "status": "Created",
          "code": 201,
          "responseTime": 2073,
          "responseSize": 707
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata.verifiableCredential should have required property 'id', data.verifiableCredential should be string, data.verifiableCredential should match exactly one schema in oneOf",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata.verifiableCredential should have required property 'id', data.verifiableCredential should be string, data.verifiableCredential should match exactly one schema in oneOf\n   at Object.eval sandbox-script.js:2:107)"
            }
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false
          }
        ]
      },
      {
        "id": "0cc949b2-279e-41de-bd8e-4698d9934bae",
        "cursor": {
          "ref": "7d6a893e-9597-470e-b900-dbb898ee08bb",
          "length": 283,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "284f1d59-29f4-4a0a-be27-85ded2dcdf38"
        },
        "item": {
          "id": "0cc949b2-279e-41de-bd8e-4698d9934bae",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "4fba5587-3bb2-49b6-a189-4a93981509f8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 725
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:108)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:108)"
            }
          }
        ]
      },
      {
        "id": "d3ff1208-dbe7-4947-9c99-d799a5ece55a",
        "cursor": {
          "ref": "325c2ef5-e8b0-4cd4-94b1-3afaf110016d",
          "length": 283,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "762525b5-65cf-4902-b562-49bb9224f157"
        },
        "item": {
          "id": "d3ff1208-dbe7-4947-9c99-d799a5ece55a",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "adb78fd6-66f9-4a9a-b4f3-4588196da62b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 567
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "afa328ec-aef2-48a2-903f-10fe15056a40",
        "cursor": {
          "ref": "ed838952-4597-49cc-bda6-bab33d4b78e1",
          "length": 283,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "758516ab-21c0-4455-a720-6132f830ea87"
        },
        "item": {
          "id": "afa328ec-aef2-48a2-903f-10fe15056a40",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "d6f4ae91-76f9-400d-80da-608ca65873a4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 616
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2fbe8f86-eb3a-46a7-b660-7ac06edca223",
        "cursor": {
          "ref": "e4758070-2185-4f47-82e6-d8f4d1cf8985",
          "length": 283,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "4c6a736b-86c8-41c1-8f6a-98a508c4dd57"
        },
        "item": {
          "id": "2fbe8f86-eb3a-46a7-b660-7ac06edca223",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "a2276c5c-0f03-4116-960f-3429d2e1f5e4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "80233861-dd15-4d4e-baf1-29170ed1ad2d",
        "cursor": {
          "ref": "a75b6bf3-7f73-4afe-aabf-c75f0d47c012",
          "length": 283,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "1622b3f2-2d3c-4f9a-9e60-d85be893d5d5"
        },
        "item": {
          "id": "80233861-dd15-4d4e-baf1-29170ed1ad2d",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "2f170b65-6b21-4354-a672-da4b50868ef4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e26d788e-9de8-475d-a29e-4f51d52cc566",
        "cursor": {
          "ref": "623b32a5-cb60-4863-a985-67a3e361ab19",
          "length": 283,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "be978771-e635-4724-bc7b-336d7c79ef1c"
        },
        "item": {
          "id": "e26d788e-9de8-475d-a29e-4f51d52cc566",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "a89ddd2e-0c60-4ec1-abe3-699681fd974f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c0ffeb7-a511-4e1b-93f0-b0dee80066ed",
        "cursor": {
          "ref": "234f153c-34f8-4df0-acbb-bc81d0606972",
          "length": 283,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "72e0b965-7384-4f0e-b692-765dd5f820ad"
        },
        "item": {
          "id": "7c0ffeb7-a511-4e1b-93f0-b0dee80066ed",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "969c024f-4fdb-4169-a59e-0a1cfebe0022",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1a4c19f2-9b0e-4a80-bee4-ace3c3d4900d",
        "cursor": {
          "ref": "14d01810-be3f-4801-bae8-e3aa04ee24b7",
          "length": 283,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "0d2f2eda-32d4-4039-b65f-09e8260b458d"
        },
        "item": {
          "id": "1a4c19f2-9b0e-4a80-bee4-ace3c3d4900d",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "2c6a7efd-c28e-490c-9eab-3223c962e57f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 386
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ada245e3-a734-4eab-aa38-46d266e3f408",
        "cursor": {
          "ref": "a27c0f45-0447-48ff-a6b1-ea3cbe9ec663",
          "length": 283,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "4ce4bfa0-0291-43f7-9454-6ecbf15b321c"
        },
        "item": {
          "id": "ada245e3-a734-4eab-aa38-46d266e3f408",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "9fd2e264-e0e5-4ca2-8de9-09cf03762f10",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 437
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "277846ac-1b98-44d6-b75d-42022bd4b73b",
        "cursor": {
          "ref": "7300c3a4-1e83-4a17-9890-33cd8a2885f2",
          "length": 283,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "045039bb-e956-4ee7-94b0-5c6b54514659"
        },
        "item": {
          "id": "277846ac-1b98-44d6-b75d-42022bd4b73b",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "4213d1f9-a1af-40ee-b80c-b1587959d46d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 434
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e7078be6-44f8-4690-a16a-caa7b0e81fe7",
        "cursor": {
          "ref": "12347dc1-6ca4-4461-8160-1bb6cf0c69b5",
          "length": 283,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "d2388a04-a52e-4ec5-b481-2ea415570169"
        },
        "item": {
          "id": "e7078be6-44f8-4690-a16a-caa7b0e81fe7",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "240f8783-89b4-4c0d-b458-c7f168b5cbf8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3cd05cc0-e745-42b7-aaa6-36e389a1da2b",
        "cursor": {
          "ref": "d23eb848-0f79-428b-9b66-72e8d24b12bd",
          "length": 283,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "187f4929-ff79-4b93-adf1-9711fd840967"
        },
        "item": {
          "id": "3cd05cc0-e745-42b7-aaa6-36e389a1da2b",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "668daecc-7e64-4c26-af35-785913eb85f5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 480
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "18c66330-0ec7-4c49-886e-d19f647fcca8",
        "cursor": {
          "ref": "f5f6318f-9fcf-465b-837a-d11a4b1e5ffd",
          "length": 283,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "19a47748-62bb-41b4-85d7-f417f34a5fe9"
        },
        "item": {
          "id": "18c66330-0ec7-4c49-886e-d19f647fcca8",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "70f92dcb-6ec0-4e00-a2ce-8ae39cc26f84",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a5f54d13-1a49-4f3b-bcf2-447314b949f6",
        "cursor": {
          "ref": "c1b74bb1-3235-4641-89ca-4cc5429b414c",
          "length": 283,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "3d985432-6e59-4b62-bf8f-1b6f45374476"
        },
        "item": {
          "id": "a5f54d13-1a49-4f3b-bcf2-447314b949f6",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "fb00f50c-a023-4a81-aebf-df470eefce26",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 531
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "81187099-6a73-4a9e-a6e0-c7be91534686",
        "cursor": {
          "ref": "81e065d8-bd63-46e3-8fa1-32b3f97574ac",
          "length": 283,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "f21c15e6-3bfc-4936-b26b-f83ef3e67faa"
        },
        "item": {
          "id": "81187099-6a73-4a9e-a6e0-c7be91534686",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "b90a200d-c9f5-4e09-844d-dfb599351c12",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "93b827ec-5202-4e26-bba3-c70ea70ed126",
        "cursor": {
          "ref": "c375771b-33ad-43f7-a0ef-74bddb93f504",
          "length": 283,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "1190ae6c-6627-441f-8763-06aca45fa194"
        },
        "item": {
          "id": "93b827ec-5202-4e26-bba3-c70ea70ed126",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "5305f5ad-34e0-4b3e-a322-e7b88159fcf7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 439
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "faf0641e-349e-45f5-a846-972e7ef514d4",
        "cursor": {
          "ref": "1c5c17a1-c03c-4c72-b342-5fdecba673cd",
          "length": 283,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "4c0d46c7-fbdc-4012-9a08-1cf5a0603dbd"
        },
        "item": {
          "id": "faf0641e-349e-45f5-a846-972e7ef514d4",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "df57e82b-f70f-4f13-8e5f-797524271faa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "591edec1-193f-4aa8-9f9d-d9786b360224",
        "cursor": {
          "ref": "e5f7271d-9374-4e37-8928-28c3478b36b6",
          "length": 283,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "8141b090-d49e-4225-8b50-fe6662e873de"
        },
        "item": {
          "id": "591edec1-193f-4aa8-9f9d-d9786b360224",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "db8a376b-ec4f-4307-9984-ce850f0670c1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 438
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e0a920dd-4cd5-4cf8-ba85-04bcb2a0a043",
        "cursor": {
          "ref": "b4d2e909-6667-48bd-9215-9675d89c629e",
          "length": 283,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "e391dad2-a127-4ed3-806b-029a7b84c63d"
        },
        "item": {
          "id": "e0a920dd-4cd5-4cf8-ba85-04bcb2a0a043",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "854f53f9-6930-4aca-84fd-211a7f94a65f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 460
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4d2331d3-dc05-43e9-864b-4553bcf7e1a7",
        "cursor": {
          "ref": "7b8a551e-f08d-43c0-8b3d-c7d0ef3ed255",
          "length": 283,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "c62c4c46-0680-4384-94c9-da88d8f001a0"
        },
        "item": {
          "id": "4d2331d3-dc05-43e9-864b-4553bcf7e1a7",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "3e8d9d84-a6f1-4c6d-b3f9-1541c9973b5b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 448
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "917130cf-f4c9-4405-8513-b58676529c5a",
        "cursor": {
          "ref": "0a541769-8669-4924-88f7-bed276fa7630",
          "length": 283,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "b61cefc3-1eb9-4db2-91f4-ce2af741cb8e"
        },
        "item": {
          "id": "917130cf-f4c9-4405-8513-b58676529c5a",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "3a240196-c3d1-4847-b56f-c4910f176811",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "79cb7193-c4e8-4690-b363-949ada40b750",
        "cursor": {
          "ref": "3f21178c-9135-4be3-b536-dac91cafd812",
          "length": 283,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "665ffa7f-e3e1-44f1-ac08-545383d7975f"
        },
        "item": {
          "id": "79cb7193-c4e8-4690-b363-949ada40b750",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "1d864a0f-4141-4a74-8238-d3fcdd1ad899",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 461
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c43bafd-9f9f-4419-85a2-eece8d416db9",
        "cursor": {
          "ref": "acc31256-95c0-4912-bfb0-0a0780758455",
          "length": 283,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "6a66af3a-9fa7-48a0-ba8d-f25b71a1e6de"
        },
        "item": {
          "id": "2c43bafd-9f9f-4419-85a2-eece8d416db9",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "acf56990-cff0-4c53-943d-6d739b0ae38c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5f0c3084-724a-4d07-a068-abe72e56f45c",
        "cursor": {
          "ref": "b25f0dbc-e99f-4f4f-a05f-7cc74212a710",
          "length": 283,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "be2b3d4c-c6e2-49f4-8406-2bcc9f491f92"
        },
        "item": {
          "id": "5f0c3084-724a-4d07-a068-abe72e56f45c",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "c542543e-bb59-4f59-985d-bab903f04768",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 460
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e96cea09-4489-4f91-b315-f54864cbf66f",
        "cursor": {
          "ref": "e7c85ba9-9394-438c-bebb-bf761da15d8b",
          "length": 283,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "b421e305-cd34-4283-9c3a-79228a7878b1"
        },
        "item": {
          "id": "e96cea09-4489-4f91-b315-f54864cbf66f",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "f7937d48-a2cc-4da7-96b8-46b7001959f8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "341e73ed-76fe-4219-add3-4a2b46030ce1",
        "cursor": {
          "ref": "df302a06-1bbd-407f-847a-eee1806dfac2",
          "length": 283,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "a02f37a7-639a-4419-95e4-2a061e51a7ec"
        },
        "item": {
          "id": "341e73ed-76fe-4219-add3-4a2b46030ce1",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "8d6b9b11-9618-43c0-bb62-448d71e2ccfe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 471
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "daf5930c-42e3-47c9-8149-1f2dc053d715",
        "cursor": {
          "ref": "7c044fc4-8ba7-45f2-91bb-56057bc4712b",
          "length": 283,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "a60404f9-e585-442a-9a92-4a8a7fe13425"
        },
        "item": {
          "id": "daf5930c-42e3-47c9-8149-1f2dc053d715",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "62d0ed60-e700-4ada-9e9d-c454f441f7a4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 469
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "33df94d7-b27e-4362-9d5a-f518e3cba876",
        "cursor": {
          "ref": "5f42cbdd-6451-47c6-8585-4794bda8ff84",
          "length": 283,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "8f8054fa-aee3-480e-afc2-82627e161ec5"
        },
        "item": {
          "id": "33df94d7-b27e-4362-9d5a-f518e3cba876",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "344373b7-5b9b-490d-add1-6de55c895882",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ff94a8d6-3e4f-4a72-b1f8-b86b490dfc35",
        "cursor": {
          "ref": "9476e3bd-daa8-495d-a5e7-63716c597e89",
          "length": 283,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "a9fa86de-7d69-456e-8201-c4eabe72a8fa"
        },
        "item": {
          "id": "ff94a8d6-3e4f-4a72-b1f8-b86b490dfc35",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "2f321f1c-25db-41f7-b64b-a431a2d7a6dd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dceb221e-751f-4d6b-bbb6-081d0f13a061",
        "cursor": {
          "ref": "8e015aaa-dd62-44de-b8e5-3a29e98398a1",
          "length": 283,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "c8243948-5815-4cf2-ba3f-21ac99883106"
        },
        "item": {
          "id": "dceb221e-751f-4d6b-bbb6-081d0f13a061",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "d50ee58d-897e-4cf8-90aa-f729e4c9687f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 480
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6005f11f-4eda-489e-9b26-14042b652d52",
        "cursor": {
          "ref": "53e8ccca-0884-46fd-bb90-298d27f1d70b",
          "length": 283,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "741b2efc-ddd0-4927-93ea-de9f7fd8d8b6"
        },
        "item": {
          "id": "6005f11f-4eda-489e-9b26-14042b652d52",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "3a1fd5ce-cbdf-4d25-94d0-fd3792bb1f42",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 483
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d1d3647f-97d1-4274-99a5-f79887baaa81",
        "cursor": {
          "ref": "957fd151-4f59-4543-b062-02bb5d87ef40",
          "length": 283,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "c19a01be-745f-413c-9c45-0f2462a10543"
        },
        "item": {
          "id": "d1d3647f-97d1-4274-99a5-f79887baaa81",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "a127ffd9-8904-4ca3-b22e-67699256a277",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 481
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "74681b6e-b240-48af-bbb8-1b69a3654ced",
        "cursor": {
          "ref": "3ba632b5-14db-460f-b513-3864e6b5b258",
          "length": 283,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "f89a78d9-79d9-460d-938a-a980ebf99a9b"
        },
        "item": {
          "id": "74681b6e-b240-48af-bbb8-1b69a3654ced",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "3c8d5671-9c7a-4faa-a3dd-3be84c192034",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 494
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7ea89c40-7fd9-4605-8aea-ed8e5ed4ef2c",
        "cursor": {
          "ref": "487804f7-85a1-4658-8129-3fcbdc754274",
          "length": 283,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "c7121fa5-f11a-4e30-8be6-424105017ec2"
        },
        "item": {
          "id": "7ea89c40-7fd9-4605-8aea-ed8e5ed4ef2c",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "6b806b76-3d13-48b4-964b-b6f17bf3bb4e",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 49,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef997b02-08e7-4ec5-867c-f45c16d8f493",
        "cursor": {
          "ref": "0b1a2c22-f5a8-4c5f-8b77-a4ce3c8c4db1",
          "length": 283,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "246989ac-df6d-487f-8ef4-118f9a88bc2e"
        },
        "item": {
          "id": "ef997b02-08e7-4ec5-867c-f45c16d8f493",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "3dcffb45-248d-4a49-b13c-7ca7b19182fd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 567
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "73c77103-5aef-44f0-b118-fd9a8917ef34",
        "cursor": {
          "ref": "24659e9c-58a5-49a1-8673-c045153ebcad",
          "length": 283,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "8ffe81bf-74fb-4f13-bea5-0131913db841"
        },
        "item": {
          "id": "73c77103-5aef-44f0-b118-fd9a8917ef34",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "0339b3de-90a0-45bf-9f0f-1cec50b5f347",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 616
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "13cbb483-2747-41c1-87cc-cd3e5bcd9966",
        "cursor": {
          "ref": "6f13ff78-2e23-415f-8669-b0b208d8425c",
          "length": 283,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "05cfda58-38cd-4bf8-82c1-3abdf698687d"
        },
        "item": {
          "id": "13cbb483-2747-41c1-87cc-cd3e5bcd9966",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "3ed21fe8-cac9-4fa1-8c5a-5a0338fd396e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "55256e01-766a-4924-9830-c7015417db26",
        "cursor": {
          "ref": "3260a120-d100-4af2-ab3f-f99969a48fbf",
          "length": 283,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "a51f29ef-3498-43f6-af9a-414cdbfe82fc"
        },
        "item": {
          "id": "55256e01-766a-4924-9830-c7015417db26",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "490d8648-033b-4b94-9395-e557e58a15a0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d6525c43-972e-4e81-81ca-50c3ce6240d4",
        "cursor": {
          "ref": "46f8eb3c-fc5e-40a4-988b-8a97d308780b",
          "length": 283,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "cc3fd607-dc50-40e0-aa05-70b9848eb59e"
        },
        "item": {
          "id": "d6525c43-972e-4e81-81ca-50c3ce6240d4",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "635c71e0-d675-41b0-897e-e9104b0782b3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8336169d-0d4c-4ba5-952c-387caac03451",
        "cursor": {
          "ref": "c679ac7d-c51b-44ed-85ef-e6efbbee7ba0",
          "length": 283,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "abe6821f-3636-415d-b3ab-99dda90eccaa"
        },
        "item": {
          "id": "8336169d-0d4c-4ba5-952c-387caac03451",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "777fa96c-2f0a-4b62-85eb-f5a0312d2f00",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "083a0e04-597d-483a-beda-37a9fde7078d",
        "cursor": {
          "ref": "57baf3f1-8a83-4e2e-9170-09b4fcbce609",
          "length": 283,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "3355bbc7-e6a0-4302-93c5-10df0e95ab16"
        },
        "item": {
          "id": "083a0e04-597d-483a-beda-37a9fde7078d",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "79091e3f-b620-4e18-aa1e-bc0cee6009b6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 386
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "34c59489-d20b-449d-b7ac-0ce76a141565",
        "cursor": {
          "ref": "93fb2721-7e9a-4106-88ad-179880fcc8bc",
          "length": 283,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "99eaff19-f1a6-4756-b3cd-43f16a4e3a76"
        },
        "item": {
          "id": "34c59489-d20b-449d-b7ac-0ce76a141565",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "e25754ce-7b4b-430c-b7e0-6b93e8a70a28",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 437
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5c47517d-2772-4f07-8568-e61b230cfb06",
        "cursor": {
          "ref": "81676a10-87f5-4d51-88d7-8c7e1cf41a5c",
          "length": 283,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "3ad84b80-2f1d-4e94-9690-45a6c63d614b"
        },
        "item": {
          "id": "5c47517d-2772-4f07-8568-e61b230cfb06",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "9912915a-05fb-449b-b532-200df2301af9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 434
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e5097c4c-217c-4ddc-b5cf-5b4309370a99",
        "cursor": {
          "ref": "d4559fe5-d53a-4347-a208-27a928499f54",
          "length": 283,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "c7bf7528-76d1-4eae-94df-9b156693d5f1"
        },
        "item": {
          "id": "e5097c4c-217c-4ddc-b5cf-5b4309370a99",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "985ffb11-eb44-48ab-89ee-b9853d561b42",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0d649155-fc4b-4239-9abb-4d40c0d1bb24",
        "cursor": {
          "ref": "aeedda57-9c84-4832-91a1-06232edafcce",
          "length": 283,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "1b087286-70eb-482f-bb7e-ac471019c32b"
        },
        "item": {
          "id": "0d649155-fc4b-4239-9abb-4d40c0d1bb24",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "342dd1a7-2f87-42ff-a2de-6bd4b3eed6a0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 504
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cd416021-95df-4892-96f8-e5cb9b449423",
        "cursor": {
          "ref": "84e17c5b-8bf4-48f7-8165-9ffea44dcd35",
          "length": 283,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "4c299aa7-4a45-4360-8c91-2b744f0b886c"
        },
        "item": {
          "id": "cd416021-95df-4892-96f8-e5cb9b449423",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "890839d2-07b8-43bc-b0cb-f1fddea87d9c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 453
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3fad80dc-900e-4d0f-82e0-4a22133b347f",
        "cursor": {
          "ref": "5097cb8b-9765-42be-be3e-4de535f90dbc",
          "length": 283,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "99e39aa4-3254-4fd5-8004-896b501d2b7e"
        },
        "item": {
          "id": "3fad80dc-900e-4d0f-82e0-4a22133b347f",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "f9c67dcc-978f-4e23-86dc-8b5fa7dea6b3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 579
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6fcf86b8-8d5b-49a5-aae2-74a2ab545b7e",
        "cursor": {
          "ref": "a83d6195-2bad-4141-90ac-b60f563228f7",
          "length": 283,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "1acfa527-407b-4de1-b8d9-aedf564e1a5e"
        },
        "item": {
          "id": "6fcf86b8-8d5b-49a5-aae2-74a2ab545b7e",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "1b446c35-da07-4d49-8fd7-bab52726d57c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c15a1561-18d5-4d17-b0eb-e60d573d1e5c",
        "cursor": {
          "ref": "14545112-1002-49af-85ed-c8844ad03985",
          "length": 283,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "e1cd3943-f6a7-429a-ad79-41e6db07e908"
        },
        "item": {
          "id": "c15a1561-18d5-4d17-b0eb-e60d573d1e5c",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "bdbc7be3-8218-4e4c-9998-3c5efc17c963",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 439
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "612af745-bbff-4c85-bb0b-3e1f96249b82",
        "cursor": {
          "ref": "eb30a62b-f5ad-478a-9d51-7ccbdd6bfa4a",
          "length": 283,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "b70ef602-fd57-4f31-a3d5-aa3151df6b4f"
        },
        "item": {
          "id": "612af745-bbff-4c85-bb0b-3e1f96249b82",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "07dbe033-d14e-4feb-beca-263c81df9347",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ea06bd9f-39d3-4b93-b8bf-f6dc6ea84a81",
        "cursor": {
          "ref": "0afb756e-5e84-4c99-8fbd-a1006c019846",
          "length": 283,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "a08af958-4a06-4f86-be53-5001cc294649"
        },
        "item": {
          "id": "ea06bd9f-39d3-4b93-b8bf-f6dc6ea84a81",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "a4840417-c7dc-442f-a1a7-6eb3e01785d8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 438
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9d598f1c-b3ac-47ff-97f6-56e9c700a555",
        "cursor": {
          "ref": "387890b5-e490-4290-8d14-0f4f13e44edd",
          "length": 283,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "709f20c6-8942-4648-9703-5aa9dad08ff0"
        },
        "item": {
          "id": "9d598f1c-b3ac-47ff-97f6-56e9c700a555",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "e44ab7e7-fd98-4cac-8ba0-e8a54f54f3f2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 455
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f4856fc4-753e-43f9-b898-7f133d66b0eb",
        "cursor": {
          "ref": "cda4204a-d25a-49cb-abfc-e736dc9870b1",
          "length": 283,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "bc80e84c-12d2-45ac-9169-70e19145a105"
        },
        "item": {
          "id": "f4856fc4-753e-43f9-b898-7f133d66b0eb",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "80b6aa50-7fab-4e85-a852-4eb740093201",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 448
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "304afc51-b563-40c0-8230-f061d21bc403",
        "cursor": {
          "ref": "cf14341f-b6e7-4800-9e47-42dc64f9de4e",
          "length": 283,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "4cf9d87a-161d-4d19-894c-93c365255036"
        },
        "item": {
          "id": "304afc51-b563-40c0-8230-f061d21bc403",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "6ad9e89e-b862-4b50-9374-10721e616491",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 508
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5eb6dee0-dca6-4382-af18-714cac12dde1",
        "cursor": {
          "ref": "8b59fb4a-fe09-446c-a016-427031d38fc4",
          "length": 283,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "a91a4e70-df15-43f9-81df-bba3453cc49d"
        },
        "item": {
          "id": "5eb6dee0-dca6-4382-af18-714cac12dde1",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "b6f89ce7-3924-476d-b6c1-61234fbbd078",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 461
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b6967848-243c-4c92-9408-514b081dc299",
        "cursor": {
          "ref": "e169891f-60ad-427e-8cfc-801e416dd242",
          "length": 283,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "135fb852-e60a-4f90-8afc-abf8cfe2d1a9"
        },
        "item": {
          "id": "b6967848-243c-4c92-9408-514b081dc299",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "c94ac251-1a44-46d0-9707-9f804f6af09f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7ebebfcf-148b-45df-8171-1c6f33029e54",
        "cursor": {
          "ref": "52232fbc-5194-42d1-a0df-7c28f37b9126",
          "length": 283,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "d78bff8e-c2c5-4748-bfc4-c84ae3e449e5"
        },
        "item": {
          "id": "7ebebfcf-148b-45df-8171-1c6f33029e54",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "4dea38bf-36f2-4360-8243-842a4f98d65b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 460
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1a019a5c-9ad8-47c8-bff2-ec3921585e8d",
        "cursor": {
          "ref": "f1b25332-7509-4e2a-9ec4-37a35a3ba843",
          "length": 283,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "795b4ba8-d331-4d24-9761-8cd71110a374"
        },
        "item": {
          "id": "1a019a5c-9ad8-47c8-bff2-ec3921585e8d",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "bcb231a3-ae45-4cc0-9648-e956cf929060",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d0398dc3-4f30-4590-ac93-ed8e6bcc540b",
        "cursor": {
          "ref": "d4e52114-e60f-4206-ad3f-27eb5fbac046",
          "length": 283,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "f5ad570c-1e55-4a07-80b9-ec7f1d67bb68"
        },
        "item": {
          "id": "d0398dc3-4f30-4590-ac93-ed8e6bcc540b",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "a7737a38-7261-4680-9d0e-26922962d806",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 471
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "07c677c5-a91b-4e77-9ca7-22ac29f2f436",
        "cursor": {
          "ref": "2edb1e62-fbc9-4137-9dbd-61d121b0f70c",
          "length": 283,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "b019a369-41aa-4ebf-8ac1-9a978ae3cd06"
        },
        "item": {
          "id": "07c677c5-a91b-4e77-9ca7-22ac29f2f436",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "ff16a6bf-12f1-4acc-82b9-62121916017b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 487
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b01cf4f5-f994-4d37-b558-67be1a93f4ba",
        "cursor": {
          "ref": "af845606-c449-4664-a4d7-36bf646e7424",
          "length": 283,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "96e69ad7-5283-4163-93d9-aaee3b368d8e"
        },
        "item": {
          "id": "b01cf4f5-f994-4d37-b558-67be1a93f4ba",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "e83fa3fd-4602-441c-a5a5-4e3578319122",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 502
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "99afc1dd-1fd4-46db-87fe-8cb7132e87ec",
        "cursor": {
          "ref": "2e9344c8-e87e-423d-b3af-b7ad06e4023b",
          "length": 283,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "c7162995-70c2-4ec4-a686-a72b0f925d3f"
        },
        "item": {
          "id": "99afc1dd-1fd4-46db-87fe-8cb7132e87ec",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "03c31c0a-0f48-4c69-827a-6f578c5af12b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 502
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8f5a3e98-3c5d-4def-a73b-ea151a35de78",
        "cursor": {
          "ref": "c746f02c-cde5-4309-9791-632eef2ca701",
          "length": 283,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "40faee40-5319-45ae-9cda-fc11627673a6"
        },
        "item": {
          "id": "8f5a3e98-3c5d-4def-a73b-ea151a35de78",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "9d74c558-2544-4478-9d33-e4cc5582c6d3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 498
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1a511d0e-2c5f-4623-8c82-cb5adf7fba32",
        "cursor": {
          "ref": "9c7711af-1b43-457f-9fc2-a22af05fd4e8",
          "length": 283,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "d5e1bd66-7c52-40fc-8c41-ce151cfb34cb"
        },
        "item": {
          "id": "1a511d0e-2c5f-4623-8c82-cb5adf7fba32",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "2b5069e9-b43a-4d63-999e-21c7f89fc3d9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 501
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d8f9cc86-f52a-47aa-b500-3b50d8dca4d1",
        "cursor": {
          "ref": "99bec1f7-84d7-4921-81b1-8edf08926493",
          "length": 283,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "db9cf8d3-f066-4d31-ab81-b0c3ec3b6d08"
        },
        "item": {
          "id": "d8f9cc86-f52a-47aa-b500-3b50d8dca4d1",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "3505e6ec-f663-4fd3-a3fe-9f4551c771c3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 499
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b81f2ff5-a3b5-40d9-86eb-997ec09e8972",
        "cursor": {
          "ref": "2cc32c40-83dc-45e5-9148-48da52049e6d",
          "length": 283,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "d0a6d849-3448-4131-9258-cf05b025f3cd"
        },
        "item": {
          "id": "b81f2ff5-a3b5-40d9-86eb-997ec09e8972",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "41d8e90d-0adb-4350-bab3-596f93023a74",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 477
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "54629489-445e-44c0-92e4-3f1a0107c7f9",
        "cursor": {
          "ref": "9e109bd4-34a9-4255-8741-7b28f5ba269a",
          "length": 283,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "b56b3d03-5870-4229-a748-d73ea5c7e1b6"
        },
        "item": {
          "id": "54629489-445e-44c0-92e4-3f1a0107c7f9",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "20532c47-3880-47f1-ad42-d98f6cc9e1a0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 502
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "256e540f-670c-4de8-b3be-2d51d3d5a89e",
        "cursor": {
          "ref": "04b4cc0b-769d-4ad4-8de7-96953aa59ee2",
          "length": 283,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "afa0e045-7f26-4341-bf61-f11980f64c41"
        },
        "item": {
          "id": "256e540f-670c-4de8-b3be-2d51d3d5a89e",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "5a898434-176d-4483-942c-b19c164f6ac2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 493
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b1db7695-e860-40bc-982f-f898776ae464",
        "cursor": {
          "ref": "525d3509-a8c7-4b1a-92a3-4231faff8c0a",
          "length": 283,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "0f1301ed-4879-4db5-a7f1-d676918254d6"
        },
        "item": {
          "id": "b1db7695-e860-40bc-982f-f898776ae464",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "75bdc38e-6914-4cd0-a56c-590525385f42",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 490
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7e335523-c9e5-47bd-8baa-eceea22dfee8",
        "cursor": {
          "ref": "0ab0c01c-7f8d-4857-9429-02900d559eaf",
          "length": 283,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "54fe44f2-5ccb-4570-92bd-c72416afac63"
        },
        "item": {
          "id": "7e335523-c9e5-47bd-8baa-eceea22dfee8",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "4cf5b6c7-0c04-4897-8e69-5ab7a323bf37",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 492
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e1e552a6-e186-4025-9a99-e52e2e1dda7e",
        "cursor": {
          "ref": "5d13ede0-2702-4b79-8503-cad69e8c02be",
          "length": 283,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "67cbe592-b2c7-441c-b48b-0f8b5b9a02f3"
        },
        "item": {
          "id": "e1e552a6-e186-4025-9a99-e52e2e1dda7e",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "39159541-e5e2-4316-91d5-37311be0ace6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 490
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "50a3043b-9a0f-4441-b53f-187d0de771fb",
        "cursor": {
          "ref": "91a10f7b-dd4c-4d90-9b8e-139aabb388e7",
          "length": 283,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "b037f964-1c90-414b-90b1-a4afeda99e19"
        },
        "item": {
          "id": "50a3043b-9a0f-4441-b53f-187d0de771fb",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "0c93a3c8-12c9-4a90-a675-29c29c39d766",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 49,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1bdfbfb9-5fac-4c41-9be5-415b9d21e379",
        "cursor": {
          "ref": "5b9f25d5-5afa-40de-924c-5b5577b56966",
          "length": 283,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "506af4c6-a76a-4aee-88ed-e23341be5144"
        },
        "item": {
          "id": "1bdfbfb9-5fac-4c41-9be5-415b9d21e379",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "ab3bab2b-02cd-42d9-9742-180fca6e699f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 280
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b63c2eb9-753d-4811-85d5-6bc621274273",
        "cursor": {
          "ref": "c921da3c-026e-4540-98e9-efa30bcacecf",
          "length": 283,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "df943ef9-fd81-4e14-b7be-c10d122df0be"
        },
        "item": {
          "id": "b63c2eb9-753d-4811-85d5-6bc621274273",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "5275b514-7d4e-4bb7-9c7c-1663a4ab6aae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 96
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "98c988d9-717d-4e85-85f0-0712edb249a6",
        "cursor": {
          "ref": "fb496c46-a78a-4e5a-ac5e-bcbdac448856",
          "length": 283,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "b2b22895-ce53-4a6b-ab7c-5b0d8b94b753"
        },
        "item": {
          "id": "98c988d9-717d-4e85-85f0-0712edb249a6",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "99527142-7cb7-47da-8b7c-af43452aa6a5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 600
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aeae142f-18c9-4478-9522-2565a67800e1",
        "cursor": {
          "ref": "5039f129-b5bc-450e-94ca-adbe449a7424",
          "length": 283,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "7dbb95c0-88e5-4bb0-bdba-f99b5a36ea78"
        },
        "item": {
          "id": "aeae142f-18c9-4478-9522-2565a67800e1",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "707ad443-e39b-4bd1-a6ea-74b629118a6e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 599
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "703bb29d-fac1-494b-8e62-d055a45f6cee",
        "cursor": {
          "ref": "48d43491-38c4-45a4-a610-477a34317516",
          "length": 283,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "4a9f541a-0f24-41d5-9735-2e16faa66f92"
        },
        "item": {
          "id": "703bb29d-fac1-494b-8e62-d055a45f6cee",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "c66b3a92-a8d2-4215-931b-345492aa986c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 600
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9221d70d-93d4-44c9-907a-5b378da16f34",
        "cursor": {
          "ref": "19957e6b-4eab-4bea-8dd1-6815bf675204",
          "length": 283,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "038be89f-fabc-48d3-ad49-e507ed2ca982"
        },
        "item": {
          "id": "9221d70d-93d4-44c9-907a-5b378da16f34",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "d64038e1-d303-48c8-9b57-a620bdb1ca13",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 598
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3789ec10-0d1f-4fd8-b931-1e5991dbd932",
        "cursor": {
          "ref": "54979010-9abf-4c56-bc1a-a21b5ca9ebde",
          "length": 283,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "4a13057a-97f5-4238-a74b-d6d68368d49e"
        },
        "item": {
          "id": "3789ec10-0d1f-4fd8-b931-1e5991dbd932",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "114059b2-f2d0-4b2c-9911-db6837c641b7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 1266
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f53bc4f-a0e1-4f57-8123-8f4a37d499bf",
        "cursor": {
          "ref": "fceb448e-e7d5-47c0-bd7f-87e2b46b28b4",
          "length": 283,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "eddfcf5d-28fd-45e9-b528-7f25d87692dd"
        },
        "item": {
          "id": "7f53bc4f-a0e1-4f57-8123-8f4a37d499bf",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "9c822cbd-cb4b-4a17-8273-a4268b393a34",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 1424
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "28553638-9ccc-4a9a-8925-9ab5abe9f49d",
        "cursor": {
          "ref": "d01d2538-d822-485a-a185-e146ef836ae0",
          "length": 283,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "cfbdbf72-2665-497c-8e65-70684b169623"
        },
        "item": {
          "id": "28553638-9ccc-4a9a-8925-9ab5abe9f49d",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "3f69957e-df01-4d42-a883-d3fb39a4b955",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 1423
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5e8e6fcc-509f-4d4a-937b-5921c4fd5957",
        "cursor": {
          "ref": "a6dbc36a-196f-4504-8a12-8cb294c0ea69",
          "length": 283,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "a7169295-f402-4653-9a64-25a3a9ff52a6"
        },
        "item": {
          "id": "5e8e6fcc-509f-4d4a-937b-5921c4fd5957",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "67871720-f62f-4a30-9366-e93c836233ab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1424
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8cd5ee72-ff93-423e-8278-3254e943af18",
        "cursor": {
          "ref": "a9512e0e-1e23-4c20-816c-f54be21cb93e",
          "length": 283,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "9e35d7c4-c764-4ce0-b249-b7d07494947a"
        },
        "item": {
          "id": "8cd5ee72-ff93-423e-8278-3254e943af18",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "defee588-44a7-4e48-8090-ccfea7148ebb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 1322
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6f9e2819-f7c6-4b32-aba8-5f56477a99da",
        "cursor": {
          "ref": "8f6355f5-d0bd-4a71-a509-f0500a6c0da7",
          "length": 283,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "26cf6529-7a2b-47ee-98d1-8d97136108ad"
        },
        "item": {
          "id": "6f9e2819-f7c6-4b32-aba8-5f56477a99da",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "02a09cd5-3beb-4072-802e-2e3d9daa5a03",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 1309
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "40536ada-0493-4611-a0e8-b2740e9cd0f6",
        "cursor": {
          "ref": "6fc17c12-bf87-4a9b-890c-8fd6a7f7a155",
          "length": 283,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "71be3726-4035-4c6b-96eb-c265ae5d32c0"
        },
        "item": {
          "id": "40536ada-0493-4611-a0e8-b2740e9cd0f6",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "6e0dcc46-ba99-44a1-a4e2-824c36edb98c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 1487
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a3e7b4c9-ec82-49ba-9105-b7cfb5d77ae7",
        "cursor": {
          "ref": "fe22fa6a-94a4-4611-bcac-284b1ca25ffa",
          "length": 283,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "74f3f94f-9ec3-4949-a79b-cf56872c5f7d"
        },
        "item": {
          "id": "a3e7b4c9-ec82-49ba-9105-b7cfb5d77ae7",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "c9e176e8-3f73-4099-8861-b38f16b15a19",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1477
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb7dbd36-bccd-4b2c-8d09-2de9d3ca00ad",
        "cursor": {
          "ref": "2d6d3c0c-f8dd-4823-a69a-bfc432299f3e",
          "length": 283,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "8bb2bdd7-f904-440c-9b53-9367a77dfad6"
        },
        "item": {
          "id": "cb7dbd36-bccd-4b2c-8d09-2de9d3ca00ad",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "8ec26727-2e06-4f33-9743-1796214f7dce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 1476
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "48ffbe49-1078-4828-8671-06e5654fe0e4",
        "cursor": {
          "ref": "ac12c46a-231e-4a45-bfeb-7eebf9368f2b",
          "length": 283,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "573f51bc-b41b-48ec-aa3a-1b9e0c41ffc4"
        },
        "item": {
          "id": "48ffbe49-1078-4828-8671-06e5654fe0e4",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "43d3fae3-3d72-4cf5-9a2a-25f618d1437f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1477
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be45db94-8381-417a-8c14-e692e1ccb3da",
        "cursor": {
          "ref": "0659e64b-e4aa-4605-be1d-8ba8ffd05b71",
          "length": 283,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "d3368f3e-ef98-49ce-aa4d-c7240ef5a7ae"
        },
        "item": {
          "id": "be45db94-8381-417a-8c14-e692e1ccb3da",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "9d97e914-2b88-43e3-a922-6eee67e93f03",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1375
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "46ad79a1-7ba7-4478-bcae-ad4260743d58",
        "cursor": {
          "ref": "7ebbf8d9-99dd-45bb-9594-9d8030da2ab9",
          "length": 283,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "e307748b-0b60-4e7e-a592-3896e9b9c4a4"
        },
        "item": {
          "id": "46ad79a1-7ba7-4478-bcae-ad4260743d58",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "4db14663-85c7-4375-aa41-83548af4c289",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5fbe99dd-8133-40ef-8aa6-3ab278240a72",
        "cursor": {
          "ref": "c9ae4972-9c90-419d-969e-cb7b312bc809",
          "length": 283,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "50717a23-d0d5-415c-98ba-53edb8af9356"
        },
        "item": {
          "id": "5fbe99dd-8133-40ef-8aa6-3ab278240a72",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "9752ee47-d635-468e-96b9-e7ba83943abd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "afc45003-3511-4ade-9776-1525907a142c",
        "cursor": {
          "ref": "8d17d953-c5ad-4cc7-946f-05c3cc5eace0",
          "length": 283,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "13325e37-a0d0-462d-bdb8-458374fba06a"
        },
        "item": {
          "id": "afc45003-3511-4ade-9776-1525907a142c",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "1da7087c-2ace-46d9-9373-6491a6793c2f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "726da8ac-889f-4179-9208-81c6496fdec9",
        "cursor": {
          "ref": "84978a36-8404-4691-a5f1-dcacd4839aa8",
          "length": 283,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "99a70cef-4518-492b-9912-20eb6a7b1db4"
        },
        "item": {
          "id": "726da8ac-889f-4179-9208-81c6496fdec9",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "c989f066-29f6-421e-be97-87488edf73ca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1284
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "230f0c84-15d1-4b11-8d7e-3a949acec46b",
        "cursor": {
          "ref": "b6e124ca-e928-4b37-8916-a6b1263882ae",
          "length": 283,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "26215755-a7ed-45a2-955c-98625b2ffd38"
        },
        "item": {
          "id": "230f0c84-15d1-4b11-8d7e-3a949acec46b",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "6c647f58-6a8c-4210-9226-d384832cca19",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1335
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a3ffd38e-c4c1-4851-9a1d-e79edd7e9cc6",
        "cursor": {
          "ref": "971ab3bc-30e6-463c-a50f-4ca997ded02b",
          "length": 283,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "f8bc61e0-ce64-46cd-9a6d-4e453410c434"
        },
        "item": {
          "id": "a3ffd38e-c4c1-4851-9a1d-e79edd7e9cc6",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "006d06f7-0af7-4cb3-bb54-5674ae96718c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1315
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "72061827-e51b-4e88-bd7c-268c99204eb4",
        "cursor": {
          "ref": "da7a3520-8f89-4093-93a7-29c7092f03db",
          "length": 283,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "ce457593-25ec-4851-abc2-20cef0df2333"
        },
        "item": {
          "id": "72061827-e51b-4e88-bd7c-268c99204eb4",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "ce30acfa-6380-4347-be14-4560ff13eedf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "34de9f18-16ee-46c3-b5e1-e8cf0be53e68",
        "cursor": {
          "ref": "6003658a-e7f9-446a-8111-1bfa7e9f7da9",
          "length": 283,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "aed3a703-a3b3-4285-8c50-e7287d5164fe"
        },
        "item": {
          "id": "34de9f18-16ee-46c3-b5e1-e8cf0be53e68",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "acdf9c54-b94c-441e-91b0-f5b5416acd14",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 1273
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0043cecd-7b0f-4379-99aa-678a0f4a092c",
        "cursor": {
          "ref": "bdd8c212-33ad-4741-b365-6f64556414fe",
          "length": 283,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "b971edcb-7dc7-48da-b700-316f8c25d1e4"
        },
        "item": {
          "id": "0043cecd-7b0f-4379-99aa-678a0f4a092c",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "fd314bca-e0fa-46c9-949c-8a00e11e397c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a5e7e49b-216e-47c7-9023-d7d8054a4018",
        "cursor": {
          "ref": "472b3f01-baeb-40d1-93e7-ca532db56866",
          "length": 283,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "2e198e44-467e-4f43-a31e-69cea4295a5c"
        },
        "item": {
          "id": "a5e7e49b-216e-47c7-9023-d7d8054a4018",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "216b1f30-01f8-4f84-8e68-e03495ee8be2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "20edeaf9-dc13-451a-a8c7-4b749cdf2bf9",
        "cursor": {
          "ref": "13eee98d-bcc9-4359-ba78-7c20c2389785",
          "length": 283,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "01639f3b-fcc9-4756-b414-7dcce5cd3940"
        },
        "item": {
          "id": "20edeaf9-dc13-451a-a8c7-4b749cdf2bf9",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "ab64088c-3695-4d89-a2ae-d13502eafeb8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1327
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3cacece8-8b99-4abf-93ca-65931cc59abc",
        "cursor": {
          "ref": "289105a6-649a-49fc-b988-0914703b7a5e",
          "length": 283,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "9356f695-b60e-4e35-81fa-24314ec710b3"
        },
        "item": {
          "id": "3cacece8-8b99-4abf-93ca-65931cc59abc",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "185abe60-15a8-4d87-a1ae-f1ee83c96b42",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f75132f3-cea9-43e4-a197-3a51d7830cff",
        "cursor": {
          "ref": "65d11823-79c1-4260-80eb-dfb46a12f746",
          "length": 283,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "d82d55b9-14d9-47a9-8308-8175a77d4e98"
        },
        "item": {
          "id": "f75132f3-cea9-43e4-a197-3a51d7830cff",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "917c1a2a-6042-4717-a11f-9ad86d06975c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1319
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9ed5b205-cdc1-4e86-8884-07e178c3e940",
        "cursor": {
          "ref": "c46ab1dc-fcbf-4c4f-a935-b5e1bc1a1198",
          "length": 283,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "18a5b7a6-b00a-42a3-8dfd-8e13d22f106b"
        },
        "item": {
          "id": "9ed5b205-cdc1-4e86-8884-07e178c3e940",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "4fbff77b-0684-45b7-98ab-02d0af363599",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1309
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8be88307-dd44-4539-85c4-3aded0cc8048",
        "cursor": {
          "ref": "787b8c25-2840-4f6f-acd9-daa7fe3bc986",
          "length": 283,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "6ac73b7a-8914-4ef8-b0c4-ed06c6ad5927"
        },
        "item": {
          "id": "8be88307-dd44-4539-85c4-3aded0cc8048",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "cb6f7bde-f518-44d5-99cd-45c73a7eb26b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 1308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c79cfea3-359d-462d-b7d0-f74468afb9c8",
        "cursor": {
          "ref": "73d6c808-f1ba-4fb2-b8c7-8ed451f2f9d7",
          "length": 283,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "723698ee-fcc1-4e2f-bbd1-58002d3afc70"
        },
        "item": {
          "id": "c79cfea3-359d-462d-b7d0-f74468afb9c8",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "828a7fe3-1ec9-4381-9f3a-5141ff1379b3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1309
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d9130978-fbe8-4fd2-87f0-5e0079987d8d",
        "cursor": {
          "ref": "3916573c-84f2-4570-ae21-8f92c546944f",
          "length": 283,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "a3c7bac1-2946-4e91-8bd9-38ec4319adaf"
        },
        "item": {
          "id": "d9130978-fbe8-4fd2-87f0-5e0079987d8d",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "40230eaa-37d2-4799-a0ba-a05a8cb14927",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 1335
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ab722180-0d40-4310-8962-c138575718be",
        "cursor": {
          "ref": "54f76da3-c2ec-4d13-9983-a3a5c6d167ca",
          "length": 283,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "3f33f048-c976-40ce-a525-5fe9b387c8fc"
        },
        "item": {
          "id": "ab722180-0d40-4310-8962-c138575718be",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "3776d082-7c65-4610-87db-0ecc68e915db",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "023f2130-1d5e-40bc-aa82-1ada65fc273d",
        "cursor": {
          "ref": "bd7fd4ba-3178-404b-800b-f54f34951853",
          "length": 283,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "3ba3c788-a352-4d20-89de-b9b72203846f"
        },
        "item": {
          "id": "023f2130-1d5e-40bc-aa82-1ada65fc273d",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "73c88934-cff3-49e6-9404-b716c35cf5dd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 1756
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da6e229a-2486-43f3-8d8d-9b9391b1e511",
        "cursor": {
          "ref": "dad784b6-c559-4a39-ac3b-7d01716c439e",
          "length": 283,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "d5193ac8-6b4a-428e-82d2-1a808fa5e86d"
        },
        "item": {
          "id": "da6e229a-2486-43f3-8d8d-9b9391b1e511",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "da99ac1c-9da7-4368-8df6-06f2d97c2319",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1742
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9a2bd8ea-7f92-4fc3-9033-989e1bafebcb",
        "cursor": {
          "ref": "1d5a7c24-15c6-42ad-a960-9c6d65de7e8a",
          "length": 283,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "64352ea7-d8b8-40c5-8159-bbf2c4a89b55"
        },
        "item": {
          "id": "9a2bd8ea-7f92-4fc3-9033-989e1bafebcb",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "080b0f4b-6489-43c9-a73f-098f0d88168b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 1740
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "70e3a82b-ef54-4074-b4d5-9f0e72f3e023",
        "cursor": {
          "ref": "1793bb69-209b-4e09-aa40-1f80cdef1d97",
          "length": 283,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "f84bdc30-94ce-4bc2-bb13-9959a36224ec"
        },
        "item": {
          "id": "70e3a82b-ef54-4074-b4d5-9f0e72f3e023",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "003dfd6b-f983-47fb-b3a0-a9f1eae0ceaa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 1741
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "08900760-256c-42df-9a49-d999a00bd09c",
        "cursor": {
          "ref": "b524313e-f660-4fdb-ad22-48dfa6cb97b9",
          "length": 283,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "dc214414-b67f-46a2-ab59-f4afaffb992a"
        },
        "item": {
          "id": "08900760-256c-42df-9a49-d999a00bd09c",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "e099e330-3ad2-4b7d-b124-a97c6a09882f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1772
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "753fb01d-1dbb-4393-ac97-b644024f41cc",
        "cursor": {
          "ref": "f3656de6-bbf5-49c6-a7a8-7e058d41ea8b",
          "length": 283,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "fd884238-0b5a-4604-a854-e12491ad981d"
        },
        "item": {
          "id": "753fb01d-1dbb-4393-ac97-b644024f41cc",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "a6517e1e-0d9e-450a-ab0a-795785112260",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 2115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fdddd2b4-7c08-4c3f-9f68-cd35ba6e8847",
        "cursor": {
          "ref": "8600f4c2-1007-4bd4-929d-0d13e0479999",
          "length": 283,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "baa3482b-fbc0-40aa-90ff-d5fd7f6e7b39"
        },
        "item": {
          "id": "fdddd2b4-7c08-4c3f-9f68-cd35ba6e8847",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "c9d6a75b-c513-4264-a2f5-58a0a9775e5c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 2101
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c730eca6-3e0b-4ec5-8e6c-8bdadfa5e387",
        "cursor": {
          "ref": "ea1f23a3-6f31-4041-99be-d9a0360a38f9",
          "length": 283,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "9216f703-6569-4cbf-bc34-89bc1e0d2ddf"
        },
        "item": {
          "id": "c730eca6-3e0b-4ec5-8e6c-8bdadfa5e387",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "debf5f30-daf2-4b33-93cc-3737a13c2671",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 2099
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "10ab4c51-b791-4ddd-9d00-4fbe834e9e8e",
        "cursor": {
          "ref": "6fc8dee6-c06e-42f7-990b-098089fbdf3b",
          "length": 283,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "45fed80d-97b1-4261-93f6-455c7add2cd1"
        },
        "item": {
          "id": "10ab4c51-b791-4ddd-9d00-4fbe834e9e8e",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "e7909a71-78cc-45b4-a46a-95bb4fb4cfe5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 2100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c31d0530-ae0a-4057-9985-26776f2355f2",
        "cursor": {
          "ref": "8aec970e-6359-4612-996c-89afb19fc8bd",
          "length": 283,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "18c234fb-5142-4432-bd03-c7341bc87757"
        },
        "item": {
          "id": "c31d0530-ae0a-4057-9985-26776f2355f2",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "018cc250-d35f-443f-9042-a541db40991f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 2121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1a8c05d0-27bb-4a41-9a45-0ab47142c383",
        "cursor": {
          "ref": "c72ea147-130f-401a-9ff8-15b30ce2305d",
          "length": 283,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "975f6e68-9039-401e-a24d-8824d76995c7"
        },
        "item": {
          "id": "1a8c05d0-27bb-4a41-9a45-0ab47142c383",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "49d914ec-242e-4d77-9e4a-6b9059d4704c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 1325
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "39cddbcb-863f-4ffe-827e-49c3518b831f",
        "cursor": {
          "ref": "a52269f2-af53-4637-b4e7-a969299608f9",
          "length": 283,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "74d32636-6b52-4d96-9ad8-405a580c1b02"
        },
        "item": {
          "id": "39cddbcb-863f-4ffe-827e-49c3518b831f",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "6551f5db-c1ab-40ff-8e11-8d7047f7fe66",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 1359
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ff75e033-f0d3-41a2-9e51-b7d4e17af192",
        "cursor": {
          "ref": "eb63359d-8e1f-457b-b421-747141f9d5d4",
          "length": 283,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "fc4ae48a-3526-4fef-8b8b-690f46ef6fac"
        },
        "item": {
          "id": "ff75e033-f0d3-41a2-9e51-b7d4e17af192",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "e81b048d-f9c5-41b3-860c-3110ce8ee84f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1340
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b8bb4f67-1385-48dc-9fec-5782d00d593b",
        "cursor": {
          "ref": "2d9d9855-e6a2-4f92-9d3d-2cf0669bb37c",
          "length": 283,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "63256118-356f-4f27-aa4e-f2e5f5aa6702"
        },
        "item": {
          "id": "b8bb4f67-1385-48dc-9fec-5782d00d593b",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "76593725-c8fc-4756-ab9a-d07445c1ab18",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1338
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b9ebdcf1-1dd9-4da7-b439-b14078ceebe2",
        "cursor": {
          "ref": "91f12693-91a6-42c3-8367-db74c2b2461f",
          "length": 283,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "93d76d29-950b-46e6-b4d8-17db36e77d5a"
        },
        "item": {
          "id": "b9ebdcf1-1dd9-4da7-b439-b14078ceebe2",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "5d57a729-15eb-47ae-992b-9c5a86508b92",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1339
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0915d000-b16b-4794-8f22-960a08baf439",
        "cursor": {
          "ref": "ad436bd2-fde3-4272-89fd-6d73afd33a80",
          "length": 283,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "cf16c619-e93e-4145-be5d-dbc660ea2f95"
        },
        "item": {
          "id": "0915d000-b16b-4794-8f22-960a08baf439",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "04ff7859-8c36-4b98-b686-7954618b7ed6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1365
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d3b80039-d6c6-400b-8825-8839ad0f37d2",
        "cursor": {
          "ref": "a4463fd3-abae-4ef1-801d-32555904c7ac",
          "length": 283,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "eb5b6ae5-863f-452d-97ec-722d25f6ebb3"
        },
        "item": {
          "id": "d3b80039-d6c6-400b-8825-8839ad0f37d2",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "a2ef03bc-88f0-474a-8578-7ea5347d6a77",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 1395
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a8b214f-d49a-4445-abd0-77754979c975",
        "cursor": {
          "ref": "d66876d2-e34f-4e83-a350-928625968b31",
          "length": 283,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "a130c04b-1997-4990-8235-2f990c42dae0"
        },
        "item": {
          "id": "5a8b214f-d49a-4445-abd0-77754979c975",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "5d10f974-87b4-4d83-84ed-011a6834b7f7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1328
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "357402de-47ed-4173-a67f-83f5f0bd13a0",
        "cursor": {
          "ref": "01bd2902-6c54-437a-a16f-880ef738b6e1",
          "length": 283,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "b6800675-a5fe-45dc-8535-54354479ded3"
        },
        "item": {
          "id": "357402de-47ed-4173-a67f-83f5f0bd13a0",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "6065b1d7-61c3-4d3c-b601-9f5055fe769b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1829
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eaf866da-2efe-4952-a3f4-2185971fb1ae",
        "cursor": {
          "ref": "5214eddc-6c12-4784-bb9f-1249886de6c8",
          "length": 283,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "5314fdde-a446-4d14-9ba6-f5520acbbe5d"
        },
        "item": {
          "id": "eaf866da-2efe-4952-a3f4-2185971fb1ae",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "62469111-5c5b-457a-9889-7e093ad87664",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1628
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d1746280-a390-4857-af8a-3260f166bdf2",
        "cursor": {
          "ref": "42054aab-d99c-490b-a483-a9fca02b94cb",
          "length": 283,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "562829ce-5ce5-4f7e-b11d-034ea19377c5"
        },
        "item": {
          "id": "d1746280-a390-4857-af8a-3260f166bdf2",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "63f9adca-dcb8-4bc9-81bf-352b11a76c85",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1626
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e36d5f88-f706-46bc-8f46-dd5ad7d9b60e",
        "cursor": {
          "ref": "ca5f42aa-0ea0-49df-b31e-656e0fe3d1cf",
          "length": 283,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "0f16d101-b1f1-4434-8148-453d84376d5d"
        },
        "item": {
          "id": "e36d5f88-f706-46bc-8f46-dd5ad7d9b60e",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "94d95c6a-bd30-47fc-8fad-2570fda41369",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 1627
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "25fc5add-27d4-4252-8001-ef81b3838710",
        "cursor": {
          "ref": "d747575c-5c79-47ef-bff8-1103f68b077b",
          "length": 283,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "4ed4820a-34df-4347-af33-cd9a3df154c9"
        },
        "item": {
          "id": "25fc5add-27d4-4252-8001-ef81b3838710",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "380a0e8c-0d6e-4205-a5dc-9bc8f58a4226",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 1640
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa67f0c4-8a65-4483-888d-7482866503c2",
        "cursor": {
          "ref": "38c7d7f1-bd1f-41e7-974e-16756e05110b",
          "length": 283,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "88606911-6ae4-47f7-9818-69dd35aefa64"
        },
        "item": {
          "id": "aa67f0c4-8a65-4483-888d-7482866503c2",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "13e7ef95-ca0e-47f9-aa4f-0bebe8396b2f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 2164
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "54da0e5b-117f-43de-8f4d-ecbe7ec479eb",
        "cursor": {
          "ref": "b2e86234-e24e-416f-b5cb-2a9fb6fc7aed",
          "length": 283,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "8f620c76-d353-4f4f-a92a-d50a8a43b0a4"
        },
        "item": {
          "id": "54da0e5b-117f-43de-8f4d-ecbe7ec479eb",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "514ebd7a-4267-4a79-9be7-cc995b21d2f5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 2150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8831b632-cefe-40bb-8b23-770bb7177a3f",
        "cursor": {
          "ref": "1b1eeac3-5ce6-420a-8297-6482793749c4",
          "length": 283,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "9e62f55d-2f2d-4111-a375-1c2140d2fbe0"
        },
        "item": {
          "id": "8831b632-cefe-40bb-8b23-770bb7177a3f",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "3c8a9f19-7b0c-43d0-bcb9-af2ae6e70f7c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 2148
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "47f3bb36-a96b-4533-88d6-07ba4693e002",
        "cursor": {
          "ref": "246fa4b4-fb39-4e9f-a940-70f254ec375d",
          "length": 283,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "9dc56917-11ce-487c-98b1-79fb4963ab7f"
        },
        "item": {
          "id": "47f3bb36-a96b-4533-88d6-07ba4693e002",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "e1af2046-ee61-44b7-88a8-9d7c27ec987d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 2149
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "529a10bd-dd5c-446c-a2d6-170b1ef9c6ff",
        "cursor": {
          "ref": "b494ceef-0ffd-4614-b624-5d70e9ca1e5a",
          "length": 283,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "40cafa2e-dcf0-4f74-ace4-41e8876d4837"
        },
        "item": {
          "id": "529a10bd-dd5c-446c-a2d6-170b1ef9c6ff",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "d61ad321-dc87-4e94-95d3-7cd70f9095e5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 2170
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "554380b3-fb8c-4a6d-8996-3ac557d59732",
        "cursor": {
          "ref": "6001a3d5-6813-457a-821d-98012e6d6f33",
          "length": 283,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "be0a7d2d-6364-436d-95b9-43bce3a264da"
        },
        "item": {
          "id": "554380b3-fb8c-4a6d-8996-3ac557d59732",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "2f0aad88-14e2-4c86-885e-44d028f9063e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 904
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "34dbcdea-6188-49b7-84d5-f1c299c4c440",
        "cursor": {
          "ref": "1da493ad-b0f7-4ba9-9e22-cb0ab7f2b4e3",
          "length": 283,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "610b7926-2a95-483f-b0fc-8bec221a5d42"
        },
        "item": {
          "id": "34dbcdea-6188-49b7-84d5-f1c299c4c440",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "614243fc-4ab0-4807-904d-58610bc776de",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 915
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7b0620c3-8331-4a7e-95b9-15ca59c95382",
        "cursor": {
          "ref": "0b41c0bb-4c34-43cd-bb3e-f6901ae00366",
          "length": 283,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "a0be3f3e-745a-4bc9-83d3-3b3ee101ec1e"
        },
        "item": {
          "id": "7b0620c3-8331-4a7e-95b9-15ca59c95382",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "da3ec714-58ab-4116-8d2a-df77ff79e1e7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 917
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c0bf0c7-8870-4009-8a0f-8ffb275f6b60",
        "cursor": {
          "ref": "7085b335-cc7a-4c0e-8845-99c09fc2d9fe",
          "length": 283,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "530ff14a-621a-4400-bd5c-b0e01ac86899"
        },
        "item": {
          "id": "7c0bf0c7-8870-4009-8a0f-8ffb275f6b60",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "6bb1827c-bf6a-4f0e-9c2a-f77f65fa4de6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 915
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6eeb3fe3-7ea6-4286-af75-0f84d7e647c2",
        "cursor": {
          "ref": "9491debb-097c-40a2-b88f-0f8b7f88046e",
          "length": 283,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "bf374d39-ea60-47c6-b37f-a2533853c3eb"
        },
        "item": {
          "id": "6eeb3fe3-7ea6-4286-af75-0f84d7e647c2",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "ccadb1b4-afe5-432f-b756-323be3ca3f7f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 917
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f9c7fdff-08ab-4b20-8ae9-ed82e9fad005",
        "cursor": {
          "ref": "8c7bc6cb-bb21-42d7-ae62-d7d707472a7d",
          "length": 283,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "bbd0ff37-7e3d-4bd1-beb4-8e05f6a12ec8"
        },
        "item": {
          "id": "f9c7fdff-08ab-4b20-8ae9-ed82e9fad005",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "396ca6ca-3e89-4f2e-a05f-907653c62462",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 921
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3a078f0c-7276-4adb-8383-51362c83185b",
        "cursor": {
          "ref": "ba38f336-c777-47cb-9c9f-09f1f7ac4be7",
          "length": 283,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "562c357b-3b13-4ec9-a44a-b8effc1f7742"
        },
        "item": {
          "id": "3a078f0c-7276-4adb-8383-51362c83185b",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "2dda0e84-2528-4bef-b16c-fcbec8450587",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1262
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5f083f0b-6e53-4324-978f-aaaccfc9a6df",
        "cursor": {
          "ref": "2d7cb31c-b0c0-4399-91a2-150dd1816007",
          "length": 283,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "c64723bd-660d-4b37-8224-c2cd77d5ccae"
        },
        "item": {
          "id": "5f083f0b-6e53-4324-978f-aaaccfc9a6df",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "44c16659-cd9d-4e47-8e0a-348e91ca54ad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "902aa97f-aca6-4bec-b341-7d8d748b779a",
        "cursor": {
          "ref": "8ce0f1e2-a573-41ae-85ff-96c52f835fce",
          "length": 283,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "f087f8a2-df6d-4127-b2a6-04aed916ee68"
        },
        "item": {
          "id": "902aa97f-aca6-4bec-b341-7d8d748b779a",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "ee65ed5c-41a4-4828-ae5c-0b3e3759fa40",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "95e7f843-2a41-4e4b-9fa9-33d36e7378e9",
        "cursor": {
          "ref": "26551b97-8a29-4183-b725-1645fa243a5b",
          "length": 283,
          "cycles": 1,
          "position": 251,
          "iteration": 0,
          "httpRequestId": "08464bf5-65a1-4d26-bc70-b43512d88556"
        },
        "item": {
          "id": "95e7f843-2a41-4e4b-9fa9-33d36e7378e9",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "aa1ee439-83f9-400c-86ca-1c05b73ba349",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1273
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "484dddaf-7808-457f-9409-091887f3c3d9",
        "cursor": {
          "ref": "274ffef8-f352-46e2-84c4-3fb719cb5e31",
          "length": 283,
          "cycles": 1,
          "position": 252,
          "iteration": 0,
          "httpRequestId": "7604dd7f-89fa-4455-ad27-beab20ffb12e"
        },
        "item": {
          "id": "484dddaf-7808-457f-9409-091887f3c3d9",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "85dd2bf4-a0cd-4b93-8972-f5d2b32686b1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f0e13052-5af1-4e89-a204-9438371bb25d",
        "cursor": {
          "ref": "dafc1e30-bfdc-4bdb-84e9-ed09ed77d3a7",
          "length": 283,
          "cycles": 1,
          "position": 253,
          "iteration": 0,
          "httpRequestId": "19a1c450-0bba-4c7a-a25a-47fcff0cba34"
        },
        "item": {
          "id": "f0e13052-5af1-4e89-a204-9438371bb25d",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "9f9d6b5e-78f5-493e-9d46-9d99325c1f38",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dd3fbc0a-55fd-4701-9e63-1a7d88221f52",
        "cursor": {
          "ref": "82cfa227-b2d5-48c7-8358-6dc67ad5ca92",
          "length": 283,
          "cycles": 1,
          "position": 254,
          "iteration": 0,
          "httpRequestId": "f8600613-00b7-4039-9409-5811c700fe74"
        },
        "item": {
          "id": "dd3fbc0a-55fd-4701-9e63-1a7d88221f52",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "b9442af9-e2d1-4b8c-9f54-2a6aed341eb5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 1299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b57a2610-d693-4fe4-8291-5e41bf2da188",
        "cursor": {
          "ref": "82475a5d-e962-4478-9e68-158cf27299d6",
          "length": 283,
          "cycles": 1,
          "position": 255,
          "iteration": 0,
          "httpRequestId": "0502317c-4d6f-412d-92fb-f0f1a74750da"
        },
        "item": {
          "id": "b57a2610-d693-4fe4-8291-5e41bf2da188",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "f63de28a-46c2-4d66-8025-83a650c1ef50",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c5a4b59a-073b-41ed-91bb-df2b6787f0f8",
        "cursor": {
          "ref": "1d5be01c-422c-4475-a238-e2a1e328e19c",
          "length": 283,
          "cycles": 1,
          "position": 256,
          "iteration": 0,
          "httpRequestId": "59294f4c-4cc2-487c-ada2-23a40da81181"
        },
        "item": {
          "id": "c5a4b59a-073b-41ed-91bb-df2b6787f0f8",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "990e0fb6-2363-4fb4-b242-75bd873ee96e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "28b5f6da-3158-4412-84a4-8f221101b764",
        "cursor": {
          "ref": "e2eabd63-8a95-47a9-bbf4-8ace4e74efe9",
          "length": 283,
          "cycles": 1,
          "position": 257,
          "iteration": 0,
          "httpRequestId": "03b3ac07-06f2-4754-b802-58507b3a0b19"
        },
        "item": {
          "id": "28b5f6da-3158-4412-84a4-8f221101b764",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "d82fb328-298e-4235-a65b-8dcbcbd7c10b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 1273
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e59991bb-68b2-4020-b11f-bbc955467a77",
        "cursor": {
          "ref": "ebf7b556-a6ac-4286-addb-17f57fd37ef4",
          "length": 283,
          "cycles": 1,
          "position": 258,
          "iteration": 0,
          "httpRequestId": "9bbb167d-c7d0-4eca-be87-78525aab47e0"
        },
        "item": {
          "id": "e59991bb-68b2-4020-b11f-bbc955467a77",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "3d8b6a71-4ef3-497f-9c5d-69079faad827",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "40957199-1264-4ed6-95d3-a2afa57fbca0",
        "cursor": {
          "ref": "f1e34a9b-7875-4af6-b8af-c10e76116413",
          "length": 283,
          "cycles": 1,
          "position": 259,
          "iteration": 0,
          "httpRequestId": "4540e20f-bcd8-410b-b438-ba9e2744894d"
        },
        "item": {
          "id": "40957199-1264-4ed6-95d3-a2afa57fbca0",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "10eabf17-b137-4f1a-bc9d-51e078a9b88e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d41e3a52-a519-4f5a-88de-093900f789e1",
        "cursor": {
          "ref": "6dae1c0b-61e0-491e-bde9-15d1f598c88e",
          "length": 283,
          "cycles": 1,
          "position": 260,
          "iteration": 0,
          "httpRequestId": "da8384f1-ec1e-492d-9fcd-c1e4448f2ed9"
        },
        "item": {
          "id": "d41e3a52-a519-4f5a-88de-093900f789e1",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "b6a117ad-f696-466a-8623-3f0dea47844e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 1253
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6c43fe2f-d2d1-4a8f-9e9b-bb842a0a1e54",
        "cursor": {
          "ref": "808d16ef-593d-4c05-86c3-d50635994ac6",
          "length": 283,
          "cycles": 1,
          "position": 261,
          "iteration": 0,
          "httpRequestId": "f96a45fc-c067-49c8-bc0a-307013215b81"
        },
        "item": {
          "id": "6c43fe2f-d2d1-4a8f-9e9b-bb842a0a1e54",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "a5ac3f31-97b7-448a-ade5-5dc0c1df5c6c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 1189
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ebc846f9-9b51-4f82-a18b-049c6c30b22d",
        "cursor": {
          "ref": "7d06b073-42e9-4579-9858-682637b6a4a7",
          "length": 283,
          "cycles": 1,
          "position": 262,
          "iteration": 0,
          "httpRequestId": "4b7397b8-e4b8-4190-8cd6-d9f46b0be61b"
        },
        "item": {
          "id": "ebc846f9-9b51-4f82-a18b-049c6c30b22d",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "a73b34c9-c810-4838-97b8-d3228a67c78e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1188
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ca25100d-448c-4846-94a0-067d51c84039",
        "cursor": {
          "ref": "7316a834-994a-4275-8240-fb1f612a451e",
          "length": 283,
          "cycles": 1,
          "position": 263,
          "iteration": 0,
          "httpRequestId": "cccc139e-e7cd-4ec0-85c4-94c69d1ed5eb"
        },
        "item": {
          "id": "ca25100d-448c-4846-94a0-067d51c84039",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "f65b20b6-5837-4521-9aee-5f1eac96888e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1189
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "24f9b32b-87e9-49d3-bb27-19b345df03c3",
        "cursor": {
          "ref": "dcad12e1-5bd0-4dff-b72e-54344e881552",
          "length": 283,
          "cycles": 1,
          "position": 264,
          "iteration": 0,
          "httpRequestId": "908a853c-2305-46a8-8cb0-88a0d19153b1"
        },
        "item": {
          "id": "24f9b32b-87e9-49d3-bb27-19b345df03c3",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "636c1dff-87ad-470b-95fa-092d18a3905c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 1259
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1942817e-34dc-4661-a02c-5d9089e582a4",
        "cursor": {
          "ref": "a797e248-836c-437f-ac37-d1eace567eb8",
          "length": 283,
          "cycles": 1,
          "position": 265,
          "iteration": 0,
          "httpRequestId": "afae9610-88de-45e4-b5e2-86d4d57bf3b9"
        },
        "item": {
          "id": "1942817e-34dc-4661-a02c-5d9089e582a4",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "e0fd31e9-e78f-4fb7-a742-4e056f4f8d1c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c50541fe-d1c8-4b50-b1e1-d9b41094f013",
        "cursor": {
          "ref": "bd359aec-733f-429a-8162-9b0942bae75f",
          "length": 283,
          "cycles": 1,
          "position": 266,
          "iteration": 0,
          "httpRequestId": "637cecd9-7204-45f6-a258-6a5368aa65e7"
        },
        "item": {
          "id": "c50541fe-d1c8-4b50-b1e1-d9b41094f013",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "11e3e477-2436-4ddb-8e1d-3cb281b12c43",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c4395766-db55-46a5-93dd-6e8fd135a042",
        "cursor": {
          "ref": "0934c301-63bc-4e13-baa7-5b8fd2bf67f6",
          "length": 283,
          "cycles": 1,
          "position": 267,
          "iteration": 0,
          "httpRequestId": "23a61bb1-5acf-403a-b468-50ab9a4524a0"
        },
        "item": {
          "id": "c4395766-db55-46a5-93dd-6e8fd135a042",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "5525baa4-e8ca-402b-8d40-a135cfe604b3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1149
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9d9a7548-71e8-4309-b57e-1c3ea9af6ff8",
        "cursor": {
          "ref": "4e81445a-a419-4935-81ad-ba01a083f490",
          "length": 283,
          "cycles": 1,
          "position": 268,
          "iteration": 0,
          "httpRequestId": "10c54404-0069-4736-b023-c65ca0052565"
        },
        "item": {
          "id": "9d9a7548-71e8-4309-b57e-1c3ea9af6ff8",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "bc7afe1a-61d2-4e91-91e9-c5bc4f1a57d0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 1150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e1b14b7c-b259-47ca-8213-7b2bd444035d",
        "cursor": {
          "ref": "83dcb808-81ac-4e0b-81a3-3c4cd47afca7",
          "length": 283,
          "cycles": 1,
          "position": 269,
          "iteration": 0,
          "httpRequestId": "9868364e-b82b-4b1a-9c5f-c176257f69e7"
        },
        "item": {
          "id": "e1b14b7c-b259-47ca-8213-7b2bd444035d",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "b478d211-de11-4892-839b-d8d51a6a0e54",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bf0dde59-6f3e-4972-bafb-fccadb6122a9",
        "cursor": {
          "ref": "64313559-09f3-45d5-b09d-25130d7d4334",
          "length": 283,
          "cycles": 1,
          "position": 270,
          "iteration": 0,
          "httpRequestId": "8cc95d02-1dfd-427e-b3bd-599d698540de"
        },
        "item": {
          "id": "bf0dde59-6f3e-4972-bafb-fccadb6122a9",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "b9a2f68f-cad7-4024-97e0-2a1a98d6f3c8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8662c90c-0dc7-44c9-b496-dc8c8991aed2",
        "cursor": {
          "ref": "fe75ad02-8f03-4614-a7d4-1a1e3dbfa5c2",
          "length": 283,
          "cycles": 1,
          "position": 271,
          "iteration": 0,
          "httpRequestId": "a70e7072-c61a-4e01-98a7-22dc7ac12d75"
        },
        "item": {
          "id": "8662c90c-0dc7-44c9-b496-dc8c8991aed2",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "762d21dd-5875-4915-ad0c-0ac69ca2955b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 1279
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e8b331fd-c655-4849-81e3-0e3034aabef7",
        "cursor": {
          "ref": "fb4148d9-de37-45c8-81c2-5cf30ad53336",
          "length": 283,
          "cycles": 1,
          "position": 272,
          "iteration": 0,
          "httpRequestId": "d6c3feda-9612-44a8-b373-28df5f06412c"
        },
        "item": {
          "id": "e8b331fd-c655-4849-81e3-0e3034aabef7",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "3d6a2c9b-08b6-4ad6-8854-a367facee2b6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 1278
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f309452f-f519-4c22-9cf4-a4ea6483bbae",
        "cursor": {
          "ref": "e4702b8b-c494-4ec9-86cd-571d133abaed",
          "length": 283,
          "cycles": 1,
          "position": 273,
          "iteration": 0,
          "httpRequestId": "e0306d23-c6b2-4ad7-9e89-b274d872c77a"
        },
        "item": {
          "id": "f309452f-f519-4c22-9cf4-a4ea6483bbae",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "f9e40032-6660-4e8a-bc23-24d0fd7fccae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1279
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2641bcdc-25fa-4f9f-a76e-38ac8b569542",
        "cursor": {
          "ref": "4f30b654-3bc2-4868-9622-37f644c97efe",
          "length": 283,
          "cycles": 1,
          "position": 274,
          "iteration": 0,
          "httpRequestId": "ed4c414c-81a4-429d-b676-d9023f6a4781"
        },
        "item": {
          "id": "2641bcdc-25fa-4f9f-a76e-38ac8b569542",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "840e1255-d246-493e-8fb4-89be6735754d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a6b753ae-9c0f-4c5c-a42d-d38265e9c5f3",
        "cursor": {
          "ref": "2fbdec2a-2b9c-4bce-99ca-84a4925a0e97",
          "length": 283,
          "cycles": 1,
          "position": 275,
          "iteration": 0,
          "httpRequestId": "b9c7bd08-54d8-4067-b9ce-3d6fa9f47d74"
        },
        "item": {
          "id": "a6b753ae-9c0f-4c5c-a42d-d38265e9c5f3",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "d726810b-d021-4bd4-89e8-8848b5e23872",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "754294ff-fbe5-4b1d-98a8-797f7ccf009a",
        "cursor": {
          "ref": "3d10a22e-4e80-47c8-8ab0-a02f341fadd7",
          "length": 283,
          "cycles": 1,
          "position": 276,
          "iteration": 0,
          "httpRequestId": "fd30a1ae-c9bb-4031-8997-1c1c731fdd5f"
        },
        "item": {
          "id": "754294ff-fbe5-4b1d-98a8-797f7ccf009a",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "e248e164-228a-488b-ac3c-1732c882f370",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 53,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe35814f-8eb0-44e5-8e4d-692d19cf48c1",
        "cursor": {
          "ref": "6eeddcc7-0546-4813-82eb-07ba0005746a",
          "length": 283,
          "cycles": 1,
          "position": 277,
          "iteration": 0,
          "httpRequestId": "62595e6b-01f8-419c-8d10-405a8493b9dc"
        },
        "item": {
          "id": "fe35814f-8eb0-44e5-8e4d-692d19cf48c1",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "5adccec1-b94e-41f7-9b44-4af594517d2e",
          "status": "OK",
          "code": 200,
          "responseTime": 94,
          "responseSize": 338
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "fdb7900b-725b-48d0-95b5-33ee72953916",
        "cursor": {
          "ref": "59975fbd-15a5-4150-bd4d-5c46a5cae8f6",
          "length": 283,
          "cycles": 1,
          "position": 278,
          "iteration": 0,
          "httpRequestId": "8b786d30-a822-402a-bdd2-f4d37f568ef1"
        },
        "item": {
          "id": "fdb7900b-725b-48d0-95b5-33ee72953916",
          "name": "credentials_verify"
        },
        "response": {
          "id": "c3c3736c-9f68-4316-a55e-efd259c43971",
          "status": "OK",
          "code": 200,
          "responseTime": 1338,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "b6592135-71c4-45c6-8c16-ca33af85d5e4",
        "cursor": {
          "ref": "cb7a2cf0-327d-4b25-9369-c3b0c2395521",
          "length": 283,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "fc318684-5a46-43db-b7df-79f050897f94"
        },
        "item": {
          "id": "b6592135-71c4-45c6-8c16-ca33af85d5e4",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "7a3fbd0f-7543-4ae4-9fb7-46dbac9950d8",
          "status": "OK",
          "code": 200,
          "responseTime": 1293,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "f01fa368-d56a-4c88-af6e-0d541d6d662a",
        "cursor": {
          "ref": "01314b86-7337-4c48-a6ac-f6a8cdd063b5",
          "length": 283,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "3b6080fd-5a78-41ce-aa2b-3fd0db9683ec"
        },
        "item": {
          "id": "f01fa368-d56a-4c88-af6e-0d541d6d662a",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "71916cce-bd93-43af-86e0-a4496c4454b4",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 52,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f01fa368-d56a-4c88-af6e-0d541d6d662a",
        "cursor": {
          "ref": "01314b86-7337-4c48-a6ac-f6a8cdd063b5",
          "length": 283,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "3b6080fd-5a78-41ce-aa2b-3fd0db9683ec"
        },
        "item": {
          "id": "f01fa368-d56a-4c88-af6e-0d541d6d662a",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "71916cce-bd93-43af-86e0-a4496c4454b4",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 52,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ffab2f2c-e8b1-4b18-85fd-aecd86e8ade4",
        "cursor": {
          "ref": "66b7134b-5ecd-44c0-a664-ff99118f4c12",
          "length": 283,
          "cycles": 1,
          "position": 281,
          "iteration": 0,
          "httpRequestId": "1c0d47e4-109e-4137-9858-52a04073b4aa"
        },
        "item": {
          "id": "ffab2f2c-e8b1-4b18-85fd-aecd86e8ade4",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "a3258553-2873-491b-baec-eee54bfc3b0c",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 50,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "48ba3d2b-4a1a-477f-a987-80834270dc1d",
        "cursor": {
          "ref": "6ccc65b2-fc23-4dca-b8d4-0648af57c895",
          "length": 283,
          "cycles": 1,
          "position": 282,
          "iteration": 0,
          "httpRequestId": "6159fc9a-c151-431d-bc05-5fc83a2cc055"
        },
        "item": {
          "id": "48ba3d2b-4a1a-477f-a987-80834270dc1d",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "cd45dd31-5fee-44f9-b2bf-beca181a7a66",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 49,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}