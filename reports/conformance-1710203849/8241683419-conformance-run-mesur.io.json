{
  "collection": {
    "info": {
      "_postman_id": "0b8a4a7f-f952-4403-a9a4-909b37b8fa24",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "fe456f65-d7be-4975-8137-5f43ce632941",
        "name": "Clear Cache",
        "item": [
          {
            "id": "01455b22-c762-4ebb-970a-7d1bbd036503",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "c53b3033-6f07-4ff7-8d72-0e2b4bf2c930",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "b5768f68-64c9-47a2-bbd4-06b02e9542ca"
                }
              }
            ]
          },
          {
            "id": "fc653abb-e003-4f4a-b099-bc99ad415867",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "76727fb3-134b-467e-a3b9-0e6b1bce9716",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "2291e536-edb6-4c54-a7fd-d74cada3be03"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "dc6b4531-cf54-445e-aac8-051406e89499",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "b4b5298f-954f-496b-b44d-e701f692f8da",
            "name": "Positive Testing",
            "item": [
              {
                "id": "e8f8c60d-9778-44d1-88b8-da11c4dd5a6c",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "8fc2a0f4-25ea-41ef-b2c3-da4af1dc7625",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "c17c6695-c6cb-469d-bdd2-4620b9a88505"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "4b7c1055-192d-4eff-abeb-145dbaef1619",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "4274f887-94ef-4fbf-8e87-8f0f73bb9bda"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "7e8bd466-c0ff-4f55-9172-d12414082c51",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "c71cacf1-701d-4992-bbe5-c5ca2fdad3a5"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "2b66f354-4c3a-4ed3-bbd3-b229a9715e39",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "960d7de4-f20b-49d1-9614-675858e6600b"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "0769029e-057a-4371-b614-36dd8fbfbfea",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "f99317ab-990c-4da4-a773-4e43cb4f8de6"
            }
          }
        ]
      },
      {
        "id": "ea5de57b-2447-49ac-985e-4b008d307e23",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "0a42691a-dc5d-4cb9-80b9-fc37b42e9dc4",
            "name": "Negative Testing",
            "item": [
              {
                "id": "e7e00d5e-8125-4244-b86d-b524b2483226",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "60541aaf-c392-4416-a4a6-c3410e27a048",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0bcdd95c-c82c-4e13-b547-b96a4bc06b97",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "7aed2eec-3f2e-4c1e-8fa9-41c0c0a4b336"
                        }
                      }
                    ]
                  },
                  {
                    "id": "68c4c850-9bc5-41e7-9ed6-0305531168e5",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "082fa8a0-9a00-4b9c-accd-0d0587ff9d76",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "cc8c286c-ea0d-47ec-a56d-e28d061de2f4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d793562f-6543-4a11-bd40-ad29ff3a0091",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2af4637f-2a65-45ea-b3e6-20dca231f2f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "4490093a-7dcf-40be-90ea-b99d7c392178"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "9c178c77-8000-42b4-a235-596f7e92336e",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "2df2a74b-8bea-457d-8958-4269566acccc",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8f629ebb-ec8e-4079-b433-a985af6fa2a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "29d05652-a978-46b2-9c38-541bbe70a428"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7bd0e47e-779a-4e34-ad41-8a953213f390",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f21f7e9c-d1e6-4846-9aab-8ab1216f0656"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "69fde7b1-c494-4e62-bc41-1dc3c590dcc5",
            "name": "Positive Testing",
            "item": [
              {
                "id": "4a7bce29-3c58-423c-8647-bf25902994ec",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "2e9dbdf5-09c4-4619-80f2-c22a388ab928",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "069a0313-4557-4e89-a240-07d6a7a08703"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "636e6391-e1f3-4c5d-a496-d0df22eebceb",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "54e8167e-4787-4b52-b37e-c2f914568049"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "dbfa17e4-51d2-47a8-9b36-8ebe4fcfa1f6",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "5f5e30ef-4869-42d2-9b71-62bec8c9cb2b"
            }
          }
        ]
      },
      {
        "id": "5240d976-90c2-4517-9e93-58e8fa8f4036",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "2dfc6ae7-3e1e-4ede-8861-8e9c55e53a77",
            "name": "Negative Testing",
            "item": [
              {
                "id": "676bfa48-ff1c-46dc-9ded-436ccbd3fd68",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "056cc1f3-47b9-4b4c-ba44-3519ddb1b175",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b0321d22-1cb7-4ef9-ac74-6e471d723298",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "51502f1c-3939-4ecf-8bc5-c6a73291fbae"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e81cf626-da3d-43bd-bba4-b43d74f174d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "7a4e5457-2022-41c5-b66f-1510b0cbf7d8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "39ef3d2f-aac6-4c65-8dfd-f9b478194da1",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e5efa8e3-ad41-4b65-99b7-ed914ebfe8d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "35286d70-8e5b-497a-91e5-8b80be5f1674"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6a5024db-d23f-4dcc-824b-f1eb235f4e50",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "25ab7320-3cbf-4468-8e17-b8d7de4e07b1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cccf77b2-9139-4fa0-8d28-3dacf3b1ca7b",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a254171-9149-46a3-8510-05bba6a50944",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8da71e27-70c8-4cbb-a630-ab0003ab4a77"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c48ca5e7-c265-47e5-9107-cce27e4e0ff1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "471c3699-6944-46fb-8d14-e1c9cbdd1d52"
                        }
                      }
                    ]
                  },
                  {
                    "id": "909a6c85-95fc-4576-bea9-a52a607665c7",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f8284144-a41f-48f7-8710-07e01562bde6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0a541348-90ce-4309-9da1-e902a57d7569"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "233e74e0-82db-4f72-82e5-2eb034877dbd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c24d4014-bb91-4024-83d8-35c8ee84147d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3446c755-dbf9-4f36-85ec-3df51e29bc4d",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "428429e4-04d5-4933-b59a-a66af52b1daa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2c1c28b0-1d96-4782-8dec-e2238141f8f9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ec3caf33-cd7e-4a91-9807-ffe1f9ddf6cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "511da287-ae99-485d-a839-8bd2eec7e227"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a6cc90ab-41b3-4162-9294-e5ae23a69d1d",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a011306f-b563-49eb-a1dd-694ae3747206",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b36e98ca-a47e-40e5-86dc-609a9ad53c13"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c74f6b90-df73-4547-b0ab-b53be5959dff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "8338c327-8f5f-430b-8371-940e92d51286"
                        }
                      }
                    ]
                  },
                  {
                    "id": "82740a7e-4d4f-416f-9095-8e1ad1ccf56c",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d7905703-a35b-4bfd-a60b-7556139250ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e476d4fb-af48-4dba-8c34-3a516450f609"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cdd60c31-2528-4799-8088-38c6fee10f4c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ef28ccbb-9282-4570-aa1e-31c077357a86"
                        }
                      }
                    ]
                  },
                  {
                    "id": "82474205-d7d0-4961-baf2-6af24e9eadb0",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5bda9079-1610-4f1a-aca0-5449092e38ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3c43b97d-bda9-42dd-8aa7-7eaf6cec617a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3ebb12be-ead0-491f-94d3-025a8dfe1ec4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "44a9425a-9663-4ab2-80df-2d615fa5edd0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5268d082-ba82-4201-b5f1-14da356b3afe",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1d9be380-faab-4acc-9257-900bd2ffc075",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a415b808-4f3a-446f-8069-9bf39684bc7e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9ccbfd07-7a65-4d1a-8969-0a8d9b6ce4c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ee727600-c801-470d-ad20-eff4331ef042"
                        }
                      }
                    ]
                  },
                  {
                    "id": "06f4ef5a-ba8b-4077-87ff-c3a48a5a2b4f",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e9bcf67d-9de1-48d7-8595-fbdfcdea38b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a7985c2a-fb46-4296-8629-fc3b5c92211b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9f4b3979-bf98-4539-adb4-fbb9489e7dc4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "438ee07a-3d08-4506-bff8-1cddd7155d1d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7773ef00-c000-45fc-8323-f529fbf9bc9c",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "195ea045-63b6-48bf-9890-cfb876e64a08",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "059aaf0b-8ad7-4af1-9bbe-6d6d33f0424c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "08a7e1cb-d07e-47bf-aa95-548c62d31e93",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "43e81216-b592-4ee7-883e-85a0d15ecc02"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e392f038-235b-4f01-a3e9-c90bd9d60d26",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6fbd13a3-1ed4-45f6-a8ba-75ea7fdd679a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "82918b37-b5d3-4def-b122-c2d38a9db447"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "192d0331-2f86-4fb2-bca5-717814f014a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "2171591c-4866-4aa7-8129-e30954c6e632"
                        }
                      }
                    ]
                  },
                  {
                    "id": "17c6c7e2-dfc2-4334-bd30-e6bc0d5c908f",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6a2735b8-7964-4f08-8571-85c81c240a49",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e1d4fd4d-0159-48a4-af8d-74a3a9d5534d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c529b170-0e40-4235-b6f9-c040becc4bb2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "4ee8423d-6584-4afd-b5b5-665ac49a48e9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "469f3e71-f258-4c2c-9325-4dcaab3517f2",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "29031f91-6f91-4522-a659-8ccec1656df5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "09b441af-2301-4b33-9812-e8b834fecd04"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "da4b920a-accb-414d-8e76-79bba3ea46b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "6f506e57-fc9c-46f8-8ae0-df9e35024fc3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cd615370-0418-4ca7-b1a3-b28b98412373",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9ca0a477-1750-48a1-ba95-f773d0812055",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "76d57619-6159-48db-bce6-f6d40dee0f23"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9f3c3b99-c45a-4a17-ad79-6bbed16e97be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "6a09c375-9231-4b9d-a97f-c6cd5f39ecd0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3c6def6d-16c1-412e-b7df-ba7d11da939e",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1431fa51-9704-4c2e-93ae-e0addda628af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f309e748-e155-405d-895d-5926c43ed92d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8a96a43b-68a0-401f-aee3-f459b51e4f1d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "de8bae94-3074-4ac7-a957-ae9615239ff8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f519ca12-4514-4efd-910e-085035a35acd",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1bf8f19b-50f9-429f-b616-4b36f392963c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1d0ac00e-f292-489c-9e98-03c9f4d46b96"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1091d376-1bfc-48fa-9864-d58c6fce4829",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "0b5847e6-17aa-43d3-abb4-e89d271dceed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "833c5a5e-2681-45be-b86f-7f1b29c2ef76",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "52af7166-9c00-43ae-ac56-b0184ebd833e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "62ba6e8e-b61b-4de1-8bc7-2fb625f4a137"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "19e914e9-a617-48aa-adf1-1630b62bc6c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "c4949c9e-1156-4d6c-9f86-3b4bc1fa1a59"
                        }
                      }
                    ]
                  },
                  {
                    "id": "31ecbe77-e568-4905-a0a1-00eb9f4d1593",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "786eb7fa-b2eb-4f32-ba3c-453c9458fb31",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4391f6dc-b57d-49cd-8c50-9ca7c6a957ae"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2ccc7d79-9b1d-40dd-8c74-eb10acef459a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "cccf7f8a-95bf-4940-b2c3-eafc2250ed6b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "512d5362-b713-4579-8bd2-bdb5908031ce",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "33d592a8-0e5d-462c-995b-7bf33dadb215",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "89b5529c-7023-4d49-b884-b89795e5f52a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d5304210-91e3-4861-a05b-384287a236da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "01d7a40f-29e2-4f43-bf1a-042b841b0780"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9ea093ad-da35-4797-876d-a54ad2ddbff0",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2c2c9aa2-f260-417b-8838-2f118f38fa9b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "60fcbfc4-8032-4dca-9df2-af8b83804c41"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "08a7c46f-24de-4205-8a05-45591decb2ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "22d5d3aa-6fe2-4c31-b17a-f3ec97afbb83"
                        }
                      }
                    ]
                  },
                  {
                    "id": "06e3f178-4c91-4418-aa64-072fe93b9478",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "76d335bf-99d0-47cd-adbc-61896774279d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4e6b74d1-5f88-474f-b2f7-c6ab733b0b4a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "85a52818-4e97-4b0a-b19f-92fb50b39eb1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "93cf4f96-9214-48be-a25b-0e47e2dfd12a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fcd5a68b-5632-4e77-9401-b8053af2c01b",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "03d8c881-7fc2-4acb-a285-7afec3e10b45",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dd8178fe-0218-4293-90bc-de8b824cba1a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e676a34b-983a-409d-960b-4693b488cb1d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "10ab504b-41ff-4762-8069-ef15bb367594"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5d421fba-52dd-4c5d-86f4-60ac8d80b76e",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "51bf76f7-a24a-4f68-ae73-35d1ba1df7db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "68a5231c-2227-4a80-ac42-1cf7dca62eea"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7977b81a-f001-43d0-ad66-33ccc60dc6d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "675d5217-d802-483a-88aa-ed35a7edfd74"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3221a1c8-349a-4046-8420-930fe1b7c220",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "95877bda-54ff-453c-83ba-723431fa0159",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a3b6ac1a-ebc9-42fd-b29b-8b8cf1506f20"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bb3ab30b-d047-4a42-b2cb-28b804586ed4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "a90d06ad-70b5-4abe-a3da-1df019149193"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c024756e-b120-44be-b9e9-65fcc754a253",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a56e1110-d571-4c36-a67b-1462ca31bee5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "940b8463-cb3a-4caa-8b09-572cd8608bb6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1ff49ba5-164e-4395-a114-958f0b4bbdef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "27a97768-557e-4f17-ad00-cf77dce44607"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3ed73585-0e0b-42c4-ae7e-e2f04ed1dd7f",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "272cc458-8f24-4751-ba25-9483e9e6278a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e59501b7-8f63-47a3-849e-f7e97ec04fac"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a5e683f8-5f88-4592-9a17-1bf82f3db810",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "a0583421-e2b1-4e08-987d-548c310e490f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3fe7b437-3886-40f7-9dbd-13059356ac52",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "efee1a7d-7601-4dd5-a853-c35906178f42",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dd465990-45e2-4168-b2c5-abdc0e3549c0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "103db907-ba1a-4d6e-a7f3-b059d7774329",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "4356276c-fb95-495c-9d6c-33aa2c2c4d34"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4dcbbdb1-fe78-4581-9ef2-3588a0f1d928",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "80845871-303e-4a81-9103-405a49740fb7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a23ae8ff-bc63-441d-b871-5d0739d1dc5b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fe132f2e-5564-4b15-aa45-ccfcfec34409",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "4973ad38-2533-4c44-9984-6376392502c3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ef290013-f84c-4f1a-8e8a-005d1f17d7ca",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "470bcfec-87e3-4a2c-8408-834c4b94f0c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4ee65752-33e3-4b7a-a3fd-5730270563f4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d572170b-a0b9-4281-845b-86e056dab2c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "0527fa8e-6924-4ab1-8985-736610602695"
                        }
                      }
                    ]
                  },
                  {
                    "id": "182f8b52-9f0d-42aa-a6e6-f213bde26621",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "db174cf0-64a5-4def-afa3-39e351597add",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f10f1c27-13db-4059-895e-417975bd8f29"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2bede9c3-9436-4db5-9419-538694099aea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "7f505bb6-edc6-4c0e-bbe9-6640efaf8b1f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e2790d23-aa02-49d3-8aaa-eb6f02d0706b",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dd2f4de5-c26f-421b-be6f-ddcecb2874ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "be8522c6-6151-4790-a3fd-467996c0aa46"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "127ad408-57f3-48ca-aec9-b68cfdc0efda",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "0f1766d8-b03f-4fe2-b81a-f1d8591d6044"
                        }
                      }
                    ]
                  },
                  {
                    "id": "462e7134-8c6e-42cf-bebf-0fb5d2bb165f",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "83daa30a-2106-430e-aa87-6bd1332059b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c23af0ad-3679-4e00-b7c3-6cdd72ac4fc9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "26300532-d6c8-4456-9b90-bc73964e7e39",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "6353ccce-e913-4baf-9d20-5eeeadfa04a6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "77961f75-a5bb-450e-b4cf-422460e6c002",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "350a3a82-af24-4410-a055-f7af4c7c1dd5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "86dae8f6-45cd-4165-846f-93523e298427"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b9ef5294-026b-4752-b8b3-b5489050eecf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "1a912637-4dbc-469b-9ac9-b8013484ee7f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8723a368-74f4-4a5b-b6d0-7708ec4a9962",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "20002041-ffa6-4dcc-a408-1f5456d60629",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0dccaab2-fc93-4244-a22c-124aabea052e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d3b2e0af-f29a-4324-814c-9537e4109d69",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "58f628fa-9662-4560-9eb6-185190801c2b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "12bfdd69-9c85-4ce9-94c5-5ad1580caa31",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c5a6f4be-a273-4568-aee1-5b27c6fad606",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "78b84d19-0f60-4aba-a733-44edc5256536"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e6be3d14-deea-4979-aaf0-3f355d759d17",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "f54c20db-2266-4bcb-a13a-05b35cb6b859"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7734d391-b0c5-48b5-bdd4-f09b63794ad8",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d414391a-4e00-4dcc-ae67-37b78ba5705b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "81d51aab-4271-4b89-9a51-b8aba8a84483"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7d1be42c-12cd-4166-bf6d-e34f1b5e8dba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "69e0a2ce-4de7-4cea-9e16-5a2973bfb846"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6aacdb3c-ff0e-4584-ba77-21055161e3ea",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d65e3780-12c4-4f3d-a6a5-6aaefc1f5f5c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ac1ac7fe-a814-4f7f-af90-6904a2bb0eec"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e9c4d89e-9252-4157-8da5-76cf5b2ba3a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "c323ea9f-4003-4064-99db-fc49a7c2d4cb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bd918dcf-cfb6-4a38-b533-8adcf96e0295",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "79b5e544-e2a4-4b16-8bd0-d637f52a7c6c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "622dc640-9594-45ff-b4e7-f7a5f154a4f9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "219b1ced-dddd-4529-ba05-477ea3a8bbf2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "c1af8f9e-a57f-41f6-baf8-288bde5465a5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "033560b1-3be4-4d3f-a3d1-1fe33db498b3",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fe47f94c-2ebf-419a-8ec4-5876d0535f03",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7ca6cf18-2279-4548-9d4b-58c96bfc3f33"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9e0b8576-7e17-4930-8d03-0417153260f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "76652a9e-d42f-47d1-9773-eb70af636829"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a882bef2-2bf7-4310-ba92-ff7162a3c4ca",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9c43d549-699a-4e46-8cf1-45714a477a03",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d98d2f08-aac3-4865-84ea-1c5206434ead"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b910d768-5a40-4025-98dd-b1b23daf918b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "4763bfc4-188f-4fb0-9f2d-2010dc71a43c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6ed552c0-c20b-42a8-9fba-3044f1ad5d39",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "63c26721-b6f4-408a-8db1-eed2cba32ebe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f618be2e-b8cd-4fde-bf40-fd05e7fcecd9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fa219e25-7224-4480-b2e4-0c774c8ee917",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "8c7620ee-8625-4e66-bcf9-addb3cc4b04b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5ca00c9c-8af9-4667-8c68-a4daea966b4f",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4105089f-baf8-4d1f-bf4f-06903a5bac84",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b2064787-2a0a-46c6-82ad-75b21384942c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed5e0110-ef2e-4e3c-8aab-e9a30d55e049",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "6cb11657-8ff0-42d3-a487-2d0517c8180f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "021857d0-cf83-4395-b65f-6039e990dd42",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4057a350-71de-480f-88a1-9617f6f60cbb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "12711dc3-0cf7-4037-9290-af56cf2f6364"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1a180a28-898c-4ed3-81af-45f155765b3c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "8c80c850-0813-4b38-8b5b-69834e25f970"
                        }
                      }
                    ]
                  },
                  {
                    "id": "18ebeae4-a281-4069-a4f2-69a4ce8a6e6d",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f3dfed99-4733-45c5-a1e3-bcda9632ebd4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fd492728-1b8c-42e9-89ed-019a09c0570d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "89490469-0932-42ff-a87b-d3eff501eadd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "ae6078b6-7dc3-4040-be2a-42cf4498bef3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4c819311-7f08-465f-bd04-1450d7caac53",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a224d01d-d649-4c0c-ba37-5070543f502f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e146569b-ca7a-4f72-9aac-b7a1bc5e0461"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bfab772c-02c1-4481-a4d1-135b3e2d9e17",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "cd530780-6d95-4bfc-b08a-be40c51b489b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "483cf78a-a54f-423c-8dce-40e79d1f4f36",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e6c4fa68-8179-4714-9a0e-289dd8b76374",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2e1f38d9-4bd0-4d16-826e-1741b8d33eeb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0ec69ef0-4e57-4900-9a89-e982dbeb1ed6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "5a47a685-c124-43cd-a7d4-f213793ae49a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "47eb773b-809b-43d8-8b01-fa0830b04e5d",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aada4cee-1015-4c75-bb04-745a94df0f8f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8a6db372-6442-4a94-9f87-ce55761a0bea"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bd075e78-05d6-4bdb-8c47-3e61dddff624",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "a796717a-2ff4-4516-ab58-6b60f381198b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "308f2617-f65a-4e43-96bc-207c4136bcf6",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a647a0ff-b3ca-49bf-b2b0-1611a3b50629",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6b7fa5d0-5014-45bf-bd6e-bc06b023d4fd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "19cbb57b-b72c-4933-9941-cdf47e6f161a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "2a8ba68c-8912-4118-a891-b7606738080e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d3410bdf-40e6-461d-a0b5-8879d5b1e1fe",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "243c0fba-b3c9-4da7-b08b-35d642655ea1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "94536c41-d39c-485b-9333-4e588fb55f2b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2eefb849-2228-4db9-8686-c1a5d6cbc1b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "88a4001f-c9e1-46a5-8aaa-2e7f75aca68e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "757f1e82-6a33-42f2-883c-0b09b4e708df",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d5ad70f4-1f6e-42ab-a70d-5360eb66e17e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "52c625b2-58e7-4898-bd94-22e2dd279087"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4566c08a-3dae-426b-a60d-4bb5689ce314",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "a516be81-266e-4c5e-80b8-b0ff8dc765fa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5c059c93-737c-4f13-9eff-2871cb86833c",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f87c2885-cca8-48bc-a653-752ab02e51a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ddcfa402-b147-478c-855c-13f6dd5c6b1c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4dbc7827-019e-42b6-9654-0a692f48179c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "66f869bb-95b6-4ee3-9e50-71f27864cd85"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e091799c-7eee-4c59-bb2b-8566134316ba",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "afca93b2-7594-4f01-9bc7-16006a37142b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1f0841bb-b196-4d5b-95f9-e4860c9f945d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "78a8283a-9123-4bd7-b298-8e995b4e65b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "dab8883f-0c5d-43c6-96b6-b77d03147db9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d8fa6839-e28d-4776-b9a4-e705bd538691",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "28e4287b-21d1-4b70-a5ea-8692feb522ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ab3082ac-0741-44e2-86a0-394ec8331935"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4a79e7fc-1d23-4311-bee3-f142af0a65c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "92c0dc73-b3d0-456a-973a-4ef395fbd962"
                        }
                      }
                    ]
                  },
                  {
                    "id": "40e2cbb0-e223-4f3d-b5cb-7e0c191e5cfa",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fb4127cf-8275-41a1-b44b-c7743b1b6ddb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "22b6cc8a-67a0-4716-8ac8-6597086eca73"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c0e8b48f-7c82-4a4f-affb-d173b51a1395",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "bc4212eb-3e51-4eb9-b8b5-a0cb20e84bbd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dd73d1e7-7e43-4655-9afc-f77d82559a59",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c605d167-d1a5-4ccb-bac7-19db4696e23a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d4b83387-164c-485b-afc5-b7858cd2f04e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4248702d-d6c5-4c63-96e8-aeae99f01bad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "2eb1cbac-d287-4835-9392-1e708a704aae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2b791862-30a6-4fd1-835f-377b09458c91",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "48783be9-7e77-4387-b36a-1e8a34f01316",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1cef452e-90a7-4631-b878-c5739437af05"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "48542caf-d3c3-4c48-a81d-efcec937a19a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "3b759162-9cee-4bde-aaab-dfaab1e3c7ef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "78c095c4-f7b3-4dac-86dc-25f5e0783023",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5dd4bc73-b798-4153-b3bd-931cd8285f0e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "807cf5d0-d23c-4ce6-89db-150dd761062d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cfcf8fbd-4f1d-4862-b703-73b2610c35b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "c36d0560-0041-48cc-adec-717c730f3587"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5001c264-f218-4697-bf3e-aa3d541eb142",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4133e7f8-b0bf-4c22-ad12-88c7de1fd38c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fc89f9a2-e8d2-4268-958f-06d3fff7156a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "38fdfadd-6930-4fd3-88c1-5adb13f85e34",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "beec7ee0-5216-452e-8c20-31cf635fad7e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c8fc1c20-a758-4ee0-bd56-fbae36ff0b20",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cfa50909-4be3-4445-850a-48d8bd1d4edb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ce5fefbb-e662-46b8-b054-e6508d83531d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0b8d4294-9c22-4494-90f3-cf23596f54c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "33f233fd-b6ba-42ef-aa46-499fec074478"
                        }
                      }
                    ]
                  },
                  {
                    "id": "89893935-a739-43dd-9de6-bb55a8b663be",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "696c6b94-6abb-4ee1-9981-f5584356e980",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3d48e3c7-2cf5-4592-a4d5-a10572e2795a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "107e0062-9b50-49f0-9850-4b4f3fbc888d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "4e2b8623-7845-437b-b744-ece85bbe1616"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d2931df0-4fd3-4271-9b0d-b9d48d4ff95e",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff54feaa-894c-45e4-aa53-5678076f2fe9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c5f6dbf0-e513-4ced-9b6a-96895ea712e1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2a0ed846-b76b-4a0b-b1ff-78aaef4283e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "824370ef-97aa-41bf-a466-af65c9d01a1b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "224684a2-8817-4051-9425-5b2d7cd09aa6",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a41653fc-0f7f-469d-a846-088428fc6c1d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d518b49d-bd2c-41d6-9259-60f72610b61d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "123e2592-2bb1-4da2-b4b0-c684408fa325",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "39969fa8-e9d2-4e83-8613-92150cbd34a6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "94214089-bdc9-41aa-b744-da091e2699ad",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f7b4c162-8cf3-44d7-8103-c08edcc0e241",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "335dc2b3-fc22-42e0-812c-73eafd0299c7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fa861863-5e9c-4c4b-af4e-076ae2141507",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "b0257eff-433e-40f3-8968-4e88cc69e241"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1252c238-435c-4962-96f4-ee32c5130119",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "48616cbc-04b6-4bdd-9ddf-7f7b08373d21",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4507f58c-b250-4c3f-ac9d-2506a509d84b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c97c5987-f477-4de9-a30b-65f6f96c579c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "83b8fb70-6153-464b-90cc-acf72b1b60bc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "81eabb0a-f714-42be-8cc9-374b2d101860",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eaf768cc-7a3e-4280-86a6-5a0040cebba3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1950e54c-c13b-4840-92ec-14dd51db3bca"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c1516efb-6aa0-479d-bbbf-93e217bd3dcb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "d391dc06-e670-4898-bf3f-a19ec0d6f862"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7600df21-e44c-47d7-b7c6-a2ab3bc535a1",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4cb6695d-02dc-4acb-af5e-2cae0f3114b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2c84213f-4f26-4a3e-b2fb-8fba128765b2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "31853563-e254-48dd-9082-dd89ece9a157",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "91a34cd1-d321-4ba4-8ee5-38f697425b9d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "76804cb9-9c15-4ff7-aca9-25b6197eeb17",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9f112436-157d-499e-82cf-718155d53e0c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2dfbe747-c374-4161-a341-c955bd2e3543"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eb17bf0b-22fa-4b64-bb3b-4cf2f756ae5b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "9eb72245-4d52-4054-b589-e92fc76e89d7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5f0fda39-796d-4a99-8052-75e01ad4cd12",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b362171a-47de-4796-b092-a05edda46692",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5675b27c-6554-4ce5-83d3-4e17e6db8c31"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "31f620a7-9e10-40f3-8e9c-127c9fb2d2e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "de09c762-4f35-4d33-a95e-b3c9d61567d0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7b24c10f-6fff-4f1b-9f6e-deb4a20fd87c",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d8706f0d-9502-424d-8391-9e518e877b96",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c285d908-61be-4d44-8905-c79d283ac72c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6f06d378-7386-401d-a954-7f12c40c7970",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "0f8be4e1-319c-4198-b688-8743ed8a5d59"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f0f70fbe-ee19-4dae-b9b2-b729abd0d187",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7142e414-5bfe-4d4e-9e73-1e4415c3ce30",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "873f4fa1-398d-4fd9-98bf-a9a367f4e559"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5babc198-40e0-45b6-9947-89c9d594abe4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "629b4131-5839-4e1c-b278-acbc3dcaca87"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4563fc45-dd82-4b8e-92e2-010c62fd5568",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2716388a-e7ec-4cb1-b433-35d9d851fe3d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eebd3c93-bd22-4bc4-97e1-50e9d991bb73"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "40c083e3-9f86-4c91-9804-fa10a03e1bb1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "426c2ac9-57a8-463f-8ded-1c6f878213e9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4b1f6154-cdf1-4dd3-abdc-41164f11d95a",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5fe6bbda-b009-4e86-87be-6172db157127",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ce31424c-b2f6-4d30-85e6-9ba6821ce6e8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "17337f7d-f4d2-4672-97c1-da5055d984bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "e40d7907-3d36-4e24-b372-97a90c9fb577"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3992ca31-5143-4dc2-b70a-67623a2d73ed",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f98ad19e-d502-4222-92c6-2cf6acad04af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d3be98c5-df6e-4a46-abd2-856c9606ad50"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e5911ac9-c3b1-47ba-8a0f-0e31ad6be761",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "883aea1a-0c29-4860-96c9-6bdfa093d26a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4378a43c-28c6-4d54-8cf3-413e9b1e2e7d",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bc511c9f-0ec1-466e-ab7c-792cc8effce5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7f586f3a-4df0-4f92-863d-f296f602585a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "be6488db-1da2-4dd9-8cd2-36d1cd75a9d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "60d71d65-636c-4a9d-92e7-0ccf81f58fae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8db4e37b-7e3d-4728-ab81-8a4d951d2c00",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a8b36a61-42a9-459c-bb3e-94ad222ad8de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "67aa4477-bf06-4ed4-b25f-604e1acb25f5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc384ada-bdf0-4dbb-9ea3-112df8a6dcbf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "0c4f052b-31f1-4eb8-8657-2aafba5463e7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5ddd27cc-05db-41cd-93f6-a2f9cca28236",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "273a2587-5a44-4ce5-87ce-c011bb6a522a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3e1dc90e-5fa0-49a9-9297-558998dd436d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "532a748e-da3e-4056-98d8-b2a17509e99c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "9a1d9bac-8203-4426-8e42-a0e0e9256d29"
                        }
                      }
                    ]
                  },
                  {
                    "id": "22f23b50-9a37-4e48-8139-5537189e8e1d",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5604a476-5b6b-4fc9-90c8-bf2fef0c8727",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b0fd0035-ad0c-41fe-857e-1259da433aa1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7b128690-8db1-43c7-b830-2749eafea668",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "152a70bc-e41d-4118-8a04-2359833b3e16"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0f294b3b-4f71-4ab6-a523-7b580dab1aeb",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "78827527-e607-461f-b22b-14a2036338f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ebd13da0-55d3-43bf-92ba-88ae1b4797d3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5edf89ca-436f-4460-bab1-f34fc4ead075",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "33d12dc9-3f4a-4545-8bcb-e8bf0743fbb8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7fa313dd-e430-4e9e-98be-9c4a429c6715",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6a0c218e-be90-419f-966d-72fd923b18c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0d70dfe0-3a84-4a86-9029-9ad07ac35b30"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "26d44a46-42f8-40c2-a466-62ac4fee1e64",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "bee4264c-626c-4349-bfe2-0bf026058699"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a7f6b324-3198-4812-8af0-2e7710eba8a5",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cb5e3634-d1cb-4ba6-8757-5dd62b574665",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "84454290-f9a2-444c-bb36-e6b01aed1ee9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "533cf24a-9c60-4bf4-a8f6-bd1bc16dac98",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "9a1f749c-86b6-4c55-abf7-2e6a7394fcb8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "df835da9-8172-44f3-a2fe-8c6b92934fed",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1a9c9610-6a4b-4e48-a2a0-06d9bf61bf15",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1afcd4f8-1467-4ec9-bd38-d9ac0aa1d343"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "70377178-2762-4d07-b42a-0296e4ccd532",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "7b4055fc-346e-4d17-8888-fdc1746743b0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4534d0f9-91f7-4937-837a-0494374078ef",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c6d484ab-49d2-4c41-a421-33fcd85b428c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0556fe50-499b-4bd8-8851-f8e5ab1b63f4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2ad97952-d17b-4be2-894a-41a965c2984d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "d5af004a-28d0-476b-9be6-467be14b9baa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4f9e3740-6d7b-4a96-b3e6-8713d1543247",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "80a37852-a091-4318-9098-87f45ea58ea8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3fc60006-a0e5-471d-b0a5-30365694510a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "21292f62-f4a9-40a4-bb7a-0c4391d2dcf5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "b3c4da6f-9fc7-41e2-93fa-a2726f8e9a34"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ed0cc42a-2597-43ce-bbb6-9c2e834d03c1",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4a074b51-cfe8-4038-bf44-b697f8cdbd67",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d1a136ed-5c42-48a1-be5c-fec0df67fcc9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "78e4cfab-b7ba-473a-9067-3a5103343b37",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "d201f4e8-fab0-4478-8bd7-0ee106e4a175"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b45e5fa9-f781-40c0-ac1c-cb1a41f0fffa",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ac8d0f00-2f8a-453f-9c0b-b6f3e1e13c41",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9df7a7ff-61d7-4b4b-89ce-e16874c1ddb9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "68bc4184-751c-42ce-908e-5d71f4ddb0dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "9865aa68-1ec8-43ce-96aa-a9a0535120d2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "71b018e0-13c0-4aa6-bf7f-70be594c2c68",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "36e26489-6e74-4b17-8e00-27bbfd936f44",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "511e6a7e-ca85-4ec9-afe5-4bf79e3b79d1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fb46cb36-cbbc-40a3-8252-00a4bc258d6b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "253326ef-4906-4f89-abbc-5dfd9cba9bc6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c82bf3ff-66af-4ed3-8b53-051fa6a8e789",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "24d878c8-76dd-4dbf-92ba-1f8741b32dee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fcd68283-c677-4d38-b667-c3fb48a43676"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "12db9888-1bc2-462b-9e6c-0d3883832229",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "0c8f64c4-31a3-4559-86aa-0a0b17a8f69d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "11e5701b-9cc4-478f-9824-ee277e156521",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "24292afa-3b8b-4adb-94e7-4b13175da0f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "03d2b373-d146-48b0-8608-f4acbf5dfe0b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "06695cf9-ce7b-4f2b-a6b5-14d80153b21c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "ecaca612-55d4-4e60-a116-c1bf1b12757f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0c9e48b1-6a1c-4419-85a7-b5db2193b650",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6997a0f9-2a14-4186-a5e8-74c88031073d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cee91d06-54b3-4e67-a1a3-8d20a276d845"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "22b94f90-bf0f-417f-b94e-0a15495b6288",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "990c100e-d6a5-4f25-841a-87561be7b240"
                        }
                      }
                    ]
                  },
                  {
                    "id": "35b3723a-9951-406d-9a32-f2ae791b7b5c",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bd82fb9b-1f79-4daa-a9a9-fe5b904a718e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cb2a3c5c-4cb2-442f-9817-a60bbccd123d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "45cc57a6-597d-4126-8198-674c59c3983a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "1513e2aa-2744-4dcb-9598-8d6d0ffbff0e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8db5e66d-f71a-4148-bd6c-01334ca205df",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c6ef211f-85ac-4cc3-aabc-1df190e8932c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "77d6bbe6-5bdf-4008-b4bd-83b4e1800752"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7d7de111-f379-4af2-aa70-efe581736d7b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "ef8926f6-d2ef-4850-b9eb-29088e53c438"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "6d3ecc59-55a2-4916-8f2a-ac3c0073b5c6",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "4fba9412-d0e6-4ae3-9a60-0f89199dab82",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0a8d0d7e-94b8-4cc2-8a2f-f86bfe325968",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "9aeb953d-76c1-46ee-b814-fd6846b61a7e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ebe5aa3b-c02c-4be1-9f1c-8884a5744326",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "0677ed23-d7c9-4af8-ada6-2a762bbe8533"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "1b99bed1-250b-409e-a3b6-fb9dab3d6991",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "63a6bc17-30d1-4ed2-ab57-3dec72a1eb66"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "4c534432-a5c1-43fb-b663-2a80e87bfccf",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e604abdf-f31f-4662-9243-4720740b1b21"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "c78a2e43-74e2-45dd-9920-46d86a56abaf",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "2e7f9e53-dca2-4746-a4b0-f337738a0578"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "3f4c2f19-430f-4053-9a15-13bd2c5f3130",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "bc86b7d8-47f5-4949-803a-73f52248fda7"
                }
              }
            ]
          },
          {
            "id": "eef47651-be4e-4196-b352-182fd5aa2740",
            "name": "Positive Testing",
            "item": [
              {
                "id": "177295d7-096c-444f-8f5c-42040f620922",
                "name": "Duplicate Keys",
                "item": [
                  {
                    "id": "42ac05a1-7500-415a-9681-c50f09dab463",
                    "name": "credentials_issue.credential.issuer:dup",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"credential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"issuer\": \"{{issuer}}-ignored\",\n        \"issuer\": \"{{issuer}}\",\n        \"issuanceDate\": \"{{issuanceDate}}\",\n        \"credentialSubject\": {\"foo\": \"bar\"}\n    },\n    \"options\": {\n        \"type\": \"Ed25519Signature2018\"\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "text"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "912bb677-81ed-4911-9482-af21bd9783db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 201\", function () {",
                            " pm.response.to.have.status(201);",
                            "});",
                            "",
                            "pm.test(\"response issuer matches request credential.issuer\", function() {",
                            " const { issuer } = pm.response.json().verifiableCredential;",
                            " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "93e3b2d4-cf75-415b-bc43-a5d07556b636"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "32a2ac1a-f2d0-4f20-a0e2-1dbe3115fb97",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9b314042-39b2-4d93-8a2b-72ace24b0385"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "958e28e6-5d9d-40f5-aefd-943880ff5e41",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "b58bb4c0-bd73-49af-92cd-7fa2e771bb9f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "3d27e344-45f6-4e03-9927-840d340f6b78"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "1332db74-365f-4562-a289-863259e2b91e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "b5819154-24e3-4b35-8195-9b389999cab9"
                    }
                  }
                ]
              },
              {
                "id": "e328af8a-efcf-4dff-9d30-bd50f219080c",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "69c565bd-334e-406e-a3fd-db7b50ccea7c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "46bfbd4b-28c3-4f7c-8bdb-c52f132e7840"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "03ede1f1-a43e-4540-9984-2017ffb40057",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "f0d357bb-2692-4c0a-a296-514984ea4800"
                    }
                  }
                ]
              },
              {
                "id": "767a70ea-d569-4670-8ebf-9e58b6dd501b",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "00c8f2a7-fddc-43aa-a4e2-e41179928c62",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "79c530f1-52a4-42e2-9c08-36f3f9bdcf08"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "d125a54b-114d-4f86-867a-333f3b18e55e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "c262156b-7100-43b3-b2a1-767e5282b96d"
                    }
                  }
                ]
              },
              {
                "id": "e192372f-5261-47c2-bb0a-2778f9354842",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "9e137db4-9f43-44a1-99ac-3e4aa62a9ed8",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "fa44d1d7-a4c6-4d2f-a035-e324828e49d6"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "64a239d4-19f7-4276-92d0-e26ff329612e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "a43ce4d5-7c8a-45b2-a20a-cf70b9e249b7"
                    }
                  }
                ]
              },
              {
                "id": "e353be4e-a623-4c68-9ab3-78ffa880eb81",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "3d1f6734-62e7-4c91-868e-fed2dd7d6e6e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "d06cfd1e-ce87-460d-8258-7740550bca77"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "886a13b6-de9a-4e25-aa74-9c2503856ee1",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "9320d139-42d0-4383-a704-0ca263fe435b"
                    }
                  }
                ]
              },
              {
                "id": "3254a965-7f13-460a-8628-e290e9891534",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "84721a63-b9a8-459d-8dcf-3aca61acc28a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "44e7b0e9-d293-465b-8aa6-1aabffb41a6a"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "f03667f5-43cc-490a-ae1e-62713c7d120f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "7140d199-d515-4bf5-be17-e07ac695318f"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "eec6dfd8-8498-40a7-845e-2c26d75cbd09",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "f641e204-0a8e-4398-8445-f3bce3e105b7"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "0cd2e7b6-75ee-49a2-9eb8-94bfd4705d7e",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "34e1affb-9694-4590-8b21-ff8c6097926c"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "074c5152-01be-40ea-9a23-9bd0333e2911",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "4781691f-1ece-4499-b127-71f2d5748fc0"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "a91ac380-144e-4d4e-91fb-42a018facb77",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "74f81034-f90a-4e06-861c-ede8b245a315"
            }
          }
        ]
      },
      {
        "id": "91c58277-8520-42b6-be0d-e5d21686d4f3",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "3e949b57-b35c-4069-89c3-dfa6de455144",
            "name": "Negative Testing",
            "item": [
              {
                "id": "9cc36292-f892-46dc-80ce-c84bab84c72b",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "81d2d79b-67cb-4c49-b2fb-ad3943de2738",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e6e996af-42e8-4a31-8fa4-286985c103ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8f6992c2-eb1b-4e05-a028-5a3eac747878"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1441d37a-8d2f-4e06-836a-6ce086ce43b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "8c2280bb-0202-4758-97fd-40ab59bec3e3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "254466eb-12bc-4b9d-9236-3d6f28e77dac",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a53757bc-58dd-479f-b407-ee74c4ce7840",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4d26f042-0204-4585-8d1c-28681ec35f1b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b651de14-52ef-4528-af4b-246fc159e451",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "42aa2c60-ff5e-457f-9a95-c3e113e0d336"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7baf4655-24cd-4f6a-9efa-be41b670e346",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "23be9f70-a3f0-4b7e-9394-b394fe091efd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d0446343-0934-4334-823d-e5f3d1552297"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "454cca0c-35a4-4493-9e08-6c0f1a86b4da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "35f9db9d-d269-45a0-895b-92c2ab59e15c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "643a87a6-b150-4439-8c5f-ec744d0c98a1",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e8787177-2eb9-49ae-811a-064c1a86d7b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "172ad9c5-15f1-4de8-bf0a-2e36c35c328a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "82dc5ac2-49bc-4774-ae24-7d4bf58cb850",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "30cb40db-2608-498f-b564-46d38f6bf5a8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9e33010f-0946-40c5-a3a4-690677138fbd",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c726ea85-0b24-4331-9424-29fbc0c8fdd0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fa3083f2-a1bd-4e5a-a4fb-c4d218f2b440"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "93275907-e4a1-42a3-9565-0e3cedadd314",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "c3ac68bf-8545-44a9-a797-15e4cbae6b31"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cb2aca86-1ba1-45a1-93d0-f21292cd3eed",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6895fc41-ea16-46d3-9db4-cf2867c3e878",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "38889070-7ef5-4daf-88a3-982bfd8ac56b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f4f4d48e-6b6c-4931-8377-92986625331b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "347e36b1-f4ff-43ea-a00b-0d260f53df82"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7558b7c5-aba3-4d14-abb7-235597f4a739",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b7cc38a6-5381-45ec-ac8d-a49c2204c7f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e93b5844-fef5-4ece-b0da-e87a824759f7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e2bbdb34-40f0-478c-8d13-de3dc3894c1b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "b9e1bfe7-76b4-4818-a9ee-d90da6af98f5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "120aa3f1-27c0-4abe-95ab-0bca1edec595",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8e9de76a-ec40-4a6e-8760-0a19dee48563",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2090e2a5-c5e5-4751-ba50-d6b908bafd1e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "15bc4f83-4f9f-46e6-8fbe-c3483432d476",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "101f82fe-f4ce-4f42-b06d-07cfa22c963a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "607f1233-17cd-4532-8381-4df7fee28309",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9e3c125e-ce89-43b6-9587-496bd54e012a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "db23c514-20e1-47e9-baf3-dd7b1e84e0e0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "57855716-a9aa-4ba5-8642-38387893825d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "08c85595-d152-4227-808e-d7d43f5a099a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f23b623e-14f6-4f03-bf5a-8a658776ae80",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5193e7ab-02b9-446e-b133-af1c5d5fdae6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "475708a5-e602-46ab-88c9-83118d1c4d2c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d50fe6ec-583c-4082-a46c-492519b60219",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "2fb80a67-2353-415f-ada4-81fb689efad0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ce9b3cf6-424b-4f2d-9b3a-6a8bc2d81080",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "27e41e9c-f23b-49f0-8b37-75bb74fe33c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a73cf7c5-2db1-45cd-a55f-25da13075c03"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ade91a54-390c-4d07-8ebc-d9284a3fd36a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialStatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "c3828530-255f-4bdd-b7f7-27b46a64805d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "043713b3-1317-49d0-af45-cf95144d17a5",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3a2acdbd-658e-4fe2-94bf-e241a5522997",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c5f1b9b4-f465-486c-8563-60fbb77c1560"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bbffd45f-f735-428d-b6e0-13a0398f7e6f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialStatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "6c47288e-9103-4652-bfa4-8b60546b39e5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c81cd7df-7661-4041-bc76-bc441d91379e",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f7f58544-3c16-44b3-a7df-6a33a0e56089",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "19f51f1a-fb77-4cde-8d87-61c9eadd5414"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d029f32f-a302-4a01-bdbe-9d44ebffbc4e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialStatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "86017700-82aa-433c-8380-bb4271c168b3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "37fd95a6-d8e3-47ae-91d5-dfbc37a6807d",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "14288e45-16a7-4074-a939-179f00c7682a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c64cad48-633c-45b7-b805-06dfde2d6a7a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6bb53d63-b11a-4d82-9ed1-a1a9f6932ce7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialStatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "fa0b68f1-b1a7-4328-b24e-f8c6fa241a38"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6f2309a4-9c45-4572-b73b-03807f0dc9d9",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "be641d52-41e1-43eb-9e46-53dc7e3a9e14",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "86b86de2-be1b-484b-add3-fddf00d07bc4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7a55d1d6-a409-4a2c-bf85-c4adc190786b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialStatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "7cc15fee-108a-411c-8906-24c9174590a0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9989665c-2527-41b1-9e0c-9259f2d5e15b",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b3d51b96-0de0-49f9-9868-bf12a6c20e75",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "98aa89a1-3b2a-4ba7-bc7e-e8839e7c6ad8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "93ddc1f1-b2f9-4ba3-a5ca-3dc171b1f2c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialStatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "7a532c28-3f9f-4b2a-9440-0e71ac1e5afa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8f67dc6a-c9c9-457f-b044-59c3b364cb63",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6c26861a-a9f1-46ec-9c1e-b0a0204cd6ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "91e18336-750b-4b7f-9f92-c5baf11c19ab"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2c09b3dc-a11f-433a-a5d6-67c16451b787",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialStatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "899da820-906c-4b73-84b7-fb76254eb6e8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "821c7c0b-ab2e-42b5-8068-7ec619b778c5",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2b789465-a27b-4900-a831-ea57e853ae72",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f6275219-2888-4d1e-a0e3-dcedad2bf5ec"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8deba978-32d5-48ac-95d4-a74befb87234",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialStatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "a42c6566-612a-4d98-b0c0-ab4240eaeae0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4e98249f-5eb6-48c5-a35f-ffb784eb91d9",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8a3aaa47-dd92-4517-97ac-6ce6c2a00734",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "552def0d-2bb2-4ebf-b9f2-8f2dec67668f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e50b7bc2-df7a-41da-ae45-aa1b9d488b67",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialStatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8f4c6d3c-b9b4-49a3-819b-f96030d72015"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f2f73fe5-255c-4d30-a369-fe0dcfc28915",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9bd30ea4-b4db-46da-9c99-23d72a0ae402",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "64bd4ec5-7f8e-4e6d-8359-867af01c6493"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0b96f6a1-481a-4661-82f2-9a79f9f57f9d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "836a5fd7-7e2b-46b3-a22f-24987d4c4825"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0f411975-2aa4-46bf-b0b6-926c3d07a9a9",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0207b6d5-1161-48af-a743-5aff59e0ca0e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "31573a89-5f41-4cbe-9045-b5d784a2bf8a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f79ddbea-b387-43f4-9508-5e5c8519694d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d948bcb5-01aa-4e13-a928-e4a234dd5fb3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1f79a18e-63f1-40ff-b732-172b1bf1cb1a",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "86c50712-6a83-490a-9bae-d85331222cf7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "215b93d3-19da-49a1-b7ef-a6322c6e5196"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f077815b-7082-43fa-aa66-9cda139d3fb3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "cb72dc21-462c-45c0-ad67-458886432747"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3fed1196-46a1-4743-82c1-4e432ce22a61",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4a59aa82-936d-498e-83b1-79159b314ce7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ee698bf8-2b91-402a-b6a9-4e9ebcfcbb22"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "72f244b1-70e3-4728-9f7a-08dd23b297f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "89385842-3c07-44af-9a33-5df8e64ce282"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4c67e4fe-487e-4bd3-97cd-3f24bde530ed",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e4b2abd9-e023-4770-803f-201200bec3de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9bc52864-9ed4-49ef-84bf-25c9a5abe9bc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c5af12de-601f-4f6a-b38f-cd9113f41811",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e641ed2b-3071-4042-bf54-372e9113210f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5bca6b79-74b5-4837-9488-57d0333d42c8",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "27b93fac-dd10-4abb-8e33-384a9e03155d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2794f016-a89d-40df-9312-720b86ac2164"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1551ca4d-3a6b-4bb1-8883-a3b9d9dd1679",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e216d57c-5ba8-4e27-8795-5a3a481a4437"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8336c2af-d047-4bfc-ab75-0f1993c5cfca",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "25d5a9de-6f20-4764-abd3-d1eede2bb406",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bc04cf56-72fb-4b52-9b3e-b84268863803"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3b635292-8629-4d44-b9cc-6481664d68d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "85febeb4-1006-4059-8524-8796d7624637"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e0d870c8-f0f4-4b18-8e28-538e8192ea28",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "617ca768-cc80-42c1-84a5-679250c16e46",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5644d3be-cd6d-4d24-b400-9c2b45bfc0b3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2103e34d-aebf-4323-a6d7-26cc75967726",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "73b66117-9dd4-430d-8cfb-4d65f2307a2f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fc74041b-4e33-443f-8c77-9894eda4ad11",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ab395b8b-036b-4e50-a4b7-0a944ed0318c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2fcd3205-ad1a-4ce8-a524-53896eb4c572"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6f525bea-e744-4a06-b4b0-86c4b55d234d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "db79602d-4264-442f-80b2-7de470b3e595"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3228eb83-42e2-4b82-89f0-13cfee3449be",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ba10ca8d-a2ed-4f3b-85eb-0bed3d72363a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b45b055b-7064-4430-a9ff-3463772d4044"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "85797ea3-99ac-41bb-bbac-ce7c4ab9a720",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ffced034-5fea-443d-abdf-3b0b7af0c95f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9184b7fa-0962-4323-b8b3-60b1e6254d38",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3465770b-13c4-45f5-9f5b-fe2645fc60fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "72a34f32-fce7-4e7b-968f-983cd8dc3108"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "22344e11-b1a0-410e-9b77-5cc679486e30",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2bdaeaa8-bc7f-4c96-a970-2e066b39ebda"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a93ff4cb-d992-491c-9b75-3532fe69e0d2",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "74ed7a81-761e-4b78-bfea-32b06c1819a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "35ab8128-676e-49fe-9480-250bde322967"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a600cdce-7ed7-41a2-b11f-448e741f0e67",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f1eb3aa3-a448-47a7-9687-676358ffd0fc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b2e97191-ef88-4235-aa26-8f7a56090293",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b334d9c7-d8ac-4bb8-9386-d1eb4b319203",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f9cf7919-f4aa-4b0a-9eb4-d0c163384250"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d3d536c9-cc66-4e4c-8f53-337550808371",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4f61bd7c-0e87-4de2-a3d8-0f1a712ea536"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "62a2e411-38d0-4bab-8051-741cec77389d",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "f1c48543-c99c-4a5e-af44-31c4b842aa7c",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "820fc33c-d34e-4284-ac61-d55373c8e22c",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "b7bada49-5c35-4aac-91f4-8aa77d996c14"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "96987a98-8b80-4942-9e4c-382c88bb4fd8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "42f297c0-c608-4351-b248-dfb1421ebb7e"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "60a9ada4-2bd2-401e-a814-79353119d241",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "280373cb-69f8-468e-95ab-0311474b604a"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "e9665fa2-ff1a-4fd5-87a2-23cede9bb1da",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "1e3de179-7ab4-4f75-ad7a-ce26493d211d"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "33cec9e6-1644-4067-a9c5-835e52ea9d93",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "e964f6b6-d73f-42b8-b8a9-bb30391394d1"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "cacfd28c-afdd-4a27-bbbb-1a1d56c60ab7",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "fe40eca5-b89d-4d69-9c83-05cd55e71a17"
            }
          }
        ]
      },
      {
        "id": "99335562-ed71-4903-a3de-7052b861b699",
        "name": "Credentials - Update Status (StatusList2021)",
        "item": [
          {
            "id": "b24bcbbb-ec20-4196-a1e3-a17c538ebf7f",
            "name": "Negative Testing",
            "item": [
              {
                "id": "a7559ff4-f9ea-4c3d-aea1-f19b499ac63f",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "88da9188-2561-402c-954a-da8cf8c5e97b",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dc79134a-b739-42d3-a3e1-90c793d5e16d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e38ca6c5-429c-454c-960f-1a8f7bf4bd3d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bac929a7-2edd-4779-9240-e47ede353d67",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "5b15dd52-0a82-48a2-bc35-df3b13ec589a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f3798f97-f702-4427-8f37-2eec8f68142a",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3ab6a5f2-6e51-4f24-9709-e58c4f29bc68",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f1540d96-a337-4dd4-86b3-2a814981d20c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7cc6109c-33bf-4106-aaca-93fb6f0798ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "0aa6b273-6175-43b5-b5c2-2ecb99f98b3b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9cf855bd-e3da-4774-83d2-e4bdeffc6605",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2c4b3f0a-6297-47c7-8a2f-62bf784c3fd9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "56ef63c4-a741-4e80-abe4-d7348e2912ce"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8402d70d-be5d-44fc-a673-0b1bfe13d18f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "748c9f87-356d-4f51-a5a1-e8860b46876f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "23d8e02b-5453-45d6-8048-4ee833b87e40",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0b137eda-72c3-4415-b85a-d4e49e4f94b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eb21567a-b4d6-4016-a778-6dc69eb582b7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "07a94be9-a4b3-4e37-84e5-d7f6eb87e91d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "16b9508c-f956-4b46-9fe7-dd546fdfe38d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "433b5aae-10fb-449e-afc9-39f2f4a5d24f",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e4d4e838-4847-4651-a174-7e874192ffa8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3c80e3db-3b5c-4e09-b80b-f50f7e588c74"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "950a2726-ea31-4a6a-94fc-8dba6a1e4eb7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "c4e1b183-6dee-4f7d-a55b-9536f563dbce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "503a8d03-328e-487a-98af-ad2a3415ca1b",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "96dd05cb-4eca-4260-a2d3-bd8f552ad281",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f4200ad2-cd8d-44e4-9204-725db791f90a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cf183123-0808-4906-8867-96a9b93c77a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "7b7568ae-05dc-4917-bca2-e9285b894cfe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3a77f55a-8614-4c4a-9dec-7ae22f216ea9",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ba6e69e4-affc-4011-b3e9-0b889cecf712",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "44989540-9cc1-4463-9996-47bb0c025f02"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1f58d1b4-9596-4b9d-bfe6-e99c0ba65d98",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "6929adeb-6397-4d11-b8f0-33829c7f9fd7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "109cdcd9-3e83-46cc-a9d4-b21c922ad01d",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "df89237b-550a-4909-90d3-aa1b707488b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ba1880cc-4789-4ccf-aa81-c2e06ae86a1f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2970da72-d7f7-4bfb-a23a-10a70e6385aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "2f9b3036-5721-4b86-8b68-f22e6d73993c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0afc59f1-dbc9-4f87-afd6-ef4743d6d68b",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bb315c5c-b5f1-4e40-9c11-ab97e4696102",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "037915d1-32c9-42f1-be05-a335bf43a215"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4cd3a191-0673-4c0d-af8b-b15b9be11235",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "26860825-4c3a-4924-990e-36593e085ba3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c4434f40-5cf5-4356-8cf1-f9e104729120",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2c084b36-dd13-4797-84d1-3afd677d0ff3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cf84a766-0dd4-4bd8-bb9e-99b0fbabc8f2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8aee8f09-0aeb-4e70-b72f-0920f6b33037",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "81912ffa-9320-4c76-b374-c0b35e87535d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "19952dfe-b482-41aa-806e-a7c28d78fed2",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4164a3d9-e0de-4dd2-b1c5-547e5a01de32",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c80aaffd-9132-403a-a249-5f5c2f2bcfb0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b03bb465-918b-471e-be5d-1f93f5248310",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialStatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "b15c315e-8288-4d19-964f-867ea5b0e186"
                        }
                      }
                    ]
                  },
                  {
                    "id": "19d58f75-7d87-4eb3-b9f7-a4cc2d2b15ff",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2f2dd85b-569c-444f-a0b9-e8d72d65bbe1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e1d7f6b6-3091-47d9-ad5a-9ecef5ab4905"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fee1cdca-1728-4e4a-91ef-0b8dba9fcf93",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "8611ba27-5529-40a4-8d7a-d01fe3c5c395"
                        }
                      }
                    ]
                  },
                  {
                    "id": "83ae9590-9a13-4686-8e9d-4b294edbdd05",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7f3dade3-6c17-4f3e-95dc-1e693b8a5357",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "74559f8f-ef98-45f1-9569-7ede5d93e512"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1e12fb8b-8178-47f0-8342-84e79f6978dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialStatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "9dcbb245-d9ae-4ab6-b1b9-e9345952e32b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "14c3fe52-a149-4249-9b14-967c3f4b121f",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "25ecdc77-34a3-4bcb-b28c-2cde6c370f82",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a7654a6b-eaa7-4f39-b5af-03e0ee59cfa1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "71ac772d-cf89-4937-b417-94b94fa7a54f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialStatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "5c142075-2979-4446-aec5-1ec8ce8ca4f2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f6feadca-fbdb-4a1a-af63-bfec947265b6",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "60c35aa8-4698-4a47-9357-9d7c2e2337bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8b7c492b-3767-46ee-a71c-bef3bca30694"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d5c7e3fc-5a0b-42a0-bc01-d30c9ed96bdc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialStatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "5e3c2e14-9ef2-4bbc-9ca3-8d1dbcdb8c94"
                        }
                      }
                    ]
                  },
                  {
                    "id": "41ed2f3e-6c9d-4aef-95a2-7e8f75f1ce5e",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "51093818-ccdd-4ba9-b1d1-584a1cf311ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8ef3f7cf-ad6d-4542-a932-22fb34c37508"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d6b218e1-62fa-4188-bd8e-2302fa3339ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialStatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "0d557072-f109-447a-8556-a02e419b02f1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5428978d-1e09-4607-830e-7939f4ec43b5",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8d23542c-20b2-4deb-944e-a86f04fa4151",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3bbaad03-6d5d-447e-ba89-ed5d897c5e5e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "587fe613-833e-405b-b505-5fe30a301121",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialStatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "9c64bbb9-4d92-46c6-924b-fc0fb1cf61e5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "55700a81-9cfb-490d-8c75-8c5e7e6f9b0d",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4f0d7508-3e95-4ba5-b417-3eaeefaa9ef8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a3290cdc-b168-4fb5-8bac-87d8ad194773"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b66d78ee-ab12-47f5-9981-95823114a90b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "f991b19f-9f01-43a5-b9be-ec3069c9944d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8de70480-0501-40f7-ac61-2c9e0d556b8f",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "85b6039a-d8e2-4398-9b60-ced43a837980",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b79f96c6-5526-4ec6-a921-440a146920c5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e448fc57-f7c9-409f-a8a4-ae2141a78a55",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialStatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "53de8fc7-ef1a-45f4-8d34-299576a0b944"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e1d23922-3b95-46a6-bc4b-d76a69072623",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "918754f9-5781-4410-a5ce-ea5238c5c86a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cab235f5-cb40-4ae2-85c1-6bc34763ba71"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dde9ebe4-d2f1-4611-9cfc-7ffc4f5d10d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "87b82ccf-bed4-4f1e-a595-4c014a2a5241"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7870e31f-c8b1-47bb-abce-f726eb94db67",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "64ffc02c-3830-4645-859e-a320bf39c4e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7b3b2a38-aad5-4203-a992-5eea30b8226d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8d92b867-7644-4c00-8b57-f95dd2b8dc9b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7d71fac0-e287-41b5-8396-d33f9a3a1467"
                        }
                      }
                    ]
                  },
                  {
                    "id": "58434975-681f-470f-8451-dc3ccf09af19",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f6a8b583-f154-4fb5-94b8-4218df48c24a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2b13cff2-9090-43a1-8a3e-1e3bee57d3fa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1f9d07c1-0ae8-4522-aa7c-a27e7780f80b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7244c3df-87d1-4c50-b40a-d0e1a57eaba0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "33c48b75-0f8f-4f7c-82cd-c7a6d9354e8c",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "679f3506-44df-4052-8788-97675c88b719",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eb3a7574-1a90-44db-a911-896af204cedb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "92f6dc95-244a-4727-b5a0-49c5381875bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f5334be4-1696-4e0c-921c-0dac49775ad4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f7028d73-7015-42bf-acc4-749dec2162b9",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "30eb3297-f4ad-434e-b0c2-0fdc729989dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a939f492-e7ac-46ee-9cda-9cdc6b5c73d1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "00ad223c-78a1-4530-bffb-c9b7cae2066a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7fbc62ff-2c3c-4320-8248-1ccd1be3f192"
                        }
                      }
                    ]
                  },
                  {
                    "id": "70c9ad8c-351d-448e-b1b3-88c9acac7a51",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "38c3cb2e-6642-457b-8dc6-3f4abcfcf9b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bdb5effb-f2d5-410c-ad41-98acb4d73685"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c3b8d586-5c09-41f9-a7d5-1d6dfa9475a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0c4a2b30-9c68-4f56-a075-7a6a5f3ce5cd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2ff951f0-d14d-4426-85a2-420f215cae55",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bfc05f76-c1fb-4eec-b9e4-fbcb52dc20cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "92e8341b-2907-41ae-a826-62a9607a84ce"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8768ad3b-8570-493d-8abd-53012a256a1d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "87091ab5-7546-4314-bdb2-a0a92901dc92"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0ee3ec3a-3f47-478b-963b-951adc3b637e",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7fdf5de9-988c-4587-86cc-8a136167202f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "074669f1-1e4e-4075-9c68-e7faf66c7920"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f23534d4-f789-47c4-9f5c-4aa9e922f65e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d544c119-d79a-4937-b00f-7629a5be563f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0a615e6f-99ce-43ae-b15b-48c3df05d30a",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "498016f7-9a82-42e6-aaba-f85bdb1fe384",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0f5361da-60a5-429e-a655-99ac877551d0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8aac227a-d15a-4a68-b5ba-2db2ed304e69",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "cf28b3fb-878b-449b-a522-7eefd89b0b76"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5d726ade-9bc0-4cae-b96e-23bbe1aabb56",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bd695136-43c5-4a26-966d-8e842ca0f1e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "124361cc-8b54-43db-87d7-f0e641099ddb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "21fa4588-4b74-41e0-a5cd-9c5a757881f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6b685d2a-1766-417a-97d6-a7d2be40e38e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f0fa793e-ee9c-4978-8d62-7dce019a0a83",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4ad5c750-5037-43ed-b280-db7575c8ef85",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ad7c2173-8883-4295-973f-9fd931324c03"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "05245aab-27e4-484a-9ebf-290517a02055",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6687ac01-bd01-445a-b791-8a677001d093"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8389d4a8-6412-4809-9863-e197ae3eeeeb",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "76f09488-8ede-45d5-98d4-cea56d815e6a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dd606e85-f871-4f13-917c-e3df46c8f98f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bb78c5ac-ebb5-4f2d-bb62-5f54dca9eb23",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "15831d1b-6207-4c68-b773-82811c2d5815"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c616ac18-4d94-48e9-93b6-4f64b69f0d53",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3d043232-6c07-49a7-9ec6-4f8c652ac937",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2287f136-090a-4fad-b14d-8ab632be8e3d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cab847ca-d48a-4206-98a7-e5a52dc098e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "cabc5b39-cdf0-4784-991a-18ab310e623e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "af61f159-e969-4d2d-854e-8773c4a991a9",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e7c1a13-6f97-4357-a4d0-8b1ef809197d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c18ad56f-77e1-402a-a09a-f15b94e46e0c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "34d9f3bc-7b81-410f-8fb6-55605107a4cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6e5e1f72-3bc4-404a-a9b6-e5a985b8da83"
                        }
                      }
                    ]
                  },
                  {
                    "id": "abffa489-b486-4e6f-bff9-55506caf140c",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a3ac1e53-01ba-4037-89b4-efa3268fa114",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "591e48e0-2eef-4c38-9370-4e8bff0cf9d4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1160e278-85d2-4ae1-85c8-e256cee14437",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "36cd5e6c-3ed3-42a7-bf2f-27ddb6dce79f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "691635c0-88dc-4e1b-a07a-69ca64338a35",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3768faca-3c17-49bb-86a2-d861e4d0d7cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6224fdaf-fabc-4108-af57-a696bc33df7c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5134e3e0-6492-4bee-9723-bdb1b5bcc372",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4433373c-00b8-43f8-9669-c34a478da39b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e19865cc-7074-4a7e-ac26-ff3e5f6739c2",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7961afa2-398d-4f1b-a099-41f96d8361d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6db8d1cc-aecf-4666-9db6-f446b8a7b572"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d05c64ac-3b5f-45a4-aaf6-9cf21d0d42f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "47a34bb9-809b-43f9-9b51-b94802479f8d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9766a07f-9092-4525-9420-4a8550b242ee",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4487fc85-e5a9-49db-8c51-924ca095fe83",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7f43561a-7a20-4806-899c-acfda06af7e5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cbdacbbb-bf2f-4061-a880-9e2fe148daae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "57aa9219-b75d-498b-ad34-b39edf1a04cb"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "f97e8b71-d5fd-43b3-a2bb-8470882ad855",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "e4de4d26-84c8-4254-b1b3-55fee4d092bf",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f8f13fe3-8bb2-4ad7-a598-b12eb2f34909",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "1561f455-0fd5-462c-bd88-96191165ce37"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "17c1c8df-1a00-4445-b8a0-8cbd79a66527",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "b5806a74-b1fc-43ca-9230-f04566ef7c5e"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "ead5d7e9-6b86-4d92-9c0d-03b62394209a",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "73c6f8ee-1a4d-4442-b2b9-b70727e19a9d"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "e0c259f2-b2f6-45de-b5cf-f57cd23eea2d",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "aad988b9-d485-4e42-883e-fc054ef38502"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "3d66a24f-3136-49eb-85cf-edb99e371038",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "ab8be227-d4b7-413e-8146-13754ecea987"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "2f634090-f1be-4131-a4f4-bff6e7f8218e",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "07d07ece-922c-4438-b947-16641be93f47"
            }
          }
        ]
      },
      {
        "id": "1e8f5604-4eab-4cb6-ae14-d2d6093c8d37",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "7b303af1-d5a1-43bf-9b42-3a5cb3cf5acc",
            "name": "Negative Testing",
            "item": [
              {
                "id": "274bb520-b824-43d1-b9fe-42c86357535a",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "a767d249-93a3-4311-9ea6-6e0457f56dad",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bb9340d9-6d61-4b6a-a877-d6747a4c005d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f5512ab8-0081-4d88-8a47-04e916fa99b4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c64d437a-df50-4579-9076-c5e32ac56821",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5159928f-6463-494e-af07-2a1f1b978e3b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "433b6f89-f687-42f3-9f06-10d56694ec8c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0b5edc06-3e68-45e7-a696-2e07c51377aa",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f42126c3-daec-4a88-9c0f-2b1ce853196e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7d544024-1046-4704-ab1e-eb1828710245"
                        }
                      }
                    ]
                  },
                  {
                    "id": "759a38f5-ad56-48dc-9259-b2ba213d80a3",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "457b3631-7368-4828-932a-d4cf836ca4cf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "54a9b512-ff92-4d58-9943-564f3ca284d4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6d4b074a-dc15-4204-9159-858012549676",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0fc0f1c0-8e6a-478e-8fad-cb8e27161c53",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d1c05339-8b02-418f-bfa9-aa502123d7b6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c73c46e0-6ebb-4a13-a68d-d47798e21f4e",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a5b89925-c6ab-47c1-a812-576ee45467df",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c64d118c-f8bc-47cc-825a-2c3720b9fa12"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7191b5c3-ef3e-4ca8-b43d-1362373caf0f",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "072e2679-f746-4de6-b4d9-4a742c6a955d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b311fea0-de75-4e12-a154-44faf54c60a4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "91057541-65b0-4cee-93df-f58099588a25",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "78dae64a-11a5-4a9d-965d-6adbd618caec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "50449718-ff79-4614-9f40-e580d5a6ddc1",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "744da9a3-1ecb-41a4-a594-3fa122454b0a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "59eef861-b6f8-4137-8030-1096879edd90"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5eccaa2a-f7f9-4ab1-b149-252d43a4400d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6d6872c1-f695-47e2-ab8e-52d58762f4c9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "07d2c19b-f212-471b-923f-b5e912e013ee",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "424d91be-8fbe-4274-823f-ef0b3069b395",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "eb73a41c-9dc4-4fc1-9f55-e8138f7e8958"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "72ded5cd-5a00-46e5-8946-70a1df181598",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cf2a0982-e4a6-4871-be06-fd84cc4bf857"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4f58c4cf-ec2e-44be-a44a-e13409254d5c",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6641d12c-03ac-4bd6-a7aa-964f7a37bcd0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "436192b1-1d45-4ba8-9b88-0f8031b8ad78"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "96dc3371-9998-428b-af54-37f06fcba4e1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bf0b52ff-fde2-4dfe-b4bb-9d62f801416b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "159346a7-6657-49c9-ad5d-2f365a372e51",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "da1a10ac-8182-44a5-9848-17819bd9e939",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ba1f429e-048e-498e-a1e8-3b18d7193ee7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "22cedf2a-034d-47a7-ba41-842c4594b2ce",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2abd9c77-cfe9-422a-a07a-b21cfeac6a64"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a45181b3-baa7-4927-960f-4f2c898db6fd",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eed3cfcc-4069-427e-96c4-3f9b4ae1f208",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "498efc42-bf99-46b7-8b85-3ec6c10efa22"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f108264b-edc9-4f27-b334-b23ec89c7a08",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5c918263-3a2e-45d5-aa5a-09b7bf335046"
                        }
                      }
                    ]
                  },
                  {
                    "id": "499a4555-4f34-4beb-a8d8-e91d49b612a6",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "835202bb-92f9-4b0d-b92a-f1fed2941af8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9213152c-fa3b-4dc6-ac11-4b3c8fcc4a99"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dde1d623-8358-455c-b4ed-cf746c1db22e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c9b9bd77-317b-4b7c-8813-1211c2f1614d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c0177302-226b-426d-89b0-4b0503029d6d",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8bc820d8-5b32-4be2-9629-520afe1ca16b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "55538768-1fbb-499c-aa92-2f3f93ceb587"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c12bc2fe-1b0e-49a3-8317-aeda183a16a5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aa3a0dd8-c826-464a-a2d9-fbf7e712e369"
                        }
                      }
                    ]
                  },
                  {
                    "id": "24021121-819a-49a9-b375-a253634fe5aa",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2d018bcd-d88c-4a8c-8628-e2b04f4e9ae7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "010d4c56-6165-4994-8ebf-eb0e14f8c09a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ced0b519-62c7-4cab-92dd-0b858b063c35",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "35044e39-5302-44c9-a595-31043147d3a5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4148f300-8dfb-409e-a839-4cbb03817861",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "15dcacf4-853a-41c7-a020-6e8e869a9a65",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d48b91e6-d43f-4411-b98c-653d868b1cb0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b93f2291-9f58-41d8-b980-c084a0cc84f4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4ad65fa7-b99a-4fd6-9ef6-ef5bfb32312e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0ecfc338-51bb-4744-9e6d-ba2843c513b0",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6e9279e8-3464-43af-8e0d-71d4168a5ebd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "86d80dfe-8835-497f-8e1d-ce36ac1f6120"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5b0c2c20-da29-41ee-a464-525221bd86f3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9350f992-d017-429d-b885-18bbade1206c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fa9287a6-b337-4622-976e-5ac048433040",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5f1df690-6777-4e27-be7e-5c76c79e267a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8d777f2e-599a-4916-aeb2-dd2e23a62440"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c64c5cec-5f35-411f-9951-f7586bbed7b0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3873a99b-1766-434b-8bc2-43b98e366da9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d399b97b-fcd3-4465-b4c7-6f624acc5209",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "afef0630-7fdc-4dfc-84a2-1f8fd38b0a29",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "efa53171-d788-488c-909a-511347773ef6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5fc0a56f-b9fe-4e1e-a36c-549b5b2a5162",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ccb8afe4-9db5-4bc1-9c44-aecb5c23908c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cd68378f-757a-4fa5-8703-232ed31cc54c",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e19e60d9-c76a-4e44-a9d7-2004eecfc3f8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "38b8f39c-5e70-458a-bb88-b54a76ce3210"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "847c6230-0942-46c3-be09-8e84a13411a7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d7437770-013b-4c00-83c4-c681702288d9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "80e46824-e066-4683-89d6-a2a70f2a880c",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7f154a8d-28b3-4ac0-8740-318bac54f12a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "855c660a-a8cf-49ed-b2fa-4306c4e8365c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "14b9c857-fed0-4873-88ce-ed9429830ec5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2aab6e39-0a71-4fa4-8026-61ab7c80724d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "21c352c3-2340-49b7-b679-5b94f91a41bb",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "95be393e-7598-4b63-ae19-cdcc0b13d57c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ac0a3a5a-be90-4206-973d-8e515845327e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "813a1a24-b162-4edd-9537-d0a218b28704",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3b9d1198-b5b0-48d5-8b9a-11f3fd60fa23"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6c2f1767-ac88-4a6d-a7c9-defa57447ecf",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e7234a4e-caf4-4376-b332-cc4c087c9c0e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "60dc32dc-1a22-416e-8395-55fbe5c8a847"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9cbc9fa3-8120-435e-b8c0-c7e10f753855",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7a7702fb-1852-4840-8c5b-59f50d48294a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "58a3c4e3-0055-4ec5-8ffe-d86b74969809",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "852bf433-8a25-472b-8095-f454e525c26e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bfa763de-e01b-40c9-b8a6-03c535ed91d1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c0db366c-58b5-42c7-b83b-c7599dd69b2c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "612a7bba-6dbd-4534-ab70-0a08fb1f2927"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c2c0f97a-1359-4d6f-ad88-53605628f4cc",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d1370f86-475f-4e6b-8a94-878f99d3d330",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cb99538a-245d-48c3-9017-5b53410ac402"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "58e51969-c968-4e66-a1cf-335856de4f26",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dead9ea7-60f0-4470-b208-74341c2720fb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "58ddf13e-bcb5-4bd5-9a9f-0c5129029c15",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2a0bb843-cbad-49e7-bdf1-32603db94140",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3db98dd6-30c4-4b8c-83eb-e3ddcb762a05"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "800176c5-b584-473a-a6f8-aea47933b238",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5044175c-929d-4fd7-a898-707fecef6809"
                        }
                      }
                    ]
                  },
                  {
                    "id": "91b952a3-b01e-4b66-b21e-c015c4fbd9ac",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0ca953b2-12b2-4f4a-94a4-508519d61f0a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0810b14e-0183-47aa-961b-9ac09f4902c7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fa349bae-b123-4273-88da-d35c972e1227",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6ad5f259-7c69-43bf-af21-d851642fd096"
                        }
                      }
                    ]
                  },
                  {
                    "id": "41196a59-f98c-4796-b5bd-79641f264a30",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e4a87c45-948c-4e62-92e1-c5273b7796f5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "10368d3b-6340-446c-bd86-5a4924d94efc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c21bbdaf-acb7-4871-aa81-fe8c36037640",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4b28b1c0-3f83-456f-84f4-527f10a02d2d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2f3c43b0-bee0-4dcb-b16e-d600d1b6aee7",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0abbb36f-30db-44b1-88bd-a3f9f0ef4651",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bfe1b18a-3f61-4ba4-b107-1c5ceafc9ba6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8827474e-a4d9-411f-97ed-18042c5bb65f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2fffaa46-cef4-4e0e-84e6-7c4d5d44ced0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e6ce7ea4-601f-4882-9960-00a8bb5c049e",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5f88ff8c-a97a-471e-8709-0081d64e4793",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "76d7af23-f8af-48f4-9324-490c07550e03"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "89abe87c-f6ef-45cf-b5cc-745ea142625c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "576ef0db-674d-4a63-90d5-6ff821b538ff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "44fb4c3e-8d3b-44b6-86ff-ff2e210f2578",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d566d68d-c7a6-4919-9152-695ca00e586a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f755bcc5-9756-454a-bc94-f21f2c5304b9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "355baebe-baf1-4453-bd69-ea1843b5500d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8346ca1f-d0c1-4d1d-817f-0d6f440a08c3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "67732b19-7b61-4c5e-80de-046434c3e460",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1f4837e2-8f8c-480d-a8cc-7ba8519b12ee",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8add2a36-486a-4384-82ad-b7908dc7956c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "67a7f72a-327e-4ef7-a962-fa9caefe02ee",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1fe87958-5788-4196-9e35-dc6a07470f36"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b5298b01-08ea-4f8e-a0da-e050ff914858",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dd78964d-8076-473f-b344-34e1b10a108e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "96483b8a-0d00-4232-a31b-19c9924b0dc2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6661dbba-aea3-4dae-ab30-fd6075331626",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cb9a7763-67ea-4c60-a06b-4a89a7580819"
                        }
                      }
                    ]
                  },
                  {
                    "id": "14fcd18b-aeea-45b3-83a5-93220602a974",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "68a460fd-72a0-4754-a92b-183e7ec9e5dc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "56fa3570-c464-4527-8b31-3fb573eaff24"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4d6f5cda-10ea-42ba-9337-aee30bd869c0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "502cf599-7cc5-46b1-bb25-7f6c9d0cfd36"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6dc198bd-b487-4119-a263-6ab508831c0f",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b8808034-4000-43a2-93a7-fdd1ff592c3b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "75df5d3f-c5fc-4def-b1d0-a68572abb20f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "720bd9b0-9370-472e-94e8-7fae9e1c9e6f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "10775c99-abe3-42c1-808c-8e9bcdec92d5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b522e284-f943-44a7-a3f9-41689c587d3c",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9a3015a3-f62b-4b89-b685-0ae0a6cc091d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "933feaf6-9161-4f5a-bdef-f93897bbac38"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b39ff749-d422-436d-8021-047c7ff71f00",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d3ee2337-1657-48a5-b488-ff509d1e6396"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1bea682e-5778-4024-8cd5-0f4d27a3b836",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e89d9dd4-1dce-4449-96e5-afb9ebe1bbe7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "80f82ca3-9529-4b41-b1bd-7dddf6c5ec2f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2e7b3a54-f4bb-4e43-95c8-30e2c52ee378",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "20565d99-42ef-4533-89ab-62ec00ff74b4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a4613d0f-577d-4bb8-974b-59ecbf9ae62b",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0f7ac03b-f47d-414c-961a-b068dcce0cff",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "831e0f45-6d23-495b-b054-81f1fccc4200"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b5c1faee-f773-4ead-a28f-4197ad140a68",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d9cfd9d8-c5ad-4e3c-a5a6-cca3eff04d5a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c0a55bd7-b9e9-4c61-a2f3-44068c6489c9",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "974ca80e-185f-4e88-9ea2-b15f80f0725e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d9225045-c795-4000-a445-30551229d11b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3f4095c8-b0a0-4696-991e-8f37b7f73359",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7343e0d9-f23e-4586-9fa5-5932ca557a5b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "99c2ca54-0c98-4e45-a49a-605563e150d6",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d46e4d59-7c2f-42f3-bb4a-536f19be5bab",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b117d1aa-b9fe-4099-8f1c-b3a79f586ef0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3be07240-8013-4a48-8374-fb52dcd44ebb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "09c9b2cc-aa17-4289-ab11-c80f8f31e9c9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c0c808e2-a3e5-44dd-bc96-8d8be0a265a1",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6d8d1117-aa75-4aa7-a507-fc8a93ab8a12",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "11d5205b-acaf-4e1f-b43c-8d7dfff1fb65"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f0143db1-fe2a-4a75-84ce-4a0d7140ec59",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "95b8cc3f-b938-4ef9-a274-90c6734bf8f4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0464a08b-1508-4c83-bded-fb2c124dec17",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d6f074ad-a5a9-4f22-b4a1-c507450b0ccb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c5864486-3de8-4c6e-a5e9-224a4aafacde"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a752dca2-99fe-450a-b4c1-39882b0297eb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cd97d015-fc48-49ea-90c1-96a8e67fc43f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1c4eef47-01e8-44fb-9ed7-55ce35253f06",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4633b71f-08be-4f89-8aac-1e37ee2f39c1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fded9b4c-ce36-4646-9c71-ce919d041e03"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "09870187-6dc6-4172-9bc5-03c5f1791b32",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7a0da953-992e-4a22-9c27-c4b1075d236c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b1de4f4e-29d0-4264-9ab7-44346a73769c",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f6992c75-1db2-41d0-8d17-9743233e7db9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1406cd08-f9df-4dc6-a2ba-249f7cca7ff1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7d533b22-06cb-43a6-a110-1edcdd83fc43",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "98cf3ec6-4bbc-4bd6-9fa2-fb906e0d009c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7954d830-1b46-4a9f-8a9d-87468c0634fa",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "628e3c3c-fe65-4fe7-a65a-021f60d5e79c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "499970e7-8dc3-4662-8750-af04e5cef969"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3d642039-916e-4311-87db-8e722863a67f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ed9db575-1fd4-4921-9547-5c3bab71349f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b0816656-318e-4a9f-b89e-b7614d65358c",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "86fa258a-e014-4b38-a4ae-734f3332a15c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "85f32d12-ba4c-4108-b702-14955ed021b7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3c0ae4b4-3a7e-485c-8dd1-8d7e0961a6ed",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a2c322b5-7677-4ed4-a9a5-d0b2dfb76411"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7c69b151-431d-4a0b-97ca-bc0157b1930d",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b1a2a3fb-1550-497e-a7c9-e855d108acc6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6fbd11ae-8542-48fa-800a-a638ff372765"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bdc338d6-5012-4bdf-a856-254c52b94275",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ce4cecaf-4db4-4502-a587-5c0c965edaed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "499794bf-688a-4c13-83bf-8e2eac43293b",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "88b21da7-bf4e-4d47-9a29-c20bec61e8db",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9b769613-0082-4472-b5f3-8d66aaaf479f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "eb443f4e-ff44-4609-bc32-2fee39dc4b3a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9a8ac53c-1c8c-4e61-9f11-6b461780c196"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6d44eadc-f4a8-4642-bac7-2a4aaee48283",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fdf966fd-43da-490f-8cd5-59aeecb2e193",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4f1624d0-9fdb-4441-8272-b1f2cd3c7096"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "777290af-822c-4e4a-9975-9e67b8b8d683",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "532cdf62-9007-4eaa-94c6-fd09e15abb02"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f077a7b4-e1fe-47b8-9593-85730f2cbc69",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e4335285-7675-42e6-9d6e-f9c86b8b1b85",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ffc798b0-24e8-45c7-b7d2-ace7a5c35db0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "89fe7b5a-ccfd-4d92-b591-2bb86afd18bc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "efb36fe3-c488-4281-b3af-aaf38d3034a3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "71b129a1-3399-4150-8fe6-6876b5d27c98",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9ea3e924-d216-4c6c-b0b8-11f12cd3747e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5bf891fc-4199-4666-bc9c-04069915fabb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f44db64e-adc7-474e-ac3f-56f2dba754f8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b476e658-6ec6-47b6-9f26-9223d4f9f7b0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3a09284f-8324-4db5-88a7-a3b0c790ece1",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "353986f0-5110-4c97-8d70-2443b828e6c8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2c6c68a6-239d-4c8a-ad7f-7549190cce44"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f1c2a994-646f-4953-adc4-21b5e8810128",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "82724288-d96c-47d1-bc65-c7b91bb7fcf6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "15887300-5cbe-43ab-ad95-86c1782b9a37",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3fb27760-a6cd-4161-a03f-f8aac7b432a6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "276183ac-1b59-44f0-8a11-4cfadfc7c91f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "702d3567-af7d-4823-a141-3971781ccad3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "67f5ac49-ac98-4c15-a688-ece97688426a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "39122f8b-442e-4d74-85c9-dbc698af3259",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1cd1a1d6-9fb8-41db-bbda-c55d3301f195",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "83034ca5-89cd-4edb-9bea-10546c1bb6bf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d80aa514-3afd-46a5-8276-7073bb5aa2e3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "df3d8218-5125-4864-aaa2-ffb22ecab76c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7090d387-70e2-4bb5-9bae-8afcb0974d7b",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2716ccfc-0a59-41a0-a406-1f9ce19361ee",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ec182c53-4dd6-47eb-98fb-e8394ca3ef93"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "99ffd9b3-8c4d-41cc-a7b0-6e64a9574722",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a6bd2286-85b1-48ad-85da-dd4c6fa3661b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fdaa2722-05ce-495f-be2a-53b7454535f9",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "37a141c4-ccdf-4d84-babe-0d4af1bcec70",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a014606e-89db-4a98-8375-128869dad7ce"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "684c77c8-7de8-4f41-b2c5-6f051f90a34a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9f5bcd93-18b1-43ed-86ac-14ad9f71559a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5b766e84-c669-425a-afe1-551d7ae07677",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2665aeac-b137-4c1e-b135-55057bef3d52",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "58ba139b-7d73-4c72-a07b-27441884f9bb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c712e572-0d0e-4033-b0ab-26874b1e263a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e493d182-cfcb-4c5c-b391-9d8010cc7e7f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0614f429-4e69-4511-a655-fbff90dd9131",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5148bfc7-5daa-48f0-9db8-bea507713a92",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0aa4689d-45cb-43fb-8773-19e97463c58f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf139ef3-b271-4818-91c1-192c648c1446",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7bc95a9b-50ac-436f-aa56-4c952c539f64"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3ee2d312-14f1-4260-bfc3-0b87b53edb92",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cc13dacf-0c27-4d4c-bd1d-8903f6299f96",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "594f3066-299c-40cf-81ec-e2d2f0c26e1f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "91c1cb87-c666-4fee-98d1-b1d62107bcd1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2b57c530-9992-4c97-88ad-94f548f179d7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7dc5e3ef-65eb-49b5-a434-a1ac8fee4eeb",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "edaa66a2-4bbb-4182-b9bb-059c7dd8d63f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "21434a6b-770a-4164-abde-bf5e18b414b2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f0b5dd07-24b4-469a-a160-f6a205e88f44",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "101b05ee-aa36-4754-8a2b-9444eca88e79"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a84f2ce5-f871-47a7-81cf-291bf3d86b5d",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "af26c940-cd1a-4cb7-bb5d-eeb89590cc73",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1160c099-074d-4aeb-8720-1afd95f5bdb7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9556e292-ed51-4665-a08f-aa4c14ad2f71",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "80d912e1-ba33-4a01-ac55-6814404dd031"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7adee719-3225-44ab-9a12-27337574f4ee",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "245e02fd-98ba-4e5d-bf03-7c85c9f1edc0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0280453c-d8aa-4aab-acfb-10fa4e20934d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6c591c4d-7e35-4c72-98f1-21037be7d146",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "64fccc8c-5298-45de-957e-f91934639727"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ddbbf67a-d391-4153-a84f-60a48620934c",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "90f050d4-0bef-4174-ada2-64bf281d9e3f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d840e489-19c3-4181-b6d0-239a904f1083"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c81f1c6c-8e71-4194-b391-00f3413463fb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cfe568c9-1190-420c-805a-a64ea3b12c18"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dd9dc031-1a9a-435b-9764-d95e16641089",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5150a1f2-aba6-41cc-93fa-ae01f40f8c2f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d7ec7b1a-107e-45d9-9dde-fddaf20a0a92"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "660684e5-da5d-4b80-b5e6-b0f5f33a03bb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ba7808ee-cf0c-40c4-a265-a71cf02c3de0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f66bb9e5-dd41-486c-8600-213106842ea0",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0efa1783-2d7d-4648-a591-701de56042c1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "81610ca2-5835-4a6c-ac7b-6f43664c0e5f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "24b555c0-f272-4d21-afeb-46412c4f0682",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "52c6e8bd-634e-4b6a-a219-1a9666acbc11"
                        }
                      }
                    ]
                  },
                  {
                    "id": "64ac90fc-bd88-404b-b7ce-2b262e6c0ee2",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc80157f-20f4-40cf-9c07-c450f567902e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2982ca9f-eb1b-49d8-83ca-ed40aaccbcd3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "61eb6a57-0b9a-492f-af31-2f206218fbc8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c4247a50-7ef6-415c-8d62-4a2f4274a9be"
                        }
                      }
                    ]
                  },
                  {
                    "id": "506cce40-31f8-4413-9acf-a707aeb8486f",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6adee0e4-54d9-48df-af01-6e1d792bb5f6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7a840510-cf37-435d-8185-34a0da56bfbe"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "404891a5-e2ed-4924-8d5e-d6e30df2f00e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7d2bbc35-69e1-4871-8732-8ee69259013e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "54797fc8-9fc4-43e1-831f-4bbe68277277",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "24f3977e-6ad5-48c6-893b-fc6a2c831689",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "854b4063-c20a-4e65-9a79-185071debe96"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4882c51f-1991-40cb-a49c-4089901bd47a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5cdfc967-cdb1-4bfa-b4f0-75e687045d4d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "32a81088-cc10-4fcd-8166-af9360bddf53",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "39889f61-a1d2-4f18-89a7-b16e6011e536",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1ad7a987-a9a6-49f7-b745-0aca274767db"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fbb64778-90b4-459b-b335-b611f9fb79ab",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9914d2da-78e7-4ad9-9a94-9094a8534a91"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7a711664-bcd5-4c62-8f9c-bfd4bd68ba2c",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "38a1702b-24e2-4a2a-828e-1fc65f1cd15e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5c4ec105-efdc-4e51-b811-286b86427626"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ab380bd0-dfde-432c-975d-e7002976dfed",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e818e208-376e-4975-99c8-79c99faa7baf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "40479b85-0a54-4e1e-a47a-6a7789047573",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "67a41ab9-192b-4009-9ad3-270570ffe3fb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "979c9df0-a0df-4d0b-a522-9c8cecb7d6d0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b956a79c-8e9a-4585-b043-9e2f86fbcc4d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dfe0e8a8-3a2f-4be6-9214-f56fa5b9ad6a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bd4a9255-8019-463e-8fa7-07d4b3d6f4df",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4dbd2614-fbac-4654-927a-3bbf33878bf1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "da6e9560-4dbf-4239-81ad-46ae2c922ab8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3ae4e5ff-a2f0-4416-830c-813e859adc51",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fd8fa83e-e401-4f1b-8611-9b65df7b5712"
                        }
                      }
                    ]
                  },
                  {
                    "id": "faf22f83-b3ce-445c-815c-dc3bb63d68df",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0ab7aa26-f115-458f-9598-6d34b8771c47",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c2c3448e-bd4a-420b-8e0c-5cf3f8956544"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3d5b50c6-20b6-42c6-be74-80212dff7686",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "098aab05-036e-4c59-9c43-065b795cfd41"
                        }
                      }
                    ]
                  },
                  {
                    "id": "52a9893e-5460-4031-b72e-34c8cb4dd616",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cdb7d4e4-4e17-4c33-a2ca-0ea4fee113fa",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d6c660d6-795a-48c3-b52a-c856aaeb46dc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9a9742e0-68ec-4479-bb6a-53481044f97b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "43dc5269-94c9-4b62-8769-716fc21c4f6f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "81723678-e74b-4357-afb1-e64cbe8205f3",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7bc70eb5-c281-420c-9626-af4939251138",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "491f6ee5-0a24-447f-936b-9cf3311b212a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c93857ea-efae-446c-ab44-d304be2aaa14",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a3a6cf86-fa4d-421c-9f9e-3373141a6886"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ddf87ccf-efe3-4197-bdfb-5e6b21cb3ef2",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1df0429f-b344-4794-af3a-0a36e1310a35",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "daff6db7-4897-4d04-8dab-ed6600118aaf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "93867fd1-9ee4-4e29-bd68-1ee44bf24c7e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2b2e36b8-aafb-4d6f-bc94-fea7d2445caa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "51a0c365-97dc-4684-b568-3aab6b9d21f3",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d0ee336c-7080-48d1-befa-336b49653118",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fa277db6-6655-4f27-966a-1ce97d8f6380"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dd496d61-cf47-4d51-90e0-12ea6142ba86",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "85f6ba80-0ca9-4aba-9f37-8941ceb5fe45"
                        }
                      }
                    ]
                  },
                  {
                    "id": "47e9f98c-a6c9-4ed8-967f-c98e69d1fa45",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8eed3be0-cabe-4f07-a461-2277c71b431f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "41f05a17-fdc6-4959-a5d2-a5abd10cb32c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1229d85c-66c1-4dd5-9b64-d811e1093984",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ff0da459-62b0-4ac3-88b0-9bec7c398baf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d01f03f6-402c-4cad-9fbf-25d4464bf233",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "34d7782c-48a6-4014-91b9-c6927c405f55",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7cbbd717-bfb4-4c11-88c2-35d8ffe59617"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "39d54a9b-36ee-458d-9f99-0396a27f6d52",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8b16de27-3d29-4e9c-abe7-d1a658c02e9f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4f30e624-65f3-40a7-adcc-38c86f9160c0",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9dce2b5f-26d9-4bf7-b4b4-7f72151ee778",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "48acb850-47e8-4abd-a233-11256b2e7afd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cef914f2-48fa-46b2-9fb5-741dc5b82c26",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c7b02cd8-0d3d-48aa-b52b-3467d7701c91"
                        }
                      }
                    ]
                  },
                  {
                    "id": "067959b9-6d1a-4b5b-851c-2583e07e6a64",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "77170efd-a258-46b6-80b7-8d27feeb468b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e2f3d15e-80f6-4723-9c3e-1cd2340899df"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fdaa3376-aef9-48bc-8573-c32fb413cbd1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b4b44836-4a37-4aa2-afa1-6778f62ddec6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "696b05d2-05f2-402f-84d0-a72258e8e79c",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e5bd01b2-e38c-4894-856c-4ca29791f17c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8f1e6297-533f-4ae0-96d4-0d32971126cb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ab712466-e8c6-4074-a359-30b39ea2050b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "055c3590-70a2-42b8-93c0-6fde2e886ec3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "40a4535e-672c-4150-894b-d6dd81a74577",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4ed5f03a-e85d-4291-8bde-8b2ac236aaa2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bf6400de-fcee-4938-bfd6-80396dd421d7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e051ac03-4042-4072-9379-a3c750be1c0e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b17ae8f0-15ca-476d-b163-ace05f00dd1e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0edc99b4-79ad-4c17-b6bc-75b1804b0db4",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "479bf397-df90-4367-8fa8-86c953b17fe7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4b489034-9015-4375-860f-c5d7abc750bc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "06142a4f-80e3-4ac5-ab55-0fb3f290fb87",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "29a9c4eb-6ee6-4f49-882d-c13ccb1b3390"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e65bc1a0-29a5-49c1-b6f9-690a604697cb",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "64792822-9c65-46f8-8171-b0ff6ab6c79b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2460c255-4c36-4319-be52-df8c58f15327"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f385a9be-eb9d-47e5-bf30-1d799aaeb2ce",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1eb5b65a-bc53-48d1-b506-5b8eadc51a57"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7a4adfe1-2f0f-4934-8760-9c03fae70878",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "736d0a10-93c0-4ad8-aeb5-5cb0f7565942",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "be4c6c1f-cad6-4c2b-ba69-b86f3dd25496"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a1f49970-b582-41fb-bc38-1e47eb56b4fc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f08fd7f4-a09d-441c-910d-6eb64e3d98be"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9542d844-0b3c-4c51-835a-fbd0326cf3fe",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2a46d677-6bf2-4f53-ab06-ebdde1e42794",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2779c7bd-8aa8-41df-bea9-e2ca9ca6fbb2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1305120a-5db7-4699-a999-baf9c2766e85",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fa577267-d3d8-49ed-853b-73bfc0cd4642"
                        }
                      }
                    ]
                  },
                  {
                    "id": "be153127-05c6-4ab9-8392-16563154e6b6",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0053c1ec-eae0-4cf2-883c-e7560fa3e23d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "19912a2f-e255-4044-9256-b5f150d15fce"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5dd3f34f-e454-4235-86fb-7791d1947adf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7eb71f74-6d4b-42e8-a963-6f8b74cc4f95"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5feb92a0-4728-418a-b423-aacee53be2ce",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "16a0b406-c5e3-4d8b-9af4-8c0c0e10f9e8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "719f95a7-03e5-4676-8b09-e8bc3dab6bb3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "335c0c5a-919b-4fc6-b4d3-df1ba7e583c0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4177a724-c513-45ac-9297-9a97c294756d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f7c4bbd4-7266-4a37-8286-250182606a3b",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a082e981-f7ff-41bc-bb60-3db8ff213248",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c23ed70d-cb67-4f66-aa77-053c115109a9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1fc1d567-6c52-44eb-bca0-499de38172ad",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3e6f8103-f2a0-4fab-9bce-706bff8db74d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f434b6e2-5f2c-42b7-8c57-447c6b1b8caa",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "74224272-ddd9-4fca-9e90-f0b31328d592",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "dd060cfa-c441-4cb6-a33a-97870ef4e090"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c4d4edc7-6225-4940-a4eb-2a65e9896dbb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "53c33a91-6048-4c3c-ba64-e2f292e57583"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b26a4da8-a585-4f1a-b4a3-583ddb13071a",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0bb7afee-7777-432c-8596-17c85619f3dd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "95554fc8-8e70-4a7e-ba48-3fec9914881e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a6bb23f4-73d7-4b6e-afc3-2407b7ab9088",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9b4680bc-5734-4c4d-9e01-da354a23f63f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2cd8d0b6-1f9c-403a-9c44-e23b47cbbab3",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b593ee1e-0834-4dae-9a26-559f3370f577",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "86f68a27-07c8-4fe1-bad6-7a2ea7ccf17b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "53fe6878-2448-46fb-9808-17771a17e6e6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "23490ac6-9220-4a87-b271-eb08ed74097d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6d9907a6-8232-4cd8-9bd6-10b4af432973",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "176bf831-744d-4a26-9feb-921bc1943251",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e29dfbbe-591e-443b-b0a7-766cbf218f54"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "46c041a5-75ed-46d5-8843-a705746dce0b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dc87d5d1-8c3c-49fd-8d06-ebc197764ad5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "af590042-cd6e-4975-a2e6-d539bb1a22a4",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5c19f793-0dad-4507-9ee0-e06e287c4232",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8b5daf40-288e-4277-988c-7e98ae770c2f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "76d452c5-97d7-4778-8df5-5c039e84bcd0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8fc94331-c121-4be2-a6d2-73a1236d71bc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "91e6edf4-82e1-4d35-bbe7-92cfc479c250",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a5070f5a-3669-4a7a-9b7c-3c6ab87529da",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4ae7019b-6beb-44fa-bf94-90cf0ef6a960"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e0283665-43e2-446b-bccd-d987dc580291",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5675cf43-eb95-4084-aa5f-a393ecba87a0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "35612d34-2dbf-402a-a784-8228d7922531",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3bec1d31-e2ca-4dcb-bdf4-ce54c9c6df3a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cccc4b53-f0fc-4a71-8cae-3f2b803f2d16"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e5bd0bfa-3ba2-4aa5-a2d0-282dc097fbb1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8a4e15a0-2403-413c-93f9-51c4f2cfcfbd"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "003679d7-c557-4d3c-aaff-f76f8232c2d6",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "acf1f504-1b52-4a6b-bf63-3bc64f0aac87"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "1023c825-b04e-48d1-903a-aecbac96bbfa",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "b9f6e75a-2a18-48d8-9328-113e711d113b"
                    }
                  }
                ]
              },
              {
                "id": "bd67516e-f926-4ff5-bdfc-f9324496e1a1",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "1527b666-a982-48d3-9264-d4fab0d5102e",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9965b0eb-1793-4018-8e53-048908b23434",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "a80cd2cf-7d00-4b32-8e14-9aba4c09cd81"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "eaed1762-ccaa-4d85-9919-08e37e9b2ba4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "b4f87faa-da89-4150-9fbb-c3d9a552def5"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "ad3312e0-0a8e-49fb-8e3c-5990f9723f82",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "18ade833-db8c-4bec-98f5-f7d6df60de0f"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "627d0243-c589-448c-ab44-ed070ce4c4bf",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "5c839a6f-6e06-42fe-8843-eff36f162227"
                    }
                  }
                ]
              },
              {
                "id": "2ed69b65-6901-4cd6-b8c6-c071d6968405",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "d1108346-c7a9-4a0e-abab-8e9a05049b9f",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "04ca66a8-9a7a-4ac6-823d-cdb310e0b9cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "61a070aa-031c-4b61-bdf9-e847c339f5e5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e2415b40-62e5-48b9-9dbc-55281eed8b60",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5d7709ff-9767-45d3-8ae6-5c40c9ec7562"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "a7af772c-bab4-408e-87a1-aa37bd700491",
            "name": "Positive Testing",
            "item": [
              {
                "id": "7d87d86e-5ef7-444b-83bf-8eb4ea25a5bf",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "7cb211d3-2545-4096-9a48-d49f30972ad5",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "6657028b-33dd-4551-a285-3c18c9fd8246"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "bab51279-4a56-4216-85ad-35297b568adc",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "6c42a732-d981-4be4-aaa7-5ce799831036"
                    }
                  }
                ]
              },
              {
                "id": "da444f7f-5343-44a2-bfa5-b19f76f18dd4",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "701c9d90-bb43-44e5-82fc-e616330b55ec",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "03137a6b-093a-43da-b644-f596a5a008fb"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "406e88e9-a55c-4d07-8567-fbdd9315c27f",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "bd5c542a-9c93-4859-b3ab-7dddc0a5181c"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "01ed029d-f3df-4a13-ace2-7404dd497c35",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "b0ae719f-94d8-41f9-9815-f6885b43f2bf"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "e2263a42-3144-4706-bfe2-bdb5303e826b",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "12062a54-848e-474d-b8c4-90cce257fa97"
            }
          }
        ]
      },
      {
        "id": "914de259-9d6a-4426-9e68-aa85be830160",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "0c9197a0-d23e-49b7-a384-40e8e61f2582",
            "name": "Negative Testing",
            "item": [
              {
                "id": "548c9489-5cdb-4e3d-a205-52421e8f42c9",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "e9a0407c-f2a2-4f72-9eab-aaf6adc2f6aa",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "23d33d2e-22bc-4c67-9d08-1c4625e8fcfc",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "0445fd1d-2406-430b-b798-bae0d7643e53"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9479a31b-1983-46b0-ae91-0d5439773ef6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "9f447255-1bd6-49ba-a568-ccc80fe8063b"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "185a33ab-b917-460d-8efc-7f527fd62b90",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "2c5769f0-0d89-42aa-a4f8-47ec3efd7788"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "7e74a025-2d2c-45bb-8780-0b13606557fb",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "09db4925-2e91-4060-9151-d89d24543517"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "80efe12e-eb6a-4553-a014-40eb460d312d",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "433a395f-0a36-448f-8653-524b334699cf"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "4fe24a39-d85b-4bd9-b27f-0da1593799c5",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "7f05699e-7c62-48ab-8df7-4310d2681253"
            }
          }
        ]
      },
      {
        "id": "89779424-fdd5-43c7-8c1b-383e01d11353",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "804c5daf-11aa-4a82-bb31-353e86c29814",
            "name": "Negative Testing",
            "item": [
              {
                "id": "45f770d9-6f11-40d4-a1bb-3485130942eb",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "df6b4c14-d1f3-463b-ba55-75ffc4cee4cb",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ec76d379-92ac-4ef5-b861-8a9b8b2aa4a5",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "84e1c30a-4394-4cbb-8843-9030fb917cc6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2b148f7b-d7a4-4f21-a48f-6f4ecf8ffe95",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "4135dd17-1336-4e06-a4fb-8d3f1651b22f"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "79489d44-d9d2-4cd3-bf5d-b38118836a36",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "a8c3abd7-49f9-4cc7-9798-df9b0ffb5386"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "fdb2f864-d250-4948-be42-ca8f3867c863",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "f22ccbc1-6a7f-4633-8ef2-302917cdbb52"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "af602bbd-4b0d-409d-8e7b-5e15091f491b",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "8f11222b-812a-443d-b821-cfc765185001"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "8c21d8d1-614a-4ade-aa3e-b82083441831",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "bf011dfe-fd72-4779-ae87-4f4dbb2bac24"
            }
          }
        ]
      },
      {
        "id": "6134dbd9-f50f-49c5-8212-75a21f2f69a5",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "abcfa11b-0ed1-44e3-a884-9737b317dc66",
            "name": "Negative Testing",
            "item": [
              {
                "id": "4458f3ef-3206-45ac-8a7b-4649d31038c1",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "f314e8bd-c5c2-4965-b144-66b65b292bab",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "da3d33a0-0533-41f6-81b9-65d5848bc0b8",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "358db77e-06f0-495b-8872-084f958bf681"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cba07c59-37dc-43fd-bb70-2732fde95215",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "0dac57be-2d26-4c8c-83f0-3d4f5f63c266"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "372a6e07-701a-45bd-9540-28bd1f2dd1b0",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "2af8f86d-2d74-4aa4-8d15-273972723775"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "1a89835f-eef9-4f5d-8425-101f08fe59e4",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "66e6d6a7-621e-4c72-999e-b6117effddb6"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "5f30561e-8fd1-45e0-8826-28b10623fc5f",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "e355dfcc-6267-405e-8c69-3586315f2947"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "f136b55b-f410-4503-84ed-707045597f6e",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "7c9c4ecb-5d22-49d9-918a-76d2ccebf52a"
            }
          }
        ]
      },
      {
        "id": "b5d863d4-5868-4c2f-ba12-a1b7e5616ab6",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "172b42ab-2391-4963-bddd-fb6658c308ac",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "c48b911f-ff3d-457d-8c39-4dd31a525bbd",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "30bc626f-cc9a-4e89-814e-b63514e23bfb",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "88fc57aa-93ef-4805-bf6e-5023511564f7",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "af04f7b6-dc85-409b-a862-e047cc116fbe",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 2091,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 285,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 573,
        "pending": 0,
        "failed": 2
      },
      "testScripts": {
        "total": 1050,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 1041,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 28.642105263157895,
      "responseMin": 6,
      "responseMax": 380,
      "responseSd": 27.790411999044576,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1710203618059,
      "completed": 1710203635111
    },
    "executions": [
      {
        "id": "01455b22-c762-4ebb-970a-7d1bbd036503",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 283,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "52df925f-8e26-42ac-9698-9a31df782029",
          "httpRequestId": "15a78f8d-e3d8-4d08-869e-984ba7ce49da"
        },
        "item": {
          "id": "01455b22-c762-4ebb-970a-7d1bbd036503",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "698ffbf4-87f2-43ac-bbc9-771c2b3b38b0",
          "status": "OK",
          "code": 200,
          "responseTime": 70,
          "responseSize": 0
        }
      },
      {
        "id": "fc653abb-e003-4f4a-b099-bc99ad415867",
        "cursor": {
          "ref": "071f3152-f775-4f2d-84e9-03ba18f02766",
          "length": 283,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "1b5bb3d1-46ff-4b87-b07d-2a53045ee886"
        },
        "item": {
          "id": "fc653abb-e003-4f4a-b099-bc99ad415867",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "d582078c-3f7b-4085-99c6-7ceca047d28b",
          "status": "OK",
          "code": 200,
          "responseTime": 6,
          "responseSize": 0
        }
      },
      {
        "id": "e8f8c60d-9778-44d1-88b8-da11c4dd5a6c",
        "cursor": {
          "ref": "65615b48-7372-4161-bfe9-3a6e12fc47d6",
          "length": 283,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "9a41e2e3-66a3-4423-9b74-a2555d93d7aa"
        },
        "item": {
          "id": "e8f8c60d-9778-44d1-88b8-da11c4dd5a6c",
          "name": "did_json"
        },
        "response": {
          "id": "ebb6ac9f-26f0-43ff-900d-765316595f54",
          "status": "OK",
          "code": 200,
          "responseTime": 380,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "60541aaf-c392-4416-a4a6-c3410e27a048",
        "cursor": {
          "ref": "7c65080e-b211-4d93-9887-e6efe8dc8be8",
          "length": 283,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "dedcda4c-b8dc-4928-9ec7-a6c3da44412d"
        },
        "item": {
          "id": "60541aaf-c392-4416-a4a6-c3410e27a048",
          "name": "did:invalid"
        },
        "response": {
          "id": "d860b016-d408-499c-a083-ae89e50c95c9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "60541aaf-c392-4416-a4a6-c3410e27a048",
        "cursor": {
          "ref": "7c65080e-b211-4d93-9887-e6efe8dc8be8",
          "length": 283,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "dedcda4c-b8dc-4928-9ec7-a6c3da44412d"
        },
        "item": {
          "id": "60541aaf-c392-4416-a4a6-c3410e27a048",
          "name": "did:invalid"
        },
        "response": {
          "id": "d860b016-d408-499c-a083-ae89e50c95c9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "68c4c850-9bc5-41e7-9ed6-0305531168e5",
        "cursor": {
          "ref": "d936c4b7-1d36-44dc-aa3c-303c95e76410",
          "length": 283,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "c14ccef1-1c98-400f-8345-483864163569"
        },
        "item": {
          "id": "68c4c850-9bc5-41e7-9ed6-0305531168e5",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "bd82a3ff-4e29-445d-9fd2-5302b34aac40",
          "status": "Not Found",
          "code": 404,
          "responseTime": 104,
          "responseSize": 221
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d793562f-6543-4a11-bd40-ad29ff3a0091",
        "cursor": {
          "ref": "db3c31e2-cdcf-42c6-aaf9-00e44da74d7b",
          "length": 283,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "c966bd2c-028c-4956-92f1-22cabc645e4e"
        },
        "item": {
          "id": "d793562f-6543-4a11-bd40-ad29ff3a0091",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "fdd85256-2ef4-4237-91f5-0b53006d1cad",
          "status": "Not Found",
          "code": 404,
          "responseTime": 26,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2df2a74b-8bea-457d-8958-4269566acccc",
        "cursor": {
          "ref": "cb9d14c1-c0c4-4196-ab27-6254735e4486",
          "length": 283,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "d4737b54-6e7e-4a38-88ab-784f82c4e5ad"
        },
        "item": {
          "id": "2df2a74b-8bea-457d-8958-4269566acccc",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "72e8885d-3256-4061-8fb6-77c80bb33a93",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 26,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a7bce29-3c58-423c-8647-bf25902994ec",
        "cursor": {
          "ref": "8f77b21b-0dd8-4358-940e-30c74a75d1d2",
          "length": 283,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "36023d9f-cf3d-4529-80c1-f68bb04234ff"
        },
        "item": {
          "id": "4a7bce29-3c58-423c-8647-bf25902994ec",
          "name": "identifiers"
        },
        "response": {
          "id": "3579af49-a380-4c73-8d74-c1838d8ac2ee",
          "status": "OK",
          "code": 200,
          "responseTime": 83,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "056cc1f3-47b9-4b4c-ba44-3519ddb1b175",
        "cursor": {
          "ref": "b0ad8c61-b925-4a40-9ca4-2735c941bd22",
          "length": 283,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "e855d59e-4109-41f4-818d-6d4196ef45ac"
        },
        "item": {
          "id": "056cc1f3-47b9-4b4c-ba44-3519ddb1b175",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "b79f8e78-a709-4166-8e70-385d11250b0d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 217
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "39ef3d2f-aac6-4c65-8dfd-f9b478194da1",
        "cursor": {
          "ref": "91400d67-6291-4e60-af5b-f29ae457f364",
          "length": 283,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "dc052744-a6f0-4399-8969-0be682e9a78a"
        },
        "item": {
          "id": "39ef3d2f-aac6-4c65-8dfd-f9b478194da1",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "d19fd1ab-db10-4750-8119-99c10d22541d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cccf77b2-9139-4fa0-8d28-3dacf3b1ca7b",
        "cursor": {
          "ref": "97f53574-d0fd-433f-a6f1-b1270eee6bfc",
          "length": 283,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "a6521236-b5a1-4da3-af04-f97e78eaa6dd"
        },
        "item": {
          "id": "cccf77b2-9139-4fa0-8d28-3dacf3b1ca7b",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "2eebfab7-b848-492f-921c-82b8ad5a0cf4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "909a6c85-95fc-4576-bea9-a52a607665c7",
        "cursor": {
          "ref": "5a53ed5d-07ae-4f0e-966c-57bc714e8e47",
          "length": 283,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "75114c50-da85-4bb7-a26c-493e8f0b3719"
        },
        "item": {
          "id": "909a6c85-95fc-4576-bea9-a52a607665c7",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "5cb8e8da-dfe9-47dd-bcaa-b5cbf11e5f92",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3446c755-dbf9-4f36-85ec-3df51e29bc4d",
        "cursor": {
          "ref": "5ef79257-3829-4e67-9488-171c11fe6305",
          "length": 283,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "48065036-f2d9-4990-a79f-442dd6db4220"
        },
        "item": {
          "id": "3446c755-dbf9-4f36-85ec-3df51e29bc4d",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "33b9040e-d4a2-4b82-9c97-8ec7c243b89c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a6cc90ab-41b3-4162-9294-e5ae23a69d1d",
        "cursor": {
          "ref": "558c988a-955b-4dcc-9e3b-2aedc54c088d",
          "length": 283,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "a50d08e6-3dfc-4486-8dfd-8870acbf8f7c"
        },
        "item": {
          "id": "a6cc90ab-41b3-4162-9294-e5ae23a69d1d",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "b5ed7345-f5c8-43d1-a6a7-1502f3b9c566",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "82740a7e-4d4f-416f-9095-8e1ad1ccf56c",
        "cursor": {
          "ref": "d159956c-82d5-4bc1-8be3-a54ecfbc3e3d",
          "length": 283,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "ae001f3b-e43a-47f4-bb63-027937af8f74"
        },
        "item": {
          "id": "82740a7e-4d4f-416f-9095-8e1ad1ccf56c",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "1bbbbd86-3a0a-4676-acf2-5185bea0f58c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "82474205-d7d0-4961-baf2-6af24e9eadb0",
        "cursor": {
          "ref": "4a3ec0d2-b658-4e64-8e34-c248ec522ae3",
          "length": 283,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "fc5af482-a4a5-4a6f-a612-5f37bc11673d"
        },
        "item": {
          "id": "82474205-d7d0-4961-baf2-6af24e9eadb0",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "234fee94-6fa2-468d-b141-53cfc427f76b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5268d082-ba82-4201-b5f1-14da356b3afe",
        "cursor": {
          "ref": "a7bbdee7-27f1-40ed-9095-ff0ee757d947",
          "length": 283,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "8997d4a8-ee18-4f7e-b6ee-7eca443b947e"
        },
        "item": {
          "id": "5268d082-ba82-4201-b5f1-14da356b3afe",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "c6dc31fb-9a7d-4cc1-9aa2-317870e25290",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "06f4ef5a-ba8b-4077-87ff-c3a48a5a2b4f",
        "cursor": {
          "ref": "fa61e9aa-2842-4c65-a3e0-1ecd364ae468",
          "length": 283,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "fff47b81-fa2f-4f3c-b8e7-1c51942f640f"
        },
        "item": {
          "id": "06f4ef5a-ba8b-4077-87ff-c3a48a5a2b4f",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "30f0c411-fc4f-46a0-a6f3-5177c0740ec0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7773ef00-c000-45fc-8323-f529fbf9bc9c",
        "cursor": {
          "ref": "ce22ec55-7846-4059-ac10-38afb80fe581",
          "length": 283,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "d7dea01a-3b08-4fcb-a4e3-f1bae7ed290b"
        },
        "item": {
          "id": "7773ef00-c000-45fc-8323-f529fbf9bc9c",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "19e7e272-b224-452a-8868-0fcdd4a27be4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e392f038-235b-4f01-a3e9-c90bd9d60d26",
        "cursor": {
          "ref": "1ccbc083-2536-4287-9bab-fc34d3ae122b",
          "length": 283,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "845aa930-b724-4c4a-8e47-dbb53bcc81b2"
        },
        "item": {
          "id": "e392f038-235b-4f01-a3e9-c90bd9d60d26",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "8132e0f4-acef-48c4-81f7-fa2551035153",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "17c6c7e2-dfc2-4334-bd30-e6bc0d5c908f",
        "cursor": {
          "ref": "ae2b3f01-1b03-4c97-8e1c-16a643502d5c",
          "length": 283,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "18fb031e-19cb-4633-a307-398b65b54290"
        },
        "item": {
          "id": "17c6c7e2-dfc2-4334-bd30-e6bc0d5c908f",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "a7f3f51f-837e-4612-9020-aa909e2977eb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "469f3e71-f258-4c2c-9325-4dcaab3517f2",
        "cursor": {
          "ref": "d3cd1ee9-6636-40a8-bacf-8d0bed9a81e7",
          "length": 283,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "ad84a715-0c8c-4314-846d-54d776f6afaf"
        },
        "item": {
          "id": "469f3e71-f258-4c2c-9325-4dcaab3517f2",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "b7aa26f8-ba77-46dd-bcb7-961787252145",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cd615370-0418-4ca7-b1a3-b28b98412373",
        "cursor": {
          "ref": "e23a305b-11d8-4bc3-b42a-336b02c1c9af",
          "length": 283,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "2649c8d4-7df1-4442-9a0a-e336406ec083"
        },
        "item": {
          "id": "cd615370-0418-4ca7-b1a3-b28b98412373",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "6a88770f-d007-4f1e-b654-6316661457f8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3c6def6d-16c1-412e-b7df-ba7d11da939e",
        "cursor": {
          "ref": "012a63dc-0ca9-4bb3-b638-142e35c6a9c9",
          "length": 283,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "f534d2f4-1f9e-4cb1-8b87-a460d478595c"
        },
        "item": {
          "id": "3c6def6d-16c1-412e-b7df-ba7d11da939e",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "121fef64-2939-492b-9bb9-216a6b5d8132",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f519ca12-4514-4efd-910e-085035a35acd",
        "cursor": {
          "ref": "781c56e5-380d-4c03-aa8c-93a9a6fba386",
          "length": 283,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "e53be507-94c8-4946-a753-e5a5889c5648"
        },
        "item": {
          "id": "f519ca12-4514-4efd-910e-085035a35acd",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "7b5040c3-77b6-46bb-8f54-cf50ae9fb60f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "833c5a5e-2681-45be-b86f-7f1b29c2ef76",
        "cursor": {
          "ref": "87c7e8c3-8c9b-4152-8b2a-9af14dea3e7b",
          "length": 283,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "23ff0b5e-50b9-4d23-81b7-8a7ba8719939"
        },
        "item": {
          "id": "833c5a5e-2681-45be-b86f-7f1b29c2ef76",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "e084e954-e00e-4522-bc73-481f4fe2a066",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 146
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "31ecbe77-e568-4905-a0a1-00eb9f4d1593",
        "cursor": {
          "ref": "c587d5a8-bdcb-4af1-ab8f-31f445b1fa09",
          "length": 283,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "844de9d2-c3b2-4234-bc3a-f5448e9fd6fc"
        },
        "item": {
          "id": "31ecbe77-e568-4905-a0a1-00eb9f4d1593",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "c4785aa4-530e-483e-b6f1-e5d00dd1a203",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "512d5362-b713-4579-8bd2-bdb5908031ce",
        "cursor": {
          "ref": "91b162f4-3ef0-49a2-b14a-8c9a917de07c",
          "length": 283,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "2d36139b-788c-4f07-bb84-ee94d975f74d"
        },
        "item": {
          "id": "512d5362-b713-4579-8bd2-bdb5908031ce",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "9beb43a0-b8ff-4223-b1b8-1c673e400950",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9ea093ad-da35-4797-876d-a54ad2ddbff0",
        "cursor": {
          "ref": "225ad145-7303-400c-845b-b4f179fac00a",
          "length": 283,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "78cbf8df-388b-4940-8a87-9669eb7a9b20"
        },
        "item": {
          "id": "9ea093ad-da35-4797-876d-a54ad2ddbff0",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "a3ed13ef-1c92-458f-b2a6-1c5b567bc4b2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "06e3f178-4c91-4418-aa64-072fe93b9478",
        "cursor": {
          "ref": "09e03308-69ea-402c-8314-4d2eb1a419a0",
          "length": 283,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "a8aae300-5ef5-41c0-b990-28faf6fd0e3e"
        },
        "item": {
          "id": "06e3f178-4c91-4418-aa64-072fe93b9478",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "5be73d0b-9ad3-4167-996d-2e55b6b2432a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fcd5a68b-5632-4e77-9401-b8053af2c01b",
        "cursor": {
          "ref": "2ea4399b-1fd8-4d59-8cfc-42cb71e5bd83",
          "length": 283,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "a3139768-d3ab-4a66-81ed-4a5063dd2505"
        },
        "item": {
          "id": "fcd5a68b-5632-4e77-9401-b8053af2c01b",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "b380f828-3b40-4970-b28c-e005958118dc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5d421fba-52dd-4c5d-86f4-60ac8d80b76e",
        "cursor": {
          "ref": "520c34ca-f726-4af9-b3cf-b8741f5129c8",
          "length": 283,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "b21f01ea-3604-401e-95d5-1f22c35857c7"
        },
        "item": {
          "id": "5d421fba-52dd-4c5d-86f4-60ac8d80b76e",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "0d787572-6e1e-432d-bc1e-a2d065763881",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3221a1c8-349a-4046-8420-930fe1b7c220",
        "cursor": {
          "ref": "c12c2531-1c5e-48e7-b14f-1aed459046e8",
          "length": 283,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "013c877a-68b1-4c2a-ad90-df2454dab757"
        },
        "item": {
          "id": "3221a1c8-349a-4046-8420-930fe1b7c220",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "30c80143-2fba-4c49-bea3-c48935beee85",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c024756e-b120-44be-b9e9-65fcc754a253",
        "cursor": {
          "ref": "8b6ed511-f7f8-45ef-b18a-3a6720c36fad",
          "length": 283,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "d9d93eeb-01b0-401b-b865-a539f2a2dc16"
        },
        "item": {
          "id": "c024756e-b120-44be-b9e9-65fcc754a253",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "2dcff4d1-b072-4dbe-ad61-25c43f9c0124",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ed73585-0e0b-42c4-ae7e-e2f04ed1dd7f",
        "cursor": {
          "ref": "0a209da6-5975-40c4-a1e2-54265681cbdc",
          "length": 283,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "f44a1cad-a2a1-403e-9dfe-63f071bdfece"
        },
        "item": {
          "id": "3ed73585-0e0b-42c4-ae7e-e2f04ed1dd7f",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "f39462d9-fca8-465a-8484-dd86ac56fd94",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3fe7b437-3886-40f7-9dbd-13059356ac52",
        "cursor": {
          "ref": "02823270-9819-491c-85aa-49d35a35b800",
          "length": 283,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "3723a9d8-8cec-4b9f-aec9-5f812000d3b6"
        },
        "item": {
          "id": "3fe7b437-3886-40f7-9dbd-13059356ac52",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "28b0abd4-5f53-4e40-805c-fd12ac69d087",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4dcbbdb1-fe78-4581-9ef2-3588a0f1d928",
        "cursor": {
          "ref": "35d4cace-05f0-4770-ba70-936436035b70",
          "length": 283,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "39e95242-a03a-49d8-a941-e3eeb8936c01"
        },
        "item": {
          "id": "4dcbbdb1-fe78-4581-9ef2-3588a0f1d928",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "91d2ad5e-d866-47f7-a715-1fb05d77b869",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef290013-f84c-4f1a-8e8a-005d1f17d7ca",
        "cursor": {
          "ref": "6feaff8f-0f89-4b42-826e-0c552695cf1e",
          "length": 283,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "622009b6-1dfd-4e7d-8e6f-fc2517178c34"
        },
        "item": {
          "id": "ef290013-f84c-4f1a-8e8a-005d1f17d7ca",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "c19dbb76-70f4-428f-aef0-530cc33fd57a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "182f8b52-9f0d-42aa-a6e6-f213bde26621",
        "cursor": {
          "ref": "d1a0fef4-0cb3-435a-8683-ad0b10c3cd73",
          "length": 283,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "6c4105f8-13f5-4567-9177-d9d941159bfb"
        },
        "item": {
          "id": "182f8b52-9f0d-42aa-a6e6-f213bde26621",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "f69e0067-8bee-4ad6-a272-3d6679dfc6d5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e2790d23-aa02-49d3-8aaa-eb6f02d0706b",
        "cursor": {
          "ref": "7d5fb1eb-aed8-41ad-a84d-40223685db0d",
          "length": 283,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "30897eab-7ba7-4f7e-8a54-dfa0d597d182"
        },
        "item": {
          "id": "e2790d23-aa02-49d3-8aaa-eb6f02d0706b",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "1ed2e539-76df-441d-b863-a33ea187a18b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "462e7134-8c6e-42cf-bebf-0fb5d2bb165f",
        "cursor": {
          "ref": "5b2ae2b9-0237-4b5a-ad71-ffc2c417b930",
          "length": 283,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "fc5d71c9-0d4e-4f50-8084-31b5b1058947"
        },
        "item": {
          "id": "462e7134-8c6e-42cf-bebf-0fb5d2bb165f",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "6b09f7e4-b213-4baa-b657-89a117fee1e1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "77961f75-a5bb-450e-b4cf-422460e6c002",
        "cursor": {
          "ref": "a1bb2733-d5eb-44fb-9f3d-8caee126bfcc",
          "length": 283,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "13c17590-99bf-4201-83d3-05f48aacff3e"
        },
        "item": {
          "id": "77961f75-a5bb-450e-b4cf-422460e6c002",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "16a3c653-2da7-4d0a-b1c4-e957e9500699",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8723a368-74f4-4a5b-b6d0-7708ec4a9962",
        "cursor": {
          "ref": "792e8a49-4254-496d-9d66-51ecc49c3134",
          "length": 283,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "d161c13c-2c0d-49d7-ab8d-f1a1fab36fdd"
        },
        "item": {
          "id": "8723a368-74f4-4a5b-b6d0-7708ec4a9962",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "5b7cf5bb-2179-4240-8b5f-7832d79328ca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "12bfdd69-9c85-4ce9-94c5-5ad1580caa31",
        "cursor": {
          "ref": "cdf9bbc0-7563-46f9-b449-f67b493154d8",
          "length": 283,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "e7482297-090b-4a44-b006-5c165e03527a"
        },
        "item": {
          "id": "12bfdd69-9c85-4ce9-94c5-5ad1580caa31",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "32925b80-4147-4478-ae9c-cc6cf3d2c728",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 49,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7734d391-b0c5-48b5-bdd4-f09b63794ad8",
        "cursor": {
          "ref": "9b1b97b3-cff1-49ad-a91b-3a1a57c828dd",
          "length": 283,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "202c2803-8568-4711-bbc2-b672057636b7"
        },
        "item": {
          "id": "7734d391-b0c5-48b5-bdd4-f09b63794ad8",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "8b973df2-44e1-44b2-8f95-206d56008c46",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6aacdb3c-ff0e-4584-ba77-21055161e3ea",
        "cursor": {
          "ref": "a7d512a3-3e5b-4321-8ec1-0fc47bed7eb1",
          "length": 283,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "69952f70-0e76-45b4-a5d1-4a0058f98f45"
        },
        "item": {
          "id": "6aacdb3c-ff0e-4584-ba77-21055161e3ea",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "6f6bbc47-fa3b-412e-abeb-c53ada05a70d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd918dcf-cfb6-4a38-b533-8adcf96e0295",
        "cursor": {
          "ref": "5d0554ca-9dc6-40b5-975e-aaa7574018e6",
          "length": 283,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "2f850c87-e5d1-45de-9488-bb80688f5dec"
        },
        "item": {
          "id": "bd918dcf-cfb6-4a38-b533-8adcf96e0295",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "f9bed9d3-543d-47d8-b4d3-20943f139d50",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "033560b1-3be4-4d3f-a3d1-1fe33db498b3",
        "cursor": {
          "ref": "3edb210e-d9dc-4c1c-a0b9-e52cc40029af",
          "length": 283,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "a2021941-b619-49ac-a3dc-239d55fa375f"
        },
        "item": {
          "id": "033560b1-3be4-4d3f-a3d1-1fe33db498b3",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "c5f781b2-b7e4-4f0b-99f5-b95cb1cc1273",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a882bef2-2bf7-4310-ba92-ff7162a3c4ca",
        "cursor": {
          "ref": "d75678b7-74b7-4a52-b89e-b5204c97dd80",
          "length": 283,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "e5a21bdd-43fc-4a9e-a5e2-b1b61f64f37f"
        },
        "item": {
          "id": "a882bef2-2bf7-4310-ba92-ff7162a3c4ca",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "0c1ecc3e-3038-4b74-8c46-57717dda8ba4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ed552c0-c20b-42a8-9fba-3044f1ad5d39",
        "cursor": {
          "ref": "2821740e-1886-4198-9be5-6cc1168774ec",
          "length": 283,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "6f9b0859-63df-4b8e-8578-4f08cfed9e32"
        },
        "item": {
          "id": "6ed552c0-c20b-42a8-9fba-3044f1ad5d39",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "c869d56f-fe70-4be1-b2a0-a07a193c75ea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ca00c9c-8af9-4667-8c68-a4daea966b4f",
        "cursor": {
          "ref": "8dc91555-9e0b-4346-a86d-de22e4987362",
          "length": 283,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "472f77e5-7acb-4b60-9922-a7dcb782e11e"
        },
        "item": {
          "id": "5ca00c9c-8af9-4667-8c68-a4daea966b4f",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "73216f5c-591e-44e8-b650-20291992c356",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 39,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "021857d0-cf83-4395-b65f-6039e990dd42",
        "cursor": {
          "ref": "1bf06039-02a3-4781-bc85-ca2ffb4c8578",
          "length": 283,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "5e068c6b-ddd2-4a28-9f9a-ff376f4f35c1"
        },
        "item": {
          "id": "021857d0-cf83-4395-b65f-6039e990dd42",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "7e17de7b-6ee1-403f-903b-f30161aa22f6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "18ebeae4-a281-4069-a4f2-69a4ce8a6e6d",
        "cursor": {
          "ref": "85771a87-b38e-4808-8b2f-d1eeb3da5314",
          "length": 283,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "1fc4a87f-28fd-4e9b-a579-bad44c868613"
        },
        "item": {
          "id": "18ebeae4-a281-4069-a4f2-69a4ce8a6e6d",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "2823d1a0-df09-42b4-b5fa-d995a37e938b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4c819311-7f08-465f-bd04-1450d7caac53",
        "cursor": {
          "ref": "61833753-7ddc-47e0-a3c4-00e6dc7bd791",
          "length": 283,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "d06d904b-137c-47c2-89a9-5ed0b7fcadc3"
        },
        "item": {
          "id": "4c819311-7f08-465f-bd04-1450d7caac53",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "16d0433b-12d6-4da0-8c14-eefbc9edcbc7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "483cf78a-a54f-423c-8dce-40e79d1f4f36",
        "cursor": {
          "ref": "73cd7a14-5f41-4332-80c9-0aa3900e28fc",
          "length": 283,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "cfb57927-b8d6-447c-a89b-497d1da37fcf"
        },
        "item": {
          "id": "483cf78a-a54f-423c-8dce-40e79d1f4f36",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "270dbd80-2f58-4c0c-b67e-053697c09c47",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "47eb773b-809b-43d8-8b01-fa0830b04e5d",
        "cursor": {
          "ref": "08671626-47a2-4b87-9a3d-f2ffb7fcb3c2",
          "length": 283,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "f4bfb123-2cd7-42b8-b9f4-c8074e39e1b3"
        },
        "item": {
          "id": "47eb773b-809b-43d8-8b01-fa0830b04e5d",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "d0843730-f848-4903-9e4c-12feaa873791",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "308f2617-f65a-4e43-96bc-207c4136bcf6",
        "cursor": {
          "ref": "16811307-49b6-4089-958d-b84b9ae455ff",
          "length": 283,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "8982e449-ca32-4d70-9689-80ea6af1e721"
        },
        "item": {
          "id": "308f2617-f65a-4e43-96bc-207c4136bcf6",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "651f0616-9c2b-4b92-815c-2fdb0844b412",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d3410bdf-40e6-461d-a0b5-8879d5b1e1fe",
        "cursor": {
          "ref": "107666e5-f052-4505-96b3-657a9a8e2cb0",
          "length": 283,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "4d3d7576-60ba-41e8-9b1f-519a826fe0ad"
        },
        "item": {
          "id": "d3410bdf-40e6-461d-a0b5-8879d5b1e1fe",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "bb2781a8-a76b-4747-a84f-d84773caaa71",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "757f1e82-6a33-42f2-883c-0b09b4e708df",
        "cursor": {
          "ref": "a3dacd26-a110-49a3-ba25-fd7dc9e02506",
          "length": 283,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "54a7f12d-3a6f-4add-abf7-243c7ce49201"
        },
        "item": {
          "id": "757f1e82-6a33-42f2-883c-0b09b4e708df",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "d48107c5-a9b8-44dd-a336-1473c01a32b2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5c059c93-737c-4f13-9eff-2871cb86833c",
        "cursor": {
          "ref": "1b104693-4b45-48ff-9ea2-fce2e111f0d0",
          "length": 283,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "e65dd941-3895-4d56-acca-71dd4f9b0c7b"
        },
        "item": {
          "id": "5c059c93-737c-4f13-9eff-2871cb86833c",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "25669ccb-0f36-4171-86e6-61d96bb4d6ec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e091799c-7eee-4c59-bb2b-8566134316ba",
        "cursor": {
          "ref": "c5eef66c-a4ba-4d8e-971a-85575b6ff11e",
          "length": 283,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "7b1cce82-a086-4185-aa75-f57aa9d0b53a"
        },
        "item": {
          "id": "e091799c-7eee-4c59-bb2b-8566134316ba",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "d8c96791-6a58-4b66-ae59-38db1c24e505",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d8fa6839-e28d-4776-b9a4-e705bd538691",
        "cursor": {
          "ref": "fe07b262-322c-4c2f-ae22-8c98a82ec91d",
          "length": 283,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "bc4923a4-29c5-41cf-8f02-7f46d423c24a"
        },
        "item": {
          "id": "d8fa6839-e28d-4776-b9a4-e705bd538691",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "557dc464-7ab3-4a40-bf06-b20b9ca3bb43",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "40e2cbb0-e223-4f3d-b5cb-7e0c191e5cfa",
        "cursor": {
          "ref": "18294699-a08a-48d8-b9c7-6fb76c1335e5",
          "length": 283,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "1c0cfb3d-fca9-4ea6-a482-f9e8d9f74dd8"
        },
        "item": {
          "id": "40e2cbb0-e223-4f3d-b5cb-7e0c191e5cfa",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "c9874c3d-fdb2-4dda-bfad-d3a894f155fa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dd73d1e7-7e43-4655-9afc-f77d82559a59",
        "cursor": {
          "ref": "f8dd2caa-e882-49de-bbef-7153b865894e",
          "length": 283,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "aa9aede4-2540-4f98-81da-6d12bba00abb"
        },
        "item": {
          "id": "dd73d1e7-7e43-4655-9afc-f77d82559a59",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "49bb928e-4ee1-40fa-a0a8-599a136134f6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 144
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2b791862-30a6-4fd1-835f-377b09458c91",
        "cursor": {
          "ref": "8130011a-ded3-4e89-8a2a-f4874aeb3d69",
          "length": 283,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "30f9f0b8-fbb4-43e6-b597-71dbc6cc70d7"
        },
        "item": {
          "id": "2b791862-30a6-4fd1-835f-377b09458c91",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "7b0a13a3-9198-4596-a43d-b2b2763c2992",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "78c095c4-f7b3-4dac-86dc-25f5e0783023",
        "cursor": {
          "ref": "05fff965-4898-4ab6-ab8c-1f2bf67f40a3",
          "length": 283,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "d3d71ac8-9770-4193-ba90-89491f9785c5"
        },
        "item": {
          "id": "78c095c4-f7b3-4dac-86dc-25f5e0783023",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "2a550155-9640-4c13-b314-b18a4456ea2a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5001c264-f218-4697-bf3e-aa3d541eb142",
        "cursor": {
          "ref": "ded63874-c8f8-4b62-89dd-2e85b90fd5dd",
          "length": 283,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "4aa10de3-f964-4cfa-975d-6d072ef1edbb"
        },
        "item": {
          "id": "5001c264-f218-4697-bf3e-aa3d541eb142",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "ca144fd5-30cb-4cc8-9c14-8ec3f9e456be",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c8fc1c20-a758-4ee0-bd56-fbae36ff0b20",
        "cursor": {
          "ref": "c97087df-596c-4d2e-9431-94e214fe3fb6",
          "length": 283,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "5e2ebfb7-ff73-49c5-aed3-a9529fb7deb4"
        },
        "item": {
          "id": "c8fc1c20-a758-4ee0-bd56-fbae36ff0b20",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "f12f725c-4d10-471e-9024-f08a44111726",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "89893935-a739-43dd-9de6-bb55a8b663be",
        "cursor": {
          "ref": "68f63c51-45b3-4b96-b26e-0206a8c5a2c8",
          "length": 283,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "f02faeff-9e36-4d98-8521-cd187ecb1913"
        },
        "item": {
          "id": "89893935-a739-43dd-9de6-bb55a8b663be",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "f0c346cf-ede6-4d3e-8202-b166a12e7145",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d2931df0-4fd3-4271-9b0d-b9d48d4ff95e",
        "cursor": {
          "ref": "0db2a1c5-95b3-480f-8277-2a8f9d150390",
          "length": 283,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "6e38f66b-c78f-4d22-b6db-0b00de13e2f9"
        },
        "item": {
          "id": "d2931df0-4fd3-4271-9b0d-b9d48d4ff95e",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "39aa0193-6425-4ad4-bd7f-7747fe2f32c1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "224684a2-8817-4051-9425-5b2d7cd09aa6",
        "cursor": {
          "ref": "8757a980-b5c8-4489-9054-92440011fe4b",
          "length": 283,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "bcdc30e0-2d88-427d-960a-b3e4434a8fd2"
        },
        "item": {
          "id": "224684a2-8817-4051-9425-5b2d7cd09aa6",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "86ab0058-2724-40b0-8979-1170e8887d1a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 596
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "94214089-bdc9-41aa-b744-da091e2699ad",
        "cursor": {
          "ref": "4d2b305a-8998-40b9-8643-f710a20b4ec7",
          "length": 283,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "8ed549df-f2d4-4113-96d1-c5971bfe93e0"
        },
        "item": {
          "id": "94214089-bdc9-41aa-b744-da091e2699ad",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "e8c887ed-80b5-4b83-9d65-85dc6e49d712",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 595
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1252c238-435c-4962-96f4-ee32c5130119",
        "cursor": {
          "ref": "35ed3380-aecf-4b2e-8a26-53927bb26b97",
          "length": 283,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "4e3def9d-288d-47be-988c-20de8efbb3da"
        },
        "item": {
          "id": "1252c238-435c-4962-96f4-ee32c5130119",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "39fd4ca1-d289-48da-bd80-752a519b35be",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 597
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "81eabb0a-f714-42be-8cc9-374b2d101860",
        "cursor": {
          "ref": "3807c859-0263-4f07-858a-e12f9bc0551c",
          "length": 283,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "d7212f60-f038-49db-83b5-6b756706de61"
        },
        "item": {
          "id": "81eabb0a-f714-42be-8cc9-374b2d101860",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "18ca3f39-8652-4478-9379-14fa017a57f2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7600df21-e44c-47d7-b7c6-a2ab3bc535a1",
        "cursor": {
          "ref": "3cadbdfc-14a4-462c-8159-5e19a56d886c",
          "length": 283,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "3cd56a21-197a-4760-a61c-f26b35f6b7f0"
        },
        "item": {
          "id": "7600df21-e44c-47d7-b7c6-a2ab3bc535a1",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "391ac89f-1d62-402e-a2a5-419b737dfe5c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 597
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "76804cb9-9c15-4ff7-aca9-25b6197eeb17",
        "cursor": {
          "ref": "12e60d91-2746-450a-9093-4201e4e88b01",
          "length": 283,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "da010026-fc82-4e52-9db0-716a866d8d7f"
        },
        "item": {
          "id": "76804cb9-9c15-4ff7-aca9-25b6197eeb17",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "69dce95d-2bc6-4f5b-8216-60b5c0715015",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5f0fda39-796d-4a99-8052-75e01ad4cd12",
        "cursor": {
          "ref": "b8cb2e1e-db2c-45f3-9860-a2b554ab0a32",
          "length": 283,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "eb4c7fd4-5407-4664-ad12-3d9ca6fa3030"
        },
        "item": {
          "id": "5f0fda39-796d-4a99-8052-75e01ad4cd12",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "bbb5afa7-330f-440f-b86c-331a909d9403",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 284
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7b24c10f-6fff-4f1b-9f6e-deb4a20fd87c",
        "cursor": {
          "ref": "588e3c19-e621-4e1e-a27c-efbbe0d987cb",
          "length": 283,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "8b4f75e1-106f-41c7-bf5e-b2e7123bd903"
        },
        "item": {
          "id": "7b24c10f-6fff-4f1b-9f6e-deb4a20fd87c",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "02d1eded-0afc-4de9-8507-a2bdbf8a54f8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f0f70fbe-ee19-4dae-b9b2-b729abd0d187",
        "cursor": {
          "ref": "f4b69d2a-46b4-4733-937a-42d481473ea7",
          "length": 283,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "d4429e84-817d-478f-85f5-61666f278bd1"
        },
        "item": {
          "id": "f0f70fbe-ee19-4dae-b9b2-b729abd0d187",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "70c4dfe9-a43f-42ab-8fcb-d2305491ef89",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4563fc45-dd82-4b8e-92e2-010c62fd5568",
        "cursor": {
          "ref": "30c44718-9e7d-4b9a-af2b-d8c5b90e3475",
          "length": 283,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "cc76a737-e65c-4520-bec9-da5a04f34d1e"
        },
        "item": {
          "id": "4563fc45-dd82-4b8e-92e2-010c62fd5568",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "e59456a6-1734-420c-bda1-03fb9dcc6977",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4b1f6154-cdf1-4dd3-abdc-41164f11d95a",
        "cursor": {
          "ref": "e84c9edf-9623-42a0-b134-8ed72f64632f",
          "length": 283,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "1d28eaaa-e0ad-4463-8177-bcb762155edc"
        },
        "item": {
          "id": "4b1f6154-cdf1-4dd3-abdc-41164f11d95a",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "5e9af4f9-8d5b-46f7-a1f9-7cb78781486f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3992ca31-5143-4dc2-b70a-67623a2d73ed",
        "cursor": {
          "ref": "573a482a-3daf-49f7-9b87-310842708f30",
          "length": 283,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "b61e6721-9a2f-4f89-be40-491f9248fd41"
        },
        "item": {
          "id": "3992ca31-5143-4dc2-b70a-67623a2d73ed",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "c8b9582a-a4ee-4cdf-a084-d59c54331ace",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 169
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4378a43c-28c6-4d54-8cf3-413e9b1e2e7d",
        "cursor": {
          "ref": "f2b64e37-b30e-4a7e-b5e3-107e9218f86e",
          "length": 283,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "423724bb-447a-4242-8479-13c96c946a8c"
        },
        "item": {
          "id": "4378a43c-28c6-4d54-8cf3-413e9b1e2e7d",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "b23f6477-2b05-4949-83da-562c50fc3403",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 355
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8db4e37b-7e3d-4728-ab81-8a4d951d2c00",
        "cursor": {
          "ref": "e46b0800-e152-4d37-8c71-d5b8e6293bbf",
          "length": 283,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "0aaf55c4-e23b-4cf6-bf29-9b24eb658a66"
        },
        "item": {
          "id": "8db4e37b-7e3d-4728-ab81-8a4d951d2c00",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "1aecdcee-0342-4031-9cf2-954468857f5b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 305
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ddd27cc-05db-41cd-93f6-a2f9cca28236",
        "cursor": {
          "ref": "1c6e6cd5-ed33-48bb-8cd7-f7c93c6df9bf",
          "length": 283,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "909d410f-0e62-4c4d-a213-54150450ef4f"
        },
        "item": {
          "id": "5ddd27cc-05db-41cd-93f6-a2f9cca28236",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "17070af4-fb57-47c9-9597-a08bd6509381",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "22f23b50-9a37-4e48-8139-5537189e8e1d",
        "cursor": {
          "ref": "dc66f209-1122-4866-b282-adf553697e7b",
          "length": 283,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "34f10931-3642-4a83-8753-687678dce5e9"
        },
        "item": {
          "id": "22f23b50-9a37-4e48-8139-5537189e8e1d",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "abc95bea-c02b-4d7e-ab4f-fbe589dd8782",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0f294b3b-4f71-4ab6-a523-7b580dab1aeb",
        "cursor": {
          "ref": "91a11bda-4a07-4026-8b3a-d3c9d371840e",
          "length": 283,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "8ac24058-70f3-40c6-aa1c-88fc496cbc04"
        },
        "item": {
          "id": "0f294b3b-4f71-4ab6-a523-7b580dab1aeb",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "404d2b7f-3f8f-42c8-8da6-9a2bc5e4a19c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7fa313dd-e430-4e9e-98be-9c4a429c6715",
        "cursor": {
          "ref": "b884d402-3034-4f17-a935-89cad07c3f4b",
          "length": 283,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "4ef91911-d913-420a-91fe-2e6dcc41bb77"
        },
        "item": {
          "id": "7fa313dd-e430-4e9e-98be-9c4a429c6715",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "2b35d39f-7bd4-4feb-adf2-27b40ba58291",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 361
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a7f6b324-3198-4812-8af0-2e7710eba8a5",
        "cursor": {
          "ref": "c2d7182d-84a0-4bd0-b532-76ae46271a91",
          "length": 283,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "2a3ec259-f0a0-4f9f-ba9f-294a77611049"
        },
        "item": {
          "id": "a7f6b324-3198-4812-8af0-2e7710eba8a5",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "cd5636e0-6355-465d-871d-3e6992a190b9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 402
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "df835da9-8172-44f3-a2fe-8c6b92934fed",
        "cursor": {
          "ref": "3c0d9183-b847-4d05-a85e-7b089508ffee",
          "length": 283,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "c8bc8098-6db2-4a19-bca0-c87d5cb5e8bb"
        },
        "item": {
          "id": "df835da9-8172-44f3-a2fe-8c6b92934fed",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "ed44c042-a663-4d8b-a187-b837e1a3c6a1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 401
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4534d0f9-91f7-4937-837a-0494374078ef",
        "cursor": {
          "ref": "c0fc30ff-c6f4-4e17-a01c-1dc4080d1a06",
          "length": 283,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "a4ba6197-0193-4125-8a15-0f4cbfe5c54d"
        },
        "item": {
          "id": "4534d0f9-91f7-4937-837a-0494374078ef",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "75df4d3c-3f61-4697-bfab-1cd06f2179f0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4f9e3740-6d7b-4a96-b3e6-8713d1543247",
        "cursor": {
          "ref": "90341a02-ac35-479b-a481-6f311fda513a",
          "length": 283,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "a9632f10-9c5a-4e76-8595-66f8f603bc0f"
        },
        "item": {
          "id": "4f9e3740-6d7b-4a96-b3e6-8713d1543247",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "2c8a3fa7-07f1-4ab1-a58f-368f94dfdaf8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 220
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ed0cc42a-2597-43ce-bbb6-9c2e834d03c1",
        "cursor": {
          "ref": "5f8e17b5-f0f3-4765-8c6f-fd6c803ebcb2",
          "length": 283,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "c402489a-7de7-4f2c-ad2d-79fc91e295be"
        },
        "item": {
          "id": "ed0cc42a-2597-43ce-bbb6-9c2e834d03c1",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "22d3ae4b-661c-4e14-9aa8-f3026d318a14",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b45e5fa9-f781-40c0-ac1c-cb1a41f0fffa",
        "cursor": {
          "ref": "e137378b-a876-4c8e-b1f8-1158d43bdfc2",
          "length": 283,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "a89fa3f8-cac5-44e0-8894-eb040f93d11a"
        },
        "item": {
          "id": "b45e5fa9-f781-40c0-ac1c-cb1a41f0fffa",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "4b13e052-925e-435c-ae19-6150051e20f5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "71b018e0-13c0-4aa6-bf7f-70be594c2c68",
        "cursor": {
          "ref": "949c4222-b584-425e-b8c2-cb75b17a85f7",
          "length": 283,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "602dd419-5fed-4ca0-a2da-c0d24bfffb70"
        },
        "item": {
          "id": "71b018e0-13c0-4aa6-bf7f-70be594c2c68",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "8ac70fdd-0162-4da5-a09c-db9e5a8963bd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 301
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c82bf3ff-66af-4ed3-8b53-051fa6a8e789",
        "cursor": {
          "ref": "737c4e42-d4ec-4b38-a75b-323040ee41a2",
          "length": 283,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "79b7bd4f-9f2f-4558-a62d-309759a91a6c"
        },
        "item": {
          "id": "c82bf3ff-66af-4ed3-8b53-051fa6a8e789",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "ffc43c57-81c9-4867-b2fa-f7950fe82609",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "11e5701b-9cc4-478f-9824-ee277e156521",
        "cursor": {
          "ref": "01bf6c8a-8500-4733-8d42-fe3967ad24da",
          "length": 283,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "d75c8881-3651-49dc-a188-0da11c82e15a"
        },
        "item": {
          "id": "11e5701b-9cc4-478f-9824-ee277e156521",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "ab9ad97a-735a-44b6-a533-1c7fc6adef39",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c9e48b1-6a1c-4419-85a7-b5db2193b650",
        "cursor": {
          "ref": "579ba77f-b828-42a6-9440-3c2b08eedb1d",
          "length": 283,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "1c311794-9713-4dc2-8f9b-13968cc92696"
        },
        "item": {
          "id": "0c9e48b1-6a1c-4419-85a7-b5db2193b650",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "9ea53d48-af76-4dd9-bc1a-6a0514144484",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "35b3723a-9951-406d-9a32-f2ae791b7b5c",
        "cursor": {
          "ref": "48967c2d-c3f1-4368-a20f-1abc5025a799",
          "length": 283,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "e4b273ff-5ca4-4191-9a9d-e1bd6a23441d"
        },
        "item": {
          "id": "35b3723a-9951-406d-9a32-f2ae791b7b5c",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "56f20af7-b234-4e83-9b03-35bfc8bca448",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8db5e66d-f71a-4148-bd6c-01334ca205df",
        "cursor": {
          "ref": "44d2d42a-1065-41c3-b964-43d788dae4f0",
          "length": 283,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "bf928d45-8bc1-402f-a590-7d502bd5a3ea"
        },
        "item": {
          "id": "8db5e66d-f71a-4148-bd6c-01334ca205df",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "c3510884-b06d-44df-bd65-ce04ba79bdcb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4fba9412-d0e6-4ae3-9a60-0f89199dab82",
        "cursor": {
          "ref": "e1e25e09-6cb5-43ca-afa2-b55a7cf3b8b2",
          "length": 283,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "4dca85f7-bac5-48f9-ae24-95c28c7c5585"
        },
        "item": {
          "id": "4fba9412-d0e6-4ae3-9a60-0f89199dab82",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "f47b6b3a-bb50-4a98-8c46-78258d9af878",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 25,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "42ac05a1-7500-415a-9681-c50f09dab463",
        "cursor": {
          "ref": "f35e84c2-b3a1-4aec-8930-5b43176ef081",
          "length": 283,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "336d5373-89ca-4407-9401-7ca668f64da9"
        },
        "item": {
          "id": "42ac05a1-7500-415a-9681-c50f09dab463",
          "name": "credentials_issue.credential.issuer:dup"
        },
        "response": {
          "id": "4b2f7a0c-b33d-48e3-8918-a4dd09a4ba4f",
          "status": "Created",
          "code": 201,
          "responseTime": 65,
          "responseSize": 919
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "958e28e6-5d9d-40f5-aefd-943880ff5e41",
        "cursor": {
          "ref": "55ab655a-a380-45da-997d-219e8b434694",
          "length": 283,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "7a85adfb-a6eb-43dc-aa74-a36a1936160c"
        },
        "item": {
          "id": "958e28e6-5d9d-40f5-aefd-943880ff5e41",
          "name": "credentials_issue"
        },
        "response": {
          "id": "20d37b92-c446-4d65-8c37-1c943acec741",
          "status": "Created",
          "code": 201,
          "responseTime": 134,
          "responseSize": 918
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false
          }
        ]
      },
      {
        "id": "e328af8a-efcf-4dff-9d30-bd50f219080c",
        "cursor": {
          "ref": "49e616c4-e3f7-44b9-a2e6-63dc7e0240c8",
          "length": 283,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "728ce5d0-8a43-4c73-b652-784e89092eb4"
        },
        "item": {
          "id": "e328af8a-efcf-4dff-9d30-bd50f219080c",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "57459c05-f3e9-4e68-b139-564e00bff934",
          "status": "Created",
          "code": 201,
          "responseTime": 93,
          "responseSize": 919
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "767a70ea-d569-4670-8ebf-9e58b6dd501b",
        "cursor": {
          "ref": "5ca2b5d1-5bfc-42b6-8e4a-a60954a04772",
          "length": 283,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "6ad90d7f-4ad2-4ac1-bef6-3302e9e54175"
        },
        "item": {
          "id": "767a70ea-d569-4670-8ebf-9e58b6dd501b",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "5d98d10b-15b4-41b4-ab33-fbcfad8a008a",
          "status": "Created",
          "code": 201,
          "responseTime": 47,
          "responseSize": 919
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "e192372f-5261-47c2-bb0a-2778f9354842",
        "cursor": {
          "ref": "260e57a8-b894-4553-9fa6-52a9fe801053",
          "length": 283,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "647d6097-8e6b-4150-94b2-2efe99596914"
        },
        "item": {
          "id": "e192372f-5261-47c2-bb0a-2778f9354842",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "d2ace898-d7bb-4c47-81bd-388a47f46523",
          "status": "Created",
          "code": 201,
          "responseTime": 48,
          "responseSize": 930
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "e353be4e-a623-4c68-9ab3-78ffa880eb81",
        "cursor": {
          "ref": "97056de6-7533-40be-bf53-cb1dc349a19a",
          "length": 283,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "e482736a-99d4-4e65-b63d-a0287c2b29d2"
        },
        "item": {
          "id": "e353be4e-a623-4c68-9ab3-78ffa880eb81",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "20dcdb2b-820c-4c2a-a22a-08c74ec31f52",
          "status": "Created",
          "code": 201,
          "responseTime": 47,
          "responseSize": 909
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false
          }
        ]
      },
      {
        "id": "3254a965-7f13-460a-8628-e290e9891534",
        "cursor": {
          "ref": "d1e39688-dc71-4c5f-8bef-1d23c2c19d16",
          "length": 283,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "76e5aea7-6d44-4991-8bbd-44666431e7e2"
        },
        "item": {
          "id": "3254a965-7f13-460a-8628-e290e9891534",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "1ffe0d56-4180-4a44-9d1a-d6bd6c88bec2",
          "status": "Created",
          "code": 201,
          "responseTime": 48,
          "responseSize": 919
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "81d2d79b-67cb-4c49-b2fb-ad3943de2738",
        "cursor": {
          "ref": "0c85e390-8e41-4eb6-905f-a211b01f0d32",
          "length": 283,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "fd4bef23-bf07-4f22-8583-27fc01ce132a"
        },
        "item": {
          "id": "81d2d79b-67cb-4c49-b2fb-ad3943de2738",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "9cce1b30-2c0b-4217-b9af-b0ae3e9da8fd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "254466eb-12bc-4b9d-9236-3d6f28e77dac",
        "cursor": {
          "ref": "ce044840-5c91-4b27-8800-94ce0cbeaa26",
          "length": 283,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "8d614826-92cf-4633-b567-4b340c93cab7"
        },
        "item": {
          "id": "254466eb-12bc-4b9d-9236-3d6f28e77dac",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "55890cee-12d0-4b98-bdef-799db4a97583",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 307
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7baf4655-24cd-4f6a-9efa-be41b670e346",
        "cursor": {
          "ref": "0c91eb86-9ac9-4c5c-8c66-82bae909864f",
          "length": 283,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "76cced2e-d89c-4565-a782-da12baecb2ab"
        },
        "item": {
          "id": "7baf4655-24cd-4f6a-9efa-be41b670e346",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "e3e4f997-5ba4-47ab-a8de-9382ae8c7ed5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 306
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "643a87a6-b150-4439-8c5f-ec744d0c98a1",
        "cursor": {
          "ref": "077f25b8-4300-4cf7-aa13-1b30997dac8e",
          "length": 283,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "32074daf-2aaf-4cc2-93c6-3783049e1ebb"
        },
        "item": {
          "id": "643a87a6-b150-4439-8c5f-ec744d0c98a1",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "dea9567e-0cfb-4a60-b02b-6da7d1a746ac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9e33010f-0946-40c5-a3a4-690677138fbd",
        "cursor": {
          "ref": "f03cba61-fced-4d52-a8e1-f8c3341a50e3",
          "length": 283,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "196ef1f2-3b1f-4dd2-91f9-b44bdbb6bf16"
        },
        "item": {
          "id": "9e33010f-0946-40c5-a3a4-690677138fbd",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "ec77e94c-d441-44da-992f-351faad799a9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb2aca86-1ba1-45a1-93d0-f21292cd3eed",
        "cursor": {
          "ref": "b56dae44-a94a-4e16-a4b2-55edabb308bc",
          "length": 283,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "93f6a23b-11e1-41b6-8238-c44dd81b0bb7"
        },
        "item": {
          "id": "cb2aca86-1ba1-45a1-93d0-f21292cd3eed",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "a817f5b1-918e-4b66-94d0-9fc36c16e24d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7558b7c5-aba3-4d14-abb7-235597f4a739",
        "cursor": {
          "ref": "231b4710-c6e4-4138-8efd-f2b4cb282ee4",
          "length": 283,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "9f56d6f5-444b-4ca1-91c8-468671d565dd"
        },
        "item": {
          "id": "7558b7c5-aba3-4d14-abb7-235597f4a739",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "7dde8165-7d2d-4206-9a8f-681967ebd6cc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "120aa3f1-27c0-4abe-95ab-0bca1edec595",
        "cursor": {
          "ref": "aa173401-8629-4c56-85e3-7b24199a5ab9",
          "length": 283,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "5e81b4a6-f4c5-4a7e-b959-24a9bcd32ab0"
        },
        "item": {
          "id": "120aa3f1-27c0-4abe-95ab-0bca1edec595",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "57bcf4d7-ba3a-4ae5-8ffa-e7a104d7f34a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 334
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "607f1233-17cd-4532-8381-4df7fee28309",
        "cursor": {
          "ref": "6302e771-4d70-496a-8ca8-bad5a5982c59",
          "length": 283,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "92e00e3b-44aa-4b91-9b69-b2d11458ca6c"
        },
        "item": {
          "id": "607f1233-17cd-4532-8381-4df7fee28309",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "fcfd8387-734d-425a-929f-91f609f0f343",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f23b623e-14f6-4f03-bf5a-8a658776ae80",
        "cursor": {
          "ref": "d563d13b-1829-483a-b556-d19ca393e50e",
          "length": 283,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "53658471-4169-4d79-a641-6a58726e235b"
        },
        "item": {
          "id": "f23b623e-14f6-4f03-bf5a-8a658776ae80",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "d79f182f-d34f-4206-ab0d-85ea09fd60ef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce9b3cf6-424b-4f2d-9b3a-6a8bc2d81080",
        "cursor": {
          "ref": "af36fa60-4524-47f7-9130-5750582e0da6",
          "length": 283,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "f2408f41-5524-4487-9a2b-9ca91f156f10"
        },
        "item": {
          "id": "ce9b3cf6-424b-4f2d-9b3a-6a8bc2d81080",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "462e09cb-5a0a-4606-a53f-8c1f1b25baf8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "043713b3-1317-49d0-af45-cf95144d17a5",
        "cursor": {
          "ref": "362e8019-c1c3-4844-8555-e6df33d64a34",
          "length": 283,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "09119780-549b-42d6-ad46-82020fed8a7c"
        },
        "item": {
          "id": "043713b3-1317-49d0-af45-cf95144d17a5",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "9c081d67-73bb-4810-b209-8503755b2815",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c81cd7df-7661-4041-bc76-bc441d91379e",
        "cursor": {
          "ref": "5f26f4cf-9380-4c40-b8f3-b6918355641f",
          "length": 283,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "3599fc87-b7a4-482f-8c41-73a54695ffaa"
        },
        "item": {
          "id": "c81cd7df-7661-4041-bc76-bc441d91379e",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "cecd6355-add3-4cd8-8f86-539f892bc9f7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 598
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "37fd95a6-d8e3-47ae-91d5-dfbc37a6807d",
        "cursor": {
          "ref": "b1791a43-9929-4175-8cd8-134e4a49b0dd",
          "length": 283,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "103fc4f5-38b8-4d70-9c41-3299aaaa35eb"
        },
        "item": {
          "id": "37fd95a6-d8e3-47ae-91d5-dfbc37a6807d",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "bb5548a7-3a0f-4247-a107-9deb86b20290",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 538
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6f2309a4-9c45-4572-b73b-03807f0dc9d9",
        "cursor": {
          "ref": "cde04904-7015-4b2d-9a03-3e026f028c0d",
          "length": 283,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "272751d8-2eae-4b4c-907c-6cd3d3b46d30"
        },
        "item": {
          "id": "6f2309a4-9c45-4572-b73b-03807f0dc9d9",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "b82258fc-d176-4114-8908-2f7316880755",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 537
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9989665c-2527-41b1-9e0c-9259f2d5e15b",
        "cursor": {
          "ref": "384fcc14-93e4-4774-805d-ce7fccff3d23",
          "length": 283,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "fff24236-ecf4-4d23-bbcc-a20262f900c1"
        },
        "item": {
          "id": "9989665c-2527-41b1-9e0c-9259f2d5e15b",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "fd7ea1fb-404c-4c8a-80c1-e8da609153c0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8f67dc6a-c9c9-457f-b044-59c3b364cb63",
        "cursor": {
          "ref": "dbf48d13-60cc-41dc-9a28-d128872361a6",
          "length": 283,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "11930188-947f-4c44-a85f-04ed8688ea30"
        },
        "item": {
          "id": "8f67dc6a-c9c9-457f-b044-59c3b364cb63",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "a1fddd8c-665b-4b20-89bd-469401e16a68",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "821c7c0b-ab2e-42b5-8068-7ec619b778c5",
        "cursor": {
          "ref": "a5571f5b-fada-4b35-81f6-8ad000920116",
          "length": 283,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "b598b916-92be-4878-b452-e4da0d83cf3c"
        },
        "item": {
          "id": "821c7c0b-ab2e-42b5-8068-7ec619b778c5",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "7b664d87-7741-4d68-aa77-9fa6a17acad1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4e98249f-5eb6-48c5-a35f-ffb784eb91d9",
        "cursor": {
          "ref": "e5070bff-99bb-43fa-9016-13547a399dd0",
          "length": 283,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "ef1ab0c2-58cf-4e93-9a2e-b3275ee3842a"
        },
        "item": {
          "id": "4e98249f-5eb6-48c5-a35f-ffb784eb91d9",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "5ad07cc6-b741-412c-8952-8de7d436643a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 352
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f2f73fe5-255c-4d30-a369-fe0dcfc28915",
        "cursor": {
          "ref": "27a613b7-d868-4389-afab-484459db20cc",
          "length": 283,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "4c3c2c7e-6f19-469b-bab9-0a62000f7407"
        },
        "item": {
          "id": "f2f73fe5-255c-4d30-a369-fe0dcfc28915",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "516884a8-988d-456d-93a0-09393e9712f6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 293
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0f411975-2aa4-46bf-b0b6-926c3d07a9a9",
        "cursor": {
          "ref": "1747719f-221d-4c9c-8213-2acb262c55e6",
          "length": 283,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "23c10a6c-850b-46a7-b5ee-ee60024893bd"
        },
        "item": {
          "id": "0f411975-2aa4-46bf-b0b6-926c3d07a9a9",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "7fc697aa-980e-462f-a5fb-333ee7152cfe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 292
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f79a18e-63f1-40ff-b732-172b1bf1cb1a",
        "cursor": {
          "ref": "1178509f-0994-4c7c-91ae-b159760dbed5",
          "length": 283,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "f381fef2-8e78-40cb-b9e1-6e6e269d8f9e"
        },
        "item": {
          "id": "1f79a18e-63f1-40ff-b732-172b1bf1cb1a",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "96818e37-cefe-4e51-9ce8-6ce9023638e2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3fed1196-46a1-4743-82c1-4e432ce22a61",
        "cursor": {
          "ref": "e49b46da-25dd-44fe-b232-d29e6e62c64e",
          "length": 283,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "df5025e4-63d8-4e2c-8c17-dfaf498b84d2"
        },
        "item": {
          "id": "3fed1196-46a1-4743-82c1-4e432ce22a61",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "b95fa077-868a-4a33-bd57-3ad2a15c7d11",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 352
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4c67e4fe-487e-4bd3-97cd-3f24bde530ed",
        "cursor": {
          "ref": "1bc1e21e-06c6-4072-8970-8660cfe01fc0",
          "length": 283,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "9c65b3e4-8d02-428c-9086-1eefec7efa3f"
        },
        "item": {
          "id": "4c67e4fe-487e-4bd3-97cd-3f24bde530ed",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "96d15fd4-809d-48aa-9519-cd61d74e77e0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5bca6b79-74b5-4837-9488-57d0333d42c8",
        "cursor": {
          "ref": "6b2d5c9c-2772-4269-8497-1c36bbc0532e",
          "length": 283,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "694e8ecd-9fe6-4c7a-b0d6-a68c28634dab"
        },
        "item": {
          "id": "5bca6b79-74b5-4837-9488-57d0333d42c8",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "de97d01b-dbfa-4009-82b5-fb640cba7c7c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 352
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8336c2af-d047-4bfc-ab75-0f1993c5cfca",
        "cursor": {
          "ref": "44eee833-70f8-4c1f-95fc-b1bd42ecf08e",
          "length": 283,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "14f25b15-36d3-415f-8286-c2259b6fbbdb"
        },
        "item": {
          "id": "8336c2af-d047-4bfc-ab75-0f1993c5cfca",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "492ee989-7ef9-4ed0-8d06-52da17428eb3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 476
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e0d870c8-f0f4-4b18-8e28-538e8192ea28",
        "cursor": {
          "ref": "94480bf3-8bed-4ccd-9778-95849a0e645f",
          "length": 283,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "f3d03a68-ab12-46b2-b6ef-128e40c970b0"
        },
        "item": {
          "id": "e0d870c8-f0f4-4b18-8e28-538e8192ea28",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "899209c1-dc2f-4c4f-81c1-43946a439fb3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 295
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc74041b-4e33-443f-8c77-9894eda4ad11",
        "cursor": {
          "ref": "c90b44b8-9fd2-40e9-b8e9-d0e19108085b",
          "length": 283,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "4322cc12-5f3d-4ce1-83e1-be16ff9ef01e"
        },
        "item": {
          "id": "fc74041b-4e33-443f-8c77-9894eda4ad11",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "25cea2f8-9dec-4ca0-b270-051f5de999fc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3228eb83-42e2-4b82-89f0-13cfee3449be",
        "cursor": {
          "ref": "e79d27fe-ff01-4078-8808-767fb24044e0",
          "length": 283,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "733ea3b7-4224-4ae3-b1fa-b1df011f6c4c"
        },
        "item": {
          "id": "3228eb83-42e2-4b82-89f0-13cfee3449be",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "36a0d990-6655-49e2-9731-8229b62bb097",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9184b7fa-0962-4323-b8b3-60b1e6254d38",
        "cursor": {
          "ref": "09f18c06-bd51-43d2-969e-906a729800ee",
          "length": 283,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "3d273e68-d79b-4e56-89d1-cb2f26751c1a"
        },
        "item": {
          "id": "9184b7fa-0962-4323-b8b3-60b1e6254d38",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "5869b2f5-92cf-4db7-9931-259f082355d6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 476
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a93ff4cb-d992-491c-9b75-3532fe69e0d2",
        "cursor": {
          "ref": "8b022530-8c10-4c21-9c69-eb842fb33866",
          "length": 283,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "cfffe3fe-632e-447a-831f-f4c0fe8e993d"
        },
        "item": {
          "id": "a93ff4cb-d992-491c-9b75-3532fe69e0d2",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "c3476325-39dc-438a-ba67-ccc1b25e8c64",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b2e97191-ef88-4235-aa26-8f7a56090293",
        "cursor": {
          "ref": "c2309872-6e9b-4451-8284-14a3e0d1fb34",
          "length": 283,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "7843bdcd-2a30-4e52-9105-28a32b77393e"
        },
        "item": {
          "id": "b2e97191-ef88-4235-aa26-8f7a56090293",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "02ee2fbe-b894-414d-9fd9-6f3ff57fd03b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 352
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f1c48543-c99c-4a5e-af44-31c4b842aa7c",
        "cursor": {
          "ref": "a2cdc2ba-482a-4a6b-b6e2-70c726cb4ade",
          "length": 283,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "6cf392cd-dea1-4692-a98b-74d77c8a5a61"
        },
        "item": {
          "id": "f1c48543-c99c-4a5e-af44-31c4b842aa7c",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "4f936265-f080-4caa-8f66-f00c52d81949",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 22,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "88da9188-2561-402c-954a-da8cf8c5e97b",
        "cursor": {
          "ref": "a6b76d32-ced9-42c4-9440-759f45971fb3",
          "length": 283,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "53e52b6f-a8d4-4d3f-9c39-8740880e6ebb"
        },
        "item": {
          "id": "88da9188-2561-402c-954a-da8cf8c5e97b",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "3cb4c3d5-eda7-49ea-b320-aceba46e1254",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f3798f97-f702-4427-8f37-2eec8f68142a",
        "cursor": {
          "ref": "7b4ca281-f746-4f27-b598-94e11b38c93b",
          "length": 283,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "a7af1f27-55e5-451b-b8a8-d5cfbcb97245"
        },
        "item": {
          "id": "f3798f97-f702-4427-8f37-2eec8f68142a",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "8601006d-7219-408b-be20-0022db93c232",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 307
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9cf855bd-e3da-4774-83d2-e4bdeffc6605",
        "cursor": {
          "ref": "9e8aa96e-7a76-4238-8ce9-320206d46ae1",
          "length": 283,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "3dd389ff-e6c4-4c9e-89b6-a1f9eecaf5e5"
        },
        "item": {
          "id": "9cf855bd-e3da-4774-83d2-e4bdeffc6605",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "8cef36d2-efcf-4e5c-8294-a5cc22c69b71",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 306
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "23d8e02b-5453-45d6-8048-4ee833b87e40",
        "cursor": {
          "ref": "3daeafa0-7884-40a5-b7df-6e2121328f9e",
          "length": 283,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "ccd739d4-3142-423d-b414-8fdab26f7792"
        },
        "item": {
          "id": "23d8e02b-5453-45d6-8048-4ee833b87e40",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "69e8495c-79cf-424b-81d7-4da7fc9acc8a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "433b5aae-10fb-449e-afc9-39f2f4a5d24f",
        "cursor": {
          "ref": "5f9010e8-7e46-46ef-98d4-f12336f5f3b7",
          "length": 283,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "f890d226-5842-49e4-98c9-b8b6dba0e7ce"
        },
        "item": {
          "id": "433b5aae-10fb-449e-afc9-39f2f4a5d24f",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "c781ff6e-e0f5-4059-b07d-1b5e91de6da8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "503a8d03-328e-487a-98af-ad2a3415ca1b",
        "cursor": {
          "ref": "485b35ae-57a0-4165-a67d-d05e96148783",
          "length": 283,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "53d0cc73-f24f-463c-9947-c7fda1406544"
        },
        "item": {
          "id": "503a8d03-328e-487a-98af-ad2a3415ca1b",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "81f4ff6a-d1c8-4d7b-aedb-12cf247ba2b1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3a77f55a-8614-4c4a-9dec-7ae22f216ea9",
        "cursor": {
          "ref": "4001de25-032b-41ab-bf6a-15f7b971f1c1",
          "length": 283,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "2f1d699a-1f0e-4b85-aa80-eae12585bdf1"
        },
        "item": {
          "id": "3a77f55a-8614-4c4a-9dec-7ae22f216ea9",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "351f54af-b830-4bcf-8954-95668d15eb16",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "109cdcd9-3e83-46cc-a9d4-b21c922ad01d",
        "cursor": {
          "ref": "ca6a2e5b-feb7-46b6-ba3b-ef35d5862b71",
          "length": 283,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "62705138-7732-4aaf-99be-94d81da48305"
        },
        "item": {
          "id": "109cdcd9-3e83-46cc-a9d4-b21c922ad01d",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "9ff173bc-d1c8-4ac2-ba50-6c4f01c0d436",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 334
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0afc59f1-dbc9-4f87-afd6-ef4743d6d68b",
        "cursor": {
          "ref": "94c21a94-bc44-4ca2-bf94-62a6cd3f757c",
          "length": 283,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "0e14bd38-80a8-423d-9ba9-49e712f61baa"
        },
        "item": {
          "id": "0afc59f1-dbc9-4f87-afd6-ef4743d6d68b",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "6ac83ce0-aad7-4d3b-8b5b-a4d4c2c28c25",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c4434f40-5cf5-4356-8cf1-f9e104729120",
        "cursor": {
          "ref": "1b341dc0-746f-4660-abbc-d94c6e507f32",
          "length": 283,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "4d13040e-91be-4022-833b-a2fe3a981ebb"
        },
        "item": {
          "id": "c4434f40-5cf5-4356-8cf1-f9e104729120",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "3443894d-98dd-4618-a0ca-3ca1c1052694",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "19952dfe-b482-41aa-806e-a7c28d78fed2",
        "cursor": {
          "ref": "73a12af9-df9e-4922-8613-e4ef381895b5",
          "length": 283,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "6f11c5d2-505f-4401-a89b-f353ef69b899"
        },
        "item": {
          "id": "19952dfe-b482-41aa-806e-a7c28d78fed2",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "09abbeb0-12e2-48f1-9bd3-ec3a46fd4dd2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "19d58f75-7d87-4eb3-b9f7-a4cc2d2b15ff",
        "cursor": {
          "ref": "7f3de788-f483-43f7-9afe-97cd4bea7477",
          "length": 283,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "f68da9b8-74fa-484f-9662-5e6efe2d0ba1"
        },
        "item": {
          "id": "19d58f75-7d87-4eb3-b9f7-a4cc2d2b15ff",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "67faa9f2-6ea5-4906-a8d3-15744d1ed28d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "83ae9590-9a13-4686-8e9d-4b294edbdd05",
        "cursor": {
          "ref": "f865b637-b64f-48af-9311-21da2cd3b1a0",
          "length": 283,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "344b89f9-85a6-49ee-8daf-b895d335dfdd"
        },
        "item": {
          "id": "83ae9590-9a13-4686-8e9d-4b294edbdd05",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "2fde78a5-8faf-4c95-a0fd-39caf961b9da",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "14c3fe52-a149-4249-9b14-967c3f4b121f",
        "cursor": {
          "ref": "fb700f4f-abe9-4334-9f26-814b2a83ed1a",
          "length": 283,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "63f50cd8-d46f-4c22-b427-cdbef8b3d037"
        },
        "item": {
          "id": "14c3fe52-a149-4249-9b14-967c3f4b121f",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "1177d086-1707-48a1-8d2f-a3f000b3b5c5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 538
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f6feadca-fbdb-4a1a-af63-bfec947265b6",
        "cursor": {
          "ref": "0b17cdba-0ab1-49ba-ba9a-9fa2afb55e9b",
          "length": 283,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "d50dfa9a-7789-488c-a835-5a49bed75d2a"
        },
        "item": {
          "id": "f6feadca-fbdb-4a1a-af63-bfec947265b6",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "bbd9fc11-87cf-4778-b602-6dec5622383a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 537
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "41ed2f3e-6c9d-4aef-95a2-7e8f75f1ce5e",
        "cursor": {
          "ref": "a5db703c-129b-4231-91ef-1e7a4033de7d",
          "length": 283,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "eb945ec0-cfba-494d-b4fa-4c359188e252"
        },
        "item": {
          "id": "41ed2f3e-6c9d-4aef-95a2-7e8f75f1ce5e",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "7a3a8e91-4669-4a3e-8e40-e3bd776779b4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5428978d-1e09-4607-830e-7939f4ec43b5",
        "cursor": {
          "ref": "613b52e7-29db-4930-aa4a-8445e3088812",
          "length": 283,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "cef2ad7d-6665-4161-afd8-9b2678c3d344"
        },
        "item": {
          "id": "5428978d-1e09-4607-830e-7939f4ec43b5",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "0c54660e-fbf1-47cc-95b7-f7d1126021c1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "55700a81-9cfb-490d-8c75-8c5e7e6f9b0d",
        "cursor": {
          "ref": "e0eec789-86e2-475e-85d9-d3cb4013a28d",
          "length": 283,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "3d5c58bc-f025-423e-b548-7f6aebe643ec"
        },
        "item": {
          "id": "55700a81-9cfb-490d-8c75-8c5e7e6f9b0d",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "50798216-938b-496f-aff3-d4a3cc515e96",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8de70480-0501-40f7-ac61-2c9e0d556b8f",
        "cursor": {
          "ref": "43c23e9e-58f7-4153-a248-aff37010c5d0",
          "length": 283,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "30f8f075-795d-436b-8197-a26e355973e8"
        },
        "item": {
          "id": "8de70480-0501-40f7-ac61-2c9e0d556b8f",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "21c08d5c-a121-47c4-b77f-23cf3c23c924",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 352
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e1d23922-3b95-46a6-bc4b-d76a69072623",
        "cursor": {
          "ref": "48aa3c75-abb0-4fc7-ae51-4fb47fded80f",
          "length": 283,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "60fe4ebd-1eb9-46d0-b0e9-58a8aaa4b580"
        },
        "item": {
          "id": "e1d23922-3b95-46a6-bc4b-d76a69072623",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "9a89def4-670b-4739-84ef-ef491a438277",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 293
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7870e31f-c8b1-47bb-abce-f726eb94db67",
        "cursor": {
          "ref": "dba40988-e346-4c20-83dc-c8f450703af0",
          "length": 283,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "5eb017f0-3727-4ce8-8e56-d98969d30d35"
        },
        "item": {
          "id": "7870e31f-c8b1-47bb-abce-f726eb94db67",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "54aadf8d-186b-43e7-bc8b-ee469838d779",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 292
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "58434975-681f-470f-8451-dc3ccf09af19",
        "cursor": {
          "ref": "cdb00a38-ea7b-4d27-b2c7-8eab73e59143",
          "length": 283,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "b863e4b7-a0a4-4434-8909-2ff49678586b"
        },
        "item": {
          "id": "58434975-681f-470f-8451-dc3ccf09af19",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "0c39f97c-7282-43ac-a786-806956e52bfd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "33c48b75-0f8f-4f7c-82cd-c7a6d9354e8c",
        "cursor": {
          "ref": "10b08569-efd2-4ea7-be95-6ff90b4bd7aa",
          "length": 283,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "f9ad3003-b7dc-415c-b3da-6f777ccd0ba6"
        },
        "item": {
          "id": "33c48b75-0f8f-4f7c-82cd-c7a6d9354e8c",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "e6849c0d-f2e0-4c03-9c39-b87cbf83b2be",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 352
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f7028d73-7015-42bf-acc4-749dec2162b9",
        "cursor": {
          "ref": "032a2f6d-2fb5-48ef-a29c-324ec6e82353",
          "length": 283,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "993124e5-59ca-4462-9fbc-63f1ce24cf28"
        },
        "item": {
          "id": "f7028d73-7015-42bf-acc4-749dec2162b9",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "a0559064-2fba-49ea-bec3-b8ea284d04ac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "70c9ad8c-351d-448e-b1b3-88c9acac7a51",
        "cursor": {
          "ref": "7a9df2d4-5611-44c7-869d-83bdcb03f841",
          "length": 283,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "308dbb23-50fc-4562-b488-d2524c9ccb69"
        },
        "item": {
          "id": "70c9ad8c-351d-448e-b1b3-88c9acac7a51",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "a3a79451-ca24-4eab-b969-f5a8b2a5495c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 352
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2ff951f0-d14d-4426-85a2-420f215cae55",
        "cursor": {
          "ref": "ef0a2b7c-8eae-4e3f-bd6a-1a81f5b7a052",
          "length": 283,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "dad05510-44bc-4a36-9fe7-82df9effbe39"
        },
        "item": {
          "id": "2ff951f0-d14d-4426-85a2-420f215cae55",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "7d39adce-dd35-411a-9712-4013c5bf7351",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 362
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0ee3ec3a-3f47-478b-963b-951adc3b637e",
        "cursor": {
          "ref": "7b118e63-4d22-48ee-925d-a2ed3d7c8f7e",
          "length": 283,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "ec04cdff-6b2b-48c2-80ff-50ec697d86ad"
        },
        "item": {
          "id": "0ee3ec3a-3f47-478b-963b-951adc3b637e",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "eaff39fb-5e7b-4b25-89f1-d1f0f121ab8b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 295
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0a615e6f-99ce-43ae-b15b-48c3df05d30a",
        "cursor": {
          "ref": "cf547fe0-98be-4027-bae8-3ea6f788c2d8",
          "length": 283,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "bef273a0-8b1c-4866-aaa0-c90ae37deb6e"
        },
        "item": {
          "id": "0a615e6f-99ce-43ae-b15b-48c3df05d30a",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "94ee920f-2a32-4a50-b1e3-7ce7a6b5e183",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5d726ade-9bc0-4cae-b96e-23bbe1aabb56",
        "cursor": {
          "ref": "d7b1168c-d26f-498e-982a-1ca3fe60096b",
          "length": 283,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "4b579e3a-438a-4d41-982d-6aa06f679d9f"
        },
        "item": {
          "id": "5d726ade-9bc0-4cae-b96e-23bbe1aabb56",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "fa71e5b2-c2c8-49b7-bebd-936489efbbd3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f0fa793e-ee9c-4978-8d62-7dce019a0a83",
        "cursor": {
          "ref": "4ecfc281-cf14-471a-943c-02460ee1cc03",
          "length": 283,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "0309d0dd-1905-43ed-92d0-05be5edc8e9f"
        },
        "item": {
          "id": "f0fa793e-ee9c-4978-8d62-7dce019a0a83",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "0590026d-0405-4ecc-8655-4291151f6381",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 362
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8389d4a8-6412-4809-9863-e197ae3eeeeb",
        "cursor": {
          "ref": "9e122ca0-27b5-4d1c-9454-bd8f9dc1c313",
          "length": 283,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "98a97c0f-b55c-4a6c-a1b3-16a690bf1859"
        },
        "item": {
          "id": "8389d4a8-6412-4809-9863-e197ae3eeeeb",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "61bdf8a9-0649-4d21-ac4e-416836609ab2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c616ac18-4d94-48e9-93b6-4f64b69f0d53",
        "cursor": {
          "ref": "cd28cd74-0b37-4146-b98f-8bf4a351cf81",
          "length": 283,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "14f9f3f0-e872-41e4-a2c3-b973d9235ece"
        },
        "item": {
          "id": "c616ac18-4d94-48e9-93b6-4f64b69f0d53",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "af3ddef7-dcb9-4a50-ba72-243476eb6b6b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "af61f159-e969-4d2d-854e-8773c4a991a9",
        "cursor": {
          "ref": "21affa83-7d26-4201-a32d-8f04df8a7515",
          "length": 283,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "b15a910e-77d3-46ac-bd09-8c72510033c2"
        },
        "item": {
          "id": "af61f159-e969-4d2d-854e-8773c4a991a9",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "e758fe5b-79de-4bfc-af13-bcb507eee1c9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "abffa489-b486-4e6f-bff9-55506caf140c",
        "cursor": {
          "ref": "3c9e9b86-3822-4b9b-a09f-d8dd3d0ef274",
          "length": 283,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "13e06777-8d1f-4c6b-ac3a-ee82ce760537"
        },
        "item": {
          "id": "abffa489-b486-4e6f-bff9-55506caf140c",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "44a16bea-9f8f-4bf6-a1ad-8f031cf9463a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "691635c0-88dc-4e1b-a07a-69ca64338a35",
        "cursor": {
          "ref": "5cdc7b87-53f8-4e31-b1fd-041212c9e3ed",
          "length": 283,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "73e9de3c-9b7f-4cfc-8266-4bbbc28aaa15"
        },
        "item": {
          "id": "691635c0-88dc-4e1b-a07a-69ca64338a35",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "41c322bb-d939-469c-b6bc-7d72ce4c9f0c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e19865cc-7074-4a7e-ac26-ff3e5f6739c2",
        "cursor": {
          "ref": "c9bc5224-c20a-4301-adff-91763f5324c1",
          "length": 283,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "678c0cb4-1100-4963-bd45-a43e3f041aa5"
        },
        "item": {
          "id": "e19865cc-7074-4a7e-ac26-ff3e5f6739c2",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "5500610c-ba31-4194-8363-f70953ddc194",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9766a07f-9092-4525-9420-4a8550b242ee",
        "cursor": {
          "ref": "a93a514b-cca8-442e-a0b8-527ed15cc1b4",
          "length": 283,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "725a05c5-6770-4241-873a-35f84047367e"
        },
        "item": {
          "id": "9766a07f-9092-4525-9420-4a8550b242ee",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "1892a6ae-2766-41d5-96f8-1f0e238c4bcd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e4de4d26-84c8-4254-b1b3-55fee4d092bf",
        "cursor": {
          "ref": "2ee5fa33-d3d9-42be-a058-0122fff61b23",
          "length": 283,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "e3afb5dc-38bc-4996-b9ac-a697db818e9e"
        },
        "item": {
          "id": "e4de4d26-84c8-4254-b1b3-55fee4d092bf",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "9c1eb083-39e0-467c-b501-b78d9401d00e",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 22,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a767d249-93a3-4311-9ea6-6e0457f56dad",
        "cursor": {
          "ref": "a7bb8f40-9ee6-40ef-8324-33bfceb62914",
          "length": 283,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "93872e1f-d4bd-4681-acea-94c78276fc7c"
        },
        "item": {
          "id": "a767d249-93a3-4311-9ea6-6e0457f56dad",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "7f895937-c077-46e7-adb8-a03aa946e63e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c64d437a-df50-4579-9076-c5e32ac56821",
        "cursor": {
          "ref": "f6f8e4ff-40a7-499d-be32-dde2b39ea135",
          "length": 283,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "24ae0f74-cc79-491a-89a7-6358de4f10b6"
        },
        "item": {
          "id": "c64d437a-df50-4579-9076-c5e32ac56821",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "bee870b3-73a6-4550-a05f-1212c51a24c3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0b5edc06-3e68-45e7-a696-2e07c51377aa",
        "cursor": {
          "ref": "f62c9455-aa03-407a-9314-953e5e633f48",
          "length": 283,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "b8b20ec0-a2fb-4655-8d7e-53bb8a3d18cb"
        },
        "item": {
          "id": "0b5edc06-3e68-45e7-a696-2e07c51377aa",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "da5bbea3-628c-4c34-9abc-eea292ded8b9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "759a38f5-ad56-48dc-9259-b2ba213d80a3",
        "cursor": {
          "ref": "7c8f7be2-e55c-414a-b753-d634e1611990",
          "length": 283,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "a3c0125f-06ab-40ed-9a10-b70b83507851"
        },
        "item": {
          "id": "759a38f5-ad56-48dc-9259-b2ba213d80a3",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "e114a12a-62f5-4ae2-961d-0c50d1a8c5ae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6d4b074a-dc15-4204-9159-858012549676",
        "cursor": {
          "ref": "be6cae8d-a5c1-418a-b767-299bc621bc33",
          "length": 283,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "a1094a30-fe75-4f6f-8a83-28b38304cccb"
        },
        "item": {
          "id": "6d4b074a-dc15-4204-9159-858012549676",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "08965bb0-4a8c-4d6d-bd43-1dd71c2a6345",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c73c46e0-6ebb-4a13-a68d-d47798e21f4e",
        "cursor": {
          "ref": "88f29134-c984-4d12-8a1e-2bc84d38d4b6",
          "length": 283,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "b9ba716c-a40b-4f6f-b83e-baff2f46f409"
        },
        "item": {
          "id": "c73c46e0-6ebb-4a13-a68d-d47798e21f4e",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "9043fd9b-7f2b-4c17-b4a2-fe7fc500b8b3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7191b5c3-ef3e-4ca8-b43d-1362373caf0f",
        "cursor": {
          "ref": "16540907-6445-4eb0-8040-e7736ac4bbcb",
          "length": 283,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "b85ffd70-ae4b-48e8-96c5-6eaf78eae077"
        },
        "item": {
          "id": "7191b5c3-ef3e-4ca8-b43d-1362373caf0f",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "9d0a98da-c792-41c4-aea9-1ea52742545c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "50449718-ff79-4614-9f40-e580d5a6ddc1",
        "cursor": {
          "ref": "c4ed4df1-ba7b-49e0-8da7-922c028c3789",
          "length": 283,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "5cde9f8b-b049-4f70-afdf-9fc0ae283a8b"
        },
        "item": {
          "id": "50449718-ff79-4614-9f40-e580d5a6ddc1",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "75976bf9-c7e1-4b6b-9bdf-45abf9df6fd6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "07d2c19b-f212-471b-923f-b5e912e013ee",
        "cursor": {
          "ref": "a8634d77-52fe-41f7-b4ce-b43084c1520d",
          "length": 283,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "851a59d0-d312-42ac-9954-54f0f9975db3"
        },
        "item": {
          "id": "07d2c19b-f212-471b-923f-b5e912e013ee",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "0929111c-1e85-401f-83ad-61dfad8fac93",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4f58c4cf-ec2e-44be-a44a-e13409254d5c",
        "cursor": {
          "ref": "0967614d-873b-493a-9801-92d14f869498",
          "length": 283,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "e659133c-5c42-4ef0-82ed-bcc1e51f83e8"
        },
        "item": {
          "id": "4f58c4cf-ec2e-44be-a44a-e13409254d5c",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "905cf792-8639-46c7-8f3e-ac1542a3eddb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "159346a7-6657-49c9-ad5d-2f365a372e51",
        "cursor": {
          "ref": "e29f80f4-2b66-48d6-9bff-5c4e6eb6178f",
          "length": 283,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "e9333d91-31ef-4cb7-be9c-daf009f71db9"
        },
        "item": {
          "id": "159346a7-6657-49c9-ad5d-2f365a372e51",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "5d0e925f-387a-42e0-ac0d-92269b7cb07d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a45181b3-baa7-4927-960f-4f2c898db6fd",
        "cursor": {
          "ref": "d336ddb3-af89-4f7a-b743-45ca4d672fd5",
          "length": 283,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "30ba7834-7859-429b-9860-5a4995baf541"
        },
        "item": {
          "id": "a45181b3-baa7-4927-960f-4f2c898db6fd",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "07104235-89ae-45b1-931f-174f04718a70",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "499a4555-4f34-4beb-a8d8-e91d49b612a6",
        "cursor": {
          "ref": "173db31f-ec33-4d4f-af10-a547234b8b24",
          "length": 283,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "f5918707-6dd8-4ec2-a849-6d0d55957381"
        },
        "item": {
          "id": "499a4555-4f34-4beb-a8d8-e91d49b612a6",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "659f0dbb-3593-47cf-b3bf-beac7677585e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c0177302-226b-426d-89b0-4b0503029d6d",
        "cursor": {
          "ref": "1eda2ca0-4823-4ac9-b03d-1e2184aaa03f",
          "length": 283,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "8b50a3e7-aa13-46ab-82c3-c3450f797b6d"
        },
        "item": {
          "id": "c0177302-226b-426d-89b0-4b0503029d6d",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "e8cea7c6-d8b8-4acc-a3f4-566a45b9dcd0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "24021121-819a-49a9-b375-a253634fe5aa",
        "cursor": {
          "ref": "e81e9a9c-249b-4628-8af5-8604467408f5",
          "length": 283,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "3bf8ba9f-4308-4f49-afe5-8a75c6a7eece"
        },
        "item": {
          "id": "24021121-819a-49a9-b375-a253634fe5aa",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "020c1768-ad0c-403a-9a66-38d6d3a56fd7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4148f300-8dfb-409e-a839-4cbb03817861",
        "cursor": {
          "ref": "3ec6c7ec-85ca-4c9d-87ce-729cf4f26057",
          "length": 283,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "8253ad88-f09b-4372-8bc7-ae18dd30f9ae"
        },
        "item": {
          "id": "4148f300-8dfb-409e-a839-4cbb03817861",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "a5fc8b7a-da67-46d1-8b14-a43c234f9485",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0ecfc338-51bb-4744-9e6d-ba2843c513b0",
        "cursor": {
          "ref": "477a5656-fe63-4b0d-a2c3-40d78b31d275",
          "length": 283,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "1eed85c8-bc9d-4fe3-9cbe-77ca47c4ea0b"
        },
        "item": {
          "id": "0ecfc338-51bb-4744-9e6d-ba2843c513b0",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "48f94d6e-e852-46a6-9098-fc7380386ae7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fa9287a6-b337-4622-976e-5ac048433040",
        "cursor": {
          "ref": "09809acf-c10c-42cd-9193-77c4bfda57fb",
          "length": 283,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "146ec18a-f042-43be-9f4f-29a32c1b717d"
        },
        "item": {
          "id": "fa9287a6-b337-4622-976e-5ac048433040",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "8bba99c1-7ace-4261-a60b-2349dc4f8871",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d399b97b-fcd3-4465-b4c7-6f624acc5209",
        "cursor": {
          "ref": "f519fd07-feec-4c84-b8e4-9bbffad7a04d",
          "length": 283,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "e55ae5c6-edf0-40a6-8c6e-8958205eda94"
        },
        "item": {
          "id": "d399b97b-fcd3-4465-b4c7-6f624acc5209",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "b3ebdc6e-48ce-4047-81e6-030fdb6f8a89",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cd68378f-757a-4fa5-8703-232ed31cc54c",
        "cursor": {
          "ref": "d944625a-7501-4d25-8d9b-a448345bd0af",
          "length": 283,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "80e5e714-9fab-45ab-bcc2-fcd34f6e0c47"
        },
        "item": {
          "id": "cd68378f-757a-4fa5-8703-232ed31cc54c",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "2329faa4-a5d2-4d69-a06f-bf9489bf65ea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "80e46824-e066-4683-89d6-a2a70f2a880c",
        "cursor": {
          "ref": "278951c2-4394-494c-babf-5ab89ee250b2",
          "length": 283,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "a83a7789-79b9-46f7-815f-f570a85ed76c"
        },
        "item": {
          "id": "80e46824-e066-4683-89d6-a2a70f2a880c",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "4885fe37-25a7-4a50-862c-883efa94ac97",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "21c352c3-2340-49b7-b679-5b94f91a41bb",
        "cursor": {
          "ref": "9473fb3d-f208-4db2-92cf-318eb452df66",
          "length": 283,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "fdd34bd1-eec0-494c-8e06-608390cfdeaf"
        },
        "item": {
          "id": "21c352c3-2340-49b7-b679-5b94f91a41bb",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "d4ed8420-3e48-41e4-b02e-bf4bdd7d7edf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6c2f1767-ac88-4a6d-a7c9-defa57447ecf",
        "cursor": {
          "ref": "652205c4-103b-4c14-ada1-878580beee92",
          "length": 283,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "6fc360b1-4777-4c03-b4bc-5c33420f3a9e"
        },
        "item": {
          "id": "6c2f1767-ac88-4a6d-a7c9-defa57447ecf",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "edfcbaec-563f-4f3d-a932-ecc4c4d9f724",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "58a3c4e3-0055-4ec5-8ffe-d86b74969809",
        "cursor": {
          "ref": "3e4971e6-fc94-48f6-b4fc-3c34389153b4",
          "length": 283,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "d88805d4-1a67-485c-9aa5-48e41c856f34"
        },
        "item": {
          "id": "58a3c4e3-0055-4ec5-8ffe-d86b74969809",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "93deb4bb-00c5-4c9e-984f-78ddc0e1a083",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 100,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c2c0f97a-1359-4d6f-ad88-53605628f4cc",
        "cursor": {
          "ref": "9af226de-62a0-4e6d-8cc6-dbd72baa2027",
          "length": 283,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "eb10c776-83db-41fe-82f5-27b3848fb627"
        },
        "item": {
          "id": "c2c0f97a-1359-4d6f-ad88-53605628f4cc",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "8516b43d-e04d-44f7-87a5-7ac10f03809e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "58ddf13e-bcb5-4bd5-9a9f-0c5129029c15",
        "cursor": {
          "ref": "993e32a5-9f9d-4b6d-b55b-d6ce6a3e929b",
          "length": 283,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "48cbb73e-8bce-44c9-bc14-4d3e0a486a53"
        },
        "item": {
          "id": "58ddf13e-bcb5-4bd5-9a9f-0c5129029c15",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "f4c86501-21d7-4085-bb42-50871c81b49c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "91b952a3-b01e-4b66-b21e-c015c4fbd9ac",
        "cursor": {
          "ref": "e2177f6b-fb12-4e30-a4d8-c3733aa53359",
          "length": 283,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "ed1bb9c6-03d0-4416-be16-741504e7c13d"
        },
        "item": {
          "id": "91b952a3-b01e-4b66-b21e-c015c4fbd9ac",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "9e6d0c0b-322c-4b39-b83c-052a5277c246",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "41196a59-f98c-4796-b5bd-79641f264a30",
        "cursor": {
          "ref": "ef563ca9-1d51-424f-b356-288e3d6502b1",
          "length": 283,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "ad2ee8bf-5401-4d7b-bc32-b60573936117"
        },
        "item": {
          "id": "41196a59-f98c-4796-b5bd-79641f264a30",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "f1ec46f7-538d-4558-9d72-acffb2e9c985",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2f3c43b0-bee0-4dcb-b16e-d600d1b6aee7",
        "cursor": {
          "ref": "6af6463c-471a-45b3-a21e-c28d9b29e7c7",
          "length": 283,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "f5b52c4b-afd1-46fc-9646-dda3f5484846"
        },
        "item": {
          "id": "2f3c43b0-bee0-4dcb-b16e-d600d1b6aee7",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "94ae523c-353f-4b18-8f89-1e3cb54be97b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 182
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e6ce7ea4-601f-4882-9960-00a8bb5c049e",
        "cursor": {
          "ref": "b0c43976-daa8-4a3a-a9f8-dd2baa9f68b5",
          "length": 283,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "b20c894f-5b17-478e-85c7-88585ec5d5b8"
        },
        "item": {
          "id": "e6ce7ea4-601f-4882-9960-00a8bb5c049e",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "fca5601a-00bd-414a-8ec8-0da5c8f78b83",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "44fb4c3e-8d3b-44b6-86ff-ff2e210f2578",
        "cursor": {
          "ref": "f1260af7-d0f6-4dbc-aa92-7541ef4a6bde",
          "length": 283,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "2056a9fd-401a-48e8-9b85-11eb8b0ce4d4"
        },
        "item": {
          "id": "44fb4c3e-8d3b-44b6-86ff-ff2e210f2578",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "0d7af5e8-1be7-414a-857c-ba49f63f5d1d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "67732b19-7b61-4c5e-80de-046434c3e460",
        "cursor": {
          "ref": "50cc75b7-e2fa-4da4-9253-ff841e6b5e20",
          "length": 283,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "654edee9-435d-45c0-9d5a-ca854316bf52"
        },
        "item": {
          "id": "67732b19-7b61-4c5e-80de-046434c3e460",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "17973167-6551-43e8-9d76-9a2e4dfc3e41",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b5298b01-08ea-4f8e-a0da-e050ff914858",
        "cursor": {
          "ref": "ac44d9e9-ca68-49eb-9e44-0eae211d2b6a",
          "length": 283,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "e81ea39d-c32f-48a1-b693-68f1e4025193"
        },
        "item": {
          "id": "b5298b01-08ea-4f8e-a0da-e050ff914858",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "26889b0c-d29c-4e62-958c-e1a738cc2208",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "14fcd18b-aeea-45b3-83a5-93220602a974",
        "cursor": {
          "ref": "fc2e502c-d3e8-4cf8-a425-1a4eba21e00e",
          "length": 283,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "d56bf603-51e5-4253-9ca6-ee60e6af2cc4"
        },
        "item": {
          "id": "14fcd18b-aeea-45b3-83a5-93220602a974",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "264b34e0-fb45-48b5-a2b1-365d47f75470",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6dc198bd-b487-4119-a263-6ab508831c0f",
        "cursor": {
          "ref": "cb65741c-01db-4a32-ab53-a9f1cee1dcc4",
          "length": 283,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "ece6120b-f6ef-494a-9766-fecb3899592d"
        },
        "item": {
          "id": "6dc198bd-b487-4119-a263-6ab508831c0f",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "aecf0900-7637-423d-906d-c01b184eb1d8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b522e284-f943-44a7-a3f9-41689c587d3c",
        "cursor": {
          "ref": "a722e825-39a3-40c5-b1ba-092b8a70561a",
          "length": 283,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "e829f441-2ed5-466b-b2b8-1be06dc1d178"
        },
        "item": {
          "id": "b522e284-f943-44a7-a3f9-41689c587d3c",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "ec0a321a-8de0-4e87-8067-8b59a47877f6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1bea682e-5778-4024-8cd5-0f4d27a3b836",
        "cursor": {
          "ref": "6c4906b4-f7a7-4cfb-9d88-6f0b98685653",
          "length": 283,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "c21060fd-aade-4d9b-a70b-70daf4ed14d2"
        },
        "item": {
          "id": "1bea682e-5778-4024-8cd5-0f4d27a3b836",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "c16dadce-f359-477f-9b54-04db55f99814",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a4613d0f-577d-4bb8-974b-59ecbf9ae62b",
        "cursor": {
          "ref": "b9df3554-1bd6-4ca7-857e-484044225455",
          "length": 283,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "97d1e296-68ab-4cd2-bf98-1b4797ad4a6d"
        },
        "item": {
          "id": "a4613d0f-577d-4bb8-974b-59ecbf9ae62b",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "a6d54d8b-3039-44c2-904d-4c54a2b999f1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c0a55bd7-b9e9-4c61-a2f3-44068c6489c9",
        "cursor": {
          "ref": "02c3d8dc-d63b-43e7-906c-9363957e6d2c",
          "length": 283,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "0c67aebf-232f-42b9-9df3-041a7c30ba37"
        },
        "item": {
          "id": "c0a55bd7-b9e9-4c61-a2f3-44068c6489c9",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "37548c08-694c-4bd6-802e-43b1da708aed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "99c2ca54-0c98-4e45-a49a-605563e150d6",
        "cursor": {
          "ref": "a6da34e0-3e2a-46d6-b264-ce577f5e102a",
          "length": 283,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "75cfc8bf-56d5-4428-afa5-63143a8e1b66"
        },
        "item": {
          "id": "99c2ca54-0c98-4e45-a49a-605563e150d6",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "c38fcb5d-5cf2-4506-8a71-36cc4ad1c305",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c0c808e2-a3e5-44dd-bc96-8d8be0a265a1",
        "cursor": {
          "ref": "10ed0969-8f53-4574-8d60-000db30ba1cc",
          "length": 283,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "64f1c884-a762-4c50-9cd0-53f76179ec69"
        },
        "item": {
          "id": "c0c808e2-a3e5-44dd-bc96-8d8be0a265a1",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "352739ae-01f4-4a26-9a78-4f24b535f62e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0464a08b-1508-4c83-bded-fb2c124dec17",
        "cursor": {
          "ref": "0afcebfd-eaae-462b-89c8-40de23f3895f",
          "length": 283,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "d19f57ee-94f3-4ab1-b960-a8eaf0c65bf1"
        },
        "item": {
          "id": "0464a08b-1508-4c83-bded-fb2c124dec17",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "b4a63855-199a-4ff8-8d14-d9109cb6eb6d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1c4eef47-01e8-44fb-9ed7-55ce35253f06",
        "cursor": {
          "ref": "7e71b2c4-af28-4362-a97c-30ee60d6e53e",
          "length": 283,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "0debcc92-4d15-4b18-a1e9-04007e0da952"
        },
        "item": {
          "id": "1c4eef47-01e8-44fb-9ed7-55ce35253f06",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "5ef10f97-e0f5-4b86-adda-846075242c83",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b1de4f4e-29d0-4264-9ab7-44346a73769c",
        "cursor": {
          "ref": "08d21f99-4bc0-417a-9861-7f8db2315f85",
          "length": 283,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "b507e047-aaa2-4d6f-8d08-f811f6dfecc4"
        },
        "item": {
          "id": "b1de4f4e-29d0-4264-9ab7-44346a73769c",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "3b7951dd-31f5-4f8a-8b26-227b9eea831f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7954d830-1b46-4a9f-8a9d-87468c0634fa",
        "cursor": {
          "ref": "0fbe9c9d-45f8-4f20-a7a0-5d079ad355b3",
          "length": 283,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "7061617b-5b4c-4c71-a53e-de26a1a514e6"
        },
        "item": {
          "id": "7954d830-1b46-4a9f-8a9d-87468c0634fa",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "21b6ffec-4ce6-4f88-9e36-0cdbe71887e9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b0816656-318e-4a9f-b89e-b7614d65358c",
        "cursor": {
          "ref": "918229c5-009b-4131-b9cf-9dfce8fc48c7",
          "length": 283,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "031c7d8c-80c0-4229-a087-5431e08b9cca"
        },
        "item": {
          "id": "b0816656-318e-4a9f-b89e-b7614d65358c",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "b43d3389-f17d-4404-ae3b-7006d5962aae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c69b151-431d-4a0b-97ca-bc0157b1930d",
        "cursor": {
          "ref": "877e893e-a3ad-452e-8fb6-92d6d68af7c6",
          "length": 283,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "1b203910-2406-43f8-a3e8-e253f79a22b3"
        },
        "item": {
          "id": "7c69b151-431d-4a0b-97ca-bc0157b1930d",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "9c04f061-5ecb-4234-91a8-23e67aeb4fd0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "499794bf-688a-4c13-83bf-8e2eac43293b",
        "cursor": {
          "ref": "3790230f-819e-4d24-a374-f4c5c43686d4",
          "length": 283,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "566b3de7-76bf-43cb-98be-541e7d2d708c"
        },
        "item": {
          "id": "499794bf-688a-4c13-83bf-8e2eac43293b",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "2f6bdfb0-f93f-4f3b-aaa3-4043d05b1350",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6d44eadc-f4a8-4642-bac7-2a4aaee48283",
        "cursor": {
          "ref": "1340df67-d905-4576-af22-7c4b4b66966e",
          "length": 283,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "1fb2c9f3-b6e8-449f-b298-aad94e66e8fa"
        },
        "item": {
          "id": "6d44eadc-f4a8-4642-bac7-2a4aaee48283",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "908ae738-c9a5-452b-b787-d1a84728a6e7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f077a7b4-e1fe-47b8-9593-85730f2cbc69",
        "cursor": {
          "ref": "fee729c4-726f-4492-bfae-3459bbabbcc5",
          "length": 283,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "9256fde5-c63b-4bd9-b600-e42d1925ff6d"
        },
        "item": {
          "id": "f077a7b4-e1fe-47b8-9593-85730f2cbc69",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "b713d8f1-677c-4dc9-b261-8a1d56c75beb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "71b129a1-3399-4150-8fe6-6876b5d27c98",
        "cursor": {
          "ref": "678735e0-3e68-446f-8967-1f82f60c92e5",
          "length": 283,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "8c319e81-bb61-4e69-9315-f1433b903a06"
        },
        "item": {
          "id": "71b129a1-3399-4150-8fe6-6876b5d27c98",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "f1dc7771-172e-4d23-9eca-cdaab269c0d1",
          "status": "OK",
          "code": 200,
          "responseTime": 28,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 200",
              "stack": "AssertionError: expected response to have status code 400 but got 200\n   at Object.eval sandbox-script.js:1:230)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:230)"
            }
          }
        ]
      },
      {
        "id": "3a09284f-8324-4db5-88a7-a3b0c790ece1",
        "cursor": {
          "ref": "a7e6a489-8270-4124-9fac-970f8629ca63",
          "length": 283,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "74d5c6de-7411-4ea5-8582-1ee76ca0dcac"
        },
        "item": {
          "id": "3a09284f-8324-4db5-88a7-a3b0c790ece1",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "a9bc4de8-fed2-4675-8348-8873cb6899c6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "15887300-5cbe-43ab-ad95-86c1782b9a37",
        "cursor": {
          "ref": "fdc594f5-4b44-4c31-97ca-c738ceda4edf",
          "length": 283,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "e710ae21-cb00-4848-9868-39544f7a11d6"
        },
        "item": {
          "id": "15887300-5cbe-43ab-ad95-86c1782b9a37",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "18a47577-9dda-410b-bef8-af794b12eaec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "39122f8b-442e-4d74-85c9-dbc698af3259",
        "cursor": {
          "ref": "1b2e7542-b3bf-45a5-8a73-4c377f30d678",
          "length": 283,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "6d482700-879c-4d2b-88a8-505854efb070"
        },
        "item": {
          "id": "39122f8b-442e-4d74-85c9-dbc698af3259",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "4e073c8b-b002-4e7d-b506-c29eaebd073d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7090d387-70e2-4bb5-9bae-8afcb0974d7b",
        "cursor": {
          "ref": "f6fd7f70-c130-4f9d-ae77-2fc7419d7d5e",
          "length": 283,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "885052d6-5cbe-4cdb-a310-7df8f6aba032"
        },
        "item": {
          "id": "7090d387-70e2-4bb5-9bae-8afcb0974d7b",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "5a9a705e-1fcc-4f0b-9b57-fff4b7b51a75",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fdaa2722-05ce-495f-be2a-53b7454535f9",
        "cursor": {
          "ref": "047c409b-d164-4160-ad46-7274aca3a19f",
          "length": 283,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "34737696-7288-4dd0-8552-5ff52289a4b9"
        },
        "item": {
          "id": "fdaa2722-05ce-495f-be2a-53b7454535f9",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "a39fb8f4-e547-4ea1-84a8-a63f90c743c2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5b766e84-c669-425a-afe1-551d7ae07677",
        "cursor": {
          "ref": "f1f54022-bf3f-48d9-96ce-f2168501df32",
          "length": 283,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "fbaa9fe9-a762-410a-bbe9-951370011040"
        },
        "item": {
          "id": "5b766e84-c669-425a-afe1-551d7ae07677",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "af6cc8c0-5c2e-494c-87d0-497ed03f7d71",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0614f429-4e69-4511-a655-fbff90dd9131",
        "cursor": {
          "ref": "12c4e972-bb05-4f3c-b653-46cc2c69d50f",
          "length": 283,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "fd3f2020-3e41-41ed-b3f3-c3a05a5e72e1"
        },
        "item": {
          "id": "0614f429-4e69-4511-a655-fbff90dd9131",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "0b1e40f3-fde6-4926-8432-a3e5c58937ad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ee2d312-14f1-4260-bfc3-0b87b53edb92",
        "cursor": {
          "ref": "29a5dac7-b771-45b3-a710-79dcc0852158",
          "length": 283,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "f35b3de7-3903-4ebe-98bc-123401653c41"
        },
        "item": {
          "id": "3ee2d312-14f1-4260-bfc3-0b87b53edb92",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "d4c8e110-d0d5-4fec-a8b2-0da16b6bed2c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7dc5e3ef-65eb-49b5-a434-a1ac8fee4eeb",
        "cursor": {
          "ref": "d6dbcb1d-b320-4577-8e36-33104f7cd019",
          "length": 283,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "05911d54-ebc5-4696-bdb1-907971456523"
        },
        "item": {
          "id": "7dc5e3ef-65eb-49b5-a434-a1ac8fee4eeb",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "04193f94-4ecb-4506-9320-cc97e4a18ad4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a84f2ce5-f871-47a7-81cf-291bf3d86b5d",
        "cursor": {
          "ref": "c70af4da-5edb-4d6a-96e4-a3afe7980f39",
          "length": 283,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "310ca1f5-3a24-48b8-9173-dbe342aa15f3"
        },
        "item": {
          "id": "a84f2ce5-f871-47a7-81cf-291bf3d86b5d",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "2031bf8b-2dc3-4353-8ad2-634e8ba041e9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7adee719-3225-44ab-9a12-27337574f4ee",
        "cursor": {
          "ref": "6c7b46c6-108c-41a4-b70e-09ab6ffd0e7e",
          "length": 283,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "32b93ec5-64ae-43f4-9ee6-72d706ba0290"
        },
        "item": {
          "id": "7adee719-3225-44ab-9a12-27337574f4ee",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "fc77bbe9-1cfe-4578-84ed-1d2d395de594",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ddbbf67a-d391-4153-a84f-60a48620934c",
        "cursor": {
          "ref": "bd638054-b544-46e5-ac0b-9ef4b8f25e5c",
          "length": 283,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "9d3667ae-ed82-49ab-9c12-beb498ff5f54"
        },
        "item": {
          "id": "ddbbf67a-d391-4153-a84f-60a48620934c",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "1a75e25c-c76b-4d79-b2a8-aa89662317ca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dd9dc031-1a9a-435b-9764-d95e16641089",
        "cursor": {
          "ref": "8d2ffada-8ba9-4e9b-8e6b-b49df3ef7867",
          "length": 283,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "9522a0d6-7a02-4734-ac7a-3c9b528ee25b"
        },
        "item": {
          "id": "dd9dc031-1a9a-435b-9764-d95e16641089",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "3714f248-65be-4982-a388-077da1f4e512",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f66bb9e5-dd41-486c-8600-213106842ea0",
        "cursor": {
          "ref": "2c2e255b-30e9-4769-8760-f6d72f6dc1ef",
          "length": 283,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "a338dad5-ed66-457f-9ff4-bc05b63ae6b1"
        },
        "item": {
          "id": "f66bb9e5-dd41-486c-8600-213106842ea0",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "b6691465-d91b-4eb1-9bda-79d3314a9f98",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "64ac90fc-bd88-404b-b7ce-2b262e6c0ee2",
        "cursor": {
          "ref": "c75c6f74-f505-44b9-aaaf-07fd2a4c359d",
          "length": 283,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "9a7a2b8a-418b-4c6e-9237-cca782df6447"
        },
        "item": {
          "id": "64ac90fc-bd88-404b-b7ce-2b262e6c0ee2",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "874bb9fa-dbe3-46c0-b130-abe459578e71",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "506cce40-31f8-4413-9acf-a707aeb8486f",
        "cursor": {
          "ref": "4b5c63da-b2be-4793-adb1-7f3243cd5d60",
          "length": 283,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "e4cce662-a601-4646-8df9-915007928ad1"
        },
        "item": {
          "id": "506cce40-31f8-4413-9acf-a707aeb8486f",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "331c9908-d987-4e03-a850-68be7d066900",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "54797fc8-9fc4-43e1-831f-4bbe68277277",
        "cursor": {
          "ref": "f8f17665-71ed-497a-8511-e61b5923e6d8",
          "length": 283,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "fc832e2c-59ce-4664-98fa-d2b188751d0a"
        },
        "item": {
          "id": "54797fc8-9fc4-43e1-831f-4bbe68277277",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "ba6138db-3358-4634-a041-2797f1822e1e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "32a81088-cc10-4fcd-8166-af9360bddf53",
        "cursor": {
          "ref": "8d7830ee-f2da-4400-8874-642641de96a3",
          "length": 283,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "751543ab-89d9-4f6b-887c-aba7582703ff"
        },
        "item": {
          "id": "32a81088-cc10-4fcd-8166-af9360bddf53",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "084e78f9-587c-47ad-bdb0-ca38922f3f79",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7a711664-bcd5-4c62-8f9c-bfd4bd68ba2c",
        "cursor": {
          "ref": "81c6d14f-94bb-4c27-872d-91cf49436be0",
          "length": 283,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "4e83f657-82e4-441d-aaf1-2ce6e45794ce"
        },
        "item": {
          "id": "7a711664-bcd5-4c62-8f9c-bfd4bd68ba2c",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "083df979-b718-48b9-967f-036ca1686308",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "40479b85-0a54-4e1e-a47a-6a7789047573",
        "cursor": {
          "ref": "1786bb06-4efc-4c11-b5b6-879b93eca56b",
          "length": 283,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "d7533b95-e44a-493b-be49-8705c436e346"
        },
        "item": {
          "id": "40479b85-0a54-4e1e-a47a-6a7789047573",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "3609d3e4-42d4-491c-bace-811fe87c14f3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd4a9255-8019-463e-8fa7-07d4b3d6f4df",
        "cursor": {
          "ref": "9ce55147-9500-4a7b-a7df-22f71bc175a4",
          "length": 283,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "79006d10-27d2-478a-9d46-893bee0ecacb"
        },
        "item": {
          "id": "bd4a9255-8019-463e-8fa7-07d4b3d6f4df",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "1a1ef44e-73ad-41ed-a33d-a0b3c0f97d27",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "faf22f83-b3ce-445c-815c-dc3bb63d68df",
        "cursor": {
          "ref": "d59e5591-2a48-4549-876c-a4134fe9e8a8",
          "length": 283,
          "cycles": 1,
          "position": 251,
          "iteration": 0,
          "httpRequestId": "5552602f-b9c4-4ed7-9777-074a837b337a"
        },
        "item": {
          "id": "faf22f83-b3ce-445c-815c-dc3bb63d68df",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "eb8eb9b0-e36d-4a22-9771-df4539c8f39e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "52a9893e-5460-4031-b72e-34c8cb4dd616",
        "cursor": {
          "ref": "7b2e63c2-a027-45d0-8e09-1f842ce8809c",
          "length": 283,
          "cycles": 1,
          "position": 252,
          "iteration": 0,
          "httpRequestId": "86c31f3d-ac8d-4c41-b2e0-20ffc3c7f364"
        },
        "item": {
          "id": "52a9893e-5460-4031-b72e-34c8cb4dd616",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "f7629e0e-b621-4849-9413-94b31b882e13",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "81723678-e74b-4357-afb1-e64cbe8205f3",
        "cursor": {
          "ref": "b2e9a9c7-4ab2-43df-b24c-08c167e01f5c",
          "length": 283,
          "cycles": 1,
          "position": 253,
          "iteration": 0,
          "httpRequestId": "a5430536-cd35-4e57-b456-faca2d69afeb"
        },
        "item": {
          "id": "81723678-e74b-4357-afb1-e64cbe8205f3",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "2618743e-5cf5-413a-af9c-8125d049c54e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ddf87ccf-efe3-4197-bdfb-5e6b21cb3ef2",
        "cursor": {
          "ref": "dfe0112f-2f85-465f-aedf-b2bf2bb56a07",
          "length": 283,
          "cycles": 1,
          "position": 254,
          "iteration": 0,
          "httpRequestId": "2ccac23f-9c4e-4d7c-b2bc-bd2205f5c01d"
        },
        "item": {
          "id": "ddf87ccf-efe3-4197-bdfb-5e6b21cb3ef2",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "430ca9e0-e79f-498d-90ec-8d77f6ace99b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "51a0c365-97dc-4684-b568-3aab6b9d21f3",
        "cursor": {
          "ref": "7c7fc4c3-574e-43a6-83ee-2323834bb7af",
          "length": 283,
          "cycles": 1,
          "position": 255,
          "iteration": 0,
          "httpRequestId": "bc38db6f-236e-4b5e-9ec8-9d6bf29998ea"
        },
        "item": {
          "id": "51a0c365-97dc-4684-b568-3aab6b9d21f3",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "3e1ec9dc-f941-4d4d-a5be-88e35dbfdcfe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "47e9f98c-a6c9-4ed8-967f-c98e69d1fa45",
        "cursor": {
          "ref": "8878dd7e-b4ef-4a52-83aa-0b5a8bfa0a6e",
          "length": 283,
          "cycles": 1,
          "position": 256,
          "iteration": 0,
          "httpRequestId": "3e948bbd-3a26-481b-aa56-8d260391b7ed"
        },
        "item": {
          "id": "47e9f98c-a6c9-4ed8-967f-c98e69d1fa45",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "fa4438bd-9870-4066-ab48-f683152f9d19",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d01f03f6-402c-4cad-9fbf-25d4464bf233",
        "cursor": {
          "ref": "43c61672-888a-4bd6-942b-0f1329fd023d",
          "length": 283,
          "cycles": 1,
          "position": 257,
          "iteration": 0,
          "httpRequestId": "155b5cd5-b48e-4287-9d17-510e0ba9d30e"
        },
        "item": {
          "id": "d01f03f6-402c-4cad-9fbf-25d4464bf233",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "9e294ef5-cc79-4e6b-ad22-8735338b9c44",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4f30e624-65f3-40a7-adcc-38c86f9160c0",
        "cursor": {
          "ref": "5ee91800-aeb8-410e-9702-a23dca5139e0",
          "length": 283,
          "cycles": 1,
          "position": 258,
          "iteration": 0,
          "httpRequestId": "650f2825-feff-4253-96ba-f7a6c7e823a5"
        },
        "item": {
          "id": "4f30e624-65f3-40a7-adcc-38c86f9160c0",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "bf5b463a-ce97-4565-a5ca-769fa64c3c1a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "067959b9-6d1a-4b5b-851c-2583e07e6a64",
        "cursor": {
          "ref": "1eef3a6a-13c9-4182-8253-d22d1071c7fc",
          "length": 283,
          "cycles": 1,
          "position": 259,
          "iteration": 0,
          "httpRequestId": "0ad5d5fc-54ea-4b92-985a-4148d4df954c"
        },
        "item": {
          "id": "067959b9-6d1a-4b5b-851c-2583e07e6a64",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "71660753-dae9-4fe5-9314-61837093d90a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "696b05d2-05f2-402f-84d0-a72258e8e79c",
        "cursor": {
          "ref": "5bd96192-5510-4df6-b681-4ef157357b2d",
          "length": 283,
          "cycles": 1,
          "position": 260,
          "iteration": 0,
          "httpRequestId": "4f90ec8c-ae54-45d1-b8b5-fadc34b35122"
        },
        "item": {
          "id": "696b05d2-05f2-402f-84d0-a72258e8e79c",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "05d1a367-ca14-4dcf-8237-f499ac616be6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "40a4535e-672c-4150-894b-d6dd81a74577",
        "cursor": {
          "ref": "0d189e37-88a5-4be8-8b57-62a9b027feb5",
          "length": 283,
          "cycles": 1,
          "position": 261,
          "iteration": 0,
          "httpRequestId": "10b66981-3771-436f-bd22-8615df29330b"
        },
        "item": {
          "id": "40a4535e-672c-4150-894b-d6dd81a74577",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "c6ce1535-2420-4362-9101-e2bace85a2e4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0edc99b4-79ad-4c17-b6bc-75b1804b0db4",
        "cursor": {
          "ref": "bb0a44db-4260-4018-8985-82a7b458211f",
          "length": 283,
          "cycles": 1,
          "position": 262,
          "iteration": 0,
          "httpRequestId": "0b17829c-d6af-4f66-af1f-310966299de1"
        },
        "item": {
          "id": "0edc99b4-79ad-4c17-b6bc-75b1804b0db4",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "3a17ed0e-a349-4acd-9159-95a380668b84",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e65bc1a0-29a5-49c1-b6f9-690a604697cb",
        "cursor": {
          "ref": "0ca9c47e-03eb-481d-9c20-e6049bc9e6c7",
          "length": 283,
          "cycles": 1,
          "position": 263,
          "iteration": 0,
          "httpRequestId": "33a1d9bd-8855-4237-bb48-35dc0ecc4fd5"
        },
        "item": {
          "id": "e65bc1a0-29a5-49c1-b6f9-690a604697cb",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "dc1f5793-5b22-4fef-a8fb-273a6fb84232",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7a4adfe1-2f0f-4934-8760-9c03fae70878",
        "cursor": {
          "ref": "f966c280-2892-470c-a4bc-a6c3a817f048",
          "length": 283,
          "cycles": 1,
          "position": 264,
          "iteration": 0,
          "httpRequestId": "dc3ccecc-8809-4748-b45d-4ce21a2132f1"
        },
        "item": {
          "id": "7a4adfe1-2f0f-4934-8760-9c03fae70878",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "69863148-426a-40fc-aa01-e980784cbc45",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9542d844-0b3c-4c51-835a-fbd0326cf3fe",
        "cursor": {
          "ref": "155b0263-1f1f-47da-b8c4-69994138add9",
          "length": 283,
          "cycles": 1,
          "position": 265,
          "iteration": 0,
          "httpRequestId": "cd763235-270c-4df0-9f66-c878e0f95bd0"
        },
        "item": {
          "id": "9542d844-0b3c-4c51-835a-fbd0326cf3fe",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "16a5ae83-8b22-4f86-bb01-a6f2e377e9dc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be153127-05c6-4ab9-8392-16563154e6b6",
        "cursor": {
          "ref": "629bcbb3-8db0-49ef-b138-94f0bd2d92d1",
          "length": 283,
          "cycles": 1,
          "position": 266,
          "iteration": 0,
          "httpRequestId": "7413d94d-62d0-4d2a-b689-969377ba3f0f"
        },
        "item": {
          "id": "be153127-05c6-4ab9-8392-16563154e6b6",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "ce8a26ba-d32c-46ba-9cc8-2c834249653b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5feb92a0-4728-418a-b423-aacee53be2ce",
        "cursor": {
          "ref": "e8b4f2a7-ec22-40af-9f0f-5255afb541cf",
          "length": 283,
          "cycles": 1,
          "position": 267,
          "iteration": 0,
          "httpRequestId": "fb0c3e10-08f6-4bbf-8cf6-d2cfbc8545da"
        },
        "item": {
          "id": "5feb92a0-4728-418a-b423-aacee53be2ce",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "ad75c2f5-080c-496b-8588-d82f6a317d6c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f7c4bbd4-7266-4a37-8286-250182606a3b",
        "cursor": {
          "ref": "4e2ead2a-3e88-4e13-b943-3ddd99c559a3",
          "length": 283,
          "cycles": 1,
          "position": 268,
          "iteration": 0,
          "httpRequestId": "5401d50a-9eae-49ff-b68a-ae0fb5e6fc1b"
        },
        "item": {
          "id": "f7c4bbd4-7266-4a37-8286-250182606a3b",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "6bf5db2d-4d9a-46de-9e2c-332df7d0e8c2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f434b6e2-5f2c-42b7-8c57-447c6b1b8caa",
        "cursor": {
          "ref": "667bed09-88a9-45d1-87c7-2f3575c762f8",
          "length": 283,
          "cycles": 1,
          "position": 269,
          "iteration": 0,
          "httpRequestId": "dec53c3b-65a3-4d27-ba67-ea91046e715e"
        },
        "item": {
          "id": "f434b6e2-5f2c-42b7-8c57-447c6b1b8caa",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "616eb848-bb76-47c6-92a1-1b00f67cc838",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b26a4da8-a585-4f1a-b4a3-583ddb13071a",
        "cursor": {
          "ref": "0ad261b4-3be1-4286-b0bd-acbe4bbc0ac8",
          "length": 283,
          "cycles": 1,
          "position": 270,
          "iteration": 0,
          "httpRequestId": "fccad715-ddb1-46c1-a692-416659efec50"
        },
        "item": {
          "id": "b26a4da8-a585-4f1a-b4a3-583ddb13071a",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "802fbaf6-0177-4b25-8c44-c6d7a78b92e0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2cd8d0b6-1f9c-403a-9c44-e23b47cbbab3",
        "cursor": {
          "ref": "9a8e4a1e-dd94-4298-a677-8af022dad89f",
          "length": 283,
          "cycles": 1,
          "position": 271,
          "iteration": 0,
          "httpRequestId": "71f437ed-cd5a-43c3-b535-67ef5c8b0378"
        },
        "item": {
          "id": "2cd8d0b6-1f9c-403a-9c44-e23b47cbbab3",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "c5a6875f-125d-40fd-b6dc-c12e51d49b7a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6d9907a6-8232-4cd8-9bd6-10b4af432973",
        "cursor": {
          "ref": "cfb57261-ec61-49c8-b921-0d63c56406d0",
          "length": 283,
          "cycles": 1,
          "position": 272,
          "iteration": 0,
          "httpRequestId": "3e33f4c2-da39-4872-b3b2-7cc1558d26af"
        },
        "item": {
          "id": "6d9907a6-8232-4cd8-9bd6-10b4af432973",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "6f446c6f-1762-4ea7-91ac-9cc1df64b9be",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "af590042-cd6e-4975-a2e6-d539bb1a22a4",
        "cursor": {
          "ref": "b64b0b1a-8dcb-441d-ae97-9462a4b571e3",
          "length": 283,
          "cycles": 1,
          "position": 273,
          "iteration": 0,
          "httpRequestId": "7b0a7b9c-af33-428f-897c-7280baa0b29a"
        },
        "item": {
          "id": "af590042-cd6e-4975-a2e6-d539bb1a22a4",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "852a21c6-979a-476c-9123-ea58c73f637e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "91e6edf4-82e1-4d35-bbe7-92cfc479c250",
        "cursor": {
          "ref": "32af3c34-c9f3-425e-97a4-37154d2d8f4d",
          "length": 283,
          "cycles": 1,
          "position": 274,
          "iteration": 0,
          "httpRequestId": "bf188220-4d11-4fc7-9449-628a8ad84fa0"
        },
        "item": {
          "id": "91e6edf4-82e1-4d35-bbe7-92cfc479c250",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "5327bcd5-8afe-413b-a740-c9cd4869cccf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "35612d34-2dbf-402a-a784-8228d7922531",
        "cursor": {
          "ref": "1a52e0c5-46fb-45c8-9927-c487cb1b52cb",
          "length": 283,
          "cycles": 1,
          "position": 275,
          "iteration": 0,
          "httpRequestId": "95471d62-12c6-408e-9100-e75d01df23fb"
        },
        "item": {
          "id": "35612d34-2dbf-402a-a784-8228d7922531",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "a3b58950-5cf6-4d71-8260-eae0ab439f03",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1527b666-a982-48d3-9264-d4fab0d5102e",
        "cursor": {
          "ref": "ddb77403-98cb-48d6-9369-80e2a2dc7c06",
          "length": 283,
          "cycles": 1,
          "position": 276,
          "iteration": 0,
          "httpRequestId": "69a06e6c-2ef3-4b87-9f3b-225b21d10f40"
        },
        "item": {
          "id": "1527b666-a982-48d3-9264-d4fab0d5102e",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "f42fdb88-10e7-4ab4-8918-94fed9ef2bcd",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 22,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d1108346-c7a9-4a0e-abab-8e9a05049b9f",
        "cursor": {
          "ref": "9b91fe87-b8cf-4c72-857a-33241baa5d5d",
          "length": 283,
          "cycles": 1,
          "position": 277,
          "iteration": 0,
          "httpRequestId": "e1d9f982-4307-410b-b2ff-76a6f3f5458f"
        },
        "item": {
          "id": "d1108346-c7a9-4a0e-abab-8e9a05049b9f",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "30a4c6f8-2aa6-4b75-8dab-b5a4a9625ade",
          "status": "OK",
          "code": 200,
          "responseTime": 25,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d87d86e-5ef7-444b-83bf-8eb4ea25a5bf",
        "cursor": {
          "ref": "97808663-d3a9-4be7-a5eb-fbfe5a78d03a",
          "length": 283,
          "cycles": 1,
          "position": 278,
          "iteration": 0,
          "httpRequestId": "8dd16443-ecc5-472b-b8cc-9d70e7f2f0a7"
        },
        "item": {
          "id": "7d87d86e-5ef7-444b-83bf-8eb4ea25a5bf",
          "name": "credentials_verify"
        },
        "response": {
          "id": "b96002a5-d626-46fd-b7be-ed3a1e47fc7e",
          "status": "OK",
          "code": 200,
          "responseTime": 38,
          "responseSize": 37
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "da444f7f-5343-44a2-bfa5-b19f76f18dd4",
        "cursor": {
          "ref": "c1e01e13-1214-4205-bae5-b3283bcbc885",
          "length": 283,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "1ccccf11-0e10-42fa-a918-8287bf9d9fe3"
        },
        "item": {
          "id": "da444f7f-5343-44a2-bfa5-b19f76f18dd4",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "9e22c8e6-0580-4b8d-abd9-d40282aee5a2",
          "status": "OK",
          "code": 200,
          "responseTime": 36,
          "responseSize": 37
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "e9a0407c-f2a2-4f72-9eab-aaf6adc2f6aa",
        "cursor": {
          "ref": "d0c9d348-64b0-4e20-8737-8c7fe92e96cb",
          "length": 283,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "0f2614ca-5225-4da5-8955-5fcd78c5b54d"
        },
        "item": {
          "id": "e9a0407c-f2a2-4f72-9eab-aaf6adc2f6aa",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "4112d7c7-85c4-41c8-a1a0-63d7b7d071b6",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 22,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e9a0407c-f2a2-4f72-9eab-aaf6adc2f6aa",
        "cursor": {
          "ref": "d0c9d348-64b0-4e20-8737-8c7fe92e96cb",
          "length": 283,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "0f2614ca-5225-4da5-8955-5fcd78c5b54d"
        },
        "item": {
          "id": "e9a0407c-f2a2-4f72-9eab-aaf6adc2f6aa",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "4112d7c7-85c4-41c8-a1a0-63d7b7d071b6",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 22,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "df6b4c14-d1f3-463b-ba55-75ffc4cee4cb",
        "cursor": {
          "ref": "85eca580-1ae7-4072-8245-f9c4b7599cf3",
          "length": 283,
          "cycles": 1,
          "position": 281,
          "iteration": 0,
          "httpRequestId": "ed3e7dd3-8860-49ab-a36e-330c42679344"
        },
        "item": {
          "id": "df6b4c14-d1f3-463b-ba55-75ffc4cee4cb",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "47c3ce88-e193-4459-9aa9-86fa246b1bab",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 22,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f314e8bd-c5c2-4965-b144-66b65b292bab",
        "cursor": {
          "ref": "263d6809-b76d-480d-b00e-82fa63cc0a23",
          "length": 283,
          "cycles": 1,
          "position": 282,
          "iteration": 0,
          "httpRequestId": "a6a4bdc2-9906-474d-ab94-88db3a85e8fc"
        },
        "item": {
          "id": "f314e8bd-c5c2-4965-b144-66b65b292bab",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "b47e0805-02e6-4949-90d9-091cacfccf4d",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 23,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}