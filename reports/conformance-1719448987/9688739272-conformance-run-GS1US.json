{
  "collection": {
    "info": {
      "_postman_id": "0b8a4a7f-f952-4403-a9a4-909b37b8fa24",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "cf7f8dea-825a-4093-a190-5eb4cddb18db",
        "name": "Clear Cache",
        "item": [
          {
            "id": "5d837fbd-7f0b-4037-9bdd-397195da3891",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "86fccdfd-0da9-4f8c-a4e8-19fe28fd01fb",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "d427216f-89ae-45a4-96c3-d49ec6cff73f"
                }
              }
            ]
          },
          {
            "id": "890674b1-971d-45c7-bae2-38a4c0659a57",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "c5e6d043-d984-4d40-a31f-ed14fdbe6930",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "979859ab-9e03-4404-b353-e3d1dfea51e5"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "f3179c29-915d-41e5-8c6d-814693e3402d",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "06f0291f-0446-47cc-a26c-db8ffbbde2fc",
            "name": "Positive Testing",
            "item": [
              {
                "id": "66e7f0a9-3d01-46ef-ba59-3989a10f8c59",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "75aba0a0-4ff7-4184-b35e-cd1305dcdce4",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "8b472021-1114-424b-b201-05a0c0acb1d1"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "ad121ff9-f438-48b0-b858-a43fc972a788",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "d2392f0d-cdbb-4527-b0f6-0f0aa09efd07"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "5abedf3c-59e4-4ed9-b4e8-77ff625b4f1d",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "b61c5f44-b42a-4f00-8273-02ac4bde864c"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "abb72fe5-4cfe-4230-a6b5-baf757e3f959",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "215a3f91-7a81-45c8-9e91-46b6f9e97d4f"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "bba63a93-b51d-4351-bafb-9e987f7c5db4",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "78af2140-080f-4661-beab-3da383400b41"
            }
          }
        ]
      },
      {
        "id": "9ba4c33d-bc61-403a-b4f3-a7ea39b9b139",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "3fceeb45-a66f-464b-8c44-c42d70694b81",
            "name": "Negative Testing",
            "item": [
              {
                "id": "0cf636fe-ef2b-4508-b308-1bb3b6319bdf",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "2d26f665-8c19-4481-bd19-72e12e3ec707",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a8b1d270-5d79-436f-a567-1885320dad6f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "6ce5fa27-7dd9-4f32-8886-aeef791996f4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "32e6ab3c-f6be-49e5-a644-5aef8a50e79c",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f14cfed8-c57f-4490-9cf6-fa610b4b8ab9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "33d0fdb8-e58e-4d81-b66f-1dbbdbbdea5c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ab96f285-bd1e-485c-8065-d285231319b7",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "81d3f400-9b36-40e9-b55e-3bf0a3abecdb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "2af968ba-7ca6-40dc-b897-73add43db2c4"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "9e8c718c-442a-47b3-9791-0dafb3e2afd9",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "4c57ed03-7066-4d95-bc39-7c9f52890268",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1c95a4be-6c35-4b16-95de-bce1af3da356",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "1cd66f94-1687-4c4d-a534-d3c156861312"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0ad49974-f27b-4b68-86b0-c9a35c57d5a4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "86692171-bde5-4971-b0f2-e768257130e9"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "b79e0717-1e14-45ef-90ed-877a19d38e6f",
            "name": "Positive Testing",
            "item": [
              {
                "id": "b9c82048-cd3d-4357-b256-2bc3e48aa689",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "b630e4cb-95f9-47c0-9d46-e5e14843b10f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "7419657a-f790-434d-84ef-2371b90ae730"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "64dc5f1d-0767-402e-921e-98929d0026c4",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "dff6971e-d232-4e66-9bdb-ede78dc78655"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "d9a5426d-399c-4cd4-8c72-ae04a660fa27",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "a3864511-4907-4301-b0fe-7d9178b7676c"
            }
          }
        ]
      },
      {
        "id": "7830e7b9-08fa-4aee-9f34-ac2b55918c77",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "12cdb46a-dbd9-4bcf-9e81-6d146d49267f",
            "name": "Negative Testing",
            "item": [
              {
                "id": "d2559fb9-e33d-4865-b313-bd92fdd1bf1c",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "41acbffc-058b-478e-8afe-49911d81080a",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5bf89c17-3d67-4732-ba50-a06b659eac37",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e2139b73-67f0-43db-bd71-24a112fd696a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6a4da149-a637-46b8-b38f-ff59a9a5255d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ceb523d5-0eb3-4be1-bd0a-a74f4210b476"
                        }
                      }
                    ]
                  },
                  {
                    "id": "72d2bb41-60ab-4fd5-bd88-d991b01d66c2",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b3574a6c-59d2-411a-9e02-d31703631b23",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a9f619c5-4bd6-4243-b967-ed87c64bdc1e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f3a3bab9-d8db-419d-adc5-a44ee4cb60db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "405ce6db-8683-402c-b3bc-41c7635bf4bb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f7d49a8a-1ea0-4dd8-a930-28d3366790fc",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "36b77b06-a2aa-4178-9525-723f6d750174",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4210d4e8-9d08-4877-9f46-a15bfade3116"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "072519bb-c4c5-4397-8c6b-9792a7943bc2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f1d5d1fe-efad-4068-9e37-147dd6ba6865"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9484cfda-9b41-4f80-8621-e2c3e4b8c073",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f7e107b4-4dd7-4a92-a610-42607aa859e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6e3a278d-f3fe-411b-b23b-7ce9da873b4f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6bf98307-a3d1-4d48-addb-4e40c50a9d43",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "fd925c06-afe6-449c-93d5-34a3714f7bcb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6c8ace55-c0c7-4c15-8a54-8ef599188f60",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2e968206-214c-448e-8f49-224a2c9c265a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2405f731-711f-47fc-977c-647e9935d384"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3346d728-0fee-433b-95d1-924910ccfd25",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "70d5f352-878b-44d1-b19f-9e591050dca9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "62249be9-9963-412b-9782-866df8bdcbcf",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f90c4636-a31d-4f0d-8e1c-49ce3b0985b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4d5536b3-4292-4fa5-9e38-9f1d7f419d7b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f24daf09-702b-42b1-ac3e-3b2c78c0f74d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e682422d-9807-46f5-8fe4-5d8c53128ab5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "81349335-e046-4f10-9da6-107df7d1eb9d",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3161da9a-7e8c-4af4-831f-f2c422d135a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "58786a69-680e-438c-935c-b016c7950702"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bd8c0715-769b-4463-afa8-25de3570c156",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b2025b96-2e56-4374-902f-1397de3b3217"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7c902239-c4d7-494a-ab19-9536af7f3f93",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7dd3fa5d-c60e-49ed-9f06-ab7b5b98db97",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "424e331f-0669-4eb6-882d-050d4390c917"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5906c02b-dfbc-4a23-bd47-ee3619524dab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "04bae239-1b35-4d71-8bca-001a0071b370"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b4dc1058-afdc-47a0-a957-bc5832631a9d",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "385376a4-cf8e-4d69-b359-95f60ddfe5bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aac6c8d8-a76c-4516-afb8-75d93b4e7ef8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "de57f22e-697c-415a-b5f6-f51d609aa92d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "cd5fd379-b05a-455a-903f-46fad0965907"
                        }
                      }
                    ]
                  },
                  {
                    "id": "62bc281e-eb44-497e-9ab7-ad348acea3be",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0dbd57dc-6ead-4537-aaeb-8ba427c71ffb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d2a5db50-e8bb-40db-8794-ea854ae71872"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7909fc58-f2b3-46b1-bebd-014fa38835d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "33661f73-b480-4f09-98f3-727d9dba42ce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1671236d-d562-45dc-a026-52b9910f3a65",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d37ff4f-6cb4-4e1a-8c3a-d26738d41eba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6ef6b5b9-e5f1-41cf-9722-652c9a462f14"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "22ac1035-4d7b-4c30-9884-eb3488f7578a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f6d580cc-0aca-4766-a569-e8ca21995258"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8d37ff82-1872-4968-a578-8980f164ab7e",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "84cfee98-0050-4b47-ac15-2a816992c622",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d4081fc1-30ad-4040-b9c3-77c5104f32d6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "50b01532-cfbe-42d0-b9d3-53210fb3e712",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "94a5ff9d-4035-4309-8745-8cc389d336b3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7d6431d4-1d33-42c7-9583-4b53a19e927b",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7d75e8d6-59ad-444b-8576-b876ff900fbe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b1827885-b2ed-4771-a610-d718d19124f3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "88fb334b-29ef-45dd-bbcd-93290528a320",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e11cf69e-844b-464b-807b-b5ea422c51a1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "618bb4e0-8ff5-4c01-b75e-dfa6c275ba65",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0acf4d97-aa95-4b40-81ad-9121b0d1118e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dd967989-4b03-4466-ae7a-489f6c04cfdc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bc28ab17-ac07-49dc-b13c-e62d836bee28",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d681b64c-9aca-4d32-b0d8-a5a6cc780763"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2a1e62f7-145a-422a-87a4-975a971abf56",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "746840d9-2cc1-4055-9f27-d63577f21cae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aff8a0ba-b17c-462f-a5e0-f12bad3693bf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3fd615a3-ce5f-4a13-ab98-284dd51bdb1f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "5a3dc3fa-3f55-469d-a5c1-572c003a448e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f5960ba1-65e5-4199-b9b4-374f44a7d0d3",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "04f157a3-6fa3-4eef-accb-3974dd00ef6f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0636aa77-f933-4908-b0a1-3dd1c5a8e6a7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8cb76573-139b-4042-bfe7-36e1ae06d3cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f1ced0dc-fc94-4d13-bbd3-4b8245f59728"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7614ae39-d4c3-473b-861c-616cb25211fe",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "54975e6a-678f-42d8-a314-4676166a1438",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aaa84702-96d2-4cf1-a2a3-ad6d0df6417f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "563d36e8-52c1-4478-9343-55619a1612da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "fec7b6dc-2600-4561-979f-1b3bd4c6839b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6b358397-85fe-4a20-b269-11dad5672b80",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "102651cb-1f5a-42e3-aa28-aaa5f7a9d3d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "923c5430-f186-4524-af96-f92a6070793c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c00b01d8-6071-4317-8268-4533dbe1f998",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "3ad978c5-60f2-4fe3-a180-e1b89dd37699"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ffce7c11-1d49-4b28-abba-84b1c8b500ed",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d1e15fb-617a-474e-adf3-0f5ce6093323",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bb6226ae-f654-4ba5-8e12-afcd8102ece5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0d0eba65-a9fc-473d-9e66-74b3e72a7ff8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "6a09fa00-cad3-4f4a-bd9f-e79e7eac1894"
                        }
                      }
                    ]
                  },
                  {
                    "id": "157fe0df-8866-40ea-82ee-01dc10762f62",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "153eb07d-72a7-4b1c-9e68-db9630f2a03c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a13500c1-0a5b-42bb-8970-c2d45ce2eadd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ab0e13a1-ffb0-467b-bd23-1570762fde8d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "7dd10a89-6860-4cf4-9217-f7d76f5ddc73"
                        }
                      }
                    ]
                  },
                  {
                    "id": "db69c5b2-28b3-47b4-a21b-05a5c69936eb",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "75243319-8828-4562-84ee-4bf65b35fa49",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "40e5c743-f2d2-4b2c-866e-32b6b1456b09"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f6572ed3-fb98-40be-82dd-9d36608eb9e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "ec08dd8b-62c4-4884-a829-d8d7d2e52cb0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ac6eb1e2-3d3f-45c2-8b67-99a843f5cc38",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7b5a62a5-e970-4804-b8bc-b66672b3e39d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7ba1189a-fd92-4ffd-9970-3f84165bfc5d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bade0c6e-e448-4087-834d-ae9911efe4d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "61dafafb-dd54-4912-bb8e-5271658a80b7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c0067acd-3c39-4ecf-97ae-98257d2086b3",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "43739c8b-1a0a-4f30-a106-37da0ba4b86d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c5e2c0da-bceb-4084-a260-062443d1872d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d06ba2f4-fa0c-43ac-a65c-58c374b48496",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "337eee8d-65e8-4097-a5d4-849c8f73b8a0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c16ee0a0-159e-437b-bd27-93e24051daac",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "70e8e5f4-6c0f-4922-aabc-384ade514ab3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c781ad55-a2fb-437e-88a2-eec9522db373"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "afa6e7de-4ee7-46ef-979f-435302dc4b92",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "365e71e5-9ab0-4cc3-a526-48c7d431fc8b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c1464c56-d805-4908-926b-7dbb2e88db77",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "52dd5086-c8c4-4249-a165-8ab464439ec9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b901c1f3-94ca-44f3-9002-b25d53f2ea4f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f20714e5-20c3-4f8b-adc8-54dc5b500abd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "b5969a01-d0b2-4bbc-b5ab-3da91e9efe06"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b514a077-c26f-43f1-ae15-3276d81a2a5a",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fcb51407-4eb2-4fd3-893e-621dcdccb710",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "efe923a6-cb67-43d5-93f5-ab32e3c66154"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6fbe935d-0db2-4dd7-89fd-683ccea0bd08",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "920c61e1-e3e1-48ae-9a75-e79a847e45a6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "159bdd97-deae-4b9e-8dc4-4b0d6bb56ee2",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "36d5001d-7925-4f3b-b06c-4842d635e0ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5aab3388-3094-4414-9d80-48d2527350cf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1019a385-d72f-41f1-815a-c80468187e53",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "1b1979d8-241e-41e7-bd1d-6f771d620896"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e298e32c-876a-4298-8d16-e52e4409c87f",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f20a542b-f87a-4db9-80b5-d0ad20c4190d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0a28ca67-3d63-42ce-b712-24951eabab2a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ca1ec5d6-eb49-4091-a51a-7dd688325a1b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "5518bbe2-a376-42be-b613-aa3c49aaebe2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9931afb9-634f-4219-9342-53afbe45d283",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0709ecbf-91ac-4c2e-bbff-53629edd98dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bab669f0-6a1f-467c-b09b-3c89cbb50cde"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9d7e8a28-ae1c-44ec-8f58-8a1cc07720e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "ae3521b5-c8df-49be-b732-bab6dd0b5baa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e622e67b-b55a-4e43-9deb-627b94e0143f",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1f5113d9-2092-45ed-969b-7c5fc574f0dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bd51ff97-7d2f-41cc-8710-d8977be1a518"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "69ea1aa0-3f4d-4e56-8862-326b9a2e81ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "eadd0550-7115-4666-88d3-1399c41dbf7d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d3bb7b7f-bec2-4861-a6dd-674b5c639f79",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "74388ce5-a61c-48e7-9719-684274e0fa28",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "43caeb36-3b0c-4278-a732-7b3e2cd64986"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6d9ac120-9d0d-4712-add6-18e5e972b7d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "5c9a2d07-16ac-48b8-9da0-da45c2008293"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7902807b-59dc-4f44-8f92-6a142b92200c",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ec402c37-fa6c-406b-a142-a30a219b9699",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fcabe453-8cff-49bb-9248-0ac264c69a54"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dd5d8018-ce03-469e-ba3e-4ee8b301d1f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "471da130-e94c-4d8d-8b1d-bd14c68e6fbf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "28cbf864-786d-4a21-8534-6c1a51466cb7",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e051285f-07f6-4451-b0dd-4859a2ccffd6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "307ed654-6abe-4b3b-9931-e4347df33e3b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eb5104ce-5ad2-4412-80b8-9045baa7226d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "8c3cab74-1efc-4e75-9f0b-23ffe32bafd5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e9e7a419-d30f-4aa0-8090-a7cc4f2aa757",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1940ec7b-ec28-46dd-9d07-ee052dc72ffd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7c2fd811-2d6f-4beb-b2e3-163029df3190"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "326e5917-9a49-4033-9fb8-afb3cfdc2636",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "dff77911-8407-490d-9ae4-5ca3c27eeba9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0c4417ec-3b40-452c-bf4a-9975800abd41",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4631bac7-f35d-4fa5-80bb-9a2ab977d91d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "70b5718d-79d6-48c6-944d-915e2f0dae64"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2813de20-559e-48e1-af26-15d3bd84e7ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "27af03f8-707f-402b-9eb1-babc220ac96b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9e1c5395-c930-4fd4-ac5e-7c3b7e0ae609",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cc26a3a7-bf77-47dd-9943-a1fd53d173bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "e3d9b802-43c7-4d9a-85cf-85c70af73ebd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "13bb205a-bf88-4162-83c5-1a9ddd4e9321",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "e4d3b1d1-c221-4f6f-bd19-ed494b771bd7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a2f49e80-974f-4281-86db-fe5166c76b30",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c12042ce-ae9c-4d5d-a644-fc5d0ba70aae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f3cd94c6-8831-480b-8abc-e4501f9079f8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7adcc3e2-ee54-4db7-b3d3-23e58fa30d25",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "5516c542-d9e0-42c5-b7f6-4d11228c23ef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "577488ca-46b8-446a-8e1b-860c854845f7",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5e67908e-7d41-448e-b0b6-8944d354c612",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "06f800f0-6b52-49b7-aabc-538d478ab371"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f9c47b34-e864-4e8e-9ed5-842ba7dcc221",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "b1e9d749-bd78-450d-a5e7-08a9d58d60fc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7a26ffd1-94e2-4746-bbf9-e2828f44168f",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "296e2aa5-6c98-4439-9d85-842dcf76fda9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ff5fb545-58f1-46af-93f7-4b6e4b83cba4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7d8080c9-4545-4574-b61f-f06130e948d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "a919ab9d-3416-4501-874d-b7097a838698"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5e2e61f5-d2a6-4998-800c-17f3d2c74141",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8ee30b00-573b-457f-9705-d95a8cb2ff12",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "19f85190-131b-4f26-959e-7b2f5c7d040e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "313dcda6-3df3-4fd3-92f8-e8460a7d7279",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "9004741c-b3ef-4248-a149-0571f95edfdf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f31ba8b6-2ab0-4003-b5cb-e60c47279add",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fe65dabb-3dcd-47fb-bf18-788d6402823f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0b070af4-cb67-4d8a-83ae-9f3f55797579"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4cba6275-5a40-44af-b407-7e64f8724779",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "0d5a2ca3-1b76-4286-b513-094ef5756ae4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cce53d4f-bbe5-464c-8905-aaea99969481",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f4809d4b-86c3-47be-9dd8-9cbbfa655e22",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3c8b7ac0-c250-4011-8acb-8da9eb860a7d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "23313c24-d18d-4580-ae4d-19f9ebd15d33",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "1f0e83e9-dec0-4a51-9b8b-97b976bbb531"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6886b1b6-f096-4fae-9b66-7fc7aeabf108",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fcbb6361-9d07-41f8-a54e-104890f0589e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8e2250a6-6754-4177-ac15-2bf802821d78"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "503e230a-ff15-4b8d-bc96-7117de2fde01",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "f355d8ad-6e78-494a-b497-acf5c6d34c52"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ff3448db-14dd-477f-a759-9a9a92f2dcfe",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bb3791be-7c26-4081-9c9f-30dedc6ed1b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a8a0fd60-92ac-4e52-ab1b-871989a3f189"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dccfb6a3-4ab4-4165-bda8-7ac34fd79966",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "700095fe-fc4d-439d-83b0-d74a56d1bc03"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5b66f6cd-d5e3-4e76-afe6-8e6f3317166c",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f5ccd3b9-194d-490b-99c6-88ce028f82c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "28c325e8-1349-4822-b738-daf1a0ba65d5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "67c6c8b2-e955-44e1-9488-8d477d7d9201",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "ad5defca-50cb-4a4a-b82f-55c20b2c2011"
                        }
                      }
                    ]
                  },
                  {
                    "id": "92f46e34-f9ac-403f-807e-65d97f43eb4b",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "733d7084-b6ca-4c53-8105-a23e94f747c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "513c243b-63da-4b94-ab55-e4d310de7208"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e247a934-7893-49e7-8696-a2dae989af3f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "022156d4-74d1-42f7-98ca-b2bed3a0006e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ff1d228b-7213-4d74-8bab-3fa782ab2f75",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "61e0e0b8-ec95-4a9b-a8d2-2daea188224b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "82ab43ca-d76c-4d2e-a676-788e7a5e3cd2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c5dd6551-ba57-4431-b0a4-66012726add9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "8293b4ad-0a16-4030-863b-501f006c9f1d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2b6f08c8-6011-4728-a5f4-eb68be1b1cf6",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "066d88c7-0e26-4999-93bb-59463c503b2a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "522df682-9280-4339-a244-6a3271c1155f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "39049812-2360-464c-bbb4-7dee42480246",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "d1dccea8-28f9-4122-bd7c-37a71eaaa033"
                        }
                      }
                    ]
                  },
                  {
                    "id": "afa41229-2572-4b9a-875a-508807fc6c7b",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e9f9d764-5066-4c4e-886b-0c791664d69b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f212ce95-10fb-4628-b25b-88cc8c4ce96c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3989ab88-a534-4a7f-a7df-222bc1d34d98",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "63f5bf71-7946-4753-9a47-49316c362b1f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "36e1b1ce-2329-4a19-9c5d-27b2589cec88",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "42a52da0-6f44-4087-a605-8e228d5eeb87",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "29c0cffb-b209-4c38-a02e-7fed254bd97c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "af8f8e5f-3ad7-449d-b60f-0380046ad265",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "d44fdd29-ad50-4d4e-85f0-643530b75ee8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bfaa0283-50a0-4220-b1cf-cbcc353100e7",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2f3e7ba9-4cf1-4264-9a48-d184e8ad4287",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fa0a71ec-cced-46a4-80cb-97f9011692f7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "55ac5ee0-1a65-49fc-ba54-7011f664ddd4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "3c8c0c8a-0335-4366-9b10-860e740f2f5c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "17641cf2-01fb-4fff-8c7e-beec02d0f962",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "562dc0a1-2087-4d00-ace5-da90bc5ff1bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "39e00a1c-02ee-4998-a582-db4a17e77542"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5dd8ed94-01b4-459e-8631-62dda0f06f57",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "936ac2f0-d08e-4bf8-a3b7-67c5b706b617"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7b03fcfa-afc4-4562-b4d3-306b8ec70ebd",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dab940ea-8c77-4423-894b-e57816444eaf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ff5c7d33-e31e-405c-84f3-0198ab795e94"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "54d9e248-b3b4-4a98-9456-357a45b22828",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "7a8050e9-3174-4667-8f0b-70e891c285a7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9a248595-bb4b-42da-8fae-5acd054587a3",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4444bf60-6edb-4148-8c6f-8b63bf0095f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4fd39b61-1f9a-4ad0-b0eb-c7ade1f57d5d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "648b9605-2caf-46c6-bc22-9aa16685e8dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "bee1c926-3c96-4794-8784-626227b9ea81"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1ec9dcb3-f962-422d-863a-1d28a59c2dc4",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7c147ff6-5bb6-4f2d-aae7-2fcf83d8e447",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7e7e24c0-2cec-4e11-aa91-7b4f6a1cc9bb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a4ec7084-1be9-43fb-8662-3b5524be8edd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "bf738816-11fc-4758-8bb2-61251e469c0b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d5b0a954-ba6c-4183-bdd2-c7fb5653a148",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "981c72d9-9263-4df9-a127-3fc5b8e9a105",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "72351e47-fb58-4c16-a404-4549d2d5e18e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a8ded27b-cc43-465d-a2b4-778a2ddb1173",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "d6190f1c-ed3e-4652-b770-17b833896d1c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5402c8a6-8a95-4384-96c6-85aa4733fb2a",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8f58620a-4957-4e78-87ca-715d9ea22678",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c9b1e994-51d1-40c0-ba4e-7144fb96a555"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8504ec94-ea69-43ab-986d-3dd13488335b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "9023c7a3-185d-4bd5-b67f-596ab92e90a1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a93ea013-9393-4ac3-8860-2c501f2e10eb",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0aabf2ba-9403-4dcb-9354-e41cfa7307bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5bb2e60f-b786-452e-a987-e91cb1a2b419"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a0b52ba9-2e71-4a24-bf2a-e122ae189e9e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "d0b48f44-9ca7-4819-8e59-aa887b6dadea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c6d65bc6-9d43-4a47-a485-db60dfa83057",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "62906973-3941-42b1-ba20-658cf0bc261c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ba47f0e0-8241-4d89-b0c8-0cd42e9556ab"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e0eabd9f-98b1-4f9c-93a8-908f54326400",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "abaad0a2-6210-4ead-bffb-97f901701d17"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cb560670-b3fc-4e5c-9a92-b5d8f01184ae",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "57767e12-f243-4a33-9afe-c63c002002a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "afd24767-f985-41f0-974e-24e544454058"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7781e9f1-979e-43be-a1b6-6be174146c65",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "3560a553-8683-4103-a5e5-8a0710ab5f10"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e6059912-2dc1-474d-aa1a-6955e116b1c9",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "639e192d-74f6-415c-8adb-1ec169d62ba8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "df890ae2-9c59-4a23-9203-6aef175f0959"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e9760058-358b-4234-bf83-7e9610424a4f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "c64dbdce-6b0b-4631-a218-ed803f80ccab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "99c0f6c5-b17a-4dfc-90e8-70435fc486df",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ce496c1a-fbd3-450b-ba82-7be6bc3b0603",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bfa80ada-5c7e-4ae6-bbb3-386160c3880b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a443dd5f-d09a-494c-b302-04837982b47d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "7fdf3d98-135b-40de-8956-185eac1c9913"
                        }
                      }
                    ]
                  },
                  {
                    "id": "53563ddf-2efa-4e76-8ac8-2216650ba8cc",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cd5fd9e3-bb9a-4bdf-bbec-7d6a93dc11a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3c71dba1-a18d-41c5-b22b-8887cf7e167a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8fa56395-5379-4508-9025-91c34e4427a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "b4f1b656-9943-468b-a9bd-f7500abdba39"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9463ac52-2ebc-4f59-9304-146f1ac948e9",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "008d900a-57ff-47bf-8f36-123c59b21a00",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "36643f23-262e-4439-8117-fdf0dd053d81"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5c4cd3cd-4135-405a-a10e-a536ce7a272d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "ba4102a2-095d-4983-b7cb-d4e9bdb9f672"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d1c88e2d-5623-4801-9cf2-3581fb03304f",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ffd2883c-67bb-4b7d-96f7-7e5d3c1215d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b1d0730d-0f83-4562-a6f3-7b5957174412"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "98b15b39-f0ff-45ed-9c77-79e2c4225a22",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "f6da5f17-c464-420c-b481-d090f8453962"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d476426e-388b-4ce9-9f75-38157f7d3b51",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4b6789d9-5e3c-4fda-9d61-c46d7654611e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "737ee230-70d6-4236-847d-d8a4549af1ec"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ecde4b99-061e-46d8-a0a7-e1048aa59be8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "d47e1603-0940-4833-9ac2-a74c2a3f0926"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fee4de71-a7ce-4a8e-9ce6-a9695bdf3148",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d84ea589-9220-436e-8998-292fa8f2ef9c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0d379e0c-1d5b-4228-8896-e967b341ab7d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "03bcadc7-9ce3-444c-9bc0-5593470fb116",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "982f2123-c2ba-4634-8861-6c40f7e1a058"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a4c04317-c7a1-49e6-a3f5-f0133c879bfc",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "288b6c43-7064-4a31-bf66-b8a853ec6a19",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6f41f7e9-b83c-4dd2-a14a-28c9b5d9a665"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b5afdd19-bbb5-4497-95f8-0af4ca53eb79",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "46fbafc8-7b5e-421d-9beb-56e9fce189bf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b5b1b618-e4f5-4e8c-949c-a066ced0856e",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "04d1efdc-f7db-4241-988b-85622828db16",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "32944d5d-f506-4ad6-ae18-9f2ed95c23bc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "28091dd2-e35e-4afe-a1a8-64bbef826719",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "af1804eb-d82d-43ee-99c2-fbef0d3c687e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fc4e31b8-6824-4fda-8f4b-8e80b07a782d",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a530f421-fd00-4fb3-9dee-d06dfda7920b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "20781854-f295-4df1-984f-556039c6a945"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "62077cf8-b40b-4671-9c97-6b870c9ef301",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "feafc2da-76f2-4879-ae73-917f347c5fc8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d35233c2-f2cd-4e24-bae6-5f8a12a088ce",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f74af18f-3064-40d5-9b95-13a10067a6ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8f5465a8-279b-4506-b24a-c512e65f311c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8e0f2006-2739-4d7a-8c83-bf18835ded20",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "a0502d5d-d64d-4857-b585-c2309139063c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c26d94f5-a28b-4ca6-b6ad-b7aacbe05a4c",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eacbd39d-4972-4287-8cdc-d75770e19b27",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d6df4a6e-485a-4aa5-bd6c-8ed18509d00a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3e8eb579-0434-4bca-9883-d38580ff86ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "ba3d7943-14f0-4539-87a6-f2c77736aaa2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b8b53be0-6a08-42f9-8996-49863fcd1f16",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e902d324-c759-4454-96e3-d3e729ea0b3f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "63f2043f-b5e9-48fe-8eb6-57abdd4cc2d6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c4a3c1af-9599-4cfd-9ef5-6d3ef5961de0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "70c2a218-7502-4a23-95f9-248b05a85f9b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "90f45308-b355-4f6b-a52e-00f888815ebf",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "01c6c7b2-1396-43a6-b58c-e8c39aec18fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b80738f8-a51e-4014-8c7b-444ccf467d46"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4eec788f-fe85-4934-9bf1-7e1397757ba7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "cc0a5d41-d2f3-4fb3-9e65-d008daf2fc8b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2d969882-b8b8-414e-8336-ace9813897b7",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c0152746-27fa-48c4-9caf-432d03f66b7d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cda34d92-a734-423e-8081-3afb573364df"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6660d618-883e-477d-924c-fc7efdeeead0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "9b8ecb74-1ef5-4eb7-b3e9-c0e544098e62"
                        }
                      }
                    ]
                  },
                  {
                    "id": "014c5747-f488-46db-b11d-567057eaa87c",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2f777052-2bf5-44c4-8c9d-4c4f3b9b4f4e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eed98162-f242-4c38-b551-957a36609b77"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c7def6e7-9a21-42b2-8ccc-52919682ec90",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "4bd58710-4b3d-4923-9b7b-14299cba5919"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ae323499-1cd1-464e-af80-732a82f6240b",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "73fbfa43-3e53-4ebe-ad97-f795bda5d280",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e89d8b97-f7fc-414e-9b3a-58d3a14b450e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "743c04dd-a787-4347-9a30-c4b31201d059",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "e0130b63-45c5-4ade-9397-f3966fd48d5e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a113d64d-555e-4dac-8f35-a2cb98a618c0",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b41db920-84df-4138-a3b4-a4801db754b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1d99a278-0573-40bb-ac79-f29802f1b3b8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7b25c456-517a-4fd2-befc-0b57201da2e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "3fb47097-4aa7-4cc9-ac56-253b52109677"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a4e315af-cc7e-4178-9abd-4d1a6634f93b",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a149d3c7-10ad-4b5c-b21a-a27c9fdf5692",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c35bcba5-4ab5-41b1-aab0-4dfef42671fe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c91ad019-71b5-40e5-921b-8f2f532cc368",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "4b643436-a9dd-449e-b50b-38cb15873077"
                        }
                      }
                    ]
                  },
                  {
                    "id": "320b0516-97d1-443a-bd3f-6bd516f51f9e",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "48c0c968-79d4-4deb-9cbb-d4147a71e83c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1d2e44ed-7d03-4ddb-a4dc-707c10b3032e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4c994182-6020-44c5-9b6a-7c5d6d557aa6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "2c411a95-2609-4b7a-9e52-7d1b61594224"
                        }
                      }
                    ]
                  },
                  {
                    "id": "66459890-7170-4d52-9fce-5b1274ff5ea5",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cb3b305e-b541-44d7-bfdc-0aae4e7e025c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e8b12deb-de16-4262-b015-d3caccf34173"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e9efa7fd-464c-4fe6-ab9f-19704ef90197",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "f363ef02-b9f1-4d1f-b5b2-8c0361915874"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a5097009-1325-4a11-a0b4-a7b0b2cb8e46",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2b34a08f-9740-4002-bf52-c0eb48adb46d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3e121574-185c-4843-8bd9-131c34f8946f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7dd4c0d8-84ed-4268-883b-2a6ec3dd765d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "d790ef74-2ff6-419a-8f69-1ea8000cd47b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "68fdded1-71a6-4451-b28d-a77152dfc1f2",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "51393bc9-cc51-4ee7-9267-754a78053548",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b5881417-8536-4a23-94a6-b1e6354c7695"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f93f4406-42e9-4ff3-bc38-e2570fd0f9d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "a227f71e-ef4b-4ca2-8740-7fb8892f591a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8d1b7bd9-0e94-4ad2-ae5b-dd9deb744a01",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ca952ae9-6a24-4281-8815-9e63ccf5a36e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4cda2aef-3608-46de-98aa-ec5a739774b7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e3e37305-9fa3-4c91-b8bc-7c12f5a19cc4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "4960e03c-cb22-448a-8de1-983064dd2392"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9bd7a064-b2a7-4015-8895-ad5eb2599198",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "68f8376d-38ea-44c3-af83-d7822cbd3b23",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f68bc235-d04e-4562-8de7-4e219a4c9877"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "332e1371-28c0-4633-90dd-6fe3a6dddcba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "d78eafc9-e2e7-49f9-9a3a-50d02efae6ac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2d27ca93-f78d-4a35-8093-75226429e7a5",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5aee4de4-1425-415e-8227-05a6b9f3fe9b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ce639a08-7013-48a5-b71e-dc274a6e521f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "534e49ee-c5a3-45f5-af54-11a7392a9c34",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "181cab9f-ac96-4ec2-b6ae-ce0e5c5ea200"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d64cd69f-cd4b-4199-a7d1-eabfae9a3674",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "28672809-6cc6-4486-be92-08fd7d99fb4e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "148b3d30-35f5-481c-9481-409a01e250ce"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d88c8b61-825a-4b9c-8944-6be6fd38c8fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "4df1d8e3-c5d4-4ffe-b85c-4e374280a90f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "13f21869-c39d-4e6b-80b5-cc4597eef0d7",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf8ddc75-910f-4614-9fa7-f4f70eb4909f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a848afb3-aeff-4f3e-b5bd-8c4de7d83cdf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "50825ff5-8371-4a54-b187-26cbf72cdbb8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "042996b1-d1db-4dac-b58f-76f1f1b5e6bb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7f929fed-e8de-4a5b-9acf-cf1625588762",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "94b4cdd3-a2e4-41b4-9e99-81a9da5e2c90",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f1c84977-ecd0-4580-b512-e59689aacdd3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "09e379de-7b6e-4812-ae3a-7ccc5d1e36a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "14aeaac6-80f9-44b0-90ee-0a3c7d12f885"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1b814f45-2696-42e0-95d5-aa57fca6506f",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d65f77d0-0dfe-4d16-ab2a-d1da858a0881",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "31d6fe4f-60ca-4321-ac1e-2e8061167406"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "564193a0-4b81-48f2-a17f-b000a97cf420",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "b41bd1a4-d04a-4646-8dad-e7debaef7704"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a692467a-00cd-45e7-9823-aefee7f77a00",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "16490317-a4b9-4950-ad0b-44fae85fbee0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3d0d9f55-c758-4f0a-8b86-2664685b9d26"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4359bf5b-cd1f-4dd8-8512-40774530fddd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "390614a8-2a9a-457e-a0e1-50b47db9bd6f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e96449dc-f3ec-449f-8354-6b1bba61bc07",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f31cbab0-2ee3-491c-9cae-b0dda30b6e67",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "e0183cf6-6e7c-4ddc-a4bd-7804f3e4a420"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "32f9a67e-cf7c-45f3-ba52-c4b965bfe331",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "3c020051-d200-4b1b-9885-aa39be0df39f"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "b2a5c6d6-b6c1-4d1f-bed8-26b300e8814f",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "1a89559d-2567-4c25-b980-8afb4e4ed700",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "53f6fbd9-b780-4f05-b6c4-928f29172b55",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "df96107d-1f15-45af-b41a-49395099e2ff"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5badfb2d-9717-4c41-95ae-7f101fd3054d",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "943b2453-3ebd-4d5c-9f71-22e28bb99419"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "0e831abc-d690-42ee-b1e2-a27c0a0ecb74",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "609f57c6-32e3-4825-9e17-da1b74602c9f"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "26467b48-4167-4a1d-86c9-037f471d5628",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "5311e56a-67d5-44f2-9b6e-c2b855278a79"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "71f06e4c-ec95-41fb-ba83-30905641b311",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "8b3d7b67-5fbe-4e32-93db-dbea4fd4e791"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "537c769f-2580-44e6-b6c3-87c55f6ed02f",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "ab8dc651-8f53-460b-ab87-2fc89886eff9"
                }
              }
            ]
          },
          {
            "id": "b1c392c5-cf06-4d5b-aa59-0ff728fe27f3",
            "name": "Positive Testing",
            "item": [
              {
                "id": "ec677278-fd26-4d91-9545-dc8b0b91516c",
                "name": "Duplicate Keys",
                "item": [
                  {
                    "id": "9ff975f6-d0d4-4b70-9dc0-79cafe4fdaaa",
                    "name": "credentials_issue.credential.issuer:dup",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"credential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"issuer\": \"{{issuer}}-ignored\",\n        \"issuer\": \"{{issuer}}\",\n        \"issuanceDate\": \"{{issuanceDate}}\",\n        \"credentialSubject\": {\"foo\": \"bar\"}\n    },\n    \"options\": {\n        \"type\": \"Ed25519Signature2018\"\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "text"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a473f35f-b40f-454a-827f-66b2c44bea12",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 201\", function () {",
                            " pm.response.to.have.status(201);",
                            "});",
                            "",
                            "pm.test(\"response issuer matches request credential.issuer\", function() {",
                            " const { issuer } = pm.response.json().verifiableCredential;",
                            " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "68697abf-e510-41d5-a80c-d71657a8dba6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "78ce63eb-d6f5-43f5-bb2b-4eb7a8c3a1f6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "456a8791-4bf9-4c2d-af1f-6849f785ee8f"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "c46e83bf-3b6b-49ca-8b99-a6c4c925cdeb",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "eecb7b88-e45f-4d47-a98c-d13a8838c993",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "d6c55ac6-9b20-403a-a85a-9f35a06d5600"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "bb6fa5b4-5c65-49a4-bea8-190cc985aa22",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "531b0e0f-8c39-446a-a1d8-c56fa3784d51"
                    }
                  }
                ]
              },
              {
                "id": "bbc5cf4d-8720-4906-a2ee-6c0fee14d0fc",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "a8371e02-7468-473f-aa49-aaa82c066ca8",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "20f97527-b512-4a05-adec-9f450fd9c7af"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "94534edc-6e5c-4f61-8c1d-0ead720a8e75",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "9941fbb5-983b-445d-bbfd-8af03b5a50bf"
                    }
                  }
                ]
              },
              {
                "id": "2592ced7-dae5-42c5-ba6a-700c50d0a3ba",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "d5b28159-a901-4420-9695-ae006d04397b",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "57527feb-f626-4472-81da-c72057ca7c1b"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "376fbdbc-4bae-4f6b-a171-cf3439cb9f70",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "f454174a-723c-4619-ad43-cdfe1487f439"
                    }
                  }
                ]
              },
              {
                "id": "4fcf9f5c-1360-4089-82b2-2e89d05d77d4",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "f09a2f6c-f84a-4b5c-9942-17f2079e5f99",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "7ccf5ac3-c917-4287-bf6a-761bf99e7543"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "330378b4-b13e-4147-bf10-78b61dd95f2b",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "a5aa84c5-2b53-4fd0-ab9a-d4de97da84d8"
                    }
                  }
                ]
              },
              {
                "id": "e0ece220-5b5c-4aa4-b939-7d4ab4c7b294",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "05b7f57c-20b9-4110-b8c8-74d73b5126d5",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "8c81755e-27e0-4153-bdce-40b963fbefc7"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "5b83b2f4-51aa-46aa-a7d8-1dc4fd5c8faa",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "c392fdc3-9282-4f05-9c2d-86c15732b7af"
                    }
                  }
                ]
              },
              {
                "id": "34064148-bc34-454e-8d0a-e3ae6221d207",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "42990d96-b299-46a1-8fc8-91cc80465fa6",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "88fc389b-b9b7-4144-9ef2-f56b288df6c1"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "5bdb8e52-83fb-4a77-90fa-ef5a2e5d833a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "6b4a4f12-d967-4e54-afa9-e5a41281fe67"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "ea646010-7fef-4705-bc3c-30e3a75675c1",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "f2c3ce4d-09bb-4be9-b6e0-3da9f720a8d4"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "3ca3ab49-a625-4902-ad9e-ebac01fd8b8c",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "86c97628-226c-4ad9-92b1-26fe61e43612"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "c2c59cc9-3f50-4e85-825a-e301a9be096a",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "56ca5fbc-19f7-44d4-8b03-f2e45c09631b"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "985ebbfd-4d34-409a-9208-4013ecca6122",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "9215e706-ea5b-4815-abc3-7d7fd086e529"
            }
          }
        ]
      },
      {
        "id": "d7e4a14a-4ce4-40ea-99a6-95844736fee6",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "5fb00874-7eb0-480b-8de7-1a98ffe7c5db",
            "name": "Negative Testing",
            "item": [
              {
                "id": "029490ab-c508-423d-867e-e96e5e2b88b5",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "06873292-615c-4fb1-852e-2c1ebbf64dbb",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d14750d9-1332-45e2-86fa-ccaeca23f010",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "48a095e2-ee49-4fb3-af25-74f264bbff06"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ea781924-ad96-49e3-b628-3ce2e54f050e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "3d2f65c4-7618-4bd4-9712-352e3fad35af"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f2d5f5fe-cb6d-4086-ac46-6d945c1a9e50",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "94c922f7-e024-4726-adcf-0c53d8b427f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "582abc31-d53e-418c-bb5f-ad2ec0642632"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c92bbeb9-8736-48f5-99ba-9187a63526de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "90c0ec13-07ce-47da-ac7d-7e62d954c810"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ca2b62db-c9eb-4ebc-91e7-07f25ea6ea82",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9446d695-7abd-451b-b885-77431418cc39",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c7b7bdf7-4908-4bca-9a92-9d478808cba6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d59e3813-02fc-4d5b-a941-7ad21bf5fc20",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "b323a463-f0f4-4969-ae95-d084691ed724"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d7b1e435-4697-4afe-9cf7-6f37dd824691",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5e5e84ef-d58f-4353-aef1-8dea54ae81d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "390329f4-6f29-4384-9e55-9a54e66a1299"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2d65f5d6-db69-4838-b2d1-be02253369ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "01038e02-3b5f-4362-9cbd-3bba291ee2d1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d9131c86-c9dc-4571-899e-9c0d93f6b7fb",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "00423ac7-557d-410d-a9b5-0e3898f26a87",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "adaa0495-540a-4222-a2bb-42c2738c89cf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ae274e6f-23d5-480f-bba5-4ae756dc2cce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "9ea73e06-7a57-4e0a-881d-7366a899ebc2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d3cfdd92-55ad-4bcf-a1e9-46552726c9b8",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e72f0e7e-6035-457c-859a-4daad9e78bf6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "56fbdf7e-ec93-4ce9-84e9-dbd9c6d9cf52"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "50f7ffa8-b8f1-429b-8770-57d787e92dee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "71ddc442-d9c5-4bab-9305-0461e07bf533"
                        }
                      }
                    ]
                  },
                  {
                    "id": "50ebe3f5-7bf6-469f-ada8-660091d98310",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "01b8442c-3d13-4e07-ab89-28331f272202",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "40d559aa-33e6-447a-a81a-8bedabbf9208"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8d4708c6-54c3-4f97-b8a9-9b515d9b74ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "82826244-0ca6-432d-9a7f-9cd6e54de8dd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7e7033df-f8af-4be2-9767-b47186bcf6eb",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1664aaf0-0e43-4532-97a6-04c635fbe811",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "66200e3f-8bc0-4beb-b567-4d1d74a36928"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f7fdff91-179b-4417-9083-33aea8e082ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "a7ad14dd-10f4-4297-8e67-dc5aad4e7924"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0daae81a-d3dc-4169-b75f-9b757517bcf9",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "16f02ea8-b2a4-49f0-b56b-6398cd1ac5e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d6246d8a-31bd-4f3f-a7b4-e3f495972f5c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eb3464e4-96ca-442f-9ce5-de33842053bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "0b3e660d-9a69-4a25-9aa6-e2787281b905"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cddbec33-cde6-4988-ad98-20dbc29c074a",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eddb08a8-a61a-4cae-bce1-e8c94457ef12",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f1e5611b-d40c-4783-81f6-4f00a9926d44"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "13734f81-c525-44c0-adb6-a3934e5480bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "da0583a3-92c3-4962-9ea5-769b139888cf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b38d716d-c99c-4130-b81d-7fc0b451d850",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dd139815-5455-41cd-ab4e-f6e4c8204769",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ed2b11bf-7f0d-4a7c-b1ca-28db8d8dcd8f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "83ffee47-275c-4b59-bd98-0cb6440054a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialStatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "b3bbf7f4-3894-4800-a06a-690bf42f97fd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "04106b7c-4ff6-4bfc-a4bf-d05775e6ee4a",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0af28de1-2d4d-4eab-9119-aafdccc9e129",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "12c595e7-5c12-4cf1-94f9-b2b01ebe56f4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "41a6af7a-aab0-4b99-a419-3c41e1c9c29a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "d63cbc92-d042-40e8-a121-cf5ba6a9a934"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4ea01c91-2556-41f1-b510-af3e52e3adde",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0457dbc2-ca6e-4a02-94f5-eb8fc77c4548",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2580ff37-afe5-430e-8187-edad2d3978f6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1c0cfc0b-d482-4d99-967a-4f353d861bb6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialStatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "f130b4f6-0c13-4096-8143-883e7b99987e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ed406af8-db91-411a-b7ce-b43116e1b9d9",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d6f6d5ad-77f3-4f28-94d2-6cc9ce3e7773",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8307e137-f611-4099-b967-88a453341671"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0f3b68e8-a2ac-482c-bfbd-8a0c56c7ba0a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialStatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "d499f49d-a27a-409f-a88e-c59aac26935c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cc601a24-d85d-47bf-af91-aee76880376f",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "796ffe31-dbde-4e70-a809-6891c9d08487",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5ef33f5d-67cf-4bba-b15e-abaf9c02c93f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f7f44311-9712-4c60-b61a-250557be5c80",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialStatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "5df75016-a41b-449b-adb4-2dc1469bb41e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e0781d02-b3ac-46bc-b15a-6d50607509d5",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "191366ae-f6de-4a4b-b152-a99bc9a9a1ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8a3964c4-851a-4174-bba1-794d95f8f040"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "62444cbb-2f0b-45b3-aa68-eb6d7a8bb61b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialStatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "07a89d76-6eaa-4528-a0a2-2aa2620f2ed7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "032362d7-218f-4525-bb25-eee1bccdc91a",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8156bfa9-62f3-48bb-9c3c-3a4b68c89993",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "313f81d2-9d6b-450b-b161-ce31a94737d4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b63adc93-fac4-48ff-bccd-56b69ca83159",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialStatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "8dbe6b32-5303-48b3-8cb1-57798968ed82"
                        }
                      }
                    ]
                  },
                  {
                    "id": "81b89a6e-0ec4-4592-abe7-86726f63798d",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e6557915-57ff-485a-82be-9020c35c4f93",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cd327f25-1ace-477e-8079-2689c960eebe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ade623b9-baed-4602-80b3-8ad3109b1797",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "de167552-0f24-40fe-b393-e83458256e37"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3c4b3b9c-b007-42ca-8fd8-b41d999cbd3f",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "85fe4fed-b16c-4ce6-be69-6f56e3d847ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e92688dc-bf9f-487f-b15b-6dbd6ddb1ab3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3710251c-f46b-4864-9c7f-590c64c8bb96",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialStatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "28a113d8-b794-45ac-9fb4-60b2db21e845"
                        }
                      }
                    ]
                  },
                  {
                    "id": "214b07b0-7216-437a-b6a5-6d0a7ed73d9f",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2888d552-3a16-4be8-9e1c-d1ad958a551b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "daa3b9ab-d23e-4c7c-958c-83ecebc9d9c7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "71446eb8-e13c-4993-9da3-4622c98938f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ad514aaa-f677-4aa4-9326-dbf6360b79dd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ec8bc057-985e-482a-84c1-95a344d8e6cb",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7e845ffa-3709-4ef5-a6b1-f1f97b27779f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bb8410b4-72aa-4e66-9f32-f31a76a6a464"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "114eacf0-1b59-4497-97cd-d451729dc386",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "56cb517c-675d-47fc-a0eb-242c595bcd53"
                        }
                      }
                    ]
                  },
                  {
                    "id": "46cc6739-41e2-4bfb-95c4-897d4326cb6f",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "013ff19d-bc8b-4fc5-a409-c844a4ebeb61",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a9271fd9-c8db-422f-afb2-fb821e483e2c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "27b29c28-2f96-4486-b332-1ddbd7aeb907",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6f9e16a8-6386-4958-99be-62ac637f1a30"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b93ebf68-e382-4c75-9b86-e7c9ae4a4c2f",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "70a44d78-36e2-4e1b-ab16-abbbdb0d6c26",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c5f422d2-80e3-459e-9840-91e66c1669fc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d3c39253-9b82-4ce4-8fb5-a4cebb5f7368",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d2937273-fd7c-4a50-89d7-d31fe621d6d7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "150e4c2d-9d87-4ee4-afc1-6bea4b7207f9",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "73b49943-2bd7-4b91-a237-ff8708cbc404",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "304ee11b-ba43-475a-911e-51a7b094e090"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d50156fa-f895-4245-a2e3-aff43bb8994e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6c4f0a63-3468-465c-a868-b0ae155c517a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7bdc8995-d3aa-446b-9fc3-8d542e752afa",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "79f4e2b3-1135-4690-a88f-18cad8ee30d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "de73838c-7cab-48fa-97fb-6541ed970d6f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6efc6be8-1c0e-4838-8257-206b3f67f0da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2073f251-1ea0-4912-b0a8-84132269159e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2f89b83f-7497-493f-a28b-2032e6e9dce7",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed4ea945-d3aa-48bc-bfa4-d5f062aed377",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ffa8b1d7-2d8c-4136-95c2-996a26fbdfb7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b08dcb66-241b-4634-bee3-8ce48c3fbc19",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "07317ce4-2c53-4892-8560-0c9c41001b20"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2f4883a5-0683-4638-bc0e-2b0828d076e3",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "785c094f-4d60-4175-a956-1162ad8dcaae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bfb32dfe-1c6e-42a4-b5d4-ba011bc1b55a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "adae7623-2c52-43aa-be07-d823c47ff51e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "16384a40-73b8-4737-bfe7-d9efbb270e06"
                        }
                      }
                    ]
                  },
                  {
                    "id": "67321ebe-190d-43b8-8aee-b31bfdb54eb4",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4eadff95-e4ef-42a1-8a5a-7c249f60d225",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a46490a7-3652-40d6-b3cc-231488374577"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a27ee052-aefe-49e0-8d29-dd6fa96b3aec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ac03aebe-271e-4aa8-8f84-24be2ddaf70a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "160e214a-23ca-4cde-9f4e-3412eaae4773",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "206a11db-5d3a-4a88-ae8c-27d0518d26e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fd0ef293-1b81-4b36-9530-3a8e13e44293"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "55b6e2d7-26da-4361-a1e5-cf37b4113885",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d2dfbebb-c3ff-4ced-aa54-e0c21f2860b0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7e38c054-2738-4b1c-a286-2daec61fa6c2",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b96f6176-2030-415a-bf79-1d109ceeb28a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5f1dc15a-5adc-40af-bda5-2c2efc4e771c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8da622d4-8ed8-47e8-8cad-3346b8885a41",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3af71d84-1b95-464a-a435-46d81b2436b3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bf5451b0-7dd3-4bf2-b67f-3fcba6ad5e78",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "04b80a9b-e299-4eb0-95e7-38101cf0566f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a54b8ffc-0101-4c2a-bf05-10bb67e6d1de"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "859a2b38-9748-4a4e-aacf-93156c9637a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "59404330-537a-4140-b1af-971fb2f594ff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a751b448-a191-4640-8582-9e29a1ee6ae2",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "56414d22-e22f-4ff8-a736-625232523294",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3b3ef3f2-add7-46eb-8be3-e649cceec6ad"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7331403e-8f95-4cf5-bbda-cdf1b5ebc736",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f3ffe457-4d54-44d8-b8ad-26d184ca5875"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4d0839de-66e3-49c4-b348-44b82e8941d0",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "73062583-83a3-4f72-b6ff-56e1af8772e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "071fba76-37dc-473b-8c93-67fe9bc92e2d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b0aae32e-0f45-4ff6-9f4c-c72589dc3e1e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c0bd36d0-fb15-406c-85da-c3d1bd5dbbd6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c0e821a4-8b65-431c-8190-36624df9c2b3",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dc956c96-afb0-48db-a89e-d62ad46527d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9a059cfd-5097-4a25-9ced-a5ba155672f1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cf755769-d4db-4fcf-9fc0-453739ecaf4e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "09046d22-fa49-4419-8afe-9a278e620b33"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5f96fb9d-b608-45ad-8be0-e727f2417aab",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a854cdff-24c4-40d2-aacc-6e6901f0bc91",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7d7bd3dd-216d-44ff-aafe-c35e5087c798"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6eb4de7b-12c7-420f-a16b-120e620635b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "88c4b3e7-376e-42f9-8b74-b2ddd70253b7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cc44df2b-8a0d-4dee-a66c-b83a45c4768b",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "230fa0d0-fb96-4c7d-98d5-e18c154455e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "081b82db-88c3-4720-9542-bcd3f925359b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3ac2e188-df5b-4e6f-a4ea-ce18d53d32ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0c26dae1-51c9-4bce-b756-3f1b39ef903d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dcd9dd70-56ea-49e9-b74f-5cfbd73fce0a",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fdb0599e-f233-48f0-a2b8-e304e3e85396",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "73a0d96f-b424-47fc-916e-e3aca7e7ba8c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2b23b38a-1dc1-4d4e-979e-2f200d936d17",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e6577f54-37aa-4438-b9d7-88d930e190ad"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "a6910107-e8e9-4325-8f4f-10d29a29ad2c",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "e9f8d01f-5608-4e0d-876c-601a48fa034b",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "68982f1d-bdcb-420b-a7cc-141a83bacc00",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "76f9bf49-6943-4c14-bce7-ff364c4a49db"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0ea7621f-ae8a-4723-9c1b-fbf83c736a1d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "a2f63b31-8a61-473a-9c8d-62d8a05a8e30"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "40c64aa9-7e06-4876-8f17-222f8f737ae7",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "fd0422aa-01ab-4e86-8d06-319e50b98fe4"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "00698513-dd7f-4af4-9df7-09e7716ac3d1",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "de06c7ba-f0fd-4ea0-b31d-5f235630b04f"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "fb659364-3283-4d91-a723-99193a3915e4",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "db79acdf-1e0d-470b-8330-fcbeb079e948"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "3c6fdb56-2f78-445f-ad18-613c98b03ff5",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "e35ddc28-4988-4213-adb8-f2a61706bb78"
            }
          }
        ]
      },
      {
        "id": "9a6f25b1-d5ef-48a0-97ae-600d2192764a",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "163975a5-6388-40c5-b24c-f0582835cbfd",
            "name": "Negative Testing",
            "item": [
              {
                "id": "5fa97fce-371b-4a24-ab89-f4a7c797e80a",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "41f8f7e2-f7cd-4518-b5c8-a2e4ff8f9a21",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fa3faefd-a8eb-4a77-93d8-f26ba21453f2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "811ff30a-515b-43d1-b7cc-ffa663890f9d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4e5950e9-e4a7-4967-a033-4a9ae2c546fd",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c70e5b1f-b5a7-40ac-9720-cbfb83ac6cd9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "add0c174-2c2a-4f8b-af89-62a67ec6b1eb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f20e46ee-8e83-45a4-a7e7-74476b1af904",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e3ebbefa-f389-48e7-abcb-5a8f8b5b597d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6c84d143-a95f-480e-8e9b-7e3f88645647"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cc0db4b8-4567-4527-ae01-bdc3a5b7d102",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0096a52c-041d-473a-b25b-5d620e155338",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fecd05f9-9b3c-4bb7-8e8a-db2aa1b3e571"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e542e1be-8dca-4647-ab85-b6482d77807c",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "198396fa-51a5-47dd-966e-3f872df3a664",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9876135d-c64c-4d37-bc15-d54c70609776"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2e0b6ba1-aa7d-4655-a99b-9385a6a91c95",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d23f12dd-f3f8-4a6c-ab9a-ff928ba13794",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cd5155d7-cd2e-45a9-9040-8df60dbc1b58"
                        }
                      }
                    ]
                  },
                  {
                    "id": "33d41642-0748-4b6e-b9b4-0dd713c0dcc4",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2526ba4d-2cf3-4a6b-9813-8c1521e0c2ba",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f76b6ba0-bbf0-45f5-832a-4678c92cabb0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "892b3748-9dff-49e5-bd43-58fd6902137d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "08733323-67fd-499a-93f5-aff5ef8fd75f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0e5e4a6b-0ad7-4bec-aa63-b9f30d9d01cd",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1ffa5664-967c-489f-8d5e-93de1b9c5239",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "964de8d6-0635-47e0-b2f1-3f83670bed49"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6a1a17f4-bdcd-4e97-bf47-3be9c6c7aa9b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8c48c9c9-a890-4fe8-8908-aef4fae404d4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b10ed514-473a-4db4-bfef-8a84b1c64f9b",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e32f8f86-01ac-46c6-9ab3-99dc4e8382be",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fcd42483-5b9e-46cd-aebb-ae6be3f68354"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4b4e3d65-4399-4ea1-b9db-f3b9b6efc387",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "de3782e5-bb04-46c0-828b-3223a61c2fa7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a9ee01bf-cab9-452c-989d-0c89b45da3cc",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cd65857f-ef90-48e8-a150-3605e27bd2ca",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3bebb4c6-758c-47c9-b1d9-406f731b3525"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ea6b14a9-3be9-42f3-8ea2-879cf69c6638",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "df55fb19-6bd6-41fe-9acd-5d892cddbcd1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bdfcd243-fbc1-46d9-a49d-ba936e0e9106",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b38f65f4-98e0-4282-92e9-b8e13cdeb615",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "877200d3-7b86-4f1a-aa6e-c278788425e9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "efce3b60-72d3-4fa1-9955-210762520d3c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ba0efb2b-720f-47ec-b5f8-e6193105895b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dbf8e1ba-e953-44b7-9dd3-4d60816601be",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c115bccc-d950-4f5c-89c0-603a296ee40b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "754aa304-718e-4fe4-b06b-0c96d9c82d23"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e56a0184-bb65-476e-abfb-088fe71a063c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "947bb5fc-485c-479a-81b6-8da2f329f258"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c3580e3a-e657-4be7-9774-903ccbc08fce",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eb8f0003-d530-4a6d-9998-ff7dd30ae1d8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1fa51659-c0a2-45d6-a1da-594e3c68b938"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9ed2d245-d92f-48b3-8348-0e96efc61ce6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ea2721f0-4d42-460a-9231-e3328d3a0c57"
                        }
                      }
                    ]
                  },
                  {
                    "id": "16310fbd-85e2-44cf-9bd2-d6e78f30fe9d",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "67376ba0-5c62-422b-b5e4-fbc6ab00b592",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7c6ef9ec-66bb-45c9-8444-50c04d743bd5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9d5e21f0-c7f7-4708-be29-8ab68f4b6049",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cada3456-4be1-479a-bc75-5e3945a750ba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "46390c95-6d4e-49c9-a2a4-54edecb657bf",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b3e5d7ea-ef2f-452c-b646-6347c176f3a7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1d1e549a-926a-44e7-8cc2-95f590df7b7e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fea668b5-cfaf-4467-9573-1b056184f56d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c9a755f7-4658-4efa-b8dc-685ca9a5e9bf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1c31f055-ed17-4479-ba0e-96c8084943a2",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8a0a9ad8-b5ad-4616-ba2a-30f4621adc7f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e8f7cfdb-d233-42e9-bf4b-1c1e5562035b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bae42a1f-3e2d-4617-9779-cc4d63101bdd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "575c357e-2eba-4880-a5d0-b88f8378a7a1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1cba44dd-e0e3-410d-b577-7f14fa294627",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9fab2cf2-16f8-4d0b-afc4-7c47d050fcea",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "26b8cdf3-1a44-4dd6-a22d-fc791eb94039"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d6095568-3d02-4275-a038-be7c025c750c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9469c7d7-1809-405c-9a2e-36e65148c135"
                        }
                      }
                    ]
                  },
                  {
                    "id": "14907e50-3289-4eab-b1d7-3d797c4fa1c7",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "66ecb232-9cc7-4e68-b456-7337a2bd6732",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f19f4923-2ce2-4c7f-b091-6b3c6cfb18d5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "90bb49c0-e4de-477b-8318-866d2ea68bf5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1f183e4f-ee85-4c8d-8cf6-bb910800ab05"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8a5d5561-902d-4609-b617-4c9cb2b53d81",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "35c1716d-b03a-4240-9735-5b825a616599",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0e53ae34-c9f1-47ac-aeb4-ca651bedf6aa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "59ff590f-c5f8-4c32-a844-63650380344c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "11051d72-d07e-4869-a122-bc46726e412d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "148b323b-b6a5-4b6c-b2a9-7f2f11422fe4",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0544b1fe-726e-4628-85d0-35e7fe78d764",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "30cca67b-76d0-4bc3-9c22-e3ee3199d522"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "deeecb4e-84f8-47ea-9652-93483c020713",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "220e1dd0-a37d-42e4-a1a4-a7ff775121cc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "60bb6462-3660-46ba-968d-4e3f70f3e1ae",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b3567042-daac-4511-908a-a91a1cf43b8f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d81f98fc-c3ce-479c-8bae-0f75215a30c2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "af0497e0-335e-49c5-9b58-98e68969dfad",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "56893add-6f0f-4f85-b1b5-51a69829e184"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a4dc0525-8957-4be0-bc58-f4b73e9ab23e",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c3cc07fb-9d21-4aa2-a559-91066c7dcc9c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7138e9d9-6274-44df-949d-b90fbc26263d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2675992d-a278-4a26-8370-4de18a4dd535",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "57496b3d-621f-45eb-ad7b-a3ebc044f51c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "effc0bc7-0725-41cc-bbc2-63cfd40dd199",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a925704a-83bb-41c0-bed6-72fd4dcd874c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e35424c5-2e96-4623-8c95-11f8b0804e65"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4a0126d6-f585-4f5f-8d49-3445270b0da5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "812a5c61-ce12-4f9b-8665-73fda27e85a1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "37463c34-ed7a-4d9b-a60d-ae0945a4185e",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6cfd1c3a-f50d-436d-a40f-ce9dcd197ae4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7b92edba-1d70-4142-928a-913e384f64c6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3fe47a57-e40d-41d7-9f6c-e65f1b6dac17",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "362400a1-0918-4f50-9c83-7697756656e1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e438e6d8-8095-423c-a41d-6e9f7b539621",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d7a2e0b7-ce06-422d-98b9-62ab7785865e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8412c9a3-d2ee-4d5a-b40d-1817a0673b45"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9f03d2fa-cf99-46e4-b693-73a5cee81eec",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0cad4306-9abb-4af0-ac6c-91b83dc25f38"
                        }
                      }
                    ]
                  },
                  {
                    "id": "05000108-9921-42ce-ab3d-7b51d1b62410",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a8162482-3cea-437e-9bb5-4bb64481064e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7ef2a431-8ba1-4695-9b7c-62236bdff3d8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "29d25a26-6989-4a9f-8ae7-aad2a539abc1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "637cbe62-3ee6-4919-91db-6b03cbca1400"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b2c948e2-1056-48c1-86e7-0056436987f1",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9a21306d-6a98-4fc2-8d17-7fc97d43a0f7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "44d7fd42-892e-4d9f-99b2-2db797b59a4b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6ab1f183-97f9-4c09-8910-7ba6f6afaaa8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "19f77585-c8c8-4b18-bb9b-d2e72e05d935"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ebf43e99-5482-4c89-b2d8-b144fc044b5e",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "080507b0-041a-40de-8f12-26c7bb34174f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7f09919d-b1d1-46b4-8f4e-10873d4e1d27"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9da7edaf-ac7f-4cea-bcdc-c1484fe324eb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2e4a35d5-1bf0-4cd7-9ebf-c4de1021484d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6c68fab7-ba49-4b44-b0ea-85839cc55bd6",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "375efb80-d6a1-4297-99ec-8452b550e88d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e2e64610-45d0-4232-a4f2-245fadea6bc9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5c216b42-7335-42d5-be80-b57df6b7b0c2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ce18d424-1276-4ab1-b2c9-42378af2bddb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f859f041-8e08-43c7-830a-2251b50fa37f",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c4f7555f-5459-4b0d-93de-03d599aee351",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "90792ba8-416d-4377-86ac-f49bd33c6db1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d8783def-731f-4c3e-84a8-4d7d73f235e3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c5a8e4aa-2a5e-410e-a13c-c7598b13e745"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5e9cd366-d38c-4789-8651-4bd61b62f29e",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b0900adc-6d30-4134-9ebc-8355e892a445",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7304010d-d0fe-49b8-8ba3-dff1d3bed3ce"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d93d8cfa-daed-4a8c-a6cc-042789f0294b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9a5db5bc-c40c-48c8-99e9-a253de89142c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "98557a7a-fb56-4ac9-99b6-d9d6f4c1becb",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "55b3174e-27d7-4d07-80f4-1ea86b3216e6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "666256bb-f660-435a-b9bb-919160f77678"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a5f0ce30-7a9a-4d63-8817-1f9fbb3293b2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7c5bb2ce-d503-4914-a9ac-eb9b5133ca45"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5d741952-517c-4624-820e-9de606e9290e",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0a4f6189-4a8d-4cc6-a9f9-f3148aa30976",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "065d29bd-4ccb-44fb-9974-7cf1e7f4d0a6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d237e0da-034d-4703-a931-a1c1cff967c0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c425e175-ff71-4f94-8597-5970006a72c1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1505f609-98b7-429a-ac29-1471c52f85bf",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f729c300-efbe-465e-997b-f76eecb1eaa6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0b7f9c40-dbb0-42cc-b5b7-a8b51d304731"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f5000252-27c4-4d16-8ea0-454268f48695",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "be6c6436-d371-417f-bef1-9e67a0ef627b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "41ffcf16-8c5c-45e1-aafb-edf75f30a140",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5f80bf51-44b1-42d7-a405-2bfb7543bb69",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c3c9eb13-4011-4cf6-8fb7-9c2812e087d4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "652fadb9-f03d-4353-b73e-588b4f4a3a5c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "885dd780-a59b-4ce4-84fa-3ca459fe3924"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cc699cc3-8e33-436e-8ecc-d98015e7e2ec",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3afa913c-2b34-46b9-b000-d9710b672f0a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a6b8878a-8eca-498f-bbba-ee9184e3a0fa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a20f21eb-453f-4dd7-978c-0dff5047cce8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a166bf19-ea85-4073-9aeb-f27bcc1baf08"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cc980270-b00e-4366-875f-6b13560a6f4c",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed1823ed-bbe0-4888-baea-c8a1b87cc802",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8ed8d034-0277-4118-898b-625eefdea384"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e557eab1-df50-46aa-8f34-41f27b88d696",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d29d6dc1-d6aa-4806-a6b5-f24affc64530"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d18eecca-7cef-4f1f-9e3d-9f55377f5b33",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "92108527-9b22-426d-a6d5-c94ad62f6c4f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "75b39912-f8bb-42e5-8ef4-0dd64d553468"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee5455ae-3b55-4c33-af6d-571f95c90b1a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c5e34370-e186-46ee-83c5-d8d1428d2630"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2afc9e37-920c-4ea8-8912-4d17871b36f0",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0b111c43-435f-4323-83fe-076ba2e45857",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6f9c20ef-248c-45cd-a603-b207cf4890ca"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a0963c77-e401-41ea-b550-a8bf6852239b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a04c8404-f06c-4cfa-ab2d-235accc2af14"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8dc6b1ad-18df-4af5-a8df-1e6be2b9f350",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "70efe5a8-d9cd-4eea-9b98-5e5ad7ed6da8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ee7c94e0-629f-4985-a63a-ff6090d33d95"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a49b06af-bb83-4575-8ebe-3237f53da542",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dc6bb0a4-645f-45b8-92b6-7517ce462577"
                        }
                      }
                    ]
                  },
                  {
                    "id": "88176b46-3a6f-4c62-bac8-b3ec5a477eca",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "576cd64f-6681-4da5-a855-e0f1660c402f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "67113040-ec7b-42fb-9450-17a972b7cfa0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "91b9b10c-7402-4cbe-82e1-24a2ff41f8ce",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1c6aecbd-787d-457c-99cc-a128b64327a5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "988a9fda-c331-4d74-9a87-33b9cdc730b1",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "95b74d95-0bc7-4d52-8d48-4538808c9d6c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a7ac2aeb-42b5-4b5c-8c6b-4e3a79d7eb60"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "01309835-9890-419b-9a25-08c860db69b8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "00af364b-31b4-44d8-98f8-ac947e6bc2da"
                        }
                      }
                    ]
                  },
                  {
                    "id": "17b850d8-926d-4831-b469-14c01427da18",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "34bbc6aa-3cae-4c90-b727-a9a1f1dd8363",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e65aab1e-ee6b-4617-8c78-08c061fcb73f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fa0a5c5b-d8de-4e44-9537-14a59f9cb598",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "95ff110c-61b5-4220-9ed5-8ca1b5a431ee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cdca7f1b-d84e-4901-8cb0-796d316c9949",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "39728b8f-96f0-4800-9e6f-3d66938c3c8d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c82991cb-d7d5-4202-ac06-f81672120cef"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f628c3d0-2aa8-4b94-90bd-bee5a7361870",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0d1ef1bf-07e8-49ec-9256-b8a8529e1957"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d30a4b44-de65-4954-9f33-cb56b3334511",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "00656276-d2e6-4db2-9572-9a7dc9d86a24",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e7d0de38-75c8-4835-b325-779f941db1f1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7db07e1b-684f-4071-8ae4-9490aece2b60",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "21193e00-b1be-4226-bab1-3f2277277630"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4c351d3f-1bc7-48de-a2ea-bdbc7806c6c1",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d68a8285-2902-4fc5-b2d4-7494c374d983",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "37372b01-e017-4c09-aec0-fa06c17f446a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f78a6468-8d45-43aa-aacd-44c33d5dc035",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a4db02fe-f9af-422f-bcd4-22acf9285054"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ccf99e41-ed2e-48aa-b163-f6b2db9252aa",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c0d1ee74-d79f-4a50-bb08-6ab866dfa8e6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "66b3aa89-2c18-4742-98fa-689b6f01f632"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a93a16a9-edb9-4c3f-8e2a-cf8156023347",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eb44f6ac-fdfd-439b-9791-e2293fd6af23"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3da3a3a8-e734-44f2-9cf5-7ed06d62492a",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d313b6dd-e297-4cc3-a15f-421715b01fb9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2a31ccbd-0f1c-4c35-a6d8-bf2cc2f7a424"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f2115ef5-f33a-44d7-891a-de82ade55804",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "64bc8921-68dc-466d-8507-009626f0c3d5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "778f299a-17af-44cb-a17e-25cf090a243c",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e92bfc8b-4017-484f-9d53-f72642e11098",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "77bcf8ac-4ef6-40de-8e38-394d576aa113"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "47456ff0-9edf-4d22-b157-16c433d5fb9e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a39019e8-43df-4a85-8eb0-04fd6d213699"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1da8a40b-91c0-4b3e-a5e9-5ed30fd6e992",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "50b13ec9-de62-47de-a7f8-f5954dc983c9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cad2d72c-85f7-4afc-b4e3-c05a86f8b6ed"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f8a96dca-cbd2-4415-a1be-1ada07c034b2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5a04764b-d1a4-4943-9ca9-b5476c44ab7c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "14edc3a5-4de8-43ea-ba7a-4cc43d2ba284",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f65befdf-09cd-46bb-a1cf-2c4e6c459c57",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3d04a493-0d19-49ed-b7ca-16e4eeb3e5b2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a2b9d484-609e-4f5b-bef4-4d2bce76645a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8b4d520f-3eec-463a-a2e2-18988878de0c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4579368d-768b-4f92-b6f9-7902fb714778",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2c310e49-a36c-4766-b735-ec2821fc0141",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "132ee580-6391-46a2-9b03-b2c0f0663336"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4bb3537f-1779-4fa9-be48-f1a6a2507e41",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6dea87b0-acd3-41bf-91f9-b70d661102d2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9a7f2c16-10e7-490d-b2c1-8c1872e7ff5e",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cfca083a-2a10-4983-80cb-586c7c99e446",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0145be44-18a4-4b46-b2c0-81c223bdd921"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ffc66d45-50a4-4d6b-8b31-616b509c2f56",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "36e92edb-9bf7-4b36-8db1-976bd2b2e7c2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "479d5efb-3905-4ac9-a63e-3881738bac7a",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7db01613-e378-4b83-8f9a-b12b3516fb57",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5da0748b-083b-412c-a378-b2cdce84156f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "745be559-b96f-47a7-932d-bdea0ec801b0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1f460ec5-bfd9-4895-aeac-bf284bdbfcbd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d352c45e-5c26-49d0-8a39-d23c5b8041ca",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8dd5778c-b18d-42da-a87a-d679ffd35bd5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8624177f-89e7-477b-a52a-16f9b04f9a65"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a498b8cf-19ca-406c-8800-d921ced811a1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ed3ba8e7-a73e-4f99-9ffd-df8684ba4fd3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "15c317a0-658a-4bd7-aaf0-7eed187f5fd6",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8841c2a9-3ebb-41a9-9f5c-943ae2e72995",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "db2cbf94-dc4e-4a51-a068-dc98963961c3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bd58a9f9-6c08-4d13-8ff2-3ce8410d8992",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "392c3d32-2fa3-40fc-adbf-2a78309dcc85"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1bdf6d9e-27ff-45f0-9647-81a81d74de1e",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6c84da80-605a-4a89-adaf-6692c8666af8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d0628eb2-a649-417d-8fb5-993a8f70d1c3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "141645e4-76ef-4c6f-84c5-5732da5deb85",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a1c90f51-c745-49db-8a3c-adf1241b9a0c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c76278e9-beba-4efa-942b-0176e524bbce",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ba3379af-ce0b-4c3a-9ba1-79ec43231057",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c6501b3f-c422-49b8-931c-e639530d11ef"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "89d77203-ac17-4269-9c0f-d073f052c630",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "44b2481e-4a45-4060-80d3-db68a486c7d9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fc9a1c16-dede-42a4-9968-a28b828cfa72",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4a7f1960-5bb5-4744-83fe-290c15b8de67",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bfa944a1-ffbb-4518-a49d-daad61bfd507"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "87e5fe14-aa53-45f8-a51c-2d090206cb72",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1edd412e-3ba8-4f38-9910-a552a8e7d5b7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c48ce383-704e-432a-bff7-64057858c6b7",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "15472e86-de7f-42a4-954f-c4c683c2133e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "13f5f349-0642-4159-a23a-dd679a0fdba3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf9707f5-9435-42ed-aec6-cf90d0ac34a2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cd86b964-5f0d-4f30-9ec9-a09daf1e6ba7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "09eaf79d-9465-4c6e-b9ed-14a61a8a1ce5",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "42f38360-5fe8-4a04-a27d-e55f0f345bf0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "621abe23-3645-4544-b45d-48f4b3568a9e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2ab4225f-1bac-44b0-9e1c-0e67457fa7ec",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5cc561c0-b9b6-448f-b2d2-00c099014cd8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2973f484-a338-41c6-b9ff-1e7faecf9e5a",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f06c6057-c6b4-4351-adae-4a49ab352fdb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a84e2fff-60b7-4a0d-b2d0-7c72d4a08a7d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "04f45635-d882-4ac3-89f7-9f50f683aca5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f5bbf7e1-d37c-4ce7-9ed5-8f3ef7bf17cb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c4c861ff-c293-4fa9-9add-330d53700cd1",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3650ad62-1dff-4e1b-b0d2-4d996ebc525f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a1df4246-51c7-4c59-a616-72dac252f169"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f81a8960-815e-467f-bedb-b1aef5a6f114",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "95e95b5a-9145-421f-986d-455331465107"
                        }
                      }
                    ]
                  },
                  {
                    "id": "22354dca-a2bd-4a1d-a906-03016cf83b16",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7d954952-7fc2-442f-8a61-5f295bbe5a79",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "de86dc88-d5c0-4080-8bd3-76503134e33d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "90c677e7-c462-413a-944e-903836e6e43a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ac860c51-77fa-43b0-960b-4f4d99153349"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c071c485-5bc0-4f8c-b958-643b4d5e7940",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "57d40141-f42e-40ae-a426-9f539975a0e9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "066aea47-3b59-46ef-96d0-454b7cfbec3c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1be8226e-92e2-4574-9729-294cf3f530cc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c1a521af-7594-4a5c-bac3-c9b0ecdc0e59"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7f0ab8c0-88e7-4169-97dd-82497193e2f8",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3b2a40c8-a312-42f3-beee-55e4366a348f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d9b2c5b0-5882-451a-a931-4d1bb914732a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d01b8b68-cab9-46a0-88af-92ed32eec129",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5b1b273f-933b-4c7e-9ec9-8433e3001b37"
                        }
                      }
                    ]
                  },
                  {
                    "id": "96e44614-517a-4918-9428-ff2f57bba62f",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "94db6e54-f2c7-4fe8-8091-71337e68b22a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fc43dd07-3996-46bb-a40f-c24c4a95988b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d71d346c-ce62-40ed-9846-600f22273672",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e6d82fe5-7780-41da-b2d6-18194fa9c89b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7f452f00-6c51-4db0-95b5-9bf928f20c58",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "57ed3336-7973-4d9e-9923-eb4160104e13",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e179763f-8f5c-4722-9d13-ec22abce05c9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "385e936e-df6a-4987-94be-494e37c407e8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "efc990fa-1a14-48ea-8751-69cb02d22dee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b562e07c-2180-4de8-a626-34f727e11ecc",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dfbca1b1-2ba4-45c6-a383-2387b83a162a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bf15963b-9f9e-4da5-a50b-ebd6f2203425"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cbd51e4d-4dc3-41a3-87bb-f4ad2e607a1f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0816d832-e547-4657-831e-4607e7e1ceea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "460a09a8-5bae-4179-b07a-77ebb87ca879",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a4c55aeb-102f-4c73-8a7a-7fa2601916ce",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f2221079-ac20-48d7-867e-566d93862a3f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a284d99-2604-45c8-af04-fcbc48fabc87",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e2a3f718-ddcb-4502-b9c5-0aa4b91ffc29"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7dfbba09-2d40-46d3-962f-333251dff030",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3a3e670f-f44d-40fc-9218-863ae98727a8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bd3b3c82-485a-432b-8611-6abb425ec3db"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "116c58b7-4f0d-47f1-b0b6-86b611508f65",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "572fca58-1716-4217-893a-b8ea3dbf780c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "16a0235e-9972-4f53-be4b-ce9b6415f718",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a4671960-e53e-40fa-ba09-39a69c59f0cf",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "38b0e15a-6ac8-4d72-80bf-ce0f31ca3216"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c007e959-b757-4934-beff-5aa480003882",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9af54ffd-cb8f-46f3-b39e-726c2abbb7bd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "461f0e56-e9c7-4339-bde7-32af815539f8",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "841f6fcf-b0d7-4b63-b688-34c9f163d8af",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "19040582-9345-424a-8185-ff078c4a0ec7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2fcb9287-cc4a-4aec-9a51-df16b11c1452",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1bf72cf7-1090-49cf-a783-3aa2df396069"
                        }
                      }
                    ]
                  },
                  {
                    "id": "68793b9d-ee74-4176-915c-28e5d8f9c5cb",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aa9e2882-ba4a-4765-b48a-146f6bc9cbdd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a5a2f74a-dddc-432c-bf74-a3d4e50b3f65"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fcc0b173-3ddb-4553-8b4e-0fa0e2b078d6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3e7af034-1ff0-423d-b047-19fc09b02316"
                        }
                      }
                    ]
                  },
                  {
                    "id": "74a047f0-82aa-4b48-9d53-ef44dedbdfa2",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "96bb9586-6e0b-40f9-b631-c467af71c2d5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0d287f08-485f-4207-9cda-f313e4a47157"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b0c86ea8-6fd0-4331-a403-26a00f1971ef",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8f1ccaaf-52a8-4341-8787-fb86f811df8c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d49a4c7a-dc7d-434f-9427-f202adc23c66",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f1ac26eb-913f-441c-a9a5-2a72424f952f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1363d33f-28c3-4c1f-a55b-ac30e422a3b9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ebef86e3-2c51-45fd-808f-f885f8df2be4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8160b901-5c5b-47e5-844b-4fbf7d8734d5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a5bb63c6-f537-4c8a-afb1-1a3eb69e6e91",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "40779dba-7a3a-4033-9b98-626da634defc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "378f9265-cd82-4054-b7f5-5ad094a95a79"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "00205686-0ef3-4db9-960c-e5e3d64fd9f9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c7e1353e-d0c0-44c2-b338-1ac32b8eef4e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c8a5acad-f465-4e86-ad01-19d916ae3aaa",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3c673112-fa13-4e73-9752-8dbda83802ac",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "99ff6295-2bf5-4778-8c7b-204371b2c40d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "aea1265b-8167-4ef2-8d1f-6408cf8380cb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eed3685c-1ab1-492d-a871-fe45cb3e7607"
                        }
                      }
                    ]
                  },
                  {
                    "id": "885bd9ce-5d0b-47c5-9aba-8f16dc121565",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4d5694fb-3333-4410-b2d1-25522866170f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9581683a-66f5-4f58-9273-6214321c1e58"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1e9c1753-20ad-48ab-903f-72c7faa965ef",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b439a580-8d99-4d16-82dd-e975da92a1ab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e18c8e52-5404-4747-984f-b07fb1739474",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f7201c86-656a-4e39-8a17-bafe5cbf3f1d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "29147baa-36c1-4cfb-8685-389c23544497"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1c7a7f4e-fc30-42f9-b435-feb908e6cd76",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "632f373e-38ad-421d-b97a-23fcbf2f8bdf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3b463c22-6409-491f-b3c1-8945bd634946",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bab902b9-012c-472b-8334-b020b1830e9b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "efa04091-6e73-450c-9a87-1dac47e0730f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b27c0449-c716-4d7f-99ab-396019446002",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "31fb49bc-5cee-4c83-b586-dd930a83956d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "01be2ed5-c296-4fd5-ba39-f2c03e59c3af",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "60fd8f34-52e9-48af-8215-2315f1876e1d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fda6f9bb-9b61-45ab-95bb-ce109df55278"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a0e2da05-52f1-48f5-be86-d168e17e5ac3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "109165b1-8c84-4289-b935-ab1ad9b90bc5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "322b196a-31d8-498c-82ea-fb4869e3bea8",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ae33db06-493d-48f0-812e-ebd85699cee7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4d65910f-1bb3-4215-9905-07070510b208"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "43210fc1-87a7-47bd-b0ea-6fd12849c6f0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1e562abd-dba6-455b-ac4f-03603f78bb46"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dafbe629-1a6c-48fb-82db-f5401fa644e0",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dba2746c-65db-444d-92f4-ffc28f3a65d2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "57a696f8-4770-4702-ada2-3ed37fb10260"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6fb1aa19-e44c-42ba-8f86-88af301e36c0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "91e6c459-f7b3-46d3-8545-7d67f09f1716"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1a29ca89-3953-4163-830d-8bece5aebc37",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "93b11c73-a7c7-432d-9db8-cbeae26191d7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bf514411-3b8b-458e-bbbf-bcd4a0410dba"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a3c79b46-36f7-47c7-9950-6467d9779a67",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1674ba42-f0ab-4ab0-b4fc-114bef8ef9c3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0d63d8ef-abd4-4c43-bc68-fd73ea3af35f",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7f2567f4-a4eb-43c1-90b9-982d363cafb0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ba872ec5-aa04-426f-8b32-ed7489c9c490"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e0768d2-245d-469d-a266-fd5dd357f87d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9413c116-b51a-4cfb-b173-6817a0e41fb1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4a2f5641-ce95-4360-a568-8f42ff29c6cf",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3dfc11ad-1574-4ea0-ae2c-6dcd340e35f5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "deef54b6-fd2f-49f7-8e02-322b01aa1a92"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "935774ee-45c9-47c2-873b-9fe071d614a0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1ac8a2f9-2be1-49e1-9539-526817a84a66"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d89bad7e-8613-4be9-947f-bc611473dde8",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "83131e6c-7832-4715-b54b-bcfbfe63b540",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2a742864-80d3-43ee-bb5f-f2b83eac4ffd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b774504e-a4c7-410b-8a92-45b6647909e9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8c689cf5-00c7-44d1-af79-545d13fd5de7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f34b41d3-e0c0-482c-bae7-38247a62afef",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b586c100-b545-4f9b-9f95-126c6d48d388",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ffc0e4de-d652-4374-9f91-878f783fb05b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "13db14ec-cf47-4b8c-990f-ed1d3ab1c0da",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "60f4d2fa-b208-4658-894b-4c4a0a0354ba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7173a5aa-9134-4cec-8255-de32780c05dc",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b92c553f-bf82-49d9-a86d-cc86234200a5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "de405db1-5123-4f01-a544-e29d82a7ef0f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6d6b0584-73dd-493c-938b-e08f7ff542e8",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d6f99deb-7a18-4a69-8a0c-c66f11ae4366"
                        }
                      }
                    ]
                  },
                  {
                    "id": "abfc13fd-6da0-4483-b1f5-04e401c145bb",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bc6e0451-addc-4e3a-b44f-ec7b9f15b4d9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ce39e60b-7f7f-436f-bb32-00bc423ef835"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e6591e31-03ca-4d12-aa07-2aa68d2263aa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dc02f678-a8de-47d7-8a97-6c92791bafd7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "79fe42f8-c37a-4c0c-b1ec-f0faa2b6b716",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "15d73759-804d-4619-9dac-1e80924a3fd2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ffaecdf5-005c-4dc0-9f6b-f35f2169459c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d111a00f-dadb-4ac0-bc33-a9b7617a0dc1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "05355b95-9201-4d4a-a700-350721b07697"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a83a8422-6b29-4757-b154-28373ee88510",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "897dfd74-47a4-4676-8c10-200d91ded911",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "204336ab-7afb-4810-9b8f-b2c8b7ef2a8a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "011018c7-b2a6-4c58-ac4e-f730e338c49c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0fa6a0b9-3215-4589-b712-f3a1dc91fe18"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aee55eb3-0308-4639-bbfd-8a80cf95be82",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a8994166-7bdc-4cec-8b0b-d194e6dcf207",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d04ceb1c-9da7-4706-85d6-a516275a46d8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6bb73a9b-171e-4ff3-a8a0-43c748522986",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c9d9ad8f-d420-41d4-b782-ca3d308706ae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c8c00814-a550-417e-9f0f-1daa0d44ca36",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b6046bdf-793d-429c-9dc2-3d26b03e9d58",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f3aee00c-37ce-4282-8970-37cd9dc1057d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c23beb70-6e23-4848-ab72-24c9c4330e05",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d7cf1a27-f2cf-4a29-8ec3-cbb919b86196"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eac5bf76-bfca-4bb8-b1f0-8593a412964d",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9ecac19f-acf9-455d-8812-574f5d2f625e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8c637e92-d3ef-4334-bf0f-a7f60be75db8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2a2a46ef-d7cf-49a0-8bca-6cc3a0a39b5c",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c9b1acb9-c901-481e-8979-4651145609a8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6f53f8b4-8bcd-41d1-a52f-c48dfa44b3ac",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "33cab320-0174-47c6-a95c-cd6a2f763bee",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "80debe6f-2468-4848-ae41-e3b5908a3e6c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "273f10b9-09af-44ec-976f-b93cda0e3c8a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b14441a8-cfcf-44e2-8a80-e69ba3d97be2"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "59df3cb2-bea9-44f4-9e85-1bfd85f32440",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "d62c2f39-29ee-4b7b-8b67-e6d1f28811d7"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "aad1f718-1fbe-414a-8dfe-7ce2b3e3ca22",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "cb32108c-1182-44b3-bf07-111d1466a041"
                    }
                  }
                ]
              },
              {
                "id": "77ab1bee-dcfd-49d8-a8b0-a6258822bc35",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "6820695c-45c9-4a8e-9636-017e00b88846",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a08ff31b-27fe-40c4-8d2a-4565f1027e30",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "954379f7-c6e9-4a98-9a46-8dcb7d819149"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4f43091f-0f7e-4286-8f61-f9cc7b60984d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "787214ea-65db-4938-9082-d033afdc537a"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "0392002d-204e-4cd2-a848-b7f3f144fa1c",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "37faa2f3-6a70-4ccf-b73a-fb3a67124e94"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "98f9ae36-4618-44c0-8d6e-796df9b02cd7",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "4b1f1fa7-d43d-4626-afc1-32969dd1dab8"
                    }
                  }
                ]
              },
              {
                "id": "612ca6ed-ee53-4d37-9f1c-54c7407d1df9",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "63dd911b-7ee5-4227-b801-a98c23479e30",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f1b2d734-62c6-43a7-978c-326b9068a4a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "d7b0293a-fc7c-4747-9b0d-c1dd6c48bcdb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "15aa09c4-e1d2-45b6-9aec-acb57e7a19ba",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "28f4c965-ba40-4a8f-8eb5-573092a24bb1"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "b19b696d-d844-499f-a330-0f76d124203b",
            "name": "Positive Testing",
            "item": [
              {
                "id": "2754c139-0a44-4e3a-9eca-ae7b8bec36a0",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "224b90be-dc92-461b-88c7-b29225aa78b2",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "e04d2d38-9979-468b-b5f1-353930cd17b4"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "b0eab6f5-6dc1-47c9-8f66-c956c31341fd",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "9c190034-e95e-46ec-ae78-6c624606541b"
                    }
                  }
                ]
              },
              {
                "id": "76a9f3d0-97ad-4324-93be-e54b8e10906a",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "5b8cc2a7-ccad-4578-858d-8d15d2535cd0",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "802f0fe2-e239-4e42-b991-1f5b6328973f"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "d1b4a5c8-b559-4d8c-95fe-0e109f97e961",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "636fe2a9-c3f2-4050-a164-33bffa3e9a1e"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "e3a70671-a95c-463e-b072-121411e1bd28",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "910c5243-22a5-4e50-a3eb-f09752e430e3"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "dbb992b0-45df-45c1-b747-7acc770b26f3",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "acb67660-7141-4406-97fb-bcca43f7265f"
            }
          }
        ]
      },
      {
        "id": "f903f3fe-1f7a-4009-a188-594137c44c12",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "1a3a9962-0143-4306-9b77-13614400e038",
            "name": "Negative Testing",
            "item": [
              {
                "id": "24d6c411-0eb3-4c34-bc84-318659c9e8a0",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "bb534323-757b-45e2-a629-6ebe5f70bb06",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "588c448c-b369-488b-a8a9-12e3686c4d1f",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "e7781db0-f182-42df-9c8c-ed38f6651989"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6fd47a3e-20f1-49ae-98e0-e00029dd5276",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "7e3ced7f-e71f-4932-8539-7ed4e8489b83"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "35988a64-23cc-4e7e-87b4-3227c60d35a3",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e0dc38cc-608a-447e-af80-13ebc8ad3ee7"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "423fc90d-d5a6-4f2b-9e31-0a835258216f",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "022e1066-7bd3-4fa5-9d51-4bb36b39aa60"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "b946a99a-3209-44c8-896b-6be109909130",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "d168cb67-9401-4bcc-95f4-4e40ea981cee"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "548f44d1-df1a-40f3-b37d-e44ef9e66d2a",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "4bdaed4e-be6d-488b-98e4-7952a087d671"
            }
          }
        ]
      },
      {
        "id": "fb062337-de22-49f4-93ae-bf77354dc881",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "cbdf1c59-03b9-4647-af96-5cd9284e7365",
            "name": "Negative Testing",
            "item": [
              {
                "id": "117c66e1-1f96-4834-a936-45714129b48f",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "362048ba-6d69-4d7c-8d54-40a5c5797629",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "49c22172-753e-4f8e-ba4c-552abcc40907",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "50722daf-aedf-4f64-94c7-c67a9d9f6e90"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "37a7f47f-3f09-4f70-8331-b1f9ebbcf8fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "14a920e5-8d4f-4d5c-905c-150b92aac1f0"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "cb600ef7-0467-4e95-8b0c-967070746507",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b5cf887d-009c-4cb8-b706-d91afaf707a1"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "3a41719f-7913-428e-b941-5c5a1b79119a",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "7f391b35-2f3a-42a7-9c38-a8b24f39ffe5"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "52b1a368-9944-4862-baab-bf13091a9acd",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "be4209de-9439-43a7-999c-5478fec4d47f"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "990e0ccf-d06d-4e9e-97a6-efadd3707043",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "c19372f4-c037-476f-bdb3-172b4250cdab"
            }
          }
        ]
      },
      {
        "id": "213eeed5-bdd9-4b16-b40b-f79a597279d6",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "8d191bbc-40ce-4a7c-9e96-1d921f5ed874",
            "name": "Negative Testing",
            "item": [
              {
                "id": "901061fe-188e-47b9-90af-08ef382aee18",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "2ba0bb6f-2a92-4373-a608-4cdef3dad6b5",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3e73ae20-a33a-4687-a993-d3f1adfcdff0",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "39ce500e-90d2-4774-ad68-b15e23a871e3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bf09ba7d-0493-42bc-867e-61f01ad20530",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "d4570d93-b5ac-4d31-9fa5-f30bb726b489"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "fab13bc0-b1eb-4115-b167-9b487cfe8736",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "8f2192a5-3032-4dcf-b03c-9274c99249d3"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "12e9794c-460d-44be-b307-5ad718cdcf9b",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "2a00ba21-42d4-4a4d-938c-c84f04ede217"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "01243d99-92f3-4af1-93d3-ae45ebaca36e",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "4f6f1b40-ad27-4a8d-9486-84e7244877c7"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "f8ec56e3-916a-4af7-b8d1-c2096faa09f7",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "c855b5cd-c8c4-470f-ba92-8a9c1bb5323f"
            }
          }
        ]
      },
      {
        "id": "b4622f6e-aca4-4f85-8c81-8a08281e5955",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "6119e225-3c1b-4475-93ae-790847c07691",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "6fa93f42-ca7a-440a-b79d-559a0bd98a5b",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "b18a08b3-0d64-4f98-9383-8e5f8ecd8d8c",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "ca2f6548-21d9-49c1-940f-efc48429d84a",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "89514350-0097-41ed-ad95-e26d13a8911c",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 1891,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 252,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 507,
        "pending": 0,
        "failed": 40
      },
      "testScripts": {
        "total": 950,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 941,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 98.56349206349205,
      "responseMin": 10,
      "responseMax": 5136,
      "responseSd": 386.8824827936352,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1719448707454,
      "completed": 1719448740497
    },
    "executions": [
      {
        "id": "5d837fbd-7f0b-4037-9bdd-397195da3891",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 250,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "cc8dd2bf-5934-474b-bab4-302b03904b5d",
          "httpRequestId": "6d923d06-2423-4801-be0f-c21331ec204c"
        },
        "item": {
          "id": "5d837fbd-7f0b-4037-9bdd-397195da3891",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "357060b3-3b32-468f-a71a-fa443f2f5435",
          "status": "OK",
          "code": 200,
          "responseTime": 63,
          "responseSize": 0
        }
      },
      {
        "id": "890674b1-971d-45c7-bae2-38a4c0659a57",
        "cursor": {
          "ref": "230ae1bf-c88a-4db3-b385-47bb9d6c1216",
          "length": 250,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "1decd3f2-8574-43c5-a0d7-c2c7b91a28d2"
        },
        "item": {
          "id": "890674b1-971d-45c7-bae2-38a4c0659a57",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "58473712-6be8-478f-a3fc-dedd2a801ecf",
          "status": "OK",
          "code": 200,
          "responseTime": 10,
          "responseSize": 0
        }
      },
      {
        "id": "66e7f0a9-3d01-46ef-ba59-3989a10f8c59",
        "cursor": {
          "ref": "b9fa6a88-cad9-4dce-8845-581ec50cf0f9",
          "length": 250,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "267a0e7a-a9df-41af-a85c-1837957e86f4"
        },
        "item": {
          "id": "66e7f0a9-3d01-46ef-ba59-3989a10f8c59",
          "name": "did_json"
        },
        "response": {
          "id": "0aea4c8c-3d97-43f5-a9ee-c78acddeb04c",
          "status": "OK",
          "code": 200,
          "responseTime": 319,
          "responseSize": 2778
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d26f665-8c19-4481-bd19-72e12e3ec707",
        "cursor": {
          "ref": "b53746f2-c666-4372-bf1b-d632438b5eaf",
          "length": 250,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "1cfefec3-6f76-44e8-acf0-54c3046ffbe1"
        },
        "item": {
          "id": "2d26f665-8c19-4481-bd19-72e12e3ec707",
          "name": "did:invalid"
        },
        "response": {
          "id": "b7bf68ce-db85-41e3-82a7-a72358734b15",
          "status": "Not Found",
          "code": 404,
          "responseTime": 412,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 404",
              "stack": "AssertionError: expected response to have status code 400 but got 404\n   at Object.eval sandbox-script.js:1:4)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d26f665-8c19-4481-bd19-72e12e3ec707",
        "cursor": {
          "ref": "b53746f2-c666-4372-bf1b-d632438b5eaf",
          "length": 250,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "1cfefec3-6f76-44e8-acf0-54c3046ffbe1"
        },
        "item": {
          "id": "2d26f665-8c19-4481-bd19-72e12e3ec707",
          "name": "did:invalid"
        },
        "response": {
          "id": "b7bf68ce-db85-41e3-82a7-a72358734b15",
          "status": "Not Found",
          "code": 404,
          "responseTime": 412,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 404",
              "stack": "AssertionError: expected response to have status code 400 but got 404\n   at Object.eval sandbox-script.js:1:4)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "32e6ab3c-f6be-49e5-a644-5aef8a50e79c",
        "cursor": {
          "ref": "6a12ccad-8153-437b-bd27-b0c84a565a09",
          "length": 250,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "e17230fe-e9c0-47cc-9bae-438b42f35550"
        },
        "item": {
          "id": "32e6ab3c-f6be-49e5-a644-5aef8a50e79c",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "0afb66c9-500a-49ef-836a-3ec071eaf7cc",
          "status": "Not Found",
          "code": 404,
          "responseTime": 36,
          "responseSize": 127
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ab96f285-bd1e-485c-8065-d285231319b7",
        "cursor": {
          "ref": "a1537174-bd2d-45bb-a878-e4dbafb8913c",
          "length": 250,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "48780a38-e145-419e-949c-6b8fb434d1a8"
        },
        "item": {
          "id": "ab96f285-bd1e-485c-8065-d285231319b7",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "21e43812-e3af-4db5-9599-6355519cb368",
          "status": "Not Found",
          "code": 404,
          "responseTime": 35,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4c57ed03-7066-4d95-bc39-7c9f52890268",
        "cursor": {
          "ref": "5bab3efe-9be4-476e-8c3a-9818371871cb",
          "length": 250,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "c3585fb0-8ae7-4aaf-a007-d49a99800c27"
        },
        "item": {
          "id": "4c57ed03-7066-4d95-bc39-7c9f52890268",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "d7a19166-964d-41de-a411-74d12a6d1bee",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 35,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b9c82048-cd3d-4357-b256-2bc3e48aa689",
        "cursor": {
          "ref": "9d942af6-e842-4a10-b35f-495ef1f389c5",
          "length": 250,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "b895a421-6376-4f9a-ac33-2f75d0613b74"
        },
        "item": {
          "id": "b9c82048-cd3d-4357-b256-2bc3e48aa689",
          "name": "identifiers"
        },
        "response": {
          "id": "76cd7352-1efc-455c-b0ce-53b9cdff85be",
          "status": "OK",
          "code": 200,
          "responseTime": 60,
          "responseSize": 2450
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "41acbffc-058b-478e-8afe-49911d81080a",
        "cursor": {
          "ref": "2743327d-a130-4f04-8d00-bd6922f57f1f",
          "length": 250,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "5b7569c7-9317-4c82-bf6c-f5cd9aef3723"
        },
        "item": {
          "id": "41acbffc-058b-478e-8afe-49911d81080a",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "d81e1cb5-5983-4420-baf4-bdce9393c5eb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "72d2bb41-60ab-4fd5-bd88-d991b01d66c2",
        "cursor": {
          "ref": "0e6bd0a7-b4bd-4242-a594-f8a278a6b656",
          "length": 250,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "b84c4ae4-d253-427f-990c-69a03215a4bb"
        },
        "item": {
          "id": "72d2bb41-60ab-4fd5-bd88-d991b01d66c2",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "01eb71d2-1683-4155-a9e3-f96a972d0b4f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f7d49a8a-1ea0-4dd8-a930-28d3366790fc",
        "cursor": {
          "ref": "cc67806c-0527-41d6-91a0-9f0d922c9a6c",
          "length": 250,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "ddd15ccd-590d-4f76-a3e4-2454fbfaf9e9"
        },
        "item": {
          "id": "f7d49a8a-1ea0-4dd8-a930-28d3366790fc",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "c3d3809c-0adb-461a-b431-c82e33ac914a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9484cfda-9b41-4f80-8621-e2c3e4b8c073",
        "cursor": {
          "ref": "a18f50d9-e7a6-4488-8e6c-74fd5bab628e",
          "length": 250,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "856cea3f-a46a-46af-bba3-14081cab01b2"
        },
        "item": {
          "id": "9484cfda-9b41-4f80-8621-e2c3e4b8c073",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "6d39f200-72ea-487f-b561-a0f735facc7a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6c8ace55-c0c7-4c15-8a54-8ef599188f60",
        "cursor": {
          "ref": "bcdee786-6da9-4e7a-829f-91ac50111b68",
          "length": 250,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "f1890241-c57a-40c7-b048-26674b9ba076"
        },
        "item": {
          "id": "6c8ace55-c0c7-4c15-8a54-8ef599188f60",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "85d95212-40dd-4fdc-af67-63b75a636a23",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "62249be9-9963-412b-9782-866df8bdcbcf",
        "cursor": {
          "ref": "d83582d6-0d56-476a-9603-68f2c37919e5",
          "length": 250,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "662503b9-bcc2-49bc-a1ad-e45198450e70"
        },
        "item": {
          "id": "62249be9-9963-412b-9782-866df8bdcbcf",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "617b876b-bef0-4958-a2dc-e9df5f4817ea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "81349335-e046-4f10-9da6-107df7d1eb9d",
        "cursor": {
          "ref": "6ec6d318-ba3d-49b8-9d98-7bb6a69da7f4",
          "length": 250,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "f6e7eeb8-c6c3-4183-8d05-43cf1fcdb92e"
        },
        "item": {
          "id": "81349335-e046-4f10-9da6-107df7d1eb9d",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "1082e693-e887-4a48-9c80-a41cb3ea6cbf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c902239-c4d7-494a-ab19-9536af7f3f93",
        "cursor": {
          "ref": "6f9ab49c-22f4-4c0f-a1fe-6739509ec2cc",
          "length": 250,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "1be5fea8-97e5-4056-a671-ab161d40ab54"
        },
        "item": {
          "id": "7c902239-c4d7-494a-ab19-9536af7f3f93",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "57545904-7df5-4d11-a40c-4a02504b9e95",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b4dc1058-afdc-47a0-a957-bc5832631a9d",
        "cursor": {
          "ref": "15eb1dca-174a-4b6a-9d22-358503866cc8",
          "length": 250,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "7d7bd07f-712a-4e7e-927d-3f9a08f6ef2c"
        },
        "item": {
          "id": "b4dc1058-afdc-47a0-a957-bc5832631a9d",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "33aebe76-9bdc-463a-a42b-552e2a84969c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "62bc281e-eb44-497e-9ab7-ad348acea3be",
        "cursor": {
          "ref": "4017ee34-94d0-4cd4-816d-9ba485cb511e",
          "length": 250,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "c8c46170-ddbd-446e-a6f7-324dd27b0a13"
        },
        "item": {
          "id": "62bc281e-eb44-497e-9ab7-ad348acea3be",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "cdaa2b2c-67a4-4ddd-b6d7-c929d87ab609",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1671236d-d562-45dc-a026-52b9910f3a65",
        "cursor": {
          "ref": "195e27a4-beff-4baf-bb0b-2c66ccb6cbb7",
          "length": 250,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "bc0bcc3b-b50c-44fb-a8f4-261d2b6e155c"
        },
        "item": {
          "id": "1671236d-d562-45dc-a026-52b9910f3a65",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "3cc32c67-ba09-4c58-8f3a-a1c5d722f753",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d37ff82-1872-4968-a578-8980f164ab7e",
        "cursor": {
          "ref": "2cdaf7f8-18c6-4d98-bb62-58da1d67a6ae",
          "length": 250,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "31d0d2c8-5942-40ab-882f-a368beb341d7"
        },
        "item": {
          "id": "8d37ff82-1872-4968-a578-8980f164ab7e",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "8463fcb7-c880-4738-b91a-2b8493d212c9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d6431d4-1d33-42c7-9583-4b53a19e927b",
        "cursor": {
          "ref": "a4473ee6-a6a5-4400-bcf7-de5172cab4c1",
          "length": 250,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "42fcd28f-bada-4e89-a2c6-5893c6b951d0"
        },
        "item": {
          "id": "7d6431d4-1d33-42c7-9583-4b53a19e927b",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "405fa3c8-7460-4491-9797-e8a612ce5808",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "618bb4e0-8ff5-4c01-b75e-dfa6c275ba65",
        "cursor": {
          "ref": "f8bd9597-a117-479f-b0c0-d11fb522ea34",
          "length": 250,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "d9289ec5-f3e8-49ae-903d-6ea447690fed"
        },
        "item": {
          "id": "618bb4e0-8ff5-4c01-b75e-dfa6c275ba65",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "3ec4b174-2888-45d5-8419-e59e6be9c426",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2a1e62f7-145a-422a-87a4-975a971abf56",
        "cursor": {
          "ref": "bda6b06b-7e9a-4c41-8fb7-f63349c87756",
          "length": 250,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "40e71152-5d36-4295-96fe-d57abe5c6c87"
        },
        "item": {
          "id": "2a1e62f7-145a-422a-87a4-975a971abf56",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "709284d3-4b4a-42e7-99b7-82e6a4c21652",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f5960ba1-65e5-4199-b9b4-374f44a7d0d3",
        "cursor": {
          "ref": "6223a465-2dd6-402f-b137-46adf9863e76",
          "length": 250,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "e8eeec7e-020b-4b5f-ada0-f2dc1cfa2ace"
        },
        "item": {
          "id": "f5960ba1-65e5-4199-b9b4-374f44a7d0d3",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "01f46115-b6c6-4c2c-9781-94287c879d75",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7614ae39-d4c3-473b-861c-616cb25211fe",
        "cursor": {
          "ref": "aff2c6f0-6365-4226-8407-a43c542dde27",
          "length": 250,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "1825a5be-2f46-4d52-b66f-5094a640e055"
        },
        "item": {
          "id": "7614ae39-d4c3-473b-861c-616cb25211fe",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "8bb17e5f-745d-4433-ac12-12ed3b5bdfe0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b358397-85fe-4a20-b269-11dad5672b80",
        "cursor": {
          "ref": "afa89eba-c21a-4e23-84cb-db21a76be3cd",
          "length": 250,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "81cdb31c-ae3f-454d-a89e-2288f9707022"
        },
        "item": {
          "id": "6b358397-85fe-4a20-b269-11dad5672b80",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "5472c1b1-cc42-4542-85af-7ce82bcf85e4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ffce7c11-1d49-4b28-abba-84b1c8b500ed",
        "cursor": {
          "ref": "0796a56a-5424-43d0-b9da-5000f248d825",
          "length": 250,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "c7f0c6b2-e929-4131-b459-c27f29cb5686"
        },
        "item": {
          "id": "ffce7c11-1d49-4b28-abba-84b1c8b500ed",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "3a492482-e55b-4fad-bcf4-f8dc20da1667",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "157fe0df-8866-40ea-82ee-01dc10762f62",
        "cursor": {
          "ref": "e68ad00e-d3b2-4551-832d-83ae94fc46b2",
          "length": 250,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "34639baf-b38d-4787-957f-f3a4f3875dc7"
        },
        "item": {
          "id": "157fe0df-8866-40ea-82ee-01dc10762f62",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "a77029f9-8f02-47e2-8440-17b1dc4c78fc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db69c5b2-28b3-47b4-a21b-05a5c69936eb",
        "cursor": {
          "ref": "38f8dee6-f821-4af2-b345-4db1744eb7aa",
          "length": 250,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "1b2df315-e0af-4675-9362-4f4a8164bda6"
        },
        "item": {
          "id": "db69c5b2-28b3-47b4-a21b-05a5c69936eb",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "846eb3a1-e91b-4495-b02d-dd5b147c4452",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac6eb1e2-3d3f-45c2-8b67-99a843f5cc38",
        "cursor": {
          "ref": "73b5ed2e-61c1-4e6b-9ad9-d515156ed543",
          "length": 250,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "1af7d901-6437-4059-ad43-76067f1ebff6"
        },
        "item": {
          "id": "ac6eb1e2-3d3f-45c2-8b67-99a843f5cc38",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "4107f655-7da8-4921-b5c0-1b01744df5da",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c0067acd-3c39-4ecf-97ae-98257d2086b3",
        "cursor": {
          "ref": "dace5f56-1891-4150-8e3c-7e4ce8fd2579",
          "length": 250,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "4aea766e-32a1-4513-a72c-5f7eebaf2b38"
        },
        "item": {
          "id": "c0067acd-3c39-4ecf-97ae-98257d2086b3",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "8c24b835-2b04-4388-a273-da59494a3a2f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c16ee0a0-159e-437b-bd27-93e24051daac",
        "cursor": {
          "ref": "7c8d209c-331f-43ac-9636-dbff3746e2bc",
          "length": 250,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "3a52a357-bedd-4e42-aa12-294de06f2e82"
        },
        "item": {
          "id": "c16ee0a0-159e-437b-bd27-93e24051daac",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "4f39a259-4b16-45a5-80a5-22622fa91b90",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c1464c56-d805-4908-926b-7dbb2e88db77",
        "cursor": {
          "ref": "9c01b997-7ff6-499b-aa84-25df00ab9234",
          "length": 250,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "3ee1158a-667b-4a67-ade9-27be5012d626"
        },
        "item": {
          "id": "c1464c56-d805-4908-926b-7dbb2e88db77",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "ac026e64-8bb6-4de5-8620-49d550921525",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b514a077-c26f-43f1-ae15-3276d81a2a5a",
        "cursor": {
          "ref": "9ee94da4-81af-4795-81df-4f0a5bc007bf",
          "length": 250,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "d7d56966-5339-4884-9c6a-dcf76ae253ce"
        },
        "item": {
          "id": "b514a077-c26f-43f1-ae15-3276d81a2a5a",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "36ea096a-2d66-4e98-bd75-5b4b3fdfa71f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "159bdd97-deae-4b9e-8dc4-4b0d6bb56ee2",
        "cursor": {
          "ref": "954ba5ba-61b4-4f23-95d7-4e1df4e1d7f2",
          "length": 250,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "9eeefd41-656c-48a1-bbce-ca6af3b08b25"
        },
        "item": {
          "id": "159bdd97-deae-4b9e-8dc4-4b0d6bb56ee2",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "32e2264a-ecf9-4da2-97df-51936b1d95ef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e298e32c-876a-4298-8d16-e52e4409c87f",
        "cursor": {
          "ref": "0e0f17a4-e26b-4c1f-a442-615204a00f0c",
          "length": 250,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "9bd03c84-fbdd-4e71-b27c-5d68a183bae5"
        },
        "item": {
          "id": "e298e32c-876a-4298-8d16-e52e4409c87f",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "a683d26e-4d8e-4448-9bee-e6180657cb36",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9931afb9-634f-4219-9342-53afbe45d283",
        "cursor": {
          "ref": "0f5d691f-6a15-4b34-90c1-b55beae73c38",
          "length": 250,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "ff9134ef-de34-4c35-b4dd-10965b9cd34e"
        },
        "item": {
          "id": "9931afb9-634f-4219-9342-53afbe45d283",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "8d0c7134-8e5d-49a1-804a-75cae587ef32",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e622e67b-b55a-4e43-9deb-627b94e0143f",
        "cursor": {
          "ref": "eafaa00f-ab76-41f3-9066-eee1c2b549e5",
          "length": 250,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "1824c5a4-a01f-4ec8-9158-713a8400130e"
        },
        "item": {
          "id": "e622e67b-b55a-4e43-9deb-627b94e0143f",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "6f7a55a2-c57f-493a-b324-00f0a7fb8553",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d3bb7b7f-bec2-4861-a6dd-674b5c639f79",
        "cursor": {
          "ref": "6bbdd3fc-9192-48d7-b4cd-e01d827b36e8",
          "length": 250,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "358c2b04-cd0e-4bab-b45a-6abd80ee21c6"
        },
        "item": {
          "id": "d3bb7b7f-bec2-4861-a6dd-674b5c639f79",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "c51e3c47-0aa0-4c7b-86fe-38327ab812d1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7902807b-59dc-4f44-8f92-6a142b92200c",
        "cursor": {
          "ref": "047bab84-55ed-49ef-84cf-1199878d3ec1",
          "length": 250,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "19a01a4b-e6ec-480c-8c6b-ac9e3de84711"
        },
        "item": {
          "id": "7902807b-59dc-4f44-8f92-6a142b92200c",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "7fe7afb6-18e4-4f94-a67d-9d0cc0d792bd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "28cbf864-786d-4a21-8534-6c1a51466cb7",
        "cursor": {
          "ref": "dc4e4c1e-73d7-4f0d-9bd3-2d7cae5a2fe9",
          "length": 250,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "b4a5b2d8-f244-4f0f-9da2-3a56c215e689"
        },
        "item": {
          "id": "28cbf864-786d-4a21-8534-6c1a51466cb7",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "34a3bf54-3c8f-4b09-815c-1d7af276ac97",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e9e7a419-d30f-4aa0-8090-a7cc4f2aa757",
        "cursor": {
          "ref": "0ae544c1-49c9-466e-9021-4ca3dea0180f",
          "length": 250,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "b289e4b2-4c0b-4955-9205-b3cedee0fac2"
        },
        "item": {
          "id": "e9e7a419-d30f-4aa0-8090-a7cc4f2aa757",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "5ef1de1c-3698-4261-b9bd-fecfbe2a2d59",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c4417ec-3b40-452c-bf4a-9975800abd41",
        "cursor": {
          "ref": "2d22b7cc-0ef1-4cf2-a195-a496ac492b14",
          "length": 250,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "bd615fbb-c19c-4b59-8cdd-7c79befb53a2"
        },
        "item": {
          "id": "0c4417ec-3b40-452c-bf4a-9975800abd41",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "2861bd4d-22ba-44b3-b545-032aca7b360b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 101,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9e1c5395-c930-4fd4-ac5e-7c3b7e0ae609",
        "cursor": {
          "ref": "9ffe7dd8-dc09-487f-98e6-fa317659c25d",
          "length": 250,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "e6d821ad-38dd-4fae-9598-2039d666ac4d"
        },
        "item": {
          "id": "9e1c5395-c930-4fd4-ac5e-7c3b7e0ae609",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "f07df9e4-ecc1-4818-8c90-2d46af32a795",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:44)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a2f49e80-974f-4281-86db-fe5166c76b30",
        "cursor": {
          "ref": "4d9f8d0d-ee6e-4b32-bc9e-4fc798f9ba7e",
          "length": 250,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "9d91a6f4-79e2-4b35-b69d-a82c98cea4b4"
        },
        "item": {
          "id": "a2f49e80-974f-4281-86db-fe5166c76b30",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "bc2e28e1-0d66-4dab-a1a6-7f467847c19d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "577488ca-46b8-446a-8e1b-860c854845f7",
        "cursor": {
          "ref": "efb658a8-f274-4a08-b601-51d2284ec85e",
          "length": 250,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "21b02fba-d6be-474b-bed9-f66d5950785a"
        },
        "item": {
          "id": "577488ca-46b8-446a-8e1b-860c854845f7",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "3b4b14b2-9293-4b46-b8d8-4a9eb931a90b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7a26ffd1-94e2-4746-bbf9-e2828f44168f",
        "cursor": {
          "ref": "507c6105-7e3b-4559-9787-8fd9f7438475",
          "length": 250,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "9b5b1ae7-afd7-4ec8-8462-946594ad1f5e"
        },
        "item": {
          "id": "7a26ffd1-94e2-4746-bbf9-e2828f44168f",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "c7f9e8ee-fef3-4b15-b5ac-1ca3757ee42a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5e2e61f5-d2a6-4998-800c-17f3d2c74141",
        "cursor": {
          "ref": "ee34bbe6-3540-457e-833a-76e537945299",
          "length": 250,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "e69b81af-e262-4b91-bfce-f57a7093b5cd"
        },
        "item": {
          "id": "5e2e61f5-d2a6-4998-800c-17f3d2c74141",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "9bb0567e-9e62-4dd7-b4f3-0a969e25a0b9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f31ba8b6-2ab0-4003-b5cb-e60c47279add",
        "cursor": {
          "ref": "c07f0e34-4147-4202-bcf5-f7a3214e7b71",
          "length": 250,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "253a804e-ee0a-42a9-8e90-fa43e51846d6"
        },
        "item": {
          "id": "f31ba8b6-2ab0-4003-b5cb-e60c47279add",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "21fc0595-8f32-4f1b-8abd-1def837e018d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cce53d4f-bbe5-464c-8905-aaea99969481",
        "cursor": {
          "ref": "fd98cd6b-9269-41c7-905b-47e51002f2da",
          "length": 250,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "7caade3a-ce45-4025-9d0f-993948fc1f76"
        },
        "item": {
          "id": "cce53d4f-bbe5-464c-8905-aaea99969481",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "01db7529-4279-4926-9a2d-499b457bf832",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6886b1b6-f096-4fae-9b66-7fc7aeabf108",
        "cursor": {
          "ref": "8a30ed88-5f15-474a-9829-3e2202654e67",
          "length": 250,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "63335350-2171-4b0b-86af-b0bf9ef86d3c"
        },
        "item": {
          "id": "6886b1b6-f096-4fae-9b66-7fc7aeabf108",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "2ebb557a-aa71-43a1-99a2-e38982a35335",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:51)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ff3448db-14dd-477f-a759-9a9a92f2dcfe",
        "cursor": {
          "ref": "ce081353-f6e4-4fff-aa61-4c1a90fa08da",
          "length": 250,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "8c073b5f-3fe7-4d8a-bca3-9a6afe45c7d8"
        },
        "item": {
          "id": "ff3448db-14dd-477f-a759-9a9a92f2dcfe",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "49d678e8-90f1-43aa-9b97-e4dec319d9a0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 690,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5b66f6cd-d5e3-4e76-afe6-8e6f3317166c",
        "cursor": {
          "ref": "b40a9e8d-95ba-46e2-88f3-597f172625ab",
          "length": 250,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "01505429-239d-42ce-85df-3671bacc1c24"
        },
        "item": {
          "id": "5b66f6cd-d5e3-4e76-afe6-8e6f3317166c",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "5b20bdae-39fc-4d22-97d5-31033319bd8f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "92f46e34-f9ac-403f-807e-65d97f43eb4b",
        "cursor": {
          "ref": "d9831d75-9993-43b2-bfe2-53b0b36f1a15",
          "length": 250,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "259a0375-e6d4-4893-bee1-a30ffae472b5"
        },
        "item": {
          "id": "92f46e34-f9ac-403f-807e-65d97f43eb4b",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "b004489b-40d1-4275-916b-27d47e4dd659",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ff1d228b-7213-4d74-8bab-3fa782ab2f75",
        "cursor": {
          "ref": "3d857746-05bc-40dc-9f1c-c4a99302065a",
          "length": 250,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "6275a765-7770-423b-b620-86a881d043bf"
        },
        "item": {
          "id": "ff1d228b-7213-4d74-8bab-3fa782ab2f75",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "3bb1af5b-ac40-43d9-ab34-a49e4e948c74",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2b6f08c8-6011-4728-a5f4-eb68be1b1cf6",
        "cursor": {
          "ref": "29db6813-b49f-4384-80ac-d8666d3abfd0",
          "length": 250,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "eb87ddbf-60d3-413d-844f-c935c5a7e039"
        },
        "item": {
          "id": "2b6f08c8-6011-4728-a5f4-eb68be1b1cf6",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "b9441d5a-c908-4fbb-851f-e0727551640f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "afa41229-2572-4b9a-875a-508807fc6c7b",
        "cursor": {
          "ref": "2329a96d-0e30-4053-9d9e-7943ada38b9b",
          "length": 250,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "baa52f3d-7cd6-4a7f-88a0-b760ca564202"
        },
        "item": {
          "id": "afa41229-2572-4b9a-875a-508807fc6c7b",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "a502c09f-87b6-4910-a015-184b04347fbd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "36e1b1ce-2329-4a19-9c5d-27b2589cec88",
        "cursor": {
          "ref": "48a486cc-7a31-4f49-8206-96587070a293",
          "length": 250,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "c0c1399d-659d-4a29-88bb-836fee0bbee5"
        },
        "item": {
          "id": "36e1b1ce-2329-4a19-9c5d-27b2589cec88",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "e0e4b30a-a953-44de-a411-c4f7bc35ad34",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 113,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bfaa0283-50a0-4220-b1cf-cbcc353100e7",
        "cursor": {
          "ref": "9f6019a4-d937-4379-9db5-aecd11d341b7",
          "length": 250,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "f38e8035-48ad-4cd0-a52f-f14648c05192"
        },
        "item": {
          "id": "bfaa0283-50a0-4220-b1cf-cbcc353100e7",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "c2bf8092-c2ae-49cb-a8a4-a6120573c719",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "17641cf2-01fb-4fff-8c7e-beec02d0f962",
        "cursor": {
          "ref": "afe7677f-9747-4a9b-a97b-1d6548d05ed2",
          "length": 250,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "5bf3bfda-9129-476e-94da-d9cb8ee46b08"
        },
        "item": {
          "id": "17641cf2-01fb-4fff-8c7e-beec02d0f962",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "752d467f-d31f-41ff-9f22-2c8ad16606f7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 242,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7b03fcfa-afc4-4562-b4d3-306b8ec70ebd",
        "cursor": {
          "ref": "68ecf223-eba1-4032-9a96-8329f42b01be",
          "length": 250,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "7e43c2b1-2875-4c87-a1c0-09655f74f5b3"
        },
        "item": {
          "id": "7b03fcfa-afc4-4562-b4d3-306b8ec70ebd",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "5a28b938-edba-44ec-8d42-3bfcf42c1b69",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9a248595-bb4b-42da-8fae-5acd054587a3",
        "cursor": {
          "ref": "b766d726-4355-4de4-8d45-f4210d0c5b1b",
          "length": 250,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "b51d242a-213a-4c80-95ac-f2a3c57e75c6"
        },
        "item": {
          "id": "9a248595-bb4b-42da-8fae-5acd054587a3",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "e30b708b-b416-487d-81b0-d00d2c6dae5f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1ec9dcb3-f962-422d-863a-1d28a59c2dc4",
        "cursor": {
          "ref": "5d8c72b6-b2ba-4eb1-b2cf-a9c3eff39e93",
          "length": 250,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "f4ebd670-6cc4-4f0e-84fe-a41dba828da6"
        },
        "item": {
          "id": "1ec9dcb3-f962-422d-863a-1d28a59c2dc4",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "2f41ff15-bb17-4c3d-9a53-cd4f3747666c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d5b0a954-ba6c-4183-bdd2-c7fb5653a148",
        "cursor": {
          "ref": "e1c2039d-94cf-4850-8dfb-881bdb2a3a3e",
          "length": 250,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "d00ae5c2-e536-4d22-aea1-42853ee42194"
        },
        "item": {
          "id": "d5b0a954-ba6c-4183-bdd2-c7fb5653a148",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "ed1428ff-34cb-4eda-b0cc-ebcb0690f9e9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5402c8a6-8a95-4384-96c6-85aa4733fb2a",
        "cursor": {
          "ref": "710add39-5083-483a-b92a-96d271846609",
          "length": 250,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "c3afa97c-6363-4a80-b057-9d9906817ef3"
        },
        "item": {
          "id": "5402c8a6-8a95-4384-96c6-85aa4733fb2a",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "6189c8ad-3628-45a8-82f9-4b1af824020f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a93ea013-9393-4ac3-8860-2c501f2e10eb",
        "cursor": {
          "ref": "fe126f68-e5b8-4db2-8112-f4e29bf7c7be",
          "length": 250,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "2c71b89a-ebfd-426b-90f4-d71867058311"
        },
        "item": {
          "id": "a93ea013-9393-4ac3-8860-2c501f2e10eb",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "d6320f04-b0ff-40f2-bf44-0bd217fba6e3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 96,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c6d65bc6-9d43-4a47-a485-db60dfa83057",
        "cursor": {
          "ref": "e7ddc66d-a4ee-48a1-98c7-8dc7cc13a322",
          "length": 250,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "28ca173a-bbef-4fc4-8e1f-19888081bc1b"
        },
        "item": {
          "id": "c6d65bc6-9d43-4a47-a485-db60dfa83057",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "2b439da2-38b8-4b8d-bbc3-9c26180cd0bd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 111,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb560670-b3fc-4e5c-9a92-b5d8f01184ae",
        "cursor": {
          "ref": "86dbfd46-d004-4feb-a84f-53fd8d608c2d",
          "length": 250,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "e77bb6ea-8cdb-465c-9239-35578f8f20aa"
        },
        "item": {
          "id": "cb560670-b3fc-4e5c-9a92-b5d8f01184ae",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "7e859ffd-f9af-4dbd-b43a-b03aa4fe4a0b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 297,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e6059912-2dc1-474d-aa1a-6955e116b1c9",
        "cursor": {
          "ref": "f746a798-2695-4cff-b465-40d41fdaa17c",
          "length": 250,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "3844648f-2ec7-475f-a9cc-d1c41834f2f2"
        },
        "item": {
          "id": "e6059912-2dc1-474d-aa1a-6955e116b1c9",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "00e992be-03c2-4d00-b0aa-9274dcac6521",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 96,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "99c0f6c5-b17a-4dfc-90e8-70435fc486df",
        "cursor": {
          "ref": "00f69391-6141-4d91-ae2a-b2aae8ca2651",
          "length": 250,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "e895d91c-9a59-49b7-ae42-c8cb09d73b4f"
        },
        "item": {
          "id": "99c0f6c5-b17a-4dfc-90e8-70435fc486df",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "9d06abea-a606-4850-ae49-ee35de47ca05",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "53563ddf-2efa-4e76-8ac8-2216650ba8cc",
        "cursor": {
          "ref": "a6ad6ff9-0ab0-499a-9777-10fbfcb4220d",
          "length": 250,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "ad8d9a88-f3ad-409a-973e-b8983853bc9e"
        },
        "item": {
          "id": "53563ddf-2efa-4e76-8ac8-2216650ba8cc",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "be30a2b0-c1c1-4c56-9ae8-d88578e76691",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 745,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9463ac52-2ebc-4f59-9304-146f1ac948e9",
        "cursor": {
          "ref": "bdd8ec51-ce8d-48a8-9c89-ae64997e3678",
          "length": 250,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "625ccaa8-fe80-4dbc-8a50-2702096d53fa"
        },
        "item": {
          "id": "9463ac52-2ebc-4f59-9304-146f1ac948e9",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "fac2cc4d-99b7-4c76-b5b7-f61e0a60850e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d1c88e2d-5623-4801-9cf2-3581fb03304f",
        "cursor": {
          "ref": "d893376a-e165-4bdc-b528-df1a5dea011c",
          "length": 250,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "5ce51053-11c3-4249-be09-1de3a46d30b8"
        },
        "item": {
          "id": "d1c88e2d-5623-4801-9cf2-3581fb03304f",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "a9f43868-fc90-4477-a735-5b1e70dc0ec8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d476426e-388b-4ce9-9f75-38157f7d3b51",
        "cursor": {
          "ref": "f7d1e049-a667-4e0f-bc67-06e4f8a01032",
          "length": 250,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "62fd3d92-de60-461e-8205-28ba63257dab"
        },
        "item": {
          "id": "d476426e-388b-4ce9-9f75-38157f7d3b51",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "7bc75d96-1d94-4b39-8517-fce144b665a7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fee4de71-a7ce-4a8e-9ce6-a9695bdf3148",
        "cursor": {
          "ref": "c9228f65-3dfd-4496-8fee-5bdbb35a9943",
          "length": 250,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "b6cf694d-277c-41b2-a090-df13c8f99870"
        },
        "item": {
          "id": "fee4de71-a7ce-4a8e-9ce6-a9695bdf3148",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "442771ef-d72d-4673-a4ea-1d746d1c16f1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a4c04317-c7a1-49e6-a3f5-f0133c879bfc",
        "cursor": {
          "ref": "b3c5533f-0a3c-42e0-a338-f8332cef2c86",
          "length": 250,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "f6f692f9-6a47-4f76-8e8b-14307f3c2ff4"
        },
        "item": {
          "id": "a4c04317-c7a1-49e6-a3f5-f0133c879bfc",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "1170e7ec-9e0e-40cb-876e-7db2d0d406fe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b5b1b618-e4f5-4e8c-949c-a066ced0856e",
        "cursor": {
          "ref": "269b645a-f29f-49a8-a28c-f184f365dba4",
          "length": 250,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "65436f97-8894-49f8-879b-72ee94be5b59"
        },
        "item": {
          "id": "b5b1b618-e4f5-4e8c-949c-a066ced0856e",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "9136bd62-ac9a-45fd-a82d-bd78b4b570d9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc4e31b8-6824-4fda-8f4b-8e80b07a782d",
        "cursor": {
          "ref": "9431e88e-86d9-4e94-862b-656c5f44b7f2",
          "length": 250,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "4454a4ae-e168-4559-8195-5ebb1ed26f72"
        },
        "item": {
          "id": "fc4e31b8-6824-4fda-8f4b-8e80b07a782d",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "cbf54e20-5d1c-4fd9-afa9-01afada2cb7a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d35233c2-f2cd-4e24-bae6-5f8a12a088ce",
        "cursor": {
          "ref": "3677475a-f6d9-494d-afba-f5d021207e28",
          "length": 250,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "fe673d5b-7fd5-424d-8c56-832bf069dfeb"
        },
        "item": {
          "id": "d35233c2-f2cd-4e24-bae6-5f8a12a088ce",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "45ecf62b-27ef-4f30-8d04-fdb8d93c6aec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c26d94f5-a28b-4ca6-b6ad-b7aacbe05a4c",
        "cursor": {
          "ref": "d8972613-6a49-4e89-a3de-fd62db782c7e",
          "length": 250,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "7ffef058-0c4a-48c3-8897-bac44e42f378"
        },
        "item": {
          "id": "c26d94f5-a28b-4ca6-b6ad-b7aacbe05a4c",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "7565014e-3d4f-4be4-b836-b9d751b31d68",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b8b53be0-6a08-42f9-8996-49863fcd1f16",
        "cursor": {
          "ref": "53cfacf0-aab0-42ab-8a51-d96e69acbedd",
          "length": 250,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "a4b919a9-5ac7-4145-b10c-abe0e699e142"
        },
        "item": {
          "id": "b8b53be0-6a08-42f9-8996-49863fcd1f16",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "daf69609-dbe4-4529-8810-19c0529170ad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "90f45308-b355-4f6b-a52e-00f888815ebf",
        "cursor": {
          "ref": "fd81e8c5-6b2c-4758-bc2a-9d59a07351ba",
          "length": 250,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "7e4fa6a2-9ed8-4bd1-91c0-07a3ba050848"
        },
        "item": {
          "id": "90f45308-b355-4f6b-a52e-00f888815ebf",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "c10fe59e-4e09-4201-9340-2d23843fe53f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d969882-b8b8-414e-8336-ace9813897b7",
        "cursor": {
          "ref": "f2f2d70b-9224-44b3-92ec-81133e1d9b6b",
          "length": 250,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "9b44c703-2b78-4d82-aad4-0d8856a4a75e"
        },
        "item": {
          "id": "2d969882-b8b8-414e-8336-ace9813897b7",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "3a2ad03a-fdb8-4498-b44e-21d50fabd35b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "014c5747-f488-46db-b11d-567057eaa87c",
        "cursor": {
          "ref": "b0dd747f-daf0-46ab-8a0f-f4c07698d035",
          "length": 250,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "3c194a9a-dfb2-4c71-b80d-c6ffacce9cd4"
        },
        "item": {
          "id": "014c5747-f488-46db-b11d-567057eaa87c",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "c6102785-669a-4bfb-9091-e62119227245",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae323499-1cd1-464e-af80-732a82f6240b",
        "cursor": {
          "ref": "eb9d4c15-db3d-4fbb-9fbc-4beafc6f8682",
          "length": 250,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "4619e643-35b6-4bc5-a5c8-144f2dc04682"
        },
        "item": {
          "id": "ae323499-1cd1-464e-af80-732a82f6240b",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "32abebbb-43df-45a7-a68f-2acda7acd700",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a113d64d-555e-4dac-8f35-a2cb98a618c0",
        "cursor": {
          "ref": "f8a7d708-6e01-4406-80fb-619e058fa659",
          "length": 250,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "afdf6a94-d7d6-4be7-b34a-f94a13002ec8"
        },
        "item": {
          "id": "a113d64d-555e-4dac-8f35-a2cb98a618c0",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "c028bd0d-e50d-4b92-bd17-82f067270264",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a4e315af-cc7e-4178-9abd-4d1a6634f93b",
        "cursor": {
          "ref": "282d809e-60b5-455f-b932-782bb675de39",
          "length": 250,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "59ae192e-595e-4acb-921e-fb6f9ed1d146"
        },
        "item": {
          "id": "a4e315af-cc7e-4178-9abd-4d1a6634f93b",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "746cb87d-a9cf-4f7b-83d9-9246fc16e688",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "320b0516-97d1-443a-bd3f-6bd516f51f9e",
        "cursor": {
          "ref": "e36fc4ba-7d91-4354-b977-8285c7ab34a3",
          "length": 250,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "be0f017e-66a3-4f05-9e41-af781aece7db"
        },
        "item": {
          "id": "320b0516-97d1-443a-bd3f-6bd516f51f9e",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "c1155ce9-1270-4a57-bb87-61dc99c6b725",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "66459890-7170-4d52-9fce-5b1274ff5ea5",
        "cursor": {
          "ref": "5f1d7932-1dc0-40c7-a5e7-5961fbab29b6",
          "length": 250,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "2391b94e-63e6-4ee2-b6c7-3df028bef3cf"
        },
        "item": {
          "id": "66459890-7170-4d52-9fce-5b1274ff5ea5",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "d58b4637-4f3b-4d60-b4a8-252e7e7b9e4f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a5097009-1325-4a11-a0b4-a7b0b2cb8e46",
        "cursor": {
          "ref": "5e224f59-cc51-4a6f-b356-ea3816d84302",
          "length": 250,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "13a08f88-fe8a-488a-9d20-5b53d9a4ca6f"
        },
        "item": {
          "id": "a5097009-1325-4a11-a0b4-a7b0b2cb8e46",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "c4fe85a4-b3f3-4271-95a3-73bf66ad614b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "68fdded1-71a6-4451-b28d-a77152dfc1f2",
        "cursor": {
          "ref": "0b36f12e-3672-470b-a3c5-feb98ff0395d",
          "length": 250,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "bd2667f1-70eb-4bc6-8687-764da00bd326"
        },
        "item": {
          "id": "68fdded1-71a6-4451-b28d-a77152dfc1f2",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "b9e2c266-89f2-4bf9-875f-455a2a823529",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d1b7bd9-0e94-4ad2-ae5b-dd9deb744a01",
        "cursor": {
          "ref": "e183fefb-1450-4dd9-9457-6e00426bdc59",
          "length": 250,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "c066fb9e-f474-44d2-9174-0af10c46ae0d"
        },
        "item": {
          "id": "8d1b7bd9-0e94-4ad2-ae5b-dd9deb744a01",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "c825b061-0c94-4db6-9f40-2570fb6e3164",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9bd7a064-b2a7-4015-8895-ad5eb2599198",
        "cursor": {
          "ref": "4f2ea4fa-7406-4a2a-b391-367912a329d1",
          "length": 250,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "0a939cca-504a-44ad-aee6-68df7e1b8fe5"
        },
        "item": {
          "id": "9bd7a064-b2a7-4015-8895-ad5eb2599198",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "3ab70345-adb1-4b5d-86ba-dfe5c028a8e3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d27ca93-f78d-4a35-8093-75226429e7a5",
        "cursor": {
          "ref": "9e717cf1-1284-40e3-96fa-4ecb3a623717",
          "length": 250,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "697a2079-6b1b-4b9d-97f6-8e65d016dba2"
        },
        "item": {
          "id": "2d27ca93-f78d-4a35-8093-75226429e7a5",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "7dfea83b-ee79-4022-a43c-15eba1cad9da",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d64cd69f-cd4b-4199-a7d1-eabfae9a3674",
        "cursor": {
          "ref": "4dec1857-d355-4a02-905a-9d80169bf45d",
          "length": 250,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "42ca57de-245d-4b4e-9bef-a282ba4181db"
        },
        "item": {
          "id": "d64cd69f-cd4b-4199-a7d1-eabfae9a3674",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "7fa19e01-aed5-4070-a993-3c5242176309",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "13f21869-c39d-4e6b-80b5-cc4597eef0d7",
        "cursor": {
          "ref": "6d4691b3-c970-49ac-a4bb-67a6499502da",
          "length": 250,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "630206d0-15ba-4953-aa20-82c16fcdd7ad"
        },
        "item": {
          "id": "13f21869-c39d-4e6b-80b5-cc4597eef0d7",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "3690e0e8-cc27-4b36-8a9b-ed19a0fe6d14",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f929fed-e8de-4a5b-9acf-cf1625588762",
        "cursor": {
          "ref": "a5919148-fe31-451e-b459-98bf30aab396",
          "length": 250,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "bb9532e7-d723-4778-a595-0d800266ada4"
        },
        "item": {
          "id": "7f929fed-e8de-4a5b-9acf-cf1625588762",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "2c52ad02-a70d-4c80-ab1a-a172d777608a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1b814f45-2696-42e0-95d5-aa57fca6506f",
        "cursor": {
          "ref": "c91f7033-5835-423a-8d0a-b98739789815",
          "length": 250,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "f5850d3a-7b7a-41f6-8981-9676ead2576e"
        },
        "item": {
          "id": "1b814f45-2696-42e0-95d5-aa57fca6506f",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "2d94dd5f-a000-4fcd-9f8a-5463d5d8029f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a692467a-00cd-45e7-9823-aefee7f77a00",
        "cursor": {
          "ref": "8199d5f8-fb79-413e-a418-deddc1af8092",
          "length": 250,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "f995935c-53a8-48b1-bb4e-41bfab3b7491"
        },
        "item": {
          "id": "a692467a-00cd-45e7-9823-aefee7f77a00",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "0543d80b-0aa7-4107-a05d-c398521b7b9d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 139,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e96449dc-f3ec-449f-8354-6b1bba61bc07",
        "cursor": {
          "ref": "fa2e43f1-6906-4158-9fb9-9273173fd947",
          "length": 250,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "cbc044a7-760c-4dff-9cf2-c5ac180dd2bf"
        },
        "item": {
          "id": "e96449dc-f3ec-449f-8354-6b1bba61bc07",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "a445fcd9-ab68-44e1-b561-9cc06f6c1d60",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1a89559d-2567-4c25-b980-8afb4e4ed700",
        "cursor": {
          "ref": "23c3069d-1fbd-4114-985b-22c08cc238b9",
          "length": 250,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "58cde9f9-9b0d-4491-9495-db1b430fd725"
        },
        "item": {
          "id": "1a89559d-2567-4c25-b980-8afb4e4ed700",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "42bcd5a5-d23f-4b7e-9e33-5258fc473567",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 27,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9ff975f6-d0d4-4b70-9dc0-79cafe4fdaaa",
        "cursor": {
          "ref": "45f21b6c-a826-4893-8b0b-b2a114fbf998",
          "length": 250,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "6608a4bc-b84b-48ec-bd74-5de6111799aa"
        },
        "item": {
          "id": "9ff975f6-d0d4-4b70-9dc0-79cafe4fdaaa",
          "name": "credentials_issue.credential.issuer:dup"
        },
        "response": {
          "id": "30c06129-3d74-4402-9bfb-842651d61b7e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:102)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 1,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:2:102)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:3:102)"
            }
          }
        ]
      },
      {
        "id": "c46e83bf-3b6b-49ca-8b99-a6c4c925cdeb",
        "cursor": {
          "ref": "11e1db3f-e9f2-4451-b143-24be997a8bd0",
          "length": 250,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "b60543f4-087b-44dc-bfdd-9189e7e41246"
        },
        "item": {
          "id": "c46e83bf-3b6b-49ca-8b99-a6c4c925cdeb",
          "name": "credentials_issue"
        },
        "response": {
          "id": "abefed78-8d64-418c-96fc-ff5a9ebcfa4f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:103)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:103)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:103)"
            }
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 3,
              "test": "response issuanceDate matches request credential.issuanceDate",
              "message": "Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:4:103)"
            }
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 4,
              "test": "response proof.created is close to 'now'",
              "message": "Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:5:103)"
            }
          }
        ]
      },
      {
        "id": "bbc5cf4d-8720-4906-a2ee-6c0fee14d0fc",
        "cursor": {
          "ref": "b56a0440-f756-4317-80b7-8f65bd618f8e",
          "length": 250,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "baceaf19-b981-42e3-a03f-1b639bcd43ca"
        },
        "item": {
          "id": "bbc5cf4d-8720-4906-a2ee-6c0fee14d0fc",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "c32b82eb-e8dd-4cbc-95ca-4d895559d4bc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:104)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:104)"
            }
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response verifiableCredential.id matches request credential.id",
              "message": "Cannot read properties of undefined (reading 'id')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'id')\n   at Object.eval sandbox-script.js:3:104)"
            }
          }
        ]
      },
      {
        "id": "2592ced7-dae5-42c5-ba6a-700c50d0a3ba",
        "cursor": {
          "ref": "6db73ca0-e001-4fe0-b71d-4d39d4e4afc3",
          "length": 250,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "97b804ef-141a-4803-8fb8-23f0476b184f"
        },
        "item": {
          "id": "2592ced7-dae5-42c5-ba6a-700c50d0a3ba",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "580f28d6-b4b8-4199-b861-5d7ee70715bc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:105)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:105)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer.id",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:105)"
            }
          }
        ]
      },
      {
        "id": "4fcf9f5c-1360-4089-82b2-2e89d05d77d4",
        "cursor": {
          "ref": "6e376ff6-e7d5-4c55-b1f4-ed8175b7a14c",
          "length": 250,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "643d16c1-892d-4508-abde-c4b0611eb6e5"
        },
        "item": {
          "id": "4fcf9f5c-1360-4089-82b2-2e89d05d77d4",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "4af45322-bbb4-405a-ada4-b2ef6e3b29b1",
          "status": "Created",
          "code": 201,
          "responseTime": 5136,
          "responseSize": 992
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "e0ece220-5b5c-4aa4-b939-7d4ab4c7b294",
        "cursor": {
          "ref": "362ada3a-d55a-4a8c-8655-577883d7b573",
          "length": 250,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "012342eb-cd08-49ba-be4b-37181acbeadb"
        },
        "item": {
          "id": "e0ece220-5b5c-4aa4-b939-7d4ab4c7b294",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "be8efd78-c1a2-4cff-b87a-7a1b1e89f3d9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 764,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:107)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:107)"
            }
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response proof.created matches request options.created",
              "message": "Cannot read properties of undefined (reading 'proof')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'proof')\n   at Object.eval sandbox-script.js:3:107)"
            }
          }
        ]
      },
      {
        "id": "34064148-bc34-454e-8d0a-e3ae6221d207",
        "cursor": {
          "ref": "7c0c2e70-8eca-473a-8b26-2d061f504dd7",
          "length": 250,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "265cbd16-6701-45be-b05a-08c50031fb19"
        },
        "item": {
          "id": "34064148-bc34-454e-8d0a-e3ae6221d207",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "b624737a-e292-4f53-ae38-72f602fd7876",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:108)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:108)"
            }
          }
        ]
      },
      {
        "id": "06873292-615c-4fb1-852e-2c1ebbf64dbb",
        "cursor": {
          "ref": "2eb070d9-3aea-4db9-bd98-f8d88a61b29d",
          "length": 250,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "281682d0-73df-4cf5-a174-5669b4bc3079"
        },
        "item": {
          "id": "06873292-615c-4fb1-852e-2c1ebbf64dbb",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "048d08d7-34fb-470e-b5cb-37bf469ef940",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f2d5f5fe-cb6d-4086-ac46-6d945c1a9e50",
        "cursor": {
          "ref": "4898daaa-3694-4d69-abb7-8717fe449e7d",
          "length": 250,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "acd44c67-281f-4f3e-9aa6-0f33f2dcbcb0"
        },
        "item": {
          "id": "f2d5f5fe-cb6d-4086-ac46-6d945c1a9e50",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "79a04551-5589-4d5d-b0e3-5c2461cfea6d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ca2b62db-c9eb-4ebc-91e7-07f25ea6ea82",
        "cursor": {
          "ref": "d1b1affa-615e-4220-9eee-f9e267177236",
          "length": 250,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "3d082b5f-9ea0-42f8-828a-b9f3eac0658c"
        },
        "item": {
          "id": "ca2b62db-c9eb-4ebc-91e7-07f25ea6ea82",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "381d5030-f2f2-423e-b777-d577abe24c1a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d7b1e435-4697-4afe-9cf7-6f37dd824691",
        "cursor": {
          "ref": "a8db36b4-4218-4970-9573-cddaad593450",
          "length": 250,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "a7d86017-34b1-481b-beb7-4d31b27738c3"
        },
        "item": {
          "id": "d7b1e435-4697-4afe-9cf7-6f37dd824691",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "23533ea6-2c3e-4514-8c7e-4ff41bf771ca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d9131c86-c9dc-4571-899e-9c0d93f6b7fb",
        "cursor": {
          "ref": "e087c87f-3081-4540-b4e0-d29db4c06792",
          "length": 250,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "b137e013-b353-4367-a50d-289e94f1fc4d"
        },
        "item": {
          "id": "d9131c86-c9dc-4571-899e-9c0d93f6b7fb",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "e47c0f2d-f6e4-4b4d-a728-1fcecc732412",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d3cfdd92-55ad-4bcf-a1e9-46552726c9b8",
        "cursor": {
          "ref": "108cd1ce-9fdd-472b-984e-6d6708effd69",
          "length": 250,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "ea4f9a6d-1da8-483a-b6fb-9c9dc81a16fe"
        },
        "item": {
          "id": "d3cfdd92-55ad-4bcf-a1e9-46552726c9b8",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "4a47c5c6-6a09-408e-a5dc-97953be027fd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "50ebe3f5-7bf6-469f-ada8-660091d98310",
        "cursor": {
          "ref": "cf19670c-6724-466c-a714-08cfeb39d21d",
          "length": 250,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "c2e945a4-bd4c-4aa2-8e0a-6e25d4a9b968"
        },
        "item": {
          "id": "50ebe3f5-7bf6-469f-ada8-660091d98310",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "174661ba-1352-45f7-ab37-fa28609f1759",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7e7033df-f8af-4be2-9767-b47186bcf6eb",
        "cursor": {
          "ref": "7079569d-2ab4-4700-8e06-f867cd70e901",
          "length": 250,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "8b67fa20-e0a1-4846-aa00-b9cf84505130"
        },
        "item": {
          "id": "7e7033df-f8af-4be2-9767-b47186bcf6eb",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "c610445c-756f-4280-9ce4-9dbaf555334a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0daae81a-d3dc-4169-b75f-9b757517bcf9",
        "cursor": {
          "ref": "499068ba-16cb-4902-98d4-75864e0da880",
          "length": 250,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "19267b29-4b99-4de1-87a6-2a71f670a520"
        },
        "item": {
          "id": "0daae81a-d3dc-4169-b75f-9b757517bcf9",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "7e6f6ddb-eb7b-4cec-ad26-751c547c0831",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cddbec33-cde6-4988-ad98-20dbc29c074a",
        "cursor": {
          "ref": "46ee6972-c4dd-4400-8620-c537a5b110a0",
          "length": 250,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "f9338a12-c2e6-4d2d-8b6b-5e3c559c42cd"
        },
        "item": {
          "id": "cddbec33-cde6-4988-ad98-20dbc29c074a",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "01281e60-771d-4f28-9964-73eb10afaf42",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b38d716d-c99c-4130-b81d-7fc0b451d850",
        "cursor": {
          "ref": "3cb3d493-600d-4452-995d-fe44af909458",
          "length": 250,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "d2b93a7a-575f-43d9-bbc8-ce4192c417a9"
        },
        "item": {
          "id": "b38d716d-c99c-4130-b81d-7fc0b451d850",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "9af8f6ac-1a56-4a7c-9fce-7b8f7b49c03d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "04106b7c-4ff6-4bfc-a4bf-d05775e6ee4a",
        "cursor": {
          "ref": "1ea683c9-27ee-44e6-88cf-491d9e06e4d8",
          "length": 250,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "d02d3116-4614-4ab2-96c6-630f50615bf8"
        },
        "item": {
          "id": "04106b7c-4ff6-4bfc-a4bf-d05775e6ee4a",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "aeab6601-9045-47ba-8757-c23657680ef9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4ea01c91-2556-41f1-b510-af3e52e3adde",
        "cursor": {
          "ref": "7bf3c04a-9bff-4262-8e58-eee85d8a0727",
          "length": 250,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "c700f2bc-4acc-4b5a-90ab-f5a59db8ab84"
        },
        "item": {
          "id": "4ea01c91-2556-41f1-b510-af3e52e3adde",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "847570e3-074c-45ce-a430-62d19c95dae9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ed406af8-db91-411a-b7ce-b43116e1b9d9",
        "cursor": {
          "ref": "4dddddb8-455a-48e9-883a-6a9ccd5aa4e5",
          "length": 250,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "f1187b42-0b01-491a-a424-994efe37f036"
        },
        "item": {
          "id": "ed406af8-db91-411a-b7ce-b43116e1b9d9",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "85ad76d5-7bce-42a5-944e-9a0eb269fa03",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cc601a24-d85d-47bf-af91-aee76880376f",
        "cursor": {
          "ref": "3e03100f-2475-48b2-ad04-977757e846ec",
          "length": 250,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "85d7c97c-80ae-4fd0-bccf-04f9fc8ea14c"
        },
        "item": {
          "id": "cc601a24-d85d-47bf-af91-aee76880376f",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "ba1bf8e6-7bda-4597-b74e-fa104ea57b74",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 107,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e0781d02-b3ac-46bc-b15a-6d50607509d5",
        "cursor": {
          "ref": "303b4cf8-ca33-4101-8263-bee40084c666",
          "length": 250,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "1a6ab62d-c810-438e-8474-fa142fd525ad"
        },
        "item": {
          "id": "e0781d02-b3ac-46bc-b15a-6d50607509d5",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "a3dd3591-25b4-4101-8955-1be7c80c91b5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "032362d7-218f-4525-bb25-eee1bccdc91a",
        "cursor": {
          "ref": "4ef87173-d2f4-4b2e-9aae-7fdb7b56b6e5",
          "length": 250,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "4ce50d70-4d5a-434c-943f-59f9d5bf0d8d"
        },
        "item": {
          "id": "032362d7-218f-4525-bb25-eee1bccdc91a",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "d53b6dbe-80b0-49d4-aecf-43140fd9c06f",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 56,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:125)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:125)"
            }
          }
        ]
      },
      {
        "id": "81b89a6e-0ec4-4592-abe7-86726f63798d",
        "cursor": {
          "ref": "d5e01c9d-beb8-473a-8fab-b8740c3e865f",
          "length": 250,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "c4048eb8-1fba-478e-9a7a-a09dcdf0d870"
        },
        "item": {
          "id": "81b89a6e-0ec4-4592-abe7-86726f63798d",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "241a31d2-170b-4828-8cb9-173156671527",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3c4b3b9c-b007-42ca-8fd8-b41d999cbd3f",
        "cursor": {
          "ref": "c01ee001-1a3d-4c65-977c-5dcc3e13e4d4",
          "length": 250,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "aa2f30e2-63d4-402f-b087-8361d7a4b3d2"
        },
        "item": {
          "id": "3c4b3b9c-b007-42ca-8fd8-b41d999cbd3f",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "302521b5-869c-4418-aae9-056b8716e38d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "214b07b0-7216-437a-b6a5-6d0a7ed73d9f",
        "cursor": {
          "ref": "058b1683-5961-468b-8432-d19c6f215d46",
          "length": 250,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "a567b0f5-8626-435e-87e3-8ffd0a906452"
        },
        "item": {
          "id": "214b07b0-7216-437a-b6a5-6d0a7ed73d9f",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "0604117b-1ab6-42d0-a545-d1959f31c5eb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ec8bc057-985e-482a-84c1-95a344d8e6cb",
        "cursor": {
          "ref": "9371999a-70cf-4e6f-b554-a3b8e06211b0",
          "length": 250,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "808b74e2-c843-4458-8808-82a6ed0d5cb7"
        },
        "item": {
          "id": "ec8bc057-985e-482a-84c1-95a344d8e6cb",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "5119e2f9-dd7a-4dd6-a85e-f45c608e806b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "46cc6739-41e2-4bfb-95c4-897d4326cb6f",
        "cursor": {
          "ref": "8fb1ad65-486b-4eb8-bef6-ad82155e05ea",
          "length": 250,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "a49b26b1-5c33-4e08-801b-ef9d3c60337f"
        },
        "item": {
          "id": "46cc6739-41e2-4bfb-95c4-897d4326cb6f",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "0ca2c708-ba40-46a6-bf3a-6f189bd6b22a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b93ebf68-e382-4c75-9b86-e7c9ae4a4c2f",
        "cursor": {
          "ref": "a6b6ed62-bf64-4f04-b761-92d7ee8509ef",
          "length": 250,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "b2604bdb-868a-4bc3-9bba-16b120d3e833"
        },
        "item": {
          "id": "b93ebf68-e382-4c75-9b86-e7c9ae4a4c2f",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "cab0b5e6-c5fa-4d5a-93ee-a54020f2c13d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "150e4c2d-9d87-4ee4-afc1-6bea4b7207f9",
        "cursor": {
          "ref": "f3bf4605-f90d-46d2-9556-b779b19a184d",
          "length": 250,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "2b9fb7df-8489-496a-a2af-08f8fd6e3855"
        },
        "item": {
          "id": "150e4c2d-9d87-4ee4-afc1-6bea4b7207f9",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "bbdeaa9f-114c-4d8c-bab9-ae2c764a43f8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7bdc8995-d3aa-446b-9fc3-8d542e752afa",
        "cursor": {
          "ref": "3375c2a6-4bfc-4c61-9ca2-f083413d29eb",
          "length": 250,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "a293d5c0-e7c3-4fcc-9c24-8b88ab0df13c"
        },
        "item": {
          "id": "7bdc8995-d3aa-446b-9fc3-8d542e752afa",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "3f10f4d9-087d-43a5-a3a4-6bc1d5109f26",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 40,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:133)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:133)"
            }
          }
        ]
      },
      {
        "id": "2f89b83f-7497-493f-a28b-2032e6e9dce7",
        "cursor": {
          "ref": "21faf008-795f-4c56-a429-f5d2f5646bea",
          "length": 250,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "bc7c2927-6385-4c0c-9739-dab7674fa45e"
        },
        "item": {
          "id": "2f89b83f-7497-493f-a28b-2032e6e9dce7",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "d7488856-86c3-4de5-a6a1-9861e24128a7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2f4883a5-0683-4638-bc0e-2b0828d076e3",
        "cursor": {
          "ref": "e52e1933-9aec-4c9d-885e-304a6f6ab197",
          "length": 250,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "6a1f368a-f099-42a6-b133-19f882e77bec"
        },
        "item": {
          "id": "2f4883a5-0683-4638-bc0e-2b0828d076e3",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "034d642a-0ff7-4b6b-8c3e-642d773f0ada",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "67321ebe-190d-43b8-8aee-b31bfdb54eb4",
        "cursor": {
          "ref": "acca5718-e31a-45cf-8a84-4311a9706bca",
          "length": 250,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "ec309026-06d9-4254-aa81-feddffd1ad29"
        },
        "item": {
          "id": "67321ebe-190d-43b8-8aee-b31bfdb54eb4",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "f0743dab-4dd9-4d09-958b-d2cc0f80f46e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "160e214a-23ca-4cde-9f4e-3412eaae4773",
        "cursor": {
          "ref": "d2fb279e-f970-418a-97f7-fdf4fbc2f49c",
          "length": 250,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "11f34a69-14a2-4ae0-a773-e93660a82778"
        },
        "item": {
          "id": "160e214a-23ca-4cde-9f4e-3412eaae4773",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "a520767a-38e1-4334-9894-f1564e09c1e5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7e38c054-2738-4b1c-a286-2daec61fa6c2",
        "cursor": {
          "ref": "0210ae3f-526d-420b-adb2-2c68f1d3f7be",
          "length": 250,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "e931a39f-bc91-4b41-b149-b102f05c36b9"
        },
        "item": {
          "id": "7e38c054-2738-4b1c-a286-2daec61fa6c2",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "f8f1545f-94cf-45c0-b628-25de2aeb2648",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bf5451b0-7dd3-4bf2-b67f-3fcba6ad5e78",
        "cursor": {
          "ref": "1f5324a7-f829-4691-ada2-88220efdd818",
          "length": 250,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "c48bd87e-d8d5-4100-88cf-f4af998c8310"
        },
        "item": {
          "id": "bf5451b0-7dd3-4bf2-b67f-3fcba6ad5e78",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "d255c0e2-ed93-42b8-be44-25edb68b5371",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a751b448-a191-4640-8582-9e29a1ee6ae2",
        "cursor": {
          "ref": "f90544ce-798c-4661-b14e-f0d0b3fb9d99",
          "length": 250,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "813369a1-d09a-4c17-aba7-233bd1ff97a6"
        },
        "item": {
          "id": "a751b448-a191-4640-8582-9e29a1ee6ae2",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "e448de6a-e58f-42ff-8750-44fababd9e6a",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 75,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:140)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:140)"
            }
          }
        ]
      },
      {
        "id": "4d0839de-66e3-49c4-b348-44b82e8941d0",
        "cursor": {
          "ref": "ec178ad3-49b7-481c-8784-ad53796f685c",
          "length": 250,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "27321470-dbcb-45a6-9460-2c5db1ad907f"
        },
        "item": {
          "id": "4d0839de-66e3-49c4-b348-44b82e8941d0",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "80effafb-f86b-4aa2-9ff9-263da1b3c037",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 35,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:141)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:141)"
            }
          }
        ]
      },
      {
        "id": "c0e821a4-8b65-431c-8190-36624df9c2b3",
        "cursor": {
          "ref": "adcff609-f4d1-43c5-a690-07744ff6f82d",
          "length": 250,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "2b6bdcaa-1da5-4b66-bb95-64ffeff44558"
        },
        "item": {
          "id": "c0e821a4-8b65-431c-8190-36624df9c2b3",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "dcb22193-f022-45c3-9a4d-83228de941b0",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 35,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:142)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:142)"
            }
          }
        ]
      },
      {
        "id": "5f96fb9d-b608-45ad-8be0-e727f2417aab",
        "cursor": {
          "ref": "5ff90a76-aadb-4e87-b2f0-699757494f39",
          "length": 250,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "81a51a22-ea02-4de7-b1a3-2af98687731f"
        },
        "item": {
          "id": "5f96fb9d-b608-45ad-8be0-e727f2417aab",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "d54ef31c-a41a-436f-83f1-9c2158aee49b",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 45,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:143)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:143)"
            }
          }
        ]
      },
      {
        "id": "cc44df2b-8a0d-4dee-a66c-b83a45c4768b",
        "cursor": {
          "ref": "8c987143-b77c-4ec5-b5a4-b8d1bab71f0d",
          "length": 250,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "8955a4d4-925f-4a9f-8523-f32771a8f855"
        },
        "item": {
          "id": "cc44df2b-8a0d-4dee-a66c-b83a45c4768b",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "f1091946-1507-467e-86bc-d16c2626f487",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 39,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:144)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:144)"
            }
          }
        ]
      },
      {
        "id": "dcd9dd70-56ea-49e9-b74f-5cfbd73fce0a",
        "cursor": {
          "ref": "c4b97ca7-49f4-4117-975c-0bdd3208a01d",
          "length": 250,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "98dfa1f8-cd02-42a5-82df-e57a0a0a9631"
        },
        "item": {
          "id": "dcd9dd70-56ea-49e9-b74f-5cfbd73fce0a",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "0a59d947-ab5d-4596-81ac-b74679a3bc52",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 38,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:145)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:145)"
            }
          }
        ]
      },
      {
        "id": "e9f8d01f-5608-4e0d-876c-601a48fa034b",
        "cursor": {
          "ref": "09e816a0-095b-4e90-b918-e22257f64e50",
          "length": 250,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "95c2be4d-7661-436d-8caa-9cfcc187c9dd"
        },
        "item": {
          "id": "e9f8d01f-5608-4e0d-876c-601a48fa034b",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "8ebec47e-54c5-46ed-b551-050199b59833",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 26,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "41f8f7e2-f7cd-4518-b5c8-a2e4ff8f9a21",
        "cursor": {
          "ref": "2a84625c-23b0-43d5-81ab-af2a56973d7e",
          "length": 250,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "4763025d-8430-4b65-bb6c-9813bf64f7a8"
        },
        "item": {
          "id": "41f8f7e2-f7cd-4518-b5c8-a2e4ff8f9a21",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "f29f0815-6c6e-4cd0-b8f4-d010e4607bc0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4e5950e9-e4a7-4967-a033-4a9ae2c546fd",
        "cursor": {
          "ref": "2ae1c29e-74eb-40d1-addd-b9b7e65d6315",
          "length": 250,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "756456b3-6d76-4e7c-a7a6-ffbc6e9c906f"
        },
        "item": {
          "id": "4e5950e9-e4a7-4967-a033-4a9ae2c546fd",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "16ad141c-457e-4707-ba3b-b696f8e8f8ad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f20e46ee-8e83-45a4-a7e7-74476b1af904",
        "cursor": {
          "ref": "3c11a9c3-3d60-41e3-8b39-ba936bc7040a",
          "length": 250,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "70455a0a-c50c-4321-acc6-87144da8c06f"
        },
        "item": {
          "id": "f20e46ee-8e83-45a4-a7e7-74476b1af904",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "efc33d46-87b5-406a-b530-aaaa725b78d3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cc0db4b8-4567-4527-ae01-bdc3a5b7d102",
        "cursor": {
          "ref": "26fae39f-3b0a-4a03-8733-ae21462ee0d0",
          "length": 250,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "47fdc615-2597-4b64-98cb-f15d2451218f"
        },
        "item": {
          "id": "cc0db4b8-4567-4527-ae01-bdc3a5b7d102",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "fac57b73-21e9-4c39-be09-7dac191c6949",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e542e1be-8dca-4647-ab85-b6482d77807c",
        "cursor": {
          "ref": "6d9c7873-96f0-43df-87d0-ad2713a5d814",
          "length": 250,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "7a9b11ee-db26-467f-8a89-d8554eb230c2"
        },
        "item": {
          "id": "e542e1be-8dca-4647-ab85-b6482d77807c",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "2918d0a1-5386-46f6-8663-468759826530",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2e0b6ba1-aa7d-4655-a99b-9385a6a91c95",
        "cursor": {
          "ref": "d090f741-a4ba-4c4e-9dd1-907019743be1",
          "length": 250,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "074e4c76-1a23-4273-ab89-111f6c3f9b37"
        },
        "item": {
          "id": "2e0b6ba1-aa7d-4655-a99b-9385a6a91c95",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "05ab3bbb-8d9c-4930-9c23-d928a7ab0d65",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "33d41642-0748-4b6e-b9b4-0dd713c0dcc4",
        "cursor": {
          "ref": "86b1a2e1-2bde-4b02-b0d3-09bdf4faf3b1",
          "length": 250,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "deba6aac-3f58-41f2-89d4-19bffd934934"
        },
        "item": {
          "id": "33d41642-0748-4b6e-b9b4-0dd713c0dcc4",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "be0eab09-b7c4-4a0c-aa55-1a2dbb1fb2d1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e5e4a6b-0ad7-4bec-aa63-b9f30d9d01cd",
        "cursor": {
          "ref": "d7cf782b-b9a9-48c9-ab3c-d9b8dd16b361",
          "length": 250,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "5108118e-cda0-4203-ab2f-2b65041ac46f"
        },
        "item": {
          "id": "0e5e4a6b-0ad7-4bec-aa63-b9f30d9d01cd",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "907052ad-7d11-4b17-9e0e-91372bff347e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b10ed514-473a-4db4-bfef-8a84b1c64f9b",
        "cursor": {
          "ref": "9fff08b4-24ec-45af-a266-ffb728291e90",
          "length": 250,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "bd266a77-eaf9-495a-8f69-7a4e8da2f1b0"
        },
        "item": {
          "id": "b10ed514-473a-4db4-bfef-8a84b1c64f9b",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "fdb934f8-eaf7-4dfb-9b87-17722c9fce2c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a9ee01bf-cab9-452c-989d-0c89b45da3cc",
        "cursor": {
          "ref": "9908d31a-43d5-4112-93d0-78ce4118a30e",
          "length": 250,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "69c4f1fd-ffb9-41fa-ad7c-c0bcc3bdef4b"
        },
        "item": {
          "id": "a9ee01bf-cab9-452c-989d-0c89b45da3cc",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "aac2694d-4546-4f71-9790-09318acae070",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bdfcd243-fbc1-46d9-a49d-ba936e0e9106",
        "cursor": {
          "ref": "c7e54acb-e2e4-4b42-9a09-3812c992f08b",
          "length": 250,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "1ef2966b-93c8-42fe-9f4e-4b73ef0f7ee9"
        },
        "item": {
          "id": "bdfcd243-fbc1-46d9-a49d-ba936e0e9106",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "4aac4f8c-8e25-4c49-a92f-bf5df7ffcbe2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dbf8e1ba-e953-44b7-9dd3-4d60816601be",
        "cursor": {
          "ref": "868bea26-39dc-4d12-b0d0-e47e9b266f03",
          "length": 250,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "1b5486a4-19fd-4fd2-bf04-ca2ed9905bf4"
        },
        "item": {
          "id": "dbf8e1ba-e953-44b7-9dd3-4d60816601be",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "b5e139fc-126a-428f-a808-b89256c3ed98",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c3580e3a-e657-4be7-9774-903ccbc08fce",
        "cursor": {
          "ref": "2d9fa1a2-9729-4d60-be38-ee958edbf21c",
          "length": 250,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "7eed4f1a-6fb9-4930-9c73-bb80c13d2519"
        },
        "item": {
          "id": "c3580e3a-e657-4be7-9774-903ccbc08fce",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "00096f55-d8d2-44b6-922b-b97a98c873ab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "16310fbd-85e2-44cf-9bd2-d6e78f30fe9d",
        "cursor": {
          "ref": "7b64191c-0e02-4c94-a6c9-304f1af8df03",
          "length": 250,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "158dc1c5-53ff-4c16-831a-a2332f828a14"
        },
        "item": {
          "id": "16310fbd-85e2-44cf-9bd2-d6e78f30fe9d",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "3943cd86-f127-4e16-b721-553b4c85d484",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "46390c95-6d4e-49c9-a2a4-54edecb657bf",
        "cursor": {
          "ref": "63477218-62d6-47a5-862c-e15eccb2fc16",
          "length": 250,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "01445de9-73b2-4ac6-a4ed-906be6adffb3"
        },
        "item": {
          "id": "46390c95-6d4e-49c9-a2a4-54edecb657bf",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "8f24ec14-a802-4dae-961f-8eae89ab0a0a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1c31f055-ed17-4479-ba0e-96c8084943a2",
        "cursor": {
          "ref": "8028d7c2-2a8d-4764-87da-4d097d01b787",
          "length": 250,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "5011eaf2-c8cb-4068-9fa5-8958b89ea394"
        },
        "item": {
          "id": "1c31f055-ed17-4479-ba0e-96c8084943a2",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "bc9f507e-da24-4d13-aeff-a2d54e498303",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1cba44dd-e0e3-410d-b577-7f14fa294627",
        "cursor": {
          "ref": "80c1eb4b-7503-428a-9fb5-d04a4f8f651c",
          "length": 250,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "a2132eb1-a7f0-4165-a9e6-bb5a32bfefca"
        },
        "item": {
          "id": "1cba44dd-e0e3-410d-b577-7f14fa294627",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "f021bbe8-1b43-4189-9340-35362e2bb9e8",
          "status": "OK",
          "code": 200,
          "responseTime": 57,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 200",
              "stack": "AssertionError: expected response to have status code 400 but got 200\n   at Object.eval sandbox-script.js:1:163)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:163)"
            }
          }
        ]
      },
      {
        "id": "14907e50-3289-4eab-b1d7-3d797c4fa1c7",
        "cursor": {
          "ref": "c0987509-5159-4ba0-87d4-673e68b22b13",
          "length": 250,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "946595ca-116d-4061-8264-4858d24dc15b"
        },
        "item": {
          "id": "14907e50-3289-4eab-b1d7-3d797c4fa1c7",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "e4ae22c1-f06a-4afd-9cac-fc5f1fafbace",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8a5d5561-902d-4609-b617-4c9cb2b53d81",
        "cursor": {
          "ref": "b52659b2-c17e-4c90-9b48-3eb68fa3c024",
          "length": 250,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "a66ea4b0-1ed6-4af7-a40a-85fe6c68994c"
        },
        "item": {
          "id": "8a5d5561-902d-4609-b617-4c9cb2b53d81",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "13b310ea-4484-4588-b8ea-b9661d04043c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "148b323b-b6a5-4b6c-b2a9-7f2f11422fe4",
        "cursor": {
          "ref": "d819a905-cf36-48d7-9efa-9941eb6fca70",
          "length": 250,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "9ac2f718-6dc0-4f3d-aef6-c581093b86ed"
        },
        "item": {
          "id": "148b323b-b6a5-4b6c-b2a9-7f2f11422fe4",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "3312ef66-0568-4613-9792-9c5976b9772b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "60bb6462-3660-46ba-968d-4e3f70f3e1ae",
        "cursor": {
          "ref": "c4774d49-0166-4e7d-ad21-ea050b7350d3",
          "length": 250,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "19a0b8b9-62aa-4f5c-865b-824cafbe04de"
        },
        "item": {
          "id": "60bb6462-3660-46ba-968d-4e3f70f3e1ae",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "fe5fc677-f7aa-424e-913e-f4f4c481fcf2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a4dc0525-8957-4be0-bc58-f4b73e9ab23e",
        "cursor": {
          "ref": "27d73d07-9762-47e5-98cb-558c46020d17",
          "length": 250,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "de74d68a-04db-4a1f-b509-a59b36dd4c76"
        },
        "item": {
          "id": "a4dc0525-8957-4be0-bc58-f4b73e9ab23e",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "cb00767c-1ecd-428a-9251-03a865a47859",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "effc0bc7-0725-41cc-bbc2-63cfd40dd199",
        "cursor": {
          "ref": "ae82bcd3-5dbe-4e71-8db2-02784bd2e671",
          "length": 250,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "1028a066-fcc6-4fee-9efd-b8c82e7b076c"
        },
        "item": {
          "id": "effc0bc7-0725-41cc-bbc2-63cfd40dd199",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "e54e5e01-beed-4fdc-9c2d-650946dfe1c2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "37463c34-ed7a-4d9b-a60d-ae0945a4185e",
        "cursor": {
          "ref": "72f277b0-b7d9-4a97-ae74-826ba549a5d4",
          "length": 250,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "4c586dad-080d-4ae7-845a-c72363001c79"
        },
        "item": {
          "id": "37463c34-ed7a-4d9b-a60d-ae0945a4185e",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "c47aa7b6-3e30-4b8b-8244-75b9f4687054",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e438e6d8-8095-423c-a41d-6e9f7b539621",
        "cursor": {
          "ref": "d9e9afa8-a00f-451d-818f-adcc4fc4d91d",
          "length": 250,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "6ae2f30a-f40f-452d-91e8-e5d8fe0ae2c6"
        },
        "item": {
          "id": "e438e6d8-8095-423c-a41d-6e9f7b539621",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "a1b1dede-6da3-4ce1-b6b6-ef3be875df51",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "05000108-9921-42ce-ab3d-7b51d1b62410",
        "cursor": {
          "ref": "cd1276a2-52ce-4bcb-a68c-dcc14c006971",
          "length": 250,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "40dfb777-8076-490f-b80d-b7c9ddfcadc5"
        },
        "item": {
          "id": "05000108-9921-42ce-ab3d-7b51d1b62410",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "e0ebcfed-5b3b-4d57-b2bf-ac8793162f49",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b2c948e2-1056-48c1-86e7-0056436987f1",
        "cursor": {
          "ref": "7d4e20a6-03f4-47e8-af8d-63833532235e",
          "length": 250,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "9d628f5d-521a-4d40-b8b6-8cd0dea40af1"
        },
        "item": {
          "id": "b2c948e2-1056-48c1-86e7-0056436987f1",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "57c5a507-df61-427a-841e-56b42e157b3f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ebf43e99-5482-4c89-b2d8-b144fc044b5e",
        "cursor": {
          "ref": "ac321325-6ad3-4055-8237-5fb56cc7d739",
          "length": 250,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "3b244646-de62-4f79-984f-24c032c6d7ad"
        },
        "item": {
          "id": "ebf43e99-5482-4c89-b2d8-b144fc044b5e",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "98b01512-ce3a-40d8-b30b-0d16ae8e114c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6c68fab7-ba49-4b44-b0ea-85839cc55bd6",
        "cursor": {
          "ref": "306585cd-4fba-4939-94a2-49e39dfb2281",
          "length": 250,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "2f9706ef-34aa-4a06-a82f-87555f5eccba"
        },
        "item": {
          "id": "6c68fab7-ba49-4b44-b0ea-85839cc55bd6",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "10815129-d141-44c7-a05a-838c5f65c44a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f859f041-8e08-43c7-830a-2251b50fa37f",
        "cursor": {
          "ref": "37bb61be-4e60-4db1-8545-63ae6d85346b",
          "length": 250,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "0090e804-511f-4bf3-8604-44ff38bd817e"
        },
        "item": {
          "id": "f859f041-8e08-43c7-830a-2251b50fa37f",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "112db79b-02f2-4a8b-82b1-5464cc913b5c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5e9cd366-d38c-4789-8651-4bd61b62f29e",
        "cursor": {
          "ref": "e3cc8bca-e7ac-49ec-bdba-9f13a9f0122d",
          "length": 250,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "133df84c-4c79-4c3c-9c2e-cdf6efe16308"
        },
        "item": {
          "id": "5e9cd366-d38c-4789-8651-4bd61b62f29e",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "360e83e3-6275-4a47-b4ca-387bc6019c32",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "98557a7a-fb56-4ac9-99b6-d9d6f4c1becb",
        "cursor": {
          "ref": "1c36f8bf-8660-42d8-9747-24b8fba3dcb3",
          "length": 250,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "212e46e9-2f57-4db2-96b6-adaec51b6413"
        },
        "item": {
          "id": "98557a7a-fb56-4ac9-99b6-d9d6f4c1becb",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "4242eb13-ac8b-4631-9353-11908caedddc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5d741952-517c-4624-820e-9de606e9290e",
        "cursor": {
          "ref": "7459b7be-e40e-480f-8a46-1659289ae587",
          "length": 250,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "f6a6c4aa-5248-49b8-81ed-7912619d31f5"
        },
        "item": {
          "id": "5d741952-517c-4624-820e-9de606e9290e",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "e40130f8-b893-477b-b489-8b5f1f452594",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1505f609-98b7-429a-ac29-1471c52f85bf",
        "cursor": {
          "ref": "db0d7d6f-097e-499e-b60d-6bd5f8209ee9",
          "length": 250,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "1599f1ae-a828-452d-a5f8-e103292e0056"
        },
        "item": {
          "id": "1505f609-98b7-429a-ac29-1471c52f85bf",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "6b6d2fa8-c754-4db0-8711-d02e8887bfe7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "41ffcf16-8c5c-45e1-aafb-edf75f30a140",
        "cursor": {
          "ref": "928514d4-8b8b-4791-8593-a67a5d49fb0e",
          "length": 250,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "422b62b0-90ba-4938-8e34-05100b98ebd1"
        },
        "item": {
          "id": "41ffcf16-8c5c-45e1-aafb-edf75f30a140",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "6ef865ee-b1fa-4791-a2c8-cbfa88da775a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cc699cc3-8e33-436e-8ecc-d98015e7e2ec",
        "cursor": {
          "ref": "0a507202-cdf6-4172-97b1-d29b5ac79a25",
          "length": 250,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "91aec90d-7a8c-4b08-8797-40c706d23cd2"
        },
        "item": {
          "id": "cc699cc3-8e33-436e-8ecc-d98015e7e2ec",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "ef7aeaac-c1c6-4623-b3f0-3d647dced28e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cc980270-b00e-4366-875f-6b13560a6f4c",
        "cursor": {
          "ref": "74d4e2ca-2aab-4d0a-a9a1-fcc3c6a82755",
          "length": 250,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "e871c66b-6604-469b-9d5e-bef90a06652b"
        },
        "item": {
          "id": "cc980270-b00e-4366-875f-6b13560a6f4c",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "97b85488-b142-43ea-afee-e76d497df191",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d18eecca-7cef-4f1f-9e3d-9f55377f5b33",
        "cursor": {
          "ref": "34c421f9-3c6b-4da4-9431-b9b8c24888af",
          "length": 250,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "6d839020-3945-4a25-aef6-7cbbcdcd2595"
        },
        "item": {
          "id": "d18eecca-7cef-4f1f-9e3d-9f55377f5b33",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "daf2ad2d-4c4c-4134-9c3b-fa7088ee9f1a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2afc9e37-920c-4ea8-8912-4d17871b36f0",
        "cursor": {
          "ref": "09929d0d-de96-4db6-b3d4-74d175d3d90e",
          "length": 250,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "2bb09793-da99-4f39-929e-cfdb64cf7d8e"
        },
        "item": {
          "id": "2afc9e37-920c-4ea8-8912-4d17871b36f0",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "5fbffd20-aeef-498c-98de-a4b9341cc8fc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8dc6b1ad-18df-4af5-a8df-1e6be2b9f350",
        "cursor": {
          "ref": "ea651a14-d158-44d2-8916-44910ac4e7de",
          "length": 250,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "b6bf7b8d-0313-4044-99a1-7b6b1439f15d"
        },
        "item": {
          "id": "8dc6b1ad-18df-4af5-a8df-1e6be2b9f350",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "5835cf18-60c7-4dd8-8b54-182978936cdb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "88176b46-3a6f-4c62-bac8-b3ec5a477eca",
        "cursor": {
          "ref": "8477af14-ac62-4cc6-80ab-c662d92cff95",
          "length": 250,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "2197fc1e-4b69-4f22-ad72-f0569e0583b8"
        },
        "item": {
          "id": "88176b46-3a6f-4c62-bac8-b3ec5a477eca",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "7042c595-7168-4c74-8ca1-c54d1d7ba3f4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "988a9fda-c331-4d74-9a87-33b9cdc730b1",
        "cursor": {
          "ref": "2e32cb24-5510-479f-808f-83846b9c87d2",
          "length": 250,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "460c9160-33a4-44a4-98de-bc66296d072d"
        },
        "item": {
          "id": "988a9fda-c331-4d74-9a87-33b9cdc730b1",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "c1124f94-7f04-4864-b227-f4cd80db6a88",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "17b850d8-926d-4831-b469-14c01427da18",
        "cursor": {
          "ref": "bd16e1ca-403f-4741-a230-16e983c7672e",
          "length": 250,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "135a42ce-1e71-41ed-a82d-ca09561a97ab"
        },
        "item": {
          "id": "17b850d8-926d-4831-b469-14c01427da18",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "fea88e1e-e4f4-488e-8e26-a7a14e438848",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 127,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cdca7f1b-d84e-4901-8cb0-796d316c9949",
        "cursor": {
          "ref": "9c828cb7-3ef0-49f0-b7ba-1f33871044a9",
          "length": 250,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "5ae04f7a-eed9-41dd-98c5-72b6e74100c0"
        },
        "item": {
          "id": "cdca7f1b-d84e-4901-8cb0-796d316c9949",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "2067eb7f-d4c9-4331-821a-c1e983e4ae00",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d30a4b44-de65-4954-9f33-cb56b3334511",
        "cursor": {
          "ref": "1dfe94e6-2552-49bc-addf-5fc197820287",
          "length": 250,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "c647717a-83d0-41ed-b94e-02b66b86b381"
        },
        "item": {
          "id": "d30a4b44-de65-4954-9f33-cb56b3334511",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "55763eed-fa4b-4bf5-a9d8-316175ee26e7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4c351d3f-1bc7-48de-a2ea-bdbc7806c6c1",
        "cursor": {
          "ref": "5093896f-8e27-4c8a-a64b-d89f75be22af",
          "length": 250,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "f1422d01-8d0b-41b5-b31a-1ae4a155656f"
        },
        "item": {
          "id": "4c351d3f-1bc7-48de-a2ea-bdbc7806c6c1",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "0604ba69-add6-417a-9e16-9d24ee0cf948",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ccf99e41-ed2e-48aa-b163-f6b2db9252aa",
        "cursor": {
          "ref": "5c396d64-2ed8-4abe-a4b5-efbaff074b3b",
          "length": 250,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "41facbc6-e9f2-4869-a2ea-d5f6419c9ed0"
        },
        "item": {
          "id": "ccf99e41-ed2e-48aa-b163-f6b2db9252aa",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "6f77b790-0ff4-4f27-8553-2223253ec06e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3da3a3a8-e734-44f2-9cf5-7ed06d62492a",
        "cursor": {
          "ref": "64449fa8-813b-47c6-845a-031981ced608",
          "length": 250,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "156e548e-bed5-489b-a349-c4fc62b157ea"
        },
        "item": {
          "id": "3da3a3a8-e734-44f2-9cf5-7ed06d62492a",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "40908ec9-74e0-4186-b1b9-8076f8367c07",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "778f299a-17af-44cb-a17e-25cf090a243c",
        "cursor": {
          "ref": "3bf71bf9-01b2-4571-934d-d68aa1ed193c",
          "length": 250,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "e5bcf3d4-e1cd-43de-9299-a50c9c9b6d0e"
        },
        "item": {
          "id": "778f299a-17af-44cb-a17e-25cf090a243c",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "300ad94d-4ca3-49e6-8451-8382cd81038d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1da8a40b-91c0-4b3e-a5e9-5ed30fd6e992",
        "cursor": {
          "ref": "0a72cdf5-4ae8-4924-9404-3e9be7a99d27",
          "length": 250,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "ddc1ec2e-16e8-46c3-a2c7-95794afc3548"
        },
        "item": {
          "id": "1da8a40b-91c0-4b3e-a5e9-5ed30fd6e992",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "91f899bc-cb33-4459-91bc-06e9841b4c97",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "14edc3a5-4de8-43ea-ba7a-4cc43d2ba284",
        "cursor": {
          "ref": "ec4fd8c8-869c-4a81-8f62-19606448b56c",
          "length": 250,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "efa5ebae-fe5f-4b8d-9e51-0d8cae9cc42b"
        },
        "item": {
          "id": "14edc3a5-4de8-43ea-ba7a-4cc43d2ba284",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "48717989-2d94-4ad8-bc6f-0570f1b8ff6a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4579368d-768b-4f92-b6f9-7902fb714778",
        "cursor": {
          "ref": "e7be67c4-48f7-49ed-84db-ecb59d091596",
          "length": 250,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "49773071-91ec-471a-822a-aac73621ec32"
        },
        "item": {
          "id": "4579368d-768b-4f92-b6f9-7902fb714778",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "0c51c421-62db-40d8-8521-136983580604",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9a7f2c16-10e7-490d-b2c1-8c1872e7ff5e",
        "cursor": {
          "ref": "4966794e-d493-447d-b4e1-f702aa605c4b",
          "length": 250,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "a73036cf-4152-47d7-b33a-0d5a85d7a2ee"
        },
        "item": {
          "id": "9a7f2c16-10e7-490d-b2c1-8c1872e7ff5e",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "30e418b6-a8e3-4830-bc13-d426aaaf4257",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "479d5efb-3905-4ac9-a63e-3881738bac7a",
        "cursor": {
          "ref": "10c52e4c-3257-43e0-8e11-4603e4fed279",
          "length": 250,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "d615b079-26fa-4823-956e-4244e8f9699e"
        },
        "item": {
          "id": "479d5efb-3905-4ac9-a63e-3881738bac7a",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "e632b1dd-0895-48b0-80fe-d4384ace92fa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d352c45e-5c26-49d0-8a39-d23c5b8041ca",
        "cursor": {
          "ref": "b79d79d0-4339-4ca9-b5fd-17102dc2027d",
          "length": 250,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "1bffdb87-962d-464e-ab7a-62cb704a9301"
        },
        "item": {
          "id": "d352c45e-5c26-49d0-8a39-d23c5b8041ca",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "bf8f59d6-3446-4c33-ad92-37682ba734cd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "15c317a0-658a-4bd7-aaf0-7eed187f5fd6",
        "cursor": {
          "ref": "5c2c4aca-fd2f-49b7-a6d7-8364b35ba4bb",
          "length": 250,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "ede3317c-ed46-47c4-a1d5-c858939fe668"
        },
        "item": {
          "id": "15c317a0-658a-4bd7-aaf0-7eed187f5fd6",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "72785fd9-bc88-4cd8-a433-cc5c68909c87",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1bdf6d9e-27ff-45f0-9647-81a81d74de1e",
        "cursor": {
          "ref": "7b62ff0d-4744-4ecb-ace0-d70a86a743df",
          "length": 250,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "d5a818a1-2274-4a46-bc24-21fd22ac5aef"
        },
        "item": {
          "id": "1bdf6d9e-27ff-45f0-9647-81a81d74de1e",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "1255f354-fa4f-4ec1-bff9-252c9ebf1255",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c76278e9-beba-4efa-942b-0176e524bbce",
        "cursor": {
          "ref": "c1f18e2f-32db-4755-983e-942ca92f859c",
          "length": 250,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "e4201344-318b-4848-82c4-18ee740cebc0"
        },
        "item": {
          "id": "c76278e9-beba-4efa-942b-0176e524bbce",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "f33d1384-2a39-413e-a78f-36d20829b74d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc9a1c16-dede-42a4-9968-a28b828cfa72",
        "cursor": {
          "ref": "453f1315-3552-4839-9850-250e66f9aadd",
          "length": 250,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "2bd65413-40cf-404e-86b8-590efcdfc0e3"
        },
        "item": {
          "id": "fc9a1c16-dede-42a4-9968-a28b828cfa72",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "63f718ce-22ab-43ba-aeee-62e55044eff7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c48ce383-704e-432a-bff7-64057858c6b7",
        "cursor": {
          "ref": "bb9fd09b-3381-4858-ac5e-21b185d3097b",
          "length": 250,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "7d4828cd-178f-4111-8e3d-e400a762f448"
        },
        "item": {
          "id": "c48ce383-704e-432a-bff7-64057858c6b7",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "be5cd291-378f-43a0-a7cf-92eb9b13ac1b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "09eaf79d-9465-4c6e-b9ed-14a61a8a1ce5",
        "cursor": {
          "ref": "7f4a16fa-354c-48a0-a6a9-77d24fe99885",
          "length": 250,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "f60bf2fc-4419-413d-86d4-7685333b6fd5"
        },
        "item": {
          "id": "09eaf79d-9465-4c6e-b9ed-14a61a8a1ce5",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "0a785a26-4d60-4580-a71f-0f0a58a16feb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2973f484-a338-41c6-b9ff-1e7faecf9e5a",
        "cursor": {
          "ref": "50cc5828-3f77-4a62-825d-571e2946ddd0",
          "length": 250,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "607c54e3-7d60-4f94-8b94-caf8c4b5c38a"
        },
        "item": {
          "id": "2973f484-a338-41c6-b9ff-1e7faecf9e5a",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "100e68de-4663-45ce-9c40-7de32af768fb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c4c861ff-c293-4fa9-9add-330d53700cd1",
        "cursor": {
          "ref": "51cfc974-e1f2-43cd-b0f3-a1d3a2e41d63",
          "length": 250,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "97c9b7a5-ca50-4564-a1ac-d1ab68eed7d4"
        },
        "item": {
          "id": "c4c861ff-c293-4fa9-9add-330d53700cd1",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "b4a9a9e6-6663-4855-919d-f4893af84ad3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "22354dca-a2bd-4a1d-a906-03016cf83b16",
        "cursor": {
          "ref": "feaf4134-97b6-4d58-867e-34fcd6084cbe",
          "length": 250,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "df184eb3-2508-4449-9b33-269a47fad5b8"
        },
        "item": {
          "id": "22354dca-a2bd-4a1d-a906-03016cf83b16",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "5eefb492-6f7c-4ccc-8ad9-32716f7082ad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c071c485-5bc0-4f8c-b958-643b4d5e7940",
        "cursor": {
          "ref": "90d2ea12-dd43-4d9c-b1ac-b169299becf8",
          "length": 250,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "33e99b33-2fef-46df-81af-8af145db0d06"
        },
        "item": {
          "id": "c071c485-5bc0-4f8c-b958-643b4d5e7940",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "0c1bc168-3707-4fe1-878d-3189d2cd6db1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f0ab8c0-88e7-4169-97dd-82497193e2f8",
        "cursor": {
          "ref": "59f68f82-0be0-4d07-8005-f83e2ae5b3c1",
          "length": 250,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "7f8e3cc3-ae61-4390-b859-69e9b3e05e77"
        },
        "item": {
          "id": "7f0ab8c0-88e7-4169-97dd-82497193e2f8",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "e9747b59-feda-4e50-86f6-7d3f176de948",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "96e44614-517a-4918-9428-ff2f57bba62f",
        "cursor": {
          "ref": "3f1705a2-89eb-4864-b4e5-97e743e7e5ad",
          "length": 250,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "0e5ba2e7-4cba-4058-96d4-3c0df47260aa"
        },
        "item": {
          "id": "96e44614-517a-4918-9428-ff2f57bba62f",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "3a2ff463-0b0c-49d1-bc8b-79b37f61e9d2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f452f00-6c51-4db0-95b5-9bf928f20c58",
        "cursor": {
          "ref": "b0ba6220-a9a2-4bf7-92fc-ba6fdce1ce9f",
          "length": 250,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "ad185078-bd60-47c3-ac77-e3a102b1bd52"
        },
        "item": {
          "id": "7f452f00-6c51-4db0-95b5-9bf928f20c58",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "0ca9093b-c279-4536-8b39-faef2d04978a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 161,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b562e07c-2180-4de8-a626-34f727e11ecc",
        "cursor": {
          "ref": "6835f49e-de46-4e6d-8f49-6d16716743ec",
          "length": 250,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "ca0f4bde-56b9-410d-9835-dad8653e8dae"
        },
        "item": {
          "id": "b562e07c-2180-4de8-a626-34f727e11ecc",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "30c5c5d6-13bd-4669-a359-b74dc241d721",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "460a09a8-5bae-4179-b07a-77ebb87ca879",
        "cursor": {
          "ref": "40a4caa9-90f4-44d0-9ad7-1bbf63007008",
          "length": 250,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "b830a228-adf1-4370-bfa8-f9fe191a73f8"
        },
        "item": {
          "id": "460a09a8-5bae-4179-b07a-77ebb87ca879",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "0ef7367f-a0b0-448b-90dd-2da102d3c3e0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7dfbba09-2d40-46d3-962f-333251dff030",
        "cursor": {
          "ref": "17b95c51-a2d4-4f4f-8e10-58a160bcd147",
          "length": 250,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "be551bc1-844a-49f6-9636-d42708b858c2"
        },
        "item": {
          "id": "7dfbba09-2d40-46d3-962f-333251dff030",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "5daf80ee-c843-4952-b1f8-a28999f3455e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "16a0235e-9972-4f53-be4b-ce9b6415f718",
        "cursor": {
          "ref": "64b65406-7721-4748-94bc-e6a302edfa86",
          "length": 250,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "10250ae0-096e-47d4-a4da-f766eb2c29c4"
        },
        "item": {
          "id": "16a0235e-9972-4f53-be4b-ce9b6415f718",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "80e2c0c1-1b14-4081-8030-319d0ad161f1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "461f0e56-e9c7-4339-bde7-32af815539f8",
        "cursor": {
          "ref": "5e1ed6a3-1a2e-4164-ac32-29f3d6b69822",
          "length": 250,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "232817da-c588-490f-9e9d-fb5a4eb5de84"
        },
        "item": {
          "id": "461f0e56-e9c7-4339-bde7-32af815539f8",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "cb50012c-318a-4aa1-ba15-afce546e9e00",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "68793b9d-ee74-4176-915c-28e5d8f9c5cb",
        "cursor": {
          "ref": "b2cff38a-04b0-48e4-bfe2-66e980b5a8e1",
          "length": 250,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "c41fe19b-4565-44a2-b78b-d6fe852aeb85"
        },
        "item": {
          "id": "68793b9d-ee74-4176-915c-28e5d8f9c5cb",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "410daec3-e3be-48a8-ac62-d3d33aa545dc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "74a047f0-82aa-4b48-9d53-ef44dedbdfa2",
        "cursor": {
          "ref": "fb7a250e-170f-45cd-b68b-8abd283cc329",
          "length": 250,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "e2f628ea-9f1b-4140-be5f-80db5ac416b1"
        },
        "item": {
          "id": "74a047f0-82aa-4b48-9d53-ef44dedbdfa2",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "e0096722-9d43-458b-a35b-43f0291c9950",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d49a4c7a-dc7d-434f-9427-f202adc23c66",
        "cursor": {
          "ref": "2c2e9146-df9c-4972-ac0b-4f4bd557828b",
          "length": 250,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "f6e7ef5f-c64e-4a9a-958a-9de9d394814e"
        },
        "item": {
          "id": "d49a4c7a-dc7d-434f-9427-f202adc23c66",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "b171d31a-e398-4ecd-89f4-991779abf9bb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a5bb63c6-f537-4c8a-afb1-1a3eb69e6e91",
        "cursor": {
          "ref": "687fea80-75de-49ba-beaa-207c9e181e0e",
          "length": 250,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "9b1c3297-3b6b-43fe-89a7-6f465c82dfbb"
        },
        "item": {
          "id": "a5bb63c6-f537-4c8a-afb1-1a3eb69e6e91",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "540664cb-ff18-4802-bf03-52c5e76bfbe4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c8a5acad-f465-4e86-ad01-19d916ae3aaa",
        "cursor": {
          "ref": "8323d07a-0f04-4176-9153-bd93ead04727",
          "length": 250,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "66acb218-7baf-47f0-aa88-9768bf2be78f"
        },
        "item": {
          "id": "c8a5acad-f465-4e86-ad01-19d916ae3aaa",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "cb30cc8b-defa-4fc5-af2a-778249aad6d4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "885bd9ce-5d0b-47c5-9aba-8f16dc121565",
        "cursor": {
          "ref": "ccfac35b-4241-4b63-b849-b99d1d9e1a8f",
          "length": 250,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "276659f6-5252-42a7-aacf-aa7fee844119"
        },
        "item": {
          "id": "885bd9ce-5d0b-47c5-9aba-8f16dc121565",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "0681d28f-4b1a-4259-a007-de0f1370ded1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e18c8e52-5404-4747-984f-b07fb1739474",
        "cursor": {
          "ref": "a6fedc21-9ab9-4649-8d72-5193ba27725e",
          "length": 250,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "e3d21e2e-1c0c-48a1-a93b-72a610b28658"
        },
        "item": {
          "id": "e18c8e52-5404-4747-984f-b07fb1739474",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "05665fd5-d2f4-41d1-a87d-ae5c8b9f8d12",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b463c22-6409-491f-b3c1-8945bd634946",
        "cursor": {
          "ref": "f79f9e5e-bed6-4bba-8dab-b7db1f99a2b9",
          "length": 250,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "7245903c-4177-4ab8-a22c-aeb801125d67"
        },
        "item": {
          "id": "3b463c22-6409-491f-b3c1-8945bd634946",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "c927210c-8cf9-46da-90a8-12e3840b9587",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "01be2ed5-c296-4fd5-ba39-f2c03e59c3af",
        "cursor": {
          "ref": "931d50a2-40dc-46bc-ae13-e080c5c5087a",
          "length": 250,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "0c085b28-49cb-45b4-8bb4-b7f24fd20ea3"
        },
        "item": {
          "id": "01be2ed5-c296-4fd5-ba39-f2c03e59c3af",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "f1135e2f-3635-4a63-a187-5ebf5d4d332e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "322b196a-31d8-498c-82ea-fb4869e3bea8",
        "cursor": {
          "ref": "a95907bc-5bfc-47cc-a26c-3ea0739016a8",
          "length": 250,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "d8c03564-1600-489b-9b3b-9ceb345b6d26"
        },
        "item": {
          "id": "322b196a-31d8-498c-82ea-fb4869e3bea8",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "d7cd618d-ff63-4dad-baed-a5c098926900",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dafbe629-1a6c-48fb-82db-f5401fa644e0",
        "cursor": {
          "ref": "dcd2a8ca-4116-41f4-aca8-cb1ffa2064a9",
          "length": 250,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "5e8e0a24-0689-480a-b8ae-a64262f23b78"
        },
        "item": {
          "id": "dafbe629-1a6c-48fb-82db-f5401fa644e0",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "7109f80d-77b4-433b-b5eb-e84740574512",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 657,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1a29ca89-3953-4163-830d-8bece5aebc37",
        "cursor": {
          "ref": "161dc6fc-b3a5-4761-b1fa-643c4a8dbc89",
          "length": 250,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "c5af99b9-a9fe-4fa8-91fc-37bff266fc5a"
        },
        "item": {
          "id": "1a29ca89-3953-4163-830d-8bece5aebc37",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "c0d55f33-271b-4f2c-bceb-cab80a4de451",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0d63d8ef-abd4-4c43-bc68-fd73ea3af35f",
        "cursor": {
          "ref": "ff7d0248-4ae4-4214-a1fc-e3ded7ef3991",
          "length": 250,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "b5646f18-279b-4162-b2f8-29271f828827"
        },
        "item": {
          "id": "0d63d8ef-abd4-4c43-bc68-fd73ea3af35f",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "39fc038d-2b75-4057-ae1b-ef38125b97f1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a2f5641-ce95-4360-a568-8f42ff29c6cf",
        "cursor": {
          "ref": "91a26ee1-32a2-4921-bfc9-920703cce598",
          "length": 250,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "874e22cb-9af6-4301-ae2d-be653e1e4404"
        },
        "item": {
          "id": "4a2f5641-ce95-4360-a568-8f42ff29c6cf",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "38c58de7-f41f-445a-9a5e-da2ff7f489a6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d89bad7e-8613-4be9-947f-bc611473dde8",
        "cursor": {
          "ref": "2bb1d054-b030-4f4d-94e1-d5f961e8a41f",
          "length": 250,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "243ff256-a35a-45b3-b58d-abad6bcb22e2"
        },
        "item": {
          "id": "d89bad7e-8613-4be9-947f-bc611473dde8",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "0013476d-786c-44a8-8250-ad38a87a6024",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f34b41d3-e0c0-482c-bae7-38247a62afef",
        "cursor": {
          "ref": "a9c2566e-e3ff-45b6-9c7d-3be0a07f064f",
          "length": 250,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "7dfb958c-a8f5-420d-bc35-e8cd4f1d48f2"
        },
        "item": {
          "id": "f34b41d3-e0c0-482c-bae7-38247a62afef",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "fdd11cc2-bdcc-4676-98e5-073c5ad7a563",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7173a5aa-9134-4cec-8255-de32780c05dc",
        "cursor": {
          "ref": "9ceb576d-e4e2-4daa-8d40-693f8b521ef1",
          "length": 250,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "83ad7c2b-0e38-40b6-b0dd-471914f28967"
        },
        "item": {
          "id": "7173a5aa-9134-4cec-8255-de32780c05dc",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "affcb4ca-7e16-4c68-9050-5ff71d46ecd4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "abfc13fd-6da0-4483-b1f5-04e401c145bb",
        "cursor": {
          "ref": "563c6071-77b5-4155-a882-ecf592c2a98e",
          "length": 250,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "f0a0220f-e6ca-41df-b2cd-52b201821c86"
        },
        "item": {
          "id": "abfc13fd-6da0-4483-b1f5-04e401c145bb",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "1eee4134-38d1-4325-bb7b-16e137eecbc6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "79fe42f8-c37a-4c0c-b1ec-f0faa2b6b716",
        "cursor": {
          "ref": "6dc3c96a-6e47-4d30-9efd-2fed432636d2",
          "length": 250,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "d283daa3-3f70-41c0-a612-b65592975afa"
        },
        "item": {
          "id": "79fe42f8-c37a-4c0c-b1ec-f0faa2b6b716",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "390a58ec-0ea3-4047-8ff6-60ce10780786",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a83a8422-6b29-4757-b154-28373ee88510",
        "cursor": {
          "ref": "fcfc3c23-9b32-409a-8d92-39ebf2ec604b",
          "length": 250,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "dc181ce0-5821-4adb-b151-67cb5fabe19d"
        },
        "item": {
          "id": "a83a8422-6b29-4757-b154-28373ee88510",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "d2e60e54-f46b-4b6c-a083-f9cf957dd6e0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aee55eb3-0308-4639-bbfd-8a80cf95be82",
        "cursor": {
          "ref": "8ec6d4ac-4b47-4a3e-ad15-55878f4c6a11",
          "length": 250,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "5c576ca4-f172-4663-bde5-3bf7cfb2a264"
        },
        "item": {
          "id": "aee55eb3-0308-4639-bbfd-8a80cf95be82",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "aa150a6c-2fb7-454b-b645-be7a19a35aa5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c8c00814-a550-417e-9f0f-1daa0d44ca36",
        "cursor": {
          "ref": "c5574b65-381c-4467-b00f-8bc0b5814932",
          "length": 250,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "60dc7e5d-36ee-47e2-abd1-c22ebd2db2df"
        },
        "item": {
          "id": "c8c00814-a550-417e-9f0f-1daa0d44ca36",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "249baf42-8ae9-4753-baac-6d4f47e62955",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eac5bf76-bfca-4bb8-b1f0-8593a412964d",
        "cursor": {
          "ref": "57741619-5386-47ee-adb4-62f695126a09",
          "length": 250,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "9be513ce-d2b7-4362-b320-791222e3f06c"
        },
        "item": {
          "id": "eac5bf76-bfca-4bb8-b1f0-8593a412964d",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "8bb59346-ba2b-42e1-b546-733966f3870c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6f53f8b4-8bcd-41d1-a52f-c48dfa44b3ac",
        "cursor": {
          "ref": "ffcd6015-f501-4947-b809-980f537c8d71",
          "length": 250,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "f9b41020-7388-4d37-9bb8-3a69364feeb1"
        },
        "item": {
          "id": "6f53f8b4-8bcd-41d1-a52f-c48dfa44b3ac",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "647190bb-1ca1-40e9-8e14-c6fc490fbe1d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6820695c-45c9-4a8e-9636-017e00b88846",
        "cursor": {
          "ref": "0f349380-b89d-45d3-af29-1708bd8b2b65",
          "length": 250,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "95392c5e-eb51-42e9-8d60-2391a3dda835"
        },
        "item": {
          "id": "6820695c-45c9-4a8e-9636-017e00b88846",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "5d8b70bb-f526-4fab-b89d-9a3b7964c282",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 27,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "63dd911b-7ee5-4227-b801-a98c23479e30",
        "cursor": {
          "ref": "5a6d2587-46d7-49f9-aed5-0c1e14adeb05",
          "length": 250,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "4bf5011c-d1e1-4add-803c-5bfe6e3a6ae1"
        },
        "item": {
          "id": "63dd911b-7ee5-4227-b801-a98c23479e30",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "980217cf-eb84-4078-af15-06934444ddf4",
          "status": "OK",
          "code": 200,
          "responseTime": 52,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "2754c139-0a44-4e3a-9eca-ae7b8bec36a0",
        "cursor": {
          "ref": "e83082ff-3ce4-4378-80ae-f9f98198f1b8",
          "length": 250,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "7d078b55-6602-4abf-a44e-bc5f7e078506"
        },
        "item": {
          "id": "2754c139-0a44-4e3a-9eca-ae7b8bec36a0",
          "name": "credentials_verify"
        },
        "response": {
          "id": "131fa6fd-c7fd-4df7-ae97-0e9c3c0e54f3",
          "status": "OK",
          "code": 200,
          "responseTime": 2330,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "76a9f3d0-97ad-4324-93be-e54b8e10906a",
        "cursor": {
          "ref": "6f627b99-e4b8-4487-a4fd-9056ed0dfb3d",
          "length": 250,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "d88f46b6-ab16-4d4f-b9af-b4d77dcb3831"
        },
        "item": {
          "id": "76a9f3d0-97ad-4324-93be-e54b8e10906a",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "e9503f2e-3677-4d37-89b7-e023d0c9f36a",
          "status": "OK",
          "code": 200,
          "responseTime": 2189,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb534323-757b-45e2-a629-6ebe5f70bb06",
        "cursor": {
          "ref": "c790105a-e487-4797-82dc-c6cc0b122be2",
          "length": 250,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "9431a8df-bbba-4347-876d-c1964fe0f9bd"
        },
        "item": {
          "id": "bb534323-757b-45e2-a629-6ebe5f70bb06",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "e12b0945-acbe-4376-877a-5372502e7808",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 26,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb534323-757b-45e2-a629-6ebe5f70bb06",
        "cursor": {
          "ref": "c790105a-e487-4797-82dc-c6cc0b122be2",
          "length": 250,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "9431a8df-bbba-4347-876d-c1964fe0f9bd"
        },
        "item": {
          "id": "bb534323-757b-45e2-a629-6ebe5f70bb06",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "e12b0945-acbe-4376-877a-5372502e7808",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 26,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "362048ba-6d69-4d7c-8d54-40a5c5797629",
        "cursor": {
          "ref": "b46fd5e8-2ed8-43fe-a33b-3482a4f16d3e",
          "length": 250,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "ef8641ac-ba96-4c76-8f70-ea840912b638"
        },
        "item": {
          "id": "362048ba-6d69-4d7c-8d54-40a5c5797629",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "e47dc268-90be-474a-83c1-436ed7497fdf",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 26,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2ba0bb6f-2a92-4373-a608-4cdef3dad6b5",
        "cursor": {
          "ref": "47792716-d6d9-4dec-969d-29247618119c",
          "length": 250,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "396fd4b7-a0af-4a33-b6cf-9468bafe9dc8"
        },
        "item": {
          "id": "2ba0bb6f-2a92-4373-a608-4cdef3dad6b5",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "28e0babd-7bf9-4c8e-9635-0357e1b68443",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 38,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}