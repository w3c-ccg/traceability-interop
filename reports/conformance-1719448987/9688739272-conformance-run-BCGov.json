{
  "collection": {
    "info": {
      "_postman_id": "0b8a4a7f-f952-4403-a9a4-909b37b8fa24",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "951b5270-61fb-48d2-81b9-c093bfe7dbee",
        "name": "Clear Cache",
        "item": [
          {
            "id": "a80d78d4-e4f4-4612-9763-ec449b7c9e51",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "ba5c1ac3-fb49-4ad7-8e05-108ebffa9ee7",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "ed81735f-f11f-4f25-8a8a-676fd4e72abd"
                }
              }
            ]
          },
          {
            "id": "b481f4ad-605d-4aa8-9a01-cf88fb822849",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "c14a10de-2985-45da-b2ce-3d04a99e0930",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "0f86051d-c202-4fcc-899b-bcbb95cc9f66"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "3fd820f1-babd-4e3b-8c4a-030e7cdd80bc",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "0791c81c-35b2-499a-a777-6daf8effdc4c",
            "name": "Positive Testing",
            "item": [
              {
                "id": "0855bba9-6294-4489-b9f6-358ad42457c5",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "841b0c5f-28c8-4f9a-8e34-af40a9ed0344",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "b98a44a6-964f-4792-b173-9692093c1ff9"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "414a30d9-71ed-45ed-a505-62b3c570faf4",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "4b796ff4-38f1-43f5-ba18-3ec604229020"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "6def1145-6793-40fb-a4a0-7359065e06be",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "840c2e74-cc92-4e65-9dc1-28c906a197bc"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "726733e0-e6b8-4b12-9946-bfcbd4b814cd",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "88e6e346-8c2b-480f-af83-4c6464cb9607"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "34cd180b-a269-4b3d-9546-f81892c91e09",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "da3e83b6-d5b3-472a-b5e6-d120d8619a72"
            }
          }
        ]
      },
      {
        "id": "af3deda3-9d98-41b9-9297-daea1b84844a",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "501960ff-81bd-45ba-b528-ec62716fc7cb",
            "name": "Negative Testing",
            "item": [
              {
                "id": "2d13895d-16cd-4287-9bf6-655a5d595615",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "4195c30f-3fb0-4652-8b8b-e4f2339c0253",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0597ba8c-f294-400f-8a08-3a69280e645b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "d46af872-8efe-4f2a-9eb8-56c26d9ffe9e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e867a5e0-0932-4a81-9a36-2f6b84c6b411",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5b10e72d-ee0c-4f85-bb0a-3391c7bd522d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "41d75898-a817-4fff-b6bf-781eaeab363c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b5e767bc-8ad5-4f2c-a764-521ff279af10",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "758ad687-dea3-4995-bcfb-a2cd17cdbe2b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "e34c98f3-32b8-4a7d-ab9b-cadd2d68fc26"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "d27a1516-749e-4b8a-85c0-3bcfa35872e5",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "ca551df5-f86d-45aa-8c0c-5ac5354e6d21",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a91dcc73-6fd9-4f24-b05b-7b140274abab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "2c3f3342-9a6b-40bf-aa0f-79e7584bc639"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "12d4270f-9a64-44ae-8d7e-0b7c2e84c628",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "50ff74ca-9520-44ef-be2d-dbffa1549fff"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "3b3e1178-e18c-4847-91e8-f401d4647078",
            "name": "Positive Testing",
            "item": [
              {
                "id": "309141bd-66b0-40ca-82d0-d6b3c644e21f",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "bf8fed41-0034-4397-9cde-8626a1f34a52",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "a91825a7-9657-4dec-8f23-ddbb9c737eac"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "eafb4f59-c351-4c4d-9ca0-5029c1d761dd",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "61b7d8b2-524f-40a1-b012-36c156db260d"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "96b802c6-b540-4eb4-873f-01424606b133",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "5c27fbdb-87ec-4ff0-98a3-5412de6183bd"
            }
          }
        ]
      },
      {
        "id": "12998c2e-ba2c-4b22-8a96-587c8358b038",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "f6cc4d7a-2362-42c9-b39a-2761f41193c1",
            "name": "Negative Testing",
            "item": [
              {
                "id": "9dd69e2a-f4d8-442c-a3d0-9c8d41f49309",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "1efb07bf-4bd6-4780-a7e6-b7b8a1bb1267",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5b1d7aff-7ac6-4284-83ce-1dca59d8c75f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1aa36358-10fe-484d-82f7-3f08eba8b551"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6f506fdc-fec1-4af1-b863-1a03d0684fe0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "bc379115-74d0-4b12-82c6-8758c9d59939"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b297e9c5-2328-40f5-8386-eb1792d460ce",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b17c2f71-a8fb-432d-a3b1-632d9c79cc3c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "446def34-a9f2-48ad-a91e-3084e19b61fc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f54e5784-aed1-4592-9cce-712d31dde4b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "3bf960ff-12f7-4810-98ec-fa4a973353d2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "048d1847-3891-411b-9ee9-1d602d5b0480",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "110c4c0a-720c-4f77-9777-51aa06011127",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2e18480c-dbcb-4ff0-a844-3c7dac040cc8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "084eb29d-cff7-4066-a963-5481e1ba6ad7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "bf4f3f78-fbc0-4a79-825e-a1017cbacf5b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "580b02db-16ba-4ef2-8a9e-28beea456c6e",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0b9b025b-3b55-4852-afe3-cd9ad681b4db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1ae98928-d0d7-41ef-af0e-c32a5b62787d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e435dd4b-3686-4706-88be-f44141924ec5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "738c77b5-ed0d-4067-b6aa-652809641238"
                        }
                      }
                    ]
                  },
                  {
                    "id": "88e0d171-3dbd-4f41-a3b2-fcc5aab3690e",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "76ef430c-0106-4528-95a3-e71f1d51b8b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4d5b8666-70e1-42b5-8a78-76831e9b618b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "219dfbcb-60e0-43aa-a739-d5f4ba1b4aa4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "5fd2d60d-fc74-4750-92c0-86627ae35a79"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0672d24c-12b5-41b3-bd8f-557fafcc44ca",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3645e663-3f00-40e5-8f71-5e4d25bafd9d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e51bc5db-1c85-467e-8dfe-9fd4e559474a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "95e5a488-c33e-467b-89bb-4312f939a2e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "8992c6e6-7636-4777-bea6-a1c3c2d8cb71"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1c65c6f3-f49d-40e7-82d7-e703174e0d50",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fecd8c07-3897-4e46-98ca-a295e34321ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "37d01064-b8fb-472c-a380-6b9eb842c517"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9f6f546c-129b-4082-9385-dcbaf81d411f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "51842a42-736d-4f26-ba5f-6bf8bdf297ba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d2b12f10-b8b9-45e8-ba1a-24d219106a33",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dcdb5f79-25c0-48f1-96b9-d8740b5bee6d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1a84a713-0e91-45aa-8999-1e3fb86bbbd8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6ee4ae64-3bc3-49c7-96d7-5d7b77b342d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e99c399e-7977-44f8-9b03-5e1d399f4daa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b8ea3072-d2c9-47e7-86de-7bb5c2699dbb",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "835419f5-3d1a-42ab-be8d-d5e54fad1c13",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "59999623-b244-4ad8-a0e7-4c347234ef73"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0b73f3c3-1528-4e6c-8331-70c2c7db7309",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "4190ec36-0810-42e3-80b1-f26229dd531f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4e730a7e-068e-4647-8a84-2e34ef640f0c",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "74bffd1c-232a-47ec-a87e-b9d4472d0a36",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "55a4ef85-63eb-4b58-8f10-cf1dab418ae7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "41df87de-a970-4cba-9f40-3161216e6e5d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "5954d051-a19e-497c-a71b-362b3023daba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bb95073e-d2f5-4eba-9406-b07115c5fb80",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "51797a03-17fe-4d9b-9c3a-c491861082ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "69c5bc05-b4eb-4ac9-bd6b-8dd05fa3f258"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0d9a5152-b5cc-4b2c-aa6c-81216f35a322",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "db2699a7-3a94-4a2b-87d1-8673c3bcfe79"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cb23df04-b352-4d40-9226-2e56011fa00b",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "09f1162e-a777-415d-b8c1-a936a3c7f2ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a42109d1-10bb-4122-a598-e74bbdfecde9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3aa8738c-c257-40e6-aad7-accd3bb4cb69",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "73f8184d-7bd8-4abd-9475-355ce0d64ddc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "23b92f4a-0bae-48fe-8cce-ef21d228830e",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "61d84b9d-e7f0-4efa-a0c9-5717223f898c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8c2b1536-0c6e-4ea6-b692-ba8fc1bb7eab"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "96147d84-8863-4c1b-a9a6-fca5ea6a61e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "2daacf02-ea25-4308-8024-1c564ad29f55"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5e55e670-51db-460c-a972-1d0170618581",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "98a58b9a-ed0c-4194-9d9a-3adb953a71fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ac9224e1-db8e-4556-bcb8-bc28cb878e8d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7420ab13-a896-4b00-be24-4f73c45931a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e56220c6-1c04-47b3-b84d-b77e1f6f4875"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a3b0e680-64dc-429d-94fd-314580cb1cc2",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "493d12cf-97a6-45d3-b5ac-f10b3daeb1e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4be72e68-6b50-4116-9fdf-91b1b005101d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "94226be4-96d5-45db-8765-94b351430424",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ebebd788-17f0-4aa3-a0ed-37227f732020"
                        }
                      }
                    ]
                  },
                  {
                    "id": "030fd612-50b5-4820-8836-65ea17cc00e3",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "776b7a03-516b-42d2-90c9-50e73645d20e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0b747d80-4ad1-40dc-88d0-c1494de95282"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "391a0561-5b3b-472c-b77f-a9925286f24b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "cfd9c727-2564-4173-bc98-8c55c43cb70f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f546fbb2-756b-4290-b392-a0005c79f3e2",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a0e48f14-2f47-472c-90ac-501c3839b868",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aacd34d3-aec6-4a2b-91a6-67b2b24167b2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8e0033e1-2695-4ebc-89f9-44c4dd919a85",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "82c153fe-4c19-40c3-9cad-40db26f5f402"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4ac4a0ae-c68f-4d3b-957d-7f58818c87fb",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "93758fe9-2612-4f62-844d-dbdb37f8b564",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "95485199-473b-45ef-9f58-6f91ac3480e9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e1eeb818-c907-4848-a53f-ff28ebc36380",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "53c94793-7390-4d69-9d71-718b06cb0f31"
                        }
                      }
                    ]
                  },
                  {
                    "id": "77c5755f-5dd3-4071-a149-60688aecf77b",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a5073b32-9da5-4c45-bb69-07e449493128",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4a3a2975-40fd-4ff1-b380-fc37b0033305"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3a8d03c7-c2a5-4273-ad93-cbf8b5eea8ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "d9d5160f-8bae-4a48-8152-169d8475b53a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7cf3de3b-4939-423c-ab1b-084b2079ee9d",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "10a752df-b78d-48ad-8bbe-fc9644d7c281",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "da8c7208-d91a-445d-9c01-fc9c2ebc25f1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "962d1f2f-862d-4719-a4d1-f7ea91f4d51b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "6926b383-438c-429a-8a9d-95eeb29f7f43"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e792ec13-e143-441d-9fa9-c553c8cb3d1e",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0ca8ba78-0a16-41da-968e-b9b5539c3d7e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a52768a3-e7ec-4c68-a171-bacb3c0395ac"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c99494f9-d6d2-4cda-9055-b668b76e15a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "20e2c508-431c-4020-8f74-7094f28ce427"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c05bbafd-4cc2-4ffd-9b00-4cdb41265295",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "43818911-2b0d-4fee-a27a-97aff932294e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f7cb0db0-3d52-414b-9a00-f6a9890ce8dc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b1b47b88-2e03-46e1-af21-2ddcafde1fd5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "b68829a2-f15f-417d-a4cf-5e7871a77045"
                        }
                      }
                    ]
                  },
                  {
                    "id": "450c7407-fd43-44a0-a744-ddf178fbc68f",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ae7edc9a-614d-408a-9899-e19992165562",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0097407d-8732-498b-97b2-56182b8499d3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cc70b7f6-eca5-4e6f-a50a-4cb95dfa2e76",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "47682fc6-8f50-472c-beba-cb6fbf0bd558"
                        }
                      }
                    ]
                  },
                  {
                    "id": "895c8658-9825-46aa-a5a9-cdd728408349",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2c7a7047-a5cb-43cf-98b2-91fa5802a5ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "602ea3e5-b018-4da2-b2c1-82da50237d6b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d3c9e169-1ae5-4f08-844a-b6d5336836d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "33455185-9db1-4838-9ee6-432ae797d4b9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3fe0537a-969f-41af-8d2d-d3eb47328239",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "69dfb864-0923-41b2-b5ef-e4ec3460748b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "86353cd6-41d0-48ba-8053-dde5c7e02bf5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "33edcf04-0d34-4e9f-a7bc-018767381c0f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "a7f50b2b-2d9d-4041-8c42-0a071469d6d2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6dbcefc9-7be7-4a18-ae9c-9b37e77989f2",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "14306327-21b7-40da-b870-beffeaa4c674",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f4ffef00-72de-4b72-8e2a-19288fc33a3c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7a0037fc-6480-4846-8362-29db35020e66",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "10f5ce6c-7674-4ca8-8ebb-32f422a35706"
                        }
                      }
                    ]
                  },
                  {
                    "id": "79ee0560-765a-4590-b30f-8c29f5554ed6",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c8f59a20-190e-495d-bc98-6474a86ad99a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0af095a2-7a06-48e6-9712-032c9a6ed8e7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e5ee8836-aa4e-41f6-9ffd-8962c40a2036",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "ce1bf935-9955-42e3-98e1-08825532e26c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "48ee13c2-1f83-4518-8dcb-6ee1fb68cb7a",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "32d33af7-e0d6-47ac-b2ae-fbff32071c53",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "918dc186-c39c-4d5f-803e-5139ff1eb16c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "58853c35-5a3e-4a0b-bd0b-bca5888c2367",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "16984899-a644-4947-9d08-3e68a8e11181"
                        }
                      }
                    ]
                  },
                  {
                    "id": "af0d2b07-45a5-4020-9d0d-101a3e8f1dcd",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "350ef675-c3ae-4df6-a615-d66df2653f76",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "631e6d8a-e34a-45a8-9d5a-82db3f5188d6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9a97e123-d033-4283-b9a2-742e46ed6c01",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "f67b0045-1341-4cf2-b83e-64a37512c093"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ec4bb073-2d34-4801-bd7e-c9c9914bf318",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "57bbb866-0ad0-4e79-8df5-88f923358a00",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a6a667f8-65a2-4662-8559-f5b4b9b054cf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dabba296-4637-46fc-9ca8-5e877048510d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "79bb8eec-8e26-4de6-ad7d-a705b946e8e9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5ac96669-8c11-4d17-8231-1d00907c94cc",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "56f63c9e-d462-4166-a4f0-97fb9eba03b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c46ece07-a845-4ad0-b5a7-8efc4176815c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "79edf055-cae2-46b1-ba82-5f77e570e4f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "3915416c-9841-4bd9-a519-4e4af77b7184"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fa7b14ed-66cd-4b1a-99ce-22ec039976e8",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fd87b1da-2fe2-4c65-8652-41eb3b7cbf1b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "83051d89-7446-4d59-b546-963d12192953"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "04a47ea0-6293-43e2-87d2-c8ce6cf8236e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "d713292e-f17a-4599-8c4e-6038bdd7862d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "66654f6c-9b5c-4752-8a06-291f1509f568",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f8402090-0246-4517-932d-52672422ab7b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "28577f0e-9ddc-40cf-a158-25b7ec0b4e45"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "52f4fc9c-6611-47c0-aafd-2164cc48b641",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "9168af53-5765-45dd-b457-f310455e7f07"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0c95436d-a04e-4d42-9dd3-9e2e17f08bf7",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a84de1a-e8f8-4244-98a2-656c01f34480",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6431b699-87be-475c-912d-f5fa8d674181"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7c25aa52-9417-422e-a9a4-487feae62303",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "67657536-da0b-45fc-bcbc-6ddd1f2d6a4a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e220ef17-33dc-404e-a1cd-98b87905f55c",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b3620343-fdb0-4445-a1bc-33c49247cd37",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "be87c48c-ca0b-4614-8848-6a52f8106d88"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2656ee0c-95f9-494e-86f1-361fb5714bbb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "63579c08-0a32-4bb2-9a53-5e0ce8849449"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a8f6b85b-fdb5-4851-b55e-954e3b259a08",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "287b11b5-7ca1-4ba6-bef9-e01f361221be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "e926ec93-dd4f-4fc1-a5d6-9d64e8ed8c29"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b604888d-3a9e-432f-950b-1f618471ec96",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "c7497b97-4b7d-4348-8eaf-6d171a6e62d5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2516c472-b6bf-4524-8f8c-ce2d93a5fcd6",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "53a8645c-b0c5-44ee-972b-1b691fadf96f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e5b69cbc-df07-48af-9680-a851d7566eb1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d35eb5ce-0309-48a4-978b-80b265975a9c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "c688e547-38af-4362-ba42-3aa74fd4b1a2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3cbf3658-e02b-4e0e-a134-6d866ff34bbe",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d0665b31-99a2-4cf8-8a03-5eeb2a2ad25e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0c2b8a2b-9295-4fcd-a3ff-f33ea774131e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cb0eb0b0-a77b-4fa1-bb2e-fd55fd0136ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "17228e01-9038-4299-93ed-91baa49d010d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4de96ff4-455a-45d0-976a-f6457d5d601f",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1fad717b-3c12-4fd6-b6c4-c8d0b4bdc28f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6d17aea6-f8e1-4de6-af52-ee4155880d4c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5293fc04-869e-4683-973c-8fa38328b0e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "eefaece5-2d5f-4ce8-a25f-d21e7d07636f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4ec23f60-07ef-4f02-a5a9-a0b774ec0869",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a770b1ed-4423-443a-a42c-395a9467e933",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3156cdc6-e30c-4045-b885-21ffc4df443c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "51277325-9b3f-41b9-b3ba-a44c8ddc305c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "48230cb4-4e60-4453-bc53-3a67fa096c43"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8f3b51d3-523f-4b73-97ab-863cfe39c609",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c07ac24c-7c43-4ae4-92dc-f9822793cb9e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9ec2cabf-7969-47c8-a8c6-02febe425aa6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ce4ef3b7-e6e3-469e-818e-c21c1cfc24fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "9d606938-a0d2-4244-ac20-a77030cb5eae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c54bd40b-7131-436d-bdda-29ed388aae82",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "406f7d67-ad64-46a5-a69a-d101ed195fdc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5e69aead-3d47-41d5-b469-c3a7e042aa8c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "af6ae6c9-6e1d-4348-8f59-04a657ee865f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "cb8105f9-c7e9-4d57-8490-5a3db1b75535"
                        }
                      }
                    ]
                  },
                  {
                    "id": "745419eb-45e9-4d03-8aee-5ad18b302cb8",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c84cb083-af50-4ba1-a9cc-a6051b46155a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cfcea961-e6f8-482d-9fe2-94478bfa2f3b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b3d055e3-9dd3-4d68-80c7-9e89a04ce669",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "d699ca94-ab61-4590-8ae3-f83064824a52"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1bb09bad-6c41-4a03-8530-de020f375b39",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "efbeeb3d-e027-43bd-9c33-b4698086379b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ae68bcf7-88e8-4483-9aeb-5b30d0833a99"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "83077e04-1473-4837-b220-4a20efe78002",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "7ae1ceff-4160-4a50-9efd-5ff051715614"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eb4dd5bd-b196-454e-bb09-e32daa6b3e2f",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "79dbac93-05ee-44b9-9f02-42fdd46c66dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "924e4475-bb96-4641-95a7-e7b6f0f95eb7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a92a053f-bb74-41aa-beb9-bc0c1969395f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "5e8a20bc-0366-47c8-aa4d-b7ed7d3c2883"
                        }
                      }
                    ]
                  },
                  {
                    "id": "df996cca-72ae-4fdb-94c1-56739bde161c",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8d1b4dfb-01f9-4637-a7ff-8a13aa1bc957",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "79fe276f-72a8-4464-bfc1-2a1dab4a6e3e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a11e4886-79c4-4753-9419-08b5bae0bc95",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "228148c2-cfea-4cad-a3cc-6082f0beb4f9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "41b10870-80dc-478e-862c-2875c0572954",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1e8b46e5-6ba9-4b13-8ffc-638b6850b926",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a3806be2-b609-4c6d-9129-6ce71c68d1e5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7d14f441-af6d-4d5f-8284-8ab067bc8b47",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "391327d7-efd4-4600-8aa9-0e53b0dfc73b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "484a1136-5ed0-449f-b406-321f4f8818ee",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "001229e6-a878-4ad4-923f-2db09960779f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3d47fa6f-0825-487d-9a72-ad338488dd74"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ec3b0bbf-1875-4c41-9a1d-478366ae3a09",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "60ec65d8-a571-49f2-8997-b839ba8c6084"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dbffa490-6b82-4d45-9cf1-749821fcf0b0",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3962e737-dd55-4acd-b17a-1ae9e9f8c10c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3a8427be-8e7c-4f99-8e85-db8f50a8ecb4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "45ceec0d-f6d8-4b37-a937-9e42e04cf2f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "2b543f70-58aa-4fa3-9232-8390e88b411c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "594c5412-72a8-4c85-b72f-c1e9c96bafaf",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4aca019a-07d2-45d4-9825-5659a51fd731",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c0e722e8-c21c-4a06-9ce0-695dd3919a53"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7ea85657-0f17-42ab-a395-7ba1d66fb63e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "1e836f07-99b8-479b-b2f4-cb3af7a6ca5a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1b60c7dd-0c3f-420d-877e-84f5435cfeaf",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f8a747b3-84ce-40ed-8dae-a2d5b8ec6f9f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0b21ae13-50ff-465b-905b-568e73933088"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "36982dc8-060b-4798-8468-e21ab705a69d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "c951b0df-a4d9-4e8d-9e45-add6f6aa07c4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "02ca0497-09f2-464a-96f4-da4f5bfd3585",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f86760ff-5a03-40fd-891c-f64e62d2d129",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c7db1506-8a3a-4386-aaa3-a94aeb5b072d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2bb45b22-72c6-4927-a6ae-f3c36ba195f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "e4156c8b-cd9c-49b9-8ecc-e0b32aa9ff45"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6ac10199-c47e-4062-9a1c-264df1ba21c1",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "19369247-f778-4a80-af5a-d2878bb7eaba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3effaa84-695f-4f33-8a0b-dec1788a1cab"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "74f4df34-1628-4f6d-9b0b-8d1af6e22e15",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "ca1169a5-f69e-4235-9598-92e264113c57"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bde283ab-0a6a-41f3-95e4-4812893b504b",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a9c59dd6-b1b3-4d49-aa89-1092e40fb69d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a99c1755-b5fc-4e11-ab0b-1860c7db2d6c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "710eabbe-7534-4fee-b5ce-4359fc4026bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "788450b5-66b0-476a-84d1-60888798c276"
                        }
                      }
                    ]
                  },
                  {
                    "id": "18add668-0bed-4b4f-82b7-9216790802f2",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ecbb71af-2048-417b-a5ac-250b615533c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d386fe9d-be6f-4116-9d26-ae10bad71bf1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4b20dd65-2399-4e55-ae1d-fde1f112bed8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "93178725-8985-4ee3-aadc-68ccbc0f05d7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2c9efc22-ef0d-44b2-968a-2cd5eaeeb664",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eabcf155-ef6b-42a6-843b-19a389782427",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4d102994-06a9-47b9-9b39-12e177e1c7d2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "08b7c0d9-ddfa-4e84-9968-b1234618750c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "604cdc8a-7f3c-4ca8-89dd-060ddf2899d9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "668b4546-5c1a-4fc6-899e-ed1bdef45a14",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1f5023e9-9265-46fd-910e-51b68b3b06fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "159e7813-a7c8-4c42-b308-d6a3f50f6e2a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fca0ccdf-b371-4153-9f1f-bf9125737ec5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "d9de2d36-611c-470d-ae7b-8dd02838b9f1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2a7f87d9-6d13-4e9d-b39e-af864b5fac2f",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e181d915-677d-418f-ade6-cc0b21b412a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b0b14643-6412-4665-8d3a-0b23d6cd6927"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d817c903-8493-4c01-a777-6f4e6aaa3599",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "5465c6f4-a16a-4a24-a6d7-f8914b337226"
                        }
                      }
                    ]
                  },
                  {
                    "id": "05d32b74-6e03-4ebf-8a87-c33cdda53044",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6535161c-8c22-477d-97a9-25b35104143b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f0d76f8a-7d37-4fcf-8608-2c68e784acc5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "24a2268d-5221-4e98-83ec-d46c9570d4a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "3b1eb955-8e54-4627-a9bc-0a33dace9dae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "978d914b-8495-46b8-bd30-55d80fc984fd",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "62849867-41a2-4011-af00-e47ee3f3411b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2ba6c4da-dafe-49f3-957f-1b2beb18394d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3bc55979-2dee-4191-a664-a937093a1e12",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "8d70ce23-e135-41a4-9789-dbe38ec1b9aa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f6d71057-b445-43ee-b650-702e7bed28f1",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4bab24f2-0df0-4252-a5a2-dea9cd7104b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8ceabaa3-74dd-469f-b5b7-2dc76aeed8b6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "93b9e8dc-ec1f-4d39-94ff-fafd5256a427",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "7b68adb7-34fe-4b27-a56f-b174d4089e51"
                        }
                      }
                    ]
                  },
                  {
                    "id": "32fdf33d-860a-44cd-a766-55e0abdc2faf",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "da994751-0bf9-4a5d-81ec-a49a43d17b3d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0ec79a3e-d79d-411b-b080-b363f8199243"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "72401418-bb80-4fb3-9d4c-2120a9ecb47b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "68c6b02f-93ec-486e-8670-42b009722eec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ff0199e6-312d-444a-b569-a6720cecae47",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e358f5ef-146a-4c8b-ae5d-0db7c20031be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9258213f-862b-466f-9fe9-92aa5d2f80e1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "246654b6-06e5-40cb-908c-acf79490ba29",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "93d1e6c1-63dc-4058-bee0-9a4306b69fcb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cae82a98-1a8e-4ee2-a58a-cbfd8439ca57",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7e1ca1fb-7504-49ba-b7a4-907e186b36c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9a646c32-0e46-4b78-806a-9fdab9a4362b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c4cd3ee1-21ef-41e9-b0c2-8a02e2e6538f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "3d75bacc-0ec7-4fbb-a673-d05334056014"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8eb0d2b4-0baa-4274-a65d-bdf0d5a7668c",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "515c37e9-a97a-4752-8c9e-8d90a0fc6867",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "21ba2666-e69e-42e8-b752-9d55b41b1c5f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9bcdcaf1-f451-4d82-899e-b1cd08394031",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "0c2aa3f2-f21b-403d-a7c0-f35435b1b477"
                        }
                      }
                    ]
                  },
                  {
                    "id": "168d3e37-791e-4931-84fa-bffddb5f7571",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ab71467d-5d85-4ce2-bb54-f402cc69f2f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "387b7176-0a18-429f-b69d-eae6ee665c6b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6ee47d75-0c55-49ff-a027-89fb53417e62",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "70a7cbed-7f80-4cf4-adad-a97a1214e8d2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0219b0ed-e47b-485d-a141-7c72eb74a39c",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a879fdfc-b69b-4fd6-aacc-51206cbc575d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "063b338b-8ffb-4b56-8140-86d4bf1c91e0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c81ed297-94b3-474b-b30e-b5b4e19cf759",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "09710b7b-229d-4a12-b8f4-919e01ee565c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "412dafdc-0813-484a-be0d-33e59f074960",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4b843f98-01a6-411a-8e30-d5e9aaa95e1b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8ed41949-d009-4f44-99b9-b48650175fa4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6a6cef56-05b2-4d9f-94dd-e802ee090f7d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "02e2a507-2c05-4667-b7a9-96b67d8dd08d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "de2b82a9-95c2-4813-96c9-04e843cf0540",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "50d8bb84-4352-4eb1-9aff-10eb9111b7c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "19fd8ec9-bfe1-4102-8abb-a61d0a195748"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e746bed0-815b-43f2-bfc2-b8e79c9e564b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "a1d812d7-8d31-4e36-818a-e61459441b94"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d8543630-bd45-4254-932a-4e44ac0a4e02",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d7448201-471c-456e-98c1-81fec710fd32",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d81fbdef-96cb-4e04-bc4b-d8de1b0e949d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e8fbc320-2789-45c3-b075-e40b2d9dc653",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "be0246c8-23cc-47a0-aea7-139a5ddd32ff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "68b05ff9-a55d-4d48-877e-085a03322d2e",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "670100a3-73e8-4f64-9226-6edad07d949c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5177f4cf-e9f7-444c-ab0d-63d5ca61a41a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "819d83c8-c7ca-4b28-9b92-d1329b3e9e7c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "e19b6e5d-cc0e-488e-9f07-e78bff9d5a05"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d497a3e9-04d3-417c-9160-1b4a59fd097a",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "40a11f02-0672-4a88-81fe-f08b38c5482a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "69e6abb9-3441-44f6-9c88-59c13e86105c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "12437c6d-70f5-4709-9ae2-b0a9af5b67c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "739b4f96-d7a1-48d4-bead-7a1c14e1865d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1b083685-00f1-4c5c-b991-dff12adbafc6",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "da66eb3e-9821-400c-91f4-eb0144c77038",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f1906bb5-28ad-4b7c-9f36-3f702ac2d9a3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "925c41d1-ca21-437c-8582-80eb1c4d683c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "db597a10-5440-4f91-90f8-bdbe6f982318"
                        }
                      }
                    ]
                  },
                  {
                    "id": "430ace78-0621-4f07-9686-76c33fd3953f",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7c885738-af14-4072-8d74-1ba1b72aab94",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ccba9f27-298e-493e-9fb4-63d21c811d9d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bc20131f-1bad-4fc0-8ef1-97cbdc3b5aef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "561866b6-e040-453d-a33e-6473dc04c4ec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "16cf2346-4774-4f42-adfa-530168582575",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "38ef34b5-3bf1-4e89-95f6-54805bb5543a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "00338a5e-bf3c-4a20-a122-362251234245"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0dc1424a-d1bf-41f6-9aee-5f43b1cea4ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "62ea06ca-5328-4b6c-84a9-620c365c0fda"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eed434c5-4ae7-4b1e-8a43-0c0df8a0024e",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "040737e1-7fd7-4aca-9a42-3e4d7dc4bf70",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "324779ad-436c-4acc-8611-d023630dfc80"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "59ad5c89-5fa1-4acf-9815-b99425dbde1e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "00c4c2eb-34c0-4d04-9c77-8cfaec834a9f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d33af8a0-4c8e-4315-9ba7-e961cae381ac",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "72177faa-afd3-4be7-8289-d9ef15507997",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8d29e34a-9f67-40f5-8886-82d66ad40027"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4e1f5dc7-08e6-434b-9320-ea5f48f8430e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "231059c2-e337-4de4-9d74-b3ea245720af"
                        }
                      }
                    ]
                  },
                  {
                    "id": "057a4beb-d301-4bbf-a5db-6a2e94ba51c9",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "954857f0-7783-4ebb-9662-d94e314f42d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fa5a06ad-ea22-4384-bdb0-e154b9c6cc52"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4eb2c3b9-2003-4e0f-b4ed-1d4ba8521bb8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "620dd2e4-b37a-45d6-a787-f6964dabff82"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9e34f0cf-6f0c-4fe2-b04c-061022707a24",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7cceff82-d0e7-4e8b-a4f0-5e9d61d9b8a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8062df67-52b1-4e6d-9668-f9c8f84559d2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b55965e2-02ea-4e3d-8d5f-2e0cfc62c811",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "2f50916c-b258-44f5-95d8-309892241e55"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c33f5942-b92f-4d32-b3e8-34c7b3540b83",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9b0b60b4-6d8a-4194-80ee-5ef80768231a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ed21d98d-8c1c-4159-a402-ec078805356e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "beddf055-8041-460f-a29f-f9daf996f265",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "efa892de-3832-4ae4-a99c-7f15e5e7dceb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "725aaf49-bece-435c-b0d0-1b560b61ea10",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "93e1dcd6-dbac-45c7-bd67-2c5ecacf8b73",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bee28fa8-1234-40ef-a238-fb66d3abe9b5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4ed5d901-27bc-4924-9191-6271e168d966",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "ae10c38f-178b-4b7b-bac9-926c6c957552"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2108636a-c269-4c1c-ab48-117fe40c4abe",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "96ccc09e-26a2-489d-a205-784f4fd5ac8c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5d540f8e-f287-45bf-9959-90c400795388"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1d11d73f-2c5a-42d5-97f6-c8cfcba89920",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "ea21c344-7261-489e-959c-2a731091e7f6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6e36bee7-bee0-4aef-ab30-e1c4a597a59f",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e597be4a-a16e-4f14-8e63-a6483f22fa32",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0f436856-18a5-43a4-9e56-f57fc8e1b217"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "25163810-cef5-478a-a7a1-c884e28b8ce0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "6c978126-bfa9-4461-9924-ee5d220a88fe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "47616702-c5cd-4423-b7c2-4104e12923a4",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4466a8cc-d966-401d-896a-6f4197f8b81b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6957549d-f16a-4814-86b8-27d420267e4e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a9c726b1-694d-4ede-a92a-3f78c03df2b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "230af945-72bc-46b5-841a-bb790db9b5e2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "78897119-31f2-4d18-9dcc-4e78d16271d2",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dda6f8ee-cab9-4f72-9bb4-ff8defb22a4d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "675475ca-8960-4c79-9a4e-714ddd30d21d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7bc7dddd-1d5f-40f0-8c0d-6da3101b16b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "9c1c21c9-1743-46b4-8184-825556b590f2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "20696cc3-29c3-47ae-9633-a9d569d9b9fd",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "047150e7-91ec-493e-9e8c-273d28f27ca5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "88698f36-a620-4581-a571-fb2aee0f6645"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7e58c2fd-345f-4e93-9076-cc214f29bad5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "bdf1784e-c658-4f6b-aa1e-01a35356bf5d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "825ae3ac-fec5-4755-8a2e-73a28ec00bb4",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "04a391c5-c1a5-4ae8-a170-bc46e3b09c49",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cdf8c2a0-2c64-420f-b29e-3d0533be7ad3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8b84dd10-66d5-4a59-b942-406b0a603418",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "276a2d6b-4591-4c50-8080-7c0430b9678d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "18b26d4f-c5cc-49c2-8ff7-8aff6a974921",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3ea11d6d-41cc-40ac-957c-564e9a4a3a13",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7f13fe5b-80f1-47ad-9dbe-76a04deddff6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "465e462f-6fba-4ee1-929b-710c8e9a9574",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "c2e09dd2-3806-4057-bcf7-6a15ba1a442d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "464e9e06-9034-4eb1-8e4e-f605a3111d60",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9a44e74a-2529-4827-8ec4-a045b9ec2cba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6f32acfe-a883-42b7-aae9-b6c40ac34512"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4809bf6b-330f-4585-a7c3-1e89967ffcc4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "b0a92d9a-2e09-4292-b2d6-8c582f685a94"
                        }
                      }
                    ]
                  },
                  {
                    "id": "094d6b5e-1daf-489d-83c9-7c7a30ef9244",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "92c54ea1-2814-4dc0-89a7-06f376853118",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5d37e76c-2bf8-4ac1-b6f9-b622dd345158"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "30223879-6ab9-46d9-a415-a2d1d0b9af0e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "51a6cfe7-d820-4d7b-b0e0-ff52d9b023e0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "be1688fc-e787-4680-aae4-c7268e07ea4b",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a70c6440-8e91-47e3-8cbc-f61f6997412c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "511a1cca-47a0-4094-91cd-82894c1a8ac9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3bdef7d4-1f8c-48ed-9fff-c3a605337666",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "de10270c-b141-4157-84b2-f727af35325b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3f280aee-996d-41a0-806b-52b6b4fb99d0",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6385a0ae-c6f0-4c36-9a17-1c3e574f117c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "721bd39e-3f2c-4124-9181-d60f247de525"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "37c23f2a-62e7-4d72-b028-4dcdeb976f11",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "fab9b67e-0d4a-457d-9aca-3d8be9808aad"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "1ea5569c-a92c-46c7-b845-8d0755419623",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "55882474-a8db-4e10-86fc-793696d733e9",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "852300d7-5a12-49bd-8efa-66e430d2be80",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "318896ad-7d2a-4f2a-99ff-673c28b8cf7d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "357d293a-f455-4fa9-819a-f3127eb2f8e0",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b568aca4-7bdd-4bee-803f-12a900c05c3c"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "cd21815b-44a8-47fa-868d-ef8c9db7980d",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "59799a3c-73ab-4bfd-90c4-a36cae72f453"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "57243719-bed1-4e97-86a1-748d9c7c7710",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "c4a97a0f-4b79-428d-8163-18a1e4b71367"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "dc109859-8591-4816-ace6-7e18c2493222",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "f06f210c-dc20-4944-8ef6-0260d54dba2c"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "38082d3a-271e-4c19-9bb8-85af321ee20d",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "85b0fd23-6c90-43ee-84ce-3f2a3013f31e"
                }
              }
            ]
          },
          {
            "id": "99333ba5-5b8a-4015-bcb5-0fa931ea2aba",
            "name": "Positive Testing",
            "item": [
              {
                "id": "e8bc2d75-c8a7-49cf-8b47-040cb389f174",
                "name": "Duplicate Keys",
                "item": [
                  {
                    "id": "ecf52154-e2bb-410b-959f-82ef67268cca",
                    "name": "credentials_issue.credential.issuer:dup",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"credential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"issuer\": \"{{issuer}}-ignored\",\n        \"issuer\": \"{{issuer}}\",\n        \"issuanceDate\": \"{{issuanceDate}}\",\n        \"credentialSubject\": {\"foo\": \"bar\"}\n    },\n    \"options\": {\n        \"type\": \"Ed25519Signature2018\"\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "text"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5fc6e587-e97a-41bb-8d70-4eff6e286fb6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 201\", function () {",
                            " pm.response.to.have.status(201);",
                            "});",
                            "",
                            "pm.test(\"response issuer matches request credential.issuer\", function() {",
                            " const { issuer } = pm.response.json().verifiableCredential;",
                            " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "5d546077-3ec8-469c-bb62-f7daf61f5e91"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e8bb3cfd-b960-4b4a-941a-38dfb714b712",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9aea1f7d-cf5c-4e56-98a8-91afffa2ab54"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "69c4f542-620b-4921-bfbd-39e85e0f00e8",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "c7a824d7-31c9-4b80-812a-25560b9a35c7",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "09de3e9d-5ac6-4575-9e99-b0d74f76e41f"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "81e2520a-f3a8-4b3f-97b9-6f25513797f4",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "cba23dcd-3b5c-4882-90b5-4382bb76b41b"
                    }
                  }
                ]
              },
              {
                "id": "399099df-af59-49eb-9ca5-e140fadc9172",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "a184b937-b115-4445-97de-24fab06fc91e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "502f882d-6ba2-47b4-abc6-5ad610bbb51a"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "1376f39b-880e-4825-8cff-6dbb627f7f56",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "487b4f66-9233-43e2-8915-0b82eb45b199"
                    }
                  }
                ]
              },
              {
                "id": "2495dcd6-9c6d-446d-9b3d-d8e58ec5cee1",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "511a75a9-49ff-46a9-ae7d-310197fad4ed",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "61288807-b5a6-40bf-aeeb-93536edd7c26"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "f4d92f7e-d726-43ba-951b-9ad13301a96d",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "0e494def-1dba-4b8a-bb96-c30ebdb55ab1"
                    }
                  }
                ]
              },
              {
                "id": "cefcc3fd-340e-4662-a754-166b4311357f",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "77b50614-5491-4efe-82e1-8ce013437d3b",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "21a99091-0e25-4d6d-9621-0c6ba96fda76"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "2db311c3-fb56-437b-9d30-ab9c31e9d8ec",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "d6e56a29-2c9f-4da5-a204-736d36646443"
                    }
                  }
                ]
              },
              {
                "id": "7f7d6734-1b53-4a02-9529-6b763912d512",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "a05ba459-8aeb-4a9b-8ca6-1ec92430fcb8",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "540c19ed-2ae5-48ef-92fc-6db80c0e1593"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "622c0a0c-9a67-44c0-845a-582e74bb2826",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "1aa6ae1b-24b1-4954-ad9a-06320e8ce246"
                    }
                  }
                ]
              },
              {
                "id": "32cd3cd4-f957-44ab-a93c-836c9429414c",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "6880edf4-f778-42e6-a0f4-cc3685c248c5",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "a18dd2ab-7726-4538-86c9-6fd1e5dca86b"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "96c7c799-207b-4159-b8e6-96e8988fa8bb",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "be524dc0-76e7-4dc9-9464-8039fd8b66d7"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "f8a848f3-69bc-44d1-a7cf-dbf9165c502e",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "37455ea0-39ca-43f3-b5f4-fd928dad821b"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "09777fb3-b32a-40f8-94eb-6fe73535d23d",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "8e933852-cfa1-4117-b60b-d9e1fb4393b3"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "fd2d69c0-8d59-4256-b90d-4392cff041cc",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "ada44ebb-a8d1-40dd-ae14-54880bc464d8"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "279686a7-1374-476e-829b-9fcc97eb5e4d",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "e1a35a5b-a172-405b-9899-da504f7cb75c"
            }
          }
        ]
      },
      {
        "id": "968308dc-00b4-445d-b6bf-e4782b721d06",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "41361a05-a69a-415a-85e4-1b6fac894297",
            "name": "Negative Testing",
            "item": [
              {
                "id": "9becfcde-3969-4d37-a3e8-75d265269ea7",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "88f5dab9-e701-4dd5-acb4-56793a6c3476",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a711715c-13ab-4f0f-ac11-d770cf9e9688",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "237206b5-54ee-4424-aa4e-eb4f65cc10d7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bd31e8ae-420d-43e4-869b-38a99f424581",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "0ddf5035-8bc0-4872-9950-53b5797671e0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5fe1d394-19a4-4b30-941e-592a50873ff8",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8ef70779-4d78-48dd-9107-0412e3672d25",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1a5ae046-de39-4506-b3b8-1d27de8cc72c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "255ff954-5205-48cf-ab1e-02e3b2bce040",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "a33796cc-4818-454d-9aec-91abb3091c89"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cdba6dd8-92c3-429a-b8d5-fc20626a08fe",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4ed1aef2-ec94-41f7-8d5f-697b55343e34",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "518a0684-9a63-4cc0-ada7-0b3490a319b9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c42cd179-272d-4e78-ac05-cfbe216813e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "f92a453f-4e95-4f8c-a7d4-1652e68ef3ba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "09382879-1ca1-49ae-8a25-7004c4166e5d",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "58cf834f-14c1-4c0f-a126-0669c2358142",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5c42b041-13ab-4f88-a684-d15a999b8bdc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f23ec987-481f-4cf2-ad41-27e50a57cc0e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "c03d6977-e417-48ae-ac32-02f2960bae28"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fb88c09a-b8e5-4824-ba48-ded327b44d50",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "93c838ce-e99a-4db3-962f-e4662370c470",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "47389c11-9a64-4534-9384-300c2b48e845"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "053b6802-bf53-4416-bc78-704b46eeed2a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "0b346dc1-9ecd-43bd-b6d6-20657c1800eb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "74a8b687-c73f-404f-81de-cf0af9e329e9",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b2462f86-ee38-4e45-aa95-dfea9d3254d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7928e2bd-cd76-4c38-a26e-d90138982324"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1db8d9eb-c133-415c-826b-bf873b685482",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "e461bddc-6980-47c3-bd43-8939d3da12bb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "60349270-966e-4791-808d-23c8de540987",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c3874c82-4243-4ece-9318-4a181631ff5a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6456ec1d-403d-4423-b3db-55e5b1fd46f8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "38fe4ef2-9b0a-44de-9ebe-87ecaf4bda75",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "020e9293-2f4a-493e-8af6-e5e31e979fa8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "962fcf02-7bc4-4f54-93eb-424281e351eb",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "634582ce-d802-45ec-8e8b-2f1cfb92d54e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ee404505-554f-40f5-96c6-a7b3b8271723"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "038b0b6c-4b53-4da0-9206-e3f22b9f895e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "bc323273-1045-4864-80bb-8447f4f91390"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9b9e48b5-b58f-4e84-a0ec-12d513deaede",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b3063510-17f0-42a1-98a5-fb22cb82ab19",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a5d943a2-7928-411e-89c1-70b82a869a0b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3747e833-a1d8-4803-8173-ada53f50a210",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "3bebf1f6-d748-4f2c-bc67-7d3de26ed9ae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "25aad0e1-b5fa-460b-98a1-ee12d24992db",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a727e9b-0826-4edc-b768-3e0a29a371c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "81c9eacf-3ec4-4fb0-adc6-196c244c9136"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ac3c56c1-81e1-47f0-818a-d74408b2faab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "2299fa58-2bda-4e2c-895c-e9e22babb77f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9068e7c7-bb17-4c38-bb93-85481a7d46e3",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dc4ed713-a720-4cbf-b717-331ee88e7065",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d76d0d88-7421-4eb3-ae2b-b06df24d9255"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "000c818d-2dee-4fa1-8ed4-33126ffe389b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialStatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "19af35a5-7ee3-4b2a-8072-8cf0b0670ebd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "240af5ac-5dba-41c3-bfbb-1e66bbaa47dc",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "01261c75-4d03-472a-9d37-b8c8fa3afcd7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "17593ba3-023a-41e8-9f58-eb32b7889dee"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e0178782-f474-4173-a48b-10572d0c7102",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "7eedf23f-0880-41af-8356-646cf953a92d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "29a05da3-32fd-4c80-bf3c-790405a4551f",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fd95d77f-3d7f-4fc7-b3d5-1bbb3c16ff8b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "46d12137-cf99-4835-9cd5-a9620840abc2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "37aa2134-ff4e-4e86-9af4-00f05ed3ee47",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialStatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "b556080a-ec00-4ee8-8335-e693411ceb00"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6879a534-7f7c-4e57-a412-20ad9edd15b1",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "22982b9b-f751-42df-93a6-4c809e9bc41e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ca9cbd12-eeb8-478c-841d-4c542daac5c7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cb2bdca6-0432-40d8-8f45-dc0ee8bbdbe1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialStatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "5348eff2-4646-4a55-a762-5fc9a7d66899"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7f9af0a8-1743-47aa-a91f-ea0d22197325",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7e783e9f-a573-4565-90f0-0769d45b4ed5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "326d4641-ee14-4cdc-a27c-35baa468d0ef"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6f1fc77a-fa84-41c6-8607-16070ae39e37",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialStatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "30034858-a941-4613-95be-780bab521321"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c103e22c-7da9-409c-8cc5-8553ab443b1c",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bc7d3421-f4db-4e91-8f4b-cb01415a581a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1c5de857-182c-4648-ad09-af325db2f398"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dad5aea2-7257-4a0e-b396-c0d5551d7cf2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialStatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "15453ee6-4b59-4e73-9683-38a06aa2ad29"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3ed5e8ec-3a19-4676-a971-5c010a9489f6",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "30131820-8d4b-47ab-9f5c-1ff2b77828e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e6f7773d-3e5e-4cb1-97c9-9982e76b1895"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "480ce9de-a4cf-4fe8-be0c-075dea624ff2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialStatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "af5abf30-e5e5-44fb-a7e9-130bc4cfcb98"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0aefcf9e-b19c-4760-b542-af9a877649f5",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "20e0c434-62ce-44db-8818-c435e71c78b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7e37c56e-690f-418f-bdf6-4c971e08de01"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3081d6e6-74c7-4063-ac62-054270b1c9b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "d167c236-6c00-4b3d-a3a6-342daf12db7d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8c018714-dd2c-492e-bb71-61b0b370b3ae",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bb737cba-25a3-4a3b-a2f6-6e9831b4e4f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8ae8e7cc-c4f4-4dcf-aad2-d3cbbd38906f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1b35ab93-4b11-42fa-ae04-cbe441b06114",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialStatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9867cca7-0e77-4f44-8789-32b200f57b1c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "88073a7e-cf35-40a6-9460-b6dab015a085",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b7647329-ca08-467e-8f14-fbfbfc66bb91",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "12a2a07c-335f-4a89-9271-9a537a62cfa8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "27470acb-a857-4353-a020-26e1ad6b40c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "bdde5ae3-f35a-4b5e-8bf8-15d5c13577d0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "162b9773-51fe-4c27-addb-78e4c934a716",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "09910645-7ff7-4e74-b0f3-cda26d0df97c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3d1d4dab-4a42-4084-a449-107c8a764e28"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "58d6a911-14a9-4a68-a697-16b568135e9d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a00f9328-d9cd-4406-afbb-217540569d65"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c11d1422-1cdb-4de1-98cf-e1ff1086cf0f",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e3dd7856-9593-482a-b8fd-c482d4bd0d9a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6d80abcf-2940-457a-9330-9a056ac730df"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f487ae17-b5a6-498c-91f9-dd88b18dcacf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "69d9d092-b034-488e-a5b9-7cb71a16a768"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cf1ed5a0-82e2-47f6-8a2a-f588c5548db0",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dfc692cb-8576-45b6-bd75-86e5f64c8fcc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "697a1ffa-1b19-4991-9360-ded0d34c912c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ac4b703b-1509-4203-b5a0-11c24559fb7a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "665f3275-6b88-4bf6-b60f-5e1266a85e11"
                        }
                      }
                    ]
                  },
                  {
                    "id": "24132b89-ac7d-440a-8e7d-7cc05fdae7d0",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f55914a0-b8d9-4745-9004-58fefdecec58",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "89ec9da2-c235-4f87-aebc-a3225d92de26"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "455a9d19-895a-44b2-866c-4110dec63033",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "72bdc0f3-9713-43af-9a21-c0c08bb01a42"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9879123b-3470-4884-bdd7-53343a06d4c5",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f7c44948-2cb7-40d3-8a7b-8f398890ce5d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "00c15e3f-5fd4-44db-a951-c29ebc696ab0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "224c2db4-8ce9-4013-858f-9464df5fe32e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3c7a168e-d399-44b9-8df7-4f69fc0f7b0a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d09ee27e-6d2d-4506-addc-15b653325755",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2666d64d-f933-4cb3-b877-34b57c36ef72",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ca5f2d21-777e-4f45-b32f-e366aa7437af"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d08f65ae-5b92-41e9-9a9d-47be7aef25f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "bd57784e-2d99-482c-873b-f787892f750a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "04065dc1-f5b7-4b44-b3b3-ff2bc89ddcfc",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "70087780-018e-440f-9afb-6d030c459046",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5701470d-6623-4d25-9e3d-759ade6a8a53"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e7fee997-3dca-4baf-aee4-b80d249f2405",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "933de96b-69e7-412f-96be-aca2225a398e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "693fb495-75df-43bc-8692-73b43a0e3496",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "965d7894-56da-4bf9-8413-614766e463f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a316fa41-eec1-47c6-be19-e01c4ae8b166"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c27e8867-6001-4a2a-9dc3-8662f92231cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "eada4995-5906-4c99-92a6-f12b0c8a9e06"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0b8d4bec-534b-491d-8ca6-94fe3a936b7e",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4c36a0ee-e966-4827-8086-06c5a4d3bd92",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a033cae3-a634-4fda-808b-c27758db7b36"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c274b76b-d388-4921-96ae-1d11ad54d0f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "18783a00-bdb3-4efd-b8a8-63b745d432a4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2c6afa8d-64e2-4391-a95e-4498ae31c11c",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "23b95013-5f7b-4d8e-981a-461e16d72ed6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7edc2f86-ead5-45b1-837b-a2edd571df5d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b536b929-682f-4f68-ac6e-0d790c04ffbd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9a9d781a-3cc9-4d80-8a7c-d6d9cf780c4a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eb573d20-72ba-473c-a882-e85a13bc8465",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1521377d-07bf-4537-8ac6-29dbe5d1d925",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d79f32e7-9f83-4e77-b82c-308a68420ce6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "07d7a104-4ae1-45db-bd35-ddc8060a2a14",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9aee068f-2a4f-4c50-bde8-4e2e0a37b90b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "28c6f884-efc7-4608-9e91-6abe12c2f92d",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c657d6b0-a8d4-499e-a294-dd8f9bc2a7fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5198f027-a6fe-4da9-95aa-567029a31bf5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fd2586fa-6a19-496d-bf4f-2e2043b1aa24",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2864788d-9794-4029-ba7b-dd88b2b606f9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "51c58043-197d-4459-9f33-8c025458cc8d",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1f806ce8-2300-4c50-bd24-241780102d57",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "19737d88-876f-4915-8ac1-54a3d422116c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a0bc599e-3d96-49a2-b40f-a9a701552c42",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8fab7ad0-1dfe-45cf-9fe1-0ceb54c48163"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cec8cbab-027d-4803-8b39-44a3e343a9d5",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3f7d9127-180d-41e7-88fd-f005b0cbb6cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "324ee0c2-f387-461d-84b6-f549fc351771"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "994a05cc-5235-4af7-bb8f-4129afcc87ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "359bfc18-8e58-4e10-8ef1-efca8d4642ca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8ba9d034-f9c1-452a-aebb-a5fb1d0f3f36",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "08ccf074-46c9-46f6-9a0e-a46336f61171",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3fc1faaa-3fdc-4fcb-9e95-a6fc9c9fa6de"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2922e833-da19-4d08-9fbf-e02fd4fffefe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8a0cad64-be2e-403e-b9c4-6a8cba25b765"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a3a8adb1-e55f-4360-883a-e8b29ba35376",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f8f8a496-fee6-4a00-a603-5e6594d7575c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e8f71c16-7195-450d-838e-b93e7a5f1a40"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "476af499-4d0b-4966-ac33-c9314bd11846",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "530be032-3e14-4ecd-b23b-51f679fa1808"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1ca19887-35ab-4304-a576-92cbdf88af47",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "447240c5-8cc9-4934-b43b-f53fa0d3c05b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8f0180fd-8553-4b77-b67f-eb371b42b6cb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eb7a9fd1-6df3-4db4-8f53-6b7fc1fe2ce0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9b01511c-bfe1-435d-b544-e2a08cfc44c8"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "d9cea56f-59c0-4429-b40f-126592125080",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "372b4438-5eb8-4b95-bebc-d36ae3e669ff",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "327dc848-a7dc-4bb2-bbaf-9720a0d8c58a",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "2f5a216e-b4f4-4f46-91b0-4c3e62c4e251"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1e3b2504-c6af-47c3-b45b-05a1b447a93f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "c2193c4d-e40d-4586-9b19-e64ccd6c0ae1"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "3062a2e7-6477-40bc-b725-f681b36be971",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "89c6519d-5908-42eb-b161-657baad9b400"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "27fdaaab-4085-44a1-bf95-9c18758fe930",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "4e04ec37-8b8d-4d71-8304-feec029a0dc1"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "ae78eba2-43c3-42b2-bbe8-bb3d5445a92f",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "20f16006-5d98-4434-ad95-514787451130"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "d447feec-2bee-4ecc-a556-7e4f9247bc92",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "a2624a25-7125-4589-bc67-4bfe15cf462d"
            }
          }
        ]
      },
      {
        "id": "1b3c7a08-c37c-4d14-abe7-6cd3029b21a9",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "feda3940-06d4-4405-a6c4-5dd4ac49140c",
            "name": "Negative Testing",
            "item": [
              {
                "id": "0542b39a-dadc-487d-9f5e-c0b375e21ad2",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "895ca148-f71c-44b0-9247-a366ca8a8cdd",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "74d93c10-85c2-4f77-83e6-483db1982820",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "72549ea4-90da-4a61-b3f0-a1dade396d55"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8c59f4f7-81c1-44f1-81ad-cdf75f90391f",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9c3e17dd-6798-40c8-a86e-7c7767aaa6f4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "00a9ca7c-2b84-4adb-a2ee-6a6dc0a6c899"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d523386e-f279-43f9-9d7d-aa8abffc7635",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a5ab294d-ba76-4e47-919e-530b585ea9c8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "847e5304-34a2-4d78-bb9e-58ab3588d683"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2b708afa-82f8-446f-b79b-8702ab19d063",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c90fa5d2-0f11-4a8b-b5f9-c0a848d08873",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4c4daf70-2d90-4a8c-a458-88e4e384c4c8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ee94d0dd-981b-4aa5-aef6-d6065fbf31ba",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8758a04b-e23c-405f-96f3-b4ed557137c8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9da84ae6-3623-4cdb-81ea-f310d68ec45a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "71fc11a9-f226-4a3a-a5f4-6a5b09e6dbc8",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1d8f45e6-2969-40fb-b0b8-149c6847a3c4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "331f0840-77ed-4630-bf42-a4be3d478635"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c08064d2-4d50-4695-9364-2516cfa51099",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "883aacd4-3dc8-440b-827f-1a2547e02ff6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fa64d07b-6d1e-4819-a394-6bd3d1e6a49d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5e89f01a-a384-4725-8b3a-ff22e92fc7fc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e120fcc1-dfdb-4d10-b936-0e3ef4184824"
                        }
                      }
                    ]
                  },
                  {
                    "id": "84505c50-ceb1-4837-a62a-b982f35c36af",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "56b27d8f-4b87-4d05-b9d9-ecc40fb418a5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bc6f2c5a-3169-4ade-86e3-50891593a1b0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "675fad3a-77b3-494b-9eea-4bfbd340f4a3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6845a66f-5ee5-4c8d-a073-3478f95230f8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ffc79a23-b1d5-4d7d-8bd9-f7f6bde481f9",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2b6fe14b-c301-4156-b228-7c89fd577ee9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8011c32d-ed65-485a-a530-ae8c4c507485"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1cadfc84-9796-4c42-bb3b-781c8c79248e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8c2eb44a-b7e7-4947-8206-56a109bd085d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "741c39af-2441-4afa-8f22-15c718bf52dc",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3a748a95-e5ca-4d6b-ba1c-4dca3384d7b9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c7a7e13b-d962-4b4f-8474-8da3a43e59af"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e2218018-6d6c-4cd7-a32c-41067ddaab94",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "53ce856e-966b-418e-b3d3-afec98e9239e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3a95b501-8b0b-4210-92f1-0142a3afe37f",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "77a7fffc-e774-454e-9d05-eacdd5a760df",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3a47f6db-2bfc-4134-b958-a2f442904618"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c2e0298b-abba-4503-bfe8-356cb2e0ce6e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f60e5d1c-b09a-4113-bfa0-64e0afce9e00"
                        }
                      }
                    ]
                  },
                  {
                    "id": "37832069-0b6c-45de-9627-7ab3dda07517",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "908dc27e-5d58-4ff6-8171-39af97a25b14",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "de3d302f-dc38-42ea-99b1-85e0fc789710"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2a33a6f6-795f-4ca0-903d-da8ed1ad5af3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7622171a-5adf-43b0-b6c2-4a20112acd9a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8daa4cd4-7dde-4c22-8ead-28c64db98dfa",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "47ae0eb6-2052-4010-89ae-34f4e05a905a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c4308145-28e0-4131-82a6-dda2eeed03ad"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9ae76825-a2e1-4114-b92e-5ab48e478b04",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d617099b-1332-4be0-93c2-1c03a2fff225"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2480a785-6bce-4d91-95c3-a1e9755cbfb7",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "deeb9aaa-6244-441a-a195-157ea80dc1bf",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3e483997-6007-4be9-9fbc-017e79617b35"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "304c1179-48a5-4568-9d87-d78be9a916f2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f8a7f2c9-8657-48dc-9d9f-9a23be33534a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bbd5c1ef-ea34-45c0-8b4f-95fcd92293c6",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "93d5ffc9-bb71-4316-b12d-b8be25c2be9b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d2b5f659-4aee-4f18-986d-c658492aa0b4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "70565b8c-7dbb-438a-874a-de1e23927e4a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c73d05ac-7137-4589-b9db-78a73fd5647c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c5be107a-dd46-421c-9eac-3df60d0845ae",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d6405fad-53f1-47dc-9875-e8eb695aee4f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "65676781-cf56-4419-b44f-4969760ed1ea"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e9d457f4-9391-4295-b83f-b0b81ff303c7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a9d4efdf-0798-41af-aabc-df2a094bdd23"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fc103227-d88d-4b76-a8fb-7487c023c6d5",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f0eafb75-d0ab-424d-b604-532bd32c3a4f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b483ff27-bce8-4048-a8a1-96989bb5580a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f369414f-6753-4e0c-9323-4a90a583bd8f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "381a89db-852d-4162-8ab3-90d7e55ca4fb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fd41ec18-6d82-40c4-a3a4-d06477c2c6fc",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "62c812b6-d97d-4445-a568-c9b5fa04828d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bdbbd093-e699-4cc3-839c-7834780b5195"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "96e1580e-9bb7-4927-862d-dc1f7e407507",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bda64825-d44d-47ba-bb63-3d067a34bb33"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3488b1ad-be8c-48a4-8089-a8357cb46f0d",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e609eb4b-d61e-40e4-bf83-d2042cc9e2e3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2ca65639-9dc6-4e58-91da-59a1d4692e85"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "861a604c-2057-4ac8-ac88-9d118158e1eb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b536d79f-1bb3-46a9-a2a9-70328431d01a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "09ec4b63-1bde-4f45-a981-2c0b07b6b3c7",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a328e4bc-05b1-40b1-b670-6a6d818b3487",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cd10fc89-14a4-4dff-ac32-caf20e3a3971"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "52a0d888-50dd-4404-b95e-72d14baea6f9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3f94de58-4072-4c22-abde-3a3f052c09b4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "892e26d0-5205-4128-adef-56e0a85ebce8",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1fedecdb-be03-43d1-894d-2bea1f32829f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b348d0fb-5d80-49e4-ade8-6715e0c5d5ae"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6c038e53-78fe-45e5-8230-ec4d0f807c8d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b9851f68-292f-499f-a304-45c7125541c9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cfa51362-f864-4440-b8dc-d2d091d1c51f",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2ff8cdeb-8e0a-4065-ad85-cd6a191d7190",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "90e53332-c92d-4b0e-a50d-618ebb6299e7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8d015b8e-f309-4ed8-8486-99b877fcb196",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1bccd0d9-2934-4378-8dd8-7709a7a7b9dd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e495832e-bcaa-4b87-bad6-8cc679a8b2f7",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fd8f3e52-05af-42a9-80bf-cc2423689981",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7a1fdd8e-1df1-4213-93d7-162a1c4555a5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bf796829-0f9e-465e-8fac-cfd6e5bc2699",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "00bcfaab-4a99-426f-9760-df999b450ee4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "350ebf0a-fda1-47fb-bcb0-b879b4973a1d",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3862ca67-029b-4ed2-a6d5-f3212439be4c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "97f24f52-5934-4217-979b-d2d4462f7553"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "84caf993-c609-4941-bf95-40cf83e81d4a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5d0bd003-91a6-4b7a-b34f-59588302fb01"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1f53a487-50ad-4060-89dd-30da9c795e23",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b2cd7587-6501-44ec-90ed-86bc0b90da76",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "741fbe16-0575-4a2e-9c10-41c19bd827f6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a32221f4-36af-4ae8-ba33-4009925335b0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "173a69a6-ad41-4b23-84d6-c7c4e1ab7c86"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b827af1f-ebb7-4995-9b3c-320df002c39a",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "57b4ad28-7ecc-4da4-b7f3-1351cd8c372e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b01afdb5-6d7e-4805-8307-1e0952495b78"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6dae312e-4cfe-47bf-83c6-8aacabe4af99",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2efa1233-80da-4880-9f8c-108f04fb14d2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d0303303-f893-4938-bdd8-a994a19b9448",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f01f4a18-125e-4fd6-ab9c-d4e2b208056b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7a975858-c3f2-47ac-a909-6eaada7f9716"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b3924f53-e13a-42be-9d57-89e11c51ad90",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "742c023d-d315-4e0b-a2f6-0b694f48afb5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f4c3512d-f7e1-483a-a86f-41e95f35ea81",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9ba9cf47-04d9-41f5-a2d9-2f5fd8a486a0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f70e6269-1d96-4318-b473-749c78dbcc85"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b5b161b5-466f-492c-8571-94784998862a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1fd7a53e-b49c-4dde-9537-9c37a519a130"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f5065c8b-aef5-4ae3-97ba-3c6be03ea50b",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dd1d073b-fb50-4a49-80ff-570b0c950d07",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "56023ae7-bd29-47ed-9b66-60d5475b99fe"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e950ca37-011b-41fb-87cb-1ceb0a94bd10",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "068991bc-a230-4211-9620-0d4e254afcc4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4eed88ff-1d50-493a-b63c-404e20ac9b94",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "90477485-c97e-42c0-86fb-e4d86d817ad1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d87db61d-4c43-4e13-a1f6-20b176737c6e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7284faaa-b7c2-4194-9ce1-56c4964fc696",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3fb4e0c7-6155-4b01-ad77-8ade0426d0eb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "59fff4cb-584e-48df-999e-c8d06591d21a",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "61b9001d-aeed-4558-ae51-903fe1c59b46",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "dab7dd7c-a437-4809-92f3-af0bff944008"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6f65c27a-bb4f-4054-9d0f-23e5b8087f04",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c6f9bf88-662c-4241-9c87-1fe6590ca502"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cf336b83-9df9-4d2f-850b-52d9a334b723",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "56c22521-8c6b-4bbf-8480-ab353e9a2c86",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "99df2124-fab3-4d41-90cd-baf1dd5634c1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a42490d4-94da-474c-8f24-b02041cae313",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2df74329-fbbc-4adb-9872-a4f2ff6e2410"
                        }
                      }
                    ]
                  },
                  {
                    "id": "630a0e7b-ceb3-48d6-9a81-666b1643b4ff",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8ca2df30-7ad8-4131-bd22-d26a72e2d5da",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "49e14806-58ee-49ba-90cb-f5649a9ef941"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "812b334e-5e81-45e2-9765-2e6cd264b262",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "79b76b9a-fd97-4c84-bb49-1d73aec15663"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bfc8ec56-c0e0-47b2-8f9c-79597b6ad20a",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bb97e4fb-2610-4cdd-b82d-930b22f28158",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c73b2708-c096-42b7-b153-3fd7d1a0be7b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b72718dd-8071-4925-98b9-86aa03d4fb87",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d4e05a2b-3e2d-45e2-b639-a79a32230bc7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4a9279ec-1aa2-4144-ab91-2abe4304e2da",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "73dbee0d-f72c-4e6b-a0a8-31bd152b4c21",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "47e2f2ee-c98c-45ae-9704-9ff45839d2a1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4acd04c6-ecb2-4a16-8d29-59d26fdc734c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "67fc0bca-5abe-4885-ba8d-4897a8880c17"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1de35ef0-3c9c-4120-9360-f46118ed4153",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "07aa512b-694a-486e-bca3-59b4d00ae0ce",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "40630236-ff4f-4582-b061-413accd4832f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9b391404-2710-4a20-ab0c-107d1d5a03b0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d3e61afc-135b-4b42-bba5-66cfb52a8307"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fcbd17a8-8f40-4d7a-acf3-d1dff9194c5c",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2c6234bf-cc30-4815-97dd-fa488d3ca108",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "12032eb0-9e7b-4f20-a05b-5135169727b5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3d7b4cc2-261c-4188-9dcc-708b4474ad96",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "de5e1f4f-f968-43ad-b81b-736599463d6d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "082be069-525d-41d4-96f5-5838effb37f6",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "823533af-78be-4a0f-a2e1-4fca5c64f294",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "099a8436-f72f-4652-8553-635c74959542"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "71f266e9-ba8e-4a8d-a5e2-71371e498aef",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e44e0544-303b-477e-93bb-71a1667913b8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d4b18b3d-87ee-44ce-9b0b-5bb77f322d35",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9c730cc9-85b9-43c5-923e-7b37ca74a0dc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "195a5b3c-3727-435c-858d-cf8d7dd6ec1f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "aba5236c-0499-41b2-b6c7-935550adf55b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "22170708-9269-45a0-9f76-db7aeabac4a9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bbbce630-2cec-46c2-ae1e-3944e8a309cb",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "652695fb-96e8-4822-8c53-d872f133e119",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e13d2170-b9b2-4bf2-b97c-dd71da7c7a07"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f0160e1a-96b0-4526-a96a-10af5a150acd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b48b3aab-d278-499c-be2d-960609bb9005"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5a7ae750-2ecd-4b0a-86e7-ce2a3929c8d9",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e6d44204-a707-46d5-ab73-e5668c1a52f2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8adaa11f-2bbe-4558-a8db-90b1e7058e15"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "27cb532f-d4fe-44fa-9e60-115d66b02b59",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "37d6583b-e06c-4c67-bac3-ac8ad4f411b9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fb7f91c7-39ed-4c4e-8f69-525059595dca",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "57a2fc41-07f9-4560-a2bb-21cac729ee84",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8f2ed75c-5415-4d2b-ab7c-eafee2c6430c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c4d2d0e2-cd39-4573-b53e-ae8f3e7ed4fa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "92b27ced-9be7-45ae-b66e-c73c2881b37c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f2ff189f-1b41-4dde-90bb-a10e12157a0a",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8926f15e-e3bd-4c65-bbb1-34f72b492f64",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f8a6b6a2-b76d-4261-9152-e37ac6a842ab"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "adaa2be3-700c-4566-8a5f-b73edcfe1c13",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c78767ec-3a25-4785-b3dc-995ccbb67ffa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5fbbb751-ca50-4657-a4f4-add637b8d6c8",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "19421575-f219-46f7-9ad3-d6387814243f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a2003f0b-c1ea-45d7-a76d-358ea851c080"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c72a3ca5-aa72-4e87-9f7d-4ab5edc63dea",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f8426da9-2063-437a-90ba-f9e267d6325e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "66b73b51-a990-4391-a20e-88d1a24ed846",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f0875161-758c-42d7-89a6-ca081f38fda8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "decaa569-15cf-489f-aba9-fe6d2e436b81"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "883d2bbb-2c19-4d3c-b71b-600d7d6bca76",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ea84f21c-58a1-49ba-8e19-f417f645e037"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1e588ca7-1d0a-4c95-b4a9-a8033aeb4861",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "81eb3167-37c5-4d9e-ae4c-9d54a8083f2f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "55bb791c-9e86-4202-b22a-460808b1abbc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0c8a444f-a80f-429a-b6d6-568ad3e469ee",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "38642989-2253-41db-94b3-7a033db85d48"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5f92552e-0e49-42e3-a6f7-533918e02b78",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2f7bed6e-7842-4c19-849d-0a435f8f83dc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "db8e4d41-49dd-4d40-b6a9-25aad973fb63"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "424e069b-1c9e-45cb-bb4f-d9ad5dcac0fe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bf3fd5a0-5ed4-4134-9b2f-50f861b11010"
                        }
                      }
                    ]
                  },
                  {
                    "id": "25f27751-f268-4bf4-93be-d3c127107e4c",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2690cd6d-4510-44a1-aaea-2841e77edc5b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0c0913e9-52fb-4687-b115-23adf45394fd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d6789847-1041-4740-8e25-8f4435e3495f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "864f63b3-47b1-46a2-8d91-c18769ba7afb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3977d973-3395-45ed-8602-e10920a97c51",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "42e5196b-5958-4975-947d-bb1019b4c5f4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "563b001c-09eb-409e-965e-e603f634b7d6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a4546d12-5e55-481b-a1c5-7b90f880c649",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e7104515-dc80-4717-a479-313f6a8b2809"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cceca3a3-7cba-44ba-abd5-0c35a6e522ab",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "81f091b2-c1ea-47f5-bac9-a3130152e704",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c1ec5894-d3a2-4060-b569-20ebfd29d9c7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2df83cca-244c-4279-84d1-87e43a78726b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fbffc1c6-75a5-4361-8d39-a1a2c26010a4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "232ac1c9-2dfb-4bf9-be76-39a07ee6324b",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e5f9deb0-a414-4001-85ed-c5dd3d496df3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a076afd5-adad-4578-8b3f-f5f7386ddcc2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0a51045d-74c0-4453-b207-19f30635edb8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "be43e12f-6351-469b-ae0b-c63c938d800a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0716b6ca-93cf-4aa3-99ec-8cb97486b508",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e69bd7ef-d175-42e6-aca9-321c0edb25db",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c84a49ad-4b50-49d5-8178-0a603898b336"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b3a6e19f-ac26-4064-b089-157483a23304",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a129ac5a-13c8-4afd-a540-d4d51ebcab91"
                        }
                      }
                    ]
                  },
                  {
                    "id": "667c5338-f4cd-4f06-ae8a-cc09f9314cff",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f745f2df-d24c-4ff8-99bf-02172f34edfb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "51bce8f0-3426-433a-83b9-c234129ed3a3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7251ba39-85c5-4657-b5a4-9453824fe462",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8ecbc9d5-76c1-4731-8cce-a4cb96f3e4ca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "68fd6165-068d-4d65-929a-2c0db920f913",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "68d371aa-3171-4d9d-b12c-57ec8dabbde5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "25591bb9-7d24-421b-95f5-38b0aa776254"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6329f249-0fee-4d75-9093-075ac923618a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ccacf207-6363-48af-9ec9-ebab44aa34bd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9d54b717-5905-4bcd-9720-3d1bbf004ac3",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "145d7622-f781-4137-8451-fa01f6e8ddbb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "21ed6f12-cb53-498b-a709-794050de77b4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b2a59684-5127-4a14-ad05-6d3eaa77ee9b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b4ffb4d8-406d-40c0-b34c-9738df8ec47f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c328930c-7132-446d-8d06-87bdc97307d7",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3bfa364d-ab2a-4a8b-a879-49711ddfed1f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b28434f8-bb82-4189-a61f-3df30219b1d7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0b933dad-5538-4902-8d87-2dae6f43812e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "98858406-1c8b-4e12-bc22-a8bd7eb8abda"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f450408d-beb8-4398-ac8b-87102c1a4ea7",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e5865e8b-0137-4c1f-9aff-42821d08507b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "459a392f-def7-497f-988c-897478c2072b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9972e980-c225-4771-9f2d-a280616f7792",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5c1f2d86-8e93-4fa7-a184-4b0508280031"
                        }
                      }
                    ]
                  },
                  {
                    "id": "205031f9-f8f3-4b4d-be40-0e8b62ec8f7f",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b95fb6d0-ec11-4be0-855d-be11d096fd1c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "409fbb07-fb36-4a6b-b67a-d30ca5ffb55d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d80062fc-3700-4595-b161-a126081cbcbe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "38b7b3bd-2442-41d7-8d7c-742a41d86a52"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3504630a-7082-4399-a98c-1d0fcd34004b",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6b75f9ef-4e26-4878-8270-2c4d48dd1bf0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7feb7414-288e-475f-b27d-dbb2ccc58f08"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "af163e1d-0c17-4ecc-8758-80270de1f9ed",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "430b401a-f542-4a16-84b5-9316385ee51b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6e4c8bb3-4957-4048-b00c-8538552e13f0",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "056eb30c-ab0c-4e55-9903-c58602209768",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d889dbb3-a23f-4a26-a79b-b66dba069d47"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "40cfb5f2-48a2-4bd2-a968-56d4caca7585",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b9f24e56-82e8-4f51-8fd4-31b48257e931"
                        }
                      }
                    ]
                  },
                  {
                    "id": "236d89f4-5aab-4e4e-8a3f-2c3aa2c208b8",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9ce403c2-9334-46d1-847f-113c9a897b94",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "15f2a3be-bf42-49d9-bd54-dbceef72d9d7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5c7fac6e-ce98-4da4-8ed9-cb9c7687d9f7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aeb991c6-795a-4d02-9334-85e2b362d96f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1201f267-8ac0-42fb-b030-f3e36320c7ab",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9736f118-11d4-4139-88dc-74a716f68392",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8d312e14-9e88-449e-b3af-cc03d5cf2662"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dc8fc5d4-9dbb-4136-9ea3-097de0781abf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7e654d4c-ecff-4244-8543-4a422c188ed0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "da8855ee-4665-4e57-89ad-575da30b6881",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a5d41622-7d72-4692-a09b-7a6246d23987",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e2aff408-c2d4-4404-a3b7-4bb097a8ddbb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d8fd5f4c-1982-466a-82f5-781115ea0e4f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "790e88af-1d03-4b3e-be4a-9885fb7c83bd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1ee9d086-bdba-473e-8122-be7daa35101a",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e59e783b-dbc9-41d2-9fee-55b0b38b5f8b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bc132976-bdd6-4a72-9ceb-d66c4cf4f305"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7af31d7a-7a84-40ec-b1da-78769e85681b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6b6fec62-8066-4f75-8d1d-cb6caf48f453"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8e7447b6-63b5-49db-8486-8abeb299a7aa",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "df713987-ecc5-4a62-860a-ed50ccbda147",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2dbed22e-574f-4046-aee8-1ac0d76e4b0f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "12f3ee20-605a-4697-a8a3-fd27715bee8c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ffd084ea-2624-49fa-b30f-aa74e958d74d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "206a9ecf-d479-488d-8d4f-9922b22b44f1",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2fbd9dfe-c047-44e6-be8b-efaf7cf589b1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d41055a6-c321-4843-81e4-c3778851585a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "13940791-e341-43b0-bc02-c1455b3d4edd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "80ce4cf2-b4d6-4ec0-b99d-5e20972dcf24"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ac4677f4-d24a-4e14-9461-10548b74ebc0",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "29b930a1-7fe3-41ee-aa09-11b544227d0d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "84703445-fcd5-48c4-82b1-29487aed908e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "50957df1-41df-450e-89fb-e2d73d2610db",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9838c23e-fc85-4cc1-8ddd-279f699ac4c0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6e4b396c-029c-4f1f-9119-1f3751595002",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "50c08e62-edad-4575-a56c-d339aa1496be",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d6b107c5-f0e2-4e80-9c51-0bf6df2321ee"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "17096525-bade-420a-a9bd-15c971b11938",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2ba12c53-5e44-46d0-ba7a-c29b175cc2b2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "164a2c39-a820-4d33-b30b-96146aa525b2",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bd525ff5-b83d-40e6-acb1-ccf1b1a1da6d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6ee787e0-af7f-4143-a7fc-6eac6605f699"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7729a00a-650e-474c-a593-7000a4b834fb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5d2b26ec-d113-495d-9912-3e8ec2b984d1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "72cd6d0b-7ef7-415c-899c-c417f384965e",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "daaed2f5-915d-4023-bc5f-3a637ca215e7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "62fee890-8fa1-4c40-b06c-9ce844890e49"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6af764ea-8871-4690-876a-aeee703112cb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5cec7388-16a2-4c78-a4e8-4539c1bd598f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "31c992fc-db3f-4b1c-bf0d-d374d5e7bbbb",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d6235954-3665-4cc5-82c9-1bffda453584",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b0e4badb-8dd7-422c-a1fe-eeff3e2f527e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fd2b0e39-0d12-4bcf-b86a-efdc3d7736b9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "64ae7e68-e930-418a-862c-14ea2cf6304c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "66b615d9-9789-4488-a92f-e66bf33457b0",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4c5f6c27-00b6-409b-9151-37cfc12664d3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a1ea1bd0-6ef9-4f6e-b5a3-cf131517359c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3dd45b66-318c-42ed-a320-baf036c599ed",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "73147f16-8313-4bc9-aaf8-28d3b47587c8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c545486e-abcf-4d5d-ae2a-c952b868dcac",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dba368b1-c22f-4a0f-bc21-0d92e5bece9c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d74edf4c-4fcb-4eb2-a6cd-6599e77592c9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1a32184b-bcf1-457b-bad0-13e6995c0bc6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6257dd31-ba12-405e-b419-7c40c6fb07c2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fa8cedbc-6a68-4060-b864-25b928dc3583",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5a96f794-f49f-499e-a57c-73d791818b15",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7026cb22-7559-47d0-ba62-08d1b8cd1742"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c02123fc-2496-423e-8668-f92c7dd2d7c5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "89d7879d-dea9-4ecd-9f59-0fe5df3fb5f3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "004ef15f-87d3-484b-bb88-d9d6beb2a84c",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b5152324-3a94-4e49-bc24-debdc8adc879",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0238d6a7-3e51-45ab-92aa-980df64221de"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "34832b0a-c32d-4beb-8e7a-9e0df20d9b8c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "461271af-997a-4d9c-a71e-9f1b0478d1a2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "35b24db6-20b6-495c-8399-4bf55da8279f",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cf0dd759-4ce2-4dd5-8f3a-7b2a8c9d51bb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c07986c7-8e08-4296-98f0-a94639ee7cb2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a84b3601-37d0-4662-903c-407575379bb6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0315c3bd-6f10-4c0a-8c02-b74f4e8647af"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a96f7a8c-bb9b-4d18-bbc3-6448dfc782bb",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "376b6c8a-be4d-4f9b-bf1c-78ed3c95e48e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "75323240-2a16-4ece-9798-9ff8f3e8ac7c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4715f5fe-f722-4496-94f9-649e7bd7f047",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e4f3e5ae-199f-41b1-bd0b-c26b56f083d8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f6c092e2-e1fb-4336-bf33-c58439e7606a",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f55f4cd5-2386-46ac-af38-7f122bf698fc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9ffc7f94-4b57-44a0-8cb3-077b5f7fc33e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "df70bf5c-dfb3-4f89-a578-c96ccd9d96de",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a647f069-fe51-46ba-9bc9-40a9579d05e7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "58e29847-0093-40d4-b747-3588b87f830c",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2e92f003-a0ae-4463-aeb5-c93e3a45a76c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ba3d7606-2652-4717-9326-3e2b5293aea4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e5d47f0-a521-49e6-8ea0-4f98c6dd343c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2dc8b35a-a838-453b-affb-27cbbc400677"
                        }
                      }
                    ]
                  },
                  {
                    "id": "68f2adae-f3d9-4f00-9ec9-5dccfe8062f0",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "088d16c3-2836-4b7c-a80d-17283a9964c5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1d7e756c-5a39-498e-a398-a9e0c5db4708"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "60dc8dc3-d9af-4ca5-99fb-ac490f388b81",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6f2f0977-e414-4fa5-a34e-5db3fe39ea8b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d2a2b299-e9ef-4eb1-b695-de6e6dc222e4",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5d53ef0b-b8e9-4152-92fb-1c7c3af78ce9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e1c333ef-77b2-4979-bd7a-077c4b8dab8a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "74c417a5-d85d-4bed-b356-2babce351b0b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cb1d0808-9af8-435c-ba38-3d7ab18104c1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "10f41379-5388-42b1-b47d-c3caa64daa0e",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4a643600-1bfe-4de2-af46-92c8d7a9f24f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8a6be701-3863-4aee-a6f7-2b3f256b96f7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6af9fc1c-ee3a-4323-86c2-a8068b1e6f3e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "07ae4557-d6a4-4342-9b82-ca59efe0007e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "13ba4f37-c080-45f8-86db-af78cb1cf4ac",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4541bb2a-0553-431e-95dd-f693bd80fce2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "33fcb045-37e3-42d1-8fd8-f716fa46e1ab"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "31110582-d67f-49f8-931f-95d6485827d2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "27779e07-fe9b-4252-9fc6-29e434c33b89"
                        }
                      }
                    ]
                  },
                  {
                    "id": "87e440e2-9beb-4af5-8e09-94615ffa5d34",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9e55b070-6d5c-48b1-bbc2-8a87e7220099",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1ff44d39-e885-4579-b85b-891f46bd183d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c2aab2a3-1012-4c28-9c1c-2ec2c1cbce67",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "018ae2ab-7107-49e7-a5e6-aadfa1b9d0bb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1d53f036-b260-499b-9470-5fa746642134",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b481f90b-9d4e-493c-b157-21f28ed4d316",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9793e135-51de-416e-9358-255e1a3c4d98"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3d3f61f7-7194-4951-8a45-6bb62acc20f9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c9f53c10-0486-4df1-846e-324eeb83b72c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bc0fa857-c6d7-497f-99b5-b8a7ba4ea013",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "50ac0e44-54f3-481e-a30f-ff8202765b0e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e63f5191-b1d4-47e1-836f-9aaeac954377"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9276be6f-fe89-453e-aeda-700525206137",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "766fcd33-32a5-4480-86d3-c6aaab37559d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cc2cd8d0-4e5b-4e7b-a734-87060bd89f64",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6f0b4bc1-6a86-4ab9-be5e-d5a51590d4c3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "991553cf-5ff0-4d56-9fb4-1af2e39acc16"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "406d2db7-2032-4eb0-9b0b-24132fd32dac",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3a0d2bf4-cd82-4c70-8322-ee5d301ffb84"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cd67f716-6c42-468c-88c6-118bf29cbe46",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eb9a2cae-283a-4e3f-b6a6-331190f9e175",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bfdb0cb7-7fa3-4ecd-bcd8-0ff764306f3d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0719eeae-50ec-494f-abf6-c71894e915a1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "593d9355-caaf-48f5-af62-9d3155c106e0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a425b4ce-c0ef-408b-86e2-60e56ae6a914",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f2a8e21c-4c09-4585-82ef-0bf3bf856d03",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "efb6499f-be6d-4fda-8d05-b67bae63fddb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "568f4524-bac5-4ec7-a6b0-f596a3ff6f2c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e608c5c3-624c-4abd-9c65-1bb69b76a1a5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a8f66c2d-06f5-4978-a481-38de436fdcf8",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1766756b-e2d5-4509-8772-c8b9161b2820",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "120162bc-5901-4c97-918e-676d38171b85"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "182a1afd-c34b-4d9e-8dd4-7a3f6d06bdb1",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4ec54654-79fc-4f03-bff6-b13d655325d2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bedcbda6-96c0-4a57-8c28-500fbb0eba5d",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "39f1ad77-5522-423e-a8d3-2526d68b341e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6a74cf23-87ff-4702-871b-bbc0c109f0b4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "30ecbf28-f614-4022-b5d8-ba26cb5a10d4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "18150f48-32f1-4b2e-a3d7-4047c36e9ce7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "71f93a5e-5587-4b5a-a723-4a770b71085d",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1f3bcfdd-b093-4e71-b93b-2f124a62100a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "33d589b6-f3d1-4858-8b76-8d92cba5d8fb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b3ecc29-8156-4e79-939b-ca2e8e8aae4e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b1817456-eb7c-4feb-91d6-aa399fa12633"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7fa4e4c8-68a7-409d-9f0d-29c145e24f26",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a4cb4190-c206-4517-a40a-b90e0ddedb90",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4a5de1f3-16a0-4b75-9ebe-db60ee7aacbf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e4b84ba3-ede0-4bef-a7b6-7e595fc0647c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c1b700c4-7e91-4a6a-b91a-59aed31cc709"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bc34a9d5-63ed-414e-a562-e1086fee904e",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c6779fe5-374e-430e-b22e-e66c3e0570d6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d16ef1b0-2aab-4015-8eda-05f5996a003f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4e01a1ac-6706-4837-b861-5e4860a773f8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5c894630-86f7-43d6-90cd-4e25f76d937a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6ac9d568-ba5a-4c0d-a1a2-3129dc194b84",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e097d1d4-cc86-4175-b17f-634a3ac11f76",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "491b7473-b76c-4880-a2dc-2bf4d4f8108e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dc6d9e42-01b4-4d8a-ae0a-e0686ecd0b10",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a5064d82-60ad-4cfa-a429-2f7250594024"
                        }
                      }
                    ]
                  },
                  {
                    "id": "578004ce-7654-4986-adc0-f019f8ad585d",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1c18bba3-754d-461b-9e75-29bf42f1a7d8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ef3a3718-f2ab-40dd-8640-9941a3fe46b7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "de2b6713-e5c3-49b9-9199-0d2c2e99ec46",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "31773f42-d8de-4305-9d56-20fb65b4dfc9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "961665d1-6972-4ff6-8ae4-491e3d093733",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e9bc005f-21a0-4606-bd51-a79377efb46f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d334ad69-a029-4072-9a32-e61996b49fb3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "99928312-9a4a-4eef-857c-55a0b5d9e4c7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3a0f6041-0730-49db-a691-bdaf12f2ae1b"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "8acc9187-0cca-43a5-b88c-bcd97345fa5b",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "3beaba52-fd36-4daf-92d0-2e1cd5f7671e"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "4eb003e1-46e7-4580-b153-655c4c76ef7f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "45af238a-0196-4254-a090-b64355646452"
                    }
                  }
                ]
              },
              {
                "id": "352f05c2-4ddd-4431-882c-9e9d4dfda0f3",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "55d0d2ee-78e4-4d78-8117-871901f42241",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bb6ffc87-0632-4b35-9038-5f72e6da3694",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "81d5e755-6c5e-4690-98e6-c46aaf779200"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "33303f6c-85fc-4cfe-8a6d-6e2336ea33d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "cebef07b-51ab-40a8-b39c-ca1d1b7a2db8"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "e0b2bea5-3ab9-42f2-8034-acd9d6ece108",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "37399b01-34bb-4b84-9a4a-471dd469c1c3"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "50372c72-4c80-4672-a437-c1408fd659f4",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "cbf85a22-4b46-4422-a349-7b051a9b636e"
                    }
                  }
                ]
              },
              {
                "id": "5dd8ee87-a99a-43a2-b43b-0f3b5118dbcc",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "a6e32393-d281-4178-af2c-e27c575d867c",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1f99ac57-b334-48ea-a0f7-213729ba4050",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "714765b7-d3c7-489b-8443-534511f1dd8e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f78e00a6-c786-48ef-abc4-a7f1053b8408",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "15babb5d-5eee-4e96-a1da-49bf953da255"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "43cf361c-e70d-4a4c-b0f1-2b23e365179b",
            "name": "Positive Testing",
            "item": [
              {
                "id": "5ac09557-5d86-4026-b3fe-87f4315e4886",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "01416191-9758-4138-8698-b27b2cec1a5f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "161996f0-fb2e-48c4-b5e0-66a6c8d70e95"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "f3508545-fe4d-44f8-a24e-58c50027729f",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "2f6671a5-51c1-4966-8c57-fcd04235ed3b"
                    }
                  }
                ]
              },
              {
                "id": "136a0557-8a94-47e4-98fe-00e620481bcf",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "719c888a-102f-46d9-97a7-6d0e52ad091a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "bdad6a6f-cacf-40b7-89f1-68a2fc94ca1d"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "3e5d3d7e-469e-477b-b86b-00bdf935871c",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "a1c41c51-21ce-4303-9620-4d62264b9cb9"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "edfb01cd-720d-49fd-896a-ed29b17c53c3",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "dda9c8e8-35d2-4d4a-819b-f51b1c3c8da2"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "e06827ae-5977-4c9c-bdcb-808add4f8348",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "3d6f61c6-a3a8-41f1-9906-089c81d180c4"
            }
          }
        ]
      },
      {
        "id": "03943a81-e993-4d93-8b8f-eec277c9a458",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "bc4fcbdb-2cc9-4bfd-af8c-40bfc91db764",
            "name": "Negative Testing",
            "item": [
              {
                "id": "508df89e-9f80-4b11-996d-8500199bd696",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "df6925d1-493c-463a-91d2-3dd4bb91ad11",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b25d8fed-2327-438c-b0cd-d3c54b0b94e5",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "766710b3-20c7-4f89-b5ff-051a19c65a13"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1896c8ad-ce8d-4404-91d2-ec260d95c2e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "a4127292-fb8d-4cdd-adc4-4585ad8d67db"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "cc99be0c-e307-4dfc-8418-ddcfa1461353",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "bac1f169-0171-43e9-ade8-23f55ce538c1"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "f7b8f14e-f519-4054-a447-2303a3d0cd1e",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "6aae9c91-8e8a-48a1-baab-0b47a300e9b1"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "8e005102-a857-4df9-a830-d38857a36b17",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "df70ee1b-d642-41e0-9dff-ef0dfec09536"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "7f1e8385-273c-4286-a3b5-9d328d6e6233",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "7fe7ed69-36e9-495c-8b9d-adc7df7eee6e"
            }
          }
        ]
      },
      {
        "id": "2ac20841-04dd-4382-a1de-13b11108f8f8",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "ae9ca22d-55ba-42a5-9c62-489d04f18bdf",
            "name": "Negative Testing",
            "item": [
              {
                "id": "5a4938d2-2e97-43d7-afcc-6e4bf162d6bf",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "4d94ca1a-9ee9-4a4a-8275-b5a17e2a8a1a",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a75b552e-e6a5-4eae-9ce0-18a944837809",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "99a19058-b506-4667-af41-245c4c7bf225"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8aa8f9d5-3a73-4e1e-a3a2-d26b7dd779c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "d8786872-280a-4806-b9be-a8b503ea8851"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "f865186f-71e7-4bab-99be-f6ae910ef452",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "22fa9a6d-7095-4440-8c2b-8b3477217071"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "079d49ac-b31f-4269-aaeb-5c75360c0cfe",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "8bcce27a-8200-4e5c-bb0b-8aa3d663a0c4"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "3ea75945-7082-42d5-8cb9-3343db111846",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "6d2356fd-5d73-4461-8603-87e191b32906"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "35dd9ccb-f336-4f11-8a29-8ee8f34bf799",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "d8087896-0e71-4129-9647-2704235ce052"
            }
          }
        ]
      },
      {
        "id": "b2b6e883-71a6-4bc2-9ceb-57277d04f063",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "a4569fe7-e49e-4370-9e1f-93c9783d5a08",
            "name": "Negative Testing",
            "item": [
              {
                "id": "25517520-2037-4b7a-8e37-5c5ac399b049",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "e039c2c7-6e59-4f40-93f8-2fcd31236563",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d139bb29-d910-472a-80ef-09feabffd38c",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "4d033827-937d-44f5-a8ed-b41c83a02827"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b38a6671-cd30-4fb4-a550-b75d011d66d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "049a90c4-8326-4d3a-9002-14530728a7f4"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "7b088d7e-7b20-418d-ad7f-7e2372690fc7",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "2cb3e618-8c59-4971-aa3a-dd39e706b2f5"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "f36a6140-d3b3-4cc8-81f6-f3eb436731bf",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "4e73c940-8a8b-4c3f-881d-7dc8a3fce4bc"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "1eac3177-7541-4200-aaf2-a97431731a90",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "aac7695e-f20d-4e6a-9509-04463c216910"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "9bd6a800-f2df-4fb5-b8b5-5ce755945a28",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "756fd6d9-21de-4bef-b001-6a88d67c784f"
            }
          }
        ]
      },
      {
        "id": "e9691f05-f4bf-42c1-947c-da6ef71761ff",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "fc760e50-49d7-4c70-98e3-99bd7c34719a",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "8c16aecc-5143-49f9-a74b-3e1b8e211900",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "7ccebd60-52bb-462a-8456-d2bb969b25a3",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "bfc54faf-3986-422a-841d-29aae0cb7f80",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "7ffccea3-5688-4cca-8f13-206fb5a77b9f",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 1891,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 252,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 507,
        "pending": 0,
        "failed": 4
      },
      "testScripts": {
        "total": 950,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 941,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 345.74206349206344,
      "responseMin": 10,
      "responseMax": 9044,
      "responseSd": 1320.621033312544,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1719448707557,
      "completed": 1719448803275
    },
    "executions": [
      {
        "id": "a80d78d4-e4f4-4612-9763-ec449b7c9e51",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 250,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "233b1f0a-0a5c-411d-a4da-bdd484695603",
          "httpRequestId": "0944396e-548c-4e39-9ec9-23ca810f34bf"
        },
        "item": {
          "id": "a80d78d4-e4f4-4612-9763-ec449b7c9e51",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "22d728d2-8838-4e5a-a7e7-3ca8f9dc1567",
          "status": "OK",
          "code": 200,
          "responseTime": 58,
          "responseSize": 0
        }
      },
      {
        "id": "b481f4ad-605d-4aa8-9a01-cf88fb822849",
        "cursor": {
          "ref": "706132b3-2a29-4bcd-be4b-7ba0abe5943c",
          "length": 250,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "537084d2-8dc2-4901-b1c2-e2179019adba"
        },
        "item": {
          "id": "b481f4ad-605d-4aa8-9a01-cf88fb822849",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "b8a2054a-f85b-4b46-9dec-338fc91209dc",
          "status": "OK",
          "code": 200,
          "responseTime": 10,
          "responseSize": 0
        }
      },
      {
        "id": "0855bba9-6294-4489-b9f6-358ad42457c5",
        "cursor": {
          "ref": "2ff35f32-d3c8-4863-bb3c-15b2a218a995",
          "length": 250,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "43ed306a-5621-4c97-83f8-f92a4b07c427"
        },
        "item": {
          "id": "0855bba9-6294-4489-b9f6-358ad42457c5",
          "name": "did_json"
        },
        "response": {
          "id": "17bf026c-845d-45b3-b821-8784df52cd9c",
          "status": "OK",
          "code": 200,
          "responseTime": 449,
          "responseSize": 1024
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4195c30f-3fb0-4652-8b8b-e4f2339c0253",
        "cursor": {
          "ref": "26e5b58a-e46d-4beb-a56c-435f0845d9ad",
          "length": 250,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "98c809d6-3b5f-43dd-aa8c-c437ecd1c91f"
        },
        "item": {
          "id": "4195c30f-3fb0-4652-8b8b-e4f2339c0253",
          "name": "did:invalid"
        },
        "response": {
          "id": "4f39d64c-e5a4-46c8-86f3-b77518feb644",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2391,
          "responseSize": 25
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4195c30f-3fb0-4652-8b8b-e4f2339c0253",
        "cursor": {
          "ref": "26e5b58a-e46d-4beb-a56c-435f0845d9ad",
          "length": 250,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "98c809d6-3b5f-43dd-aa8c-c437ecd1c91f"
        },
        "item": {
          "id": "4195c30f-3fb0-4652-8b8b-e4f2339c0253",
          "name": "did:invalid"
        },
        "response": {
          "id": "4f39d64c-e5a4-46c8-86f3-b77518feb644",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2391,
          "responseSize": 25
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e867a5e0-0932-4a81-9a36-2f6b84c6b411",
        "cursor": {
          "ref": "0a0f1def-8730-4ca7-b23b-385335a6e538",
          "length": 250,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "8b699f0f-7460-4d7d-9ee4-7843621f3aed"
        },
        "item": {
          "id": "e867a5e0-0932-4a81-9a36-2f6b84c6b411",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "923245a7-e88f-4cbb-98d4-51270810ae60",
          "status": "Not Found",
          "code": 404,
          "responseTime": 2733,
          "responseSize": 65
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b5e767bc-8ad5-4f2c-a764-521ff279af10",
        "cursor": {
          "ref": "f534a019-ecdc-48f8-8e60-40ef3a174dd0",
          "length": 250,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "09fc6e33-117a-4949-b4c2-f4b8f99ff034"
        },
        "item": {
          "id": "b5e767bc-8ad5-4f2c-a764-521ff279af10",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "cb5a0f2c-ac80-4e04-9dc1-5bd1d4147685",
          "status": "Not Found",
          "code": 404,
          "responseTime": 2690,
          "responseSize": 23
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ca551df5-f86d-45aa-8c0c-5ac5354e6d21",
        "cursor": {
          "ref": "d3f2a5e8-c3a1-4624-946a-56379235d8f5",
          "length": 250,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "9746079c-1b75-4145-8dc3-fa55d99665d9"
        },
        "item": {
          "id": "ca551df5-f86d-45aa-8c0c-5ac5354e6d21",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "2b15de87-8439-4e07-bc01-7ee12a461e79",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 78,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "309141bd-66b0-40ca-82d0-d6b3c644e21f",
        "cursor": {
          "ref": "077fa165-b8b3-4cac-8062-7fc0db98419e",
          "length": 250,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "6103abf2-6316-4d36-b73c-4d43470aed39"
        },
        "item": {
          "id": "309141bd-66b0-40ca-82d0-d6b3c644e21f",
          "name": "identifiers"
        },
        "response": {
          "id": "e4dee403-ff97-4061-b798-16a10f75fa01",
          "status": "OK",
          "code": 200,
          "responseTime": 2403,
          "responseSize": 1040
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1efb07bf-4bd6-4780-a7e6-b7b8a1bb1267",
        "cursor": {
          "ref": "2253e76c-9bab-4072-95e3-8fdc82ba728f",
          "length": 250,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "6c755bbe-e2eb-4a83-b5ec-57e442818771"
        },
        "item": {
          "id": "1efb07bf-4bd6-4780-a7e6-b7b8a1bb1267",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "a6933487-fbb6-4650-ae8c-bf68e98b1d86",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 78
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b297e9c5-2328-40f5-8386-eb1792d460ce",
        "cursor": {
          "ref": "ef9cb9da-25ef-4994-8b94-4ac433e48a6d",
          "length": 250,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "a1a2075c-5917-4b24-8712-0e6561b95673"
        },
        "item": {
          "id": "b297e9c5-2328-40f5-8386-eb1792d460ce",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "98ceeffd-a322-4ed9-ae0b-03d07cca375e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 89
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "048d1847-3891-411b-9ee9-1d602d5b0480",
        "cursor": {
          "ref": "c2cdeb75-5f39-4ae1-b21f-7674dae3febf",
          "length": 250,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "32518a09-ff17-4aa8-a29d-98130bfc865b"
        },
        "item": {
          "id": "048d1847-3891-411b-9ee9-1d602d5b0480",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "b26c7cd7-6e7e-4930-91d7-fa8ff8974cd6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "580b02db-16ba-4ef2-8a9e-28beea456c6e",
        "cursor": {
          "ref": "dd70bc8c-7f84-4142-a875-03d135a563a2",
          "length": 250,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "423ed2e6-cada-45be-a165-5cd50aa892ff"
        },
        "item": {
          "id": "580b02db-16ba-4ef2-8a9e-28beea456c6e",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "4aab806d-c288-46bc-89ce-85c3b9255d8a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "88e0d171-3dbd-4f41-a3b2-fcc5aab3690e",
        "cursor": {
          "ref": "39ec1376-f47a-4079-9238-4efe6b1050e8",
          "length": 250,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "c3f297d8-84f2-4a2d-9cf7-dc7980e4a1ca"
        },
        "item": {
          "id": "88e0d171-3dbd-4f41-a3b2-fcc5aab3690e",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "f6728f82-4776-49d2-9a18-f7090dafd409",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0672d24c-12b5-41b3-bd8f-557fafcc44ca",
        "cursor": {
          "ref": "c4bfbdf9-5bc4-4342-a4fe-d15569c9ad89",
          "length": 250,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "5a5e503b-482e-45fd-af87-86af5603c035"
        },
        "item": {
          "id": "0672d24c-12b5-41b3-bd8f-557fafcc44ca",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "1e8db519-a040-4814-b650-86ce26421583",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1c65c6f3-f49d-40e7-82d7-e703174e0d50",
        "cursor": {
          "ref": "3877071a-9b65-42d6-abc0-db2cdfc204f0",
          "length": 250,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "471234d8-55a2-45fd-a475-9a5ddaf17f06"
        },
        "item": {
          "id": "1c65c6f3-f49d-40e7-82d7-e703174e0d50",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "2bbce3ec-208f-4c01-8238-b9b5989f2f46",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d2b12f10-b8b9-45e8-ba1a-24d219106a33",
        "cursor": {
          "ref": "67e1dff9-f5f9-413a-8eba-688c52118f67",
          "length": 250,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "18e32d5d-55dc-408b-aae5-065258696782"
        },
        "item": {
          "id": "d2b12f10-b8b9-45e8-ba1a-24d219106a33",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "3439bcf3-0c86-4177-94c2-1ec8f8268410",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b8ea3072-d2c9-47e7-86de-7bb5c2699dbb",
        "cursor": {
          "ref": "aa006119-5957-4fbb-b589-d3b4da47136f",
          "length": 250,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "c56f854e-3702-4f52-8bae-faa6b549423c"
        },
        "item": {
          "id": "b8ea3072-d2c9-47e7-86de-7bb5c2699dbb",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "fafe5458-eaf4-40c7-a43d-373d0e94ab9b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4e730a7e-068e-4647-8a84-2e34ef640f0c",
        "cursor": {
          "ref": "10642be8-b356-4248-afd2-b0a3aafccf6c",
          "length": 250,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "39dba47b-2187-48ae-94e2-0531318105ed"
        },
        "item": {
          "id": "4e730a7e-068e-4647-8a84-2e34ef640f0c",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "f7607339-5c02-4ddf-b539-4f15eebfca85",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb95073e-d2f5-4eba-9406-b07115c5fb80",
        "cursor": {
          "ref": "0d4cbf42-4754-461e-9b82-bb992aa8b2b9",
          "length": 250,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "888a9ef6-bc0c-48d7-849a-299571c6b83c"
        },
        "item": {
          "id": "bb95073e-d2f5-4eba-9406-b07115c5fb80",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "f1be51c2-b177-4414-ba41-1ce4eab493dd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb23df04-b352-4d40-9226-2e56011fa00b",
        "cursor": {
          "ref": "0a151dd3-148c-4ea3-b1fa-6f9979de97bb",
          "length": 250,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "d0d7a20b-b632-4a56-9c6d-b8b68af89953"
        },
        "item": {
          "id": "cb23df04-b352-4d40-9226-2e56011fa00b",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "cf1abeda-8ff0-4c2a-b9ea-778111b8fbd8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "23b92f4a-0bae-48fe-8cce-ef21d228830e",
        "cursor": {
          "ref": "e6648355-d82e-4eac-8eae-79f750eb9624",
          "length": 250,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "d39f3dfe-bc29-4ce0-b3cb-a3e20499b5e2"
        },
        "item": {
          "id": "23b92f4a-0bae-48fe-8cce-ef21d228830e",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "47b4b353-d53c-4d10-a569-f87c6a9f1060",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 103
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5e55e670-51db-460c-a972-1d0170618581",
        "cursor": {
          "ref": "8ffb1509-b980-4904-9e27-607655b6aff0",
          "length": 250,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "3ccc1387-0727-4994-9333-c3fb14fbea21"
        },
        "item": {
          "id": "5e55e670-51db-460c-a972-1d0170618581",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "186ce6e9-b10a-4f2c-8eeb-8ef4fe4bbee5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 103
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a3b0e680-64dc-429d-94fd-314580cb1cc2",
        "cursor": {
          "ref": "80d817fb-9f1f-493e-b15f-620421541c19",
          "length": 250,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "c8c40875-bb0b-4a39-84bd-34d6e8966bf2"
        },
        "item": {
          "id": "a3b0e680-64dc-429d-94fd-314580cb1cc2",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "34f77bf9-c9f9-4ee0-a6c5-51288f1670a6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 103
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "030fd612-50b5-4820-8836-65ea17cc00e3",
        "cursor": {
          "ref": "2661a271-8a14-4004-8fd1-f23292718c60",
          "length": 250,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "db186ad4-3206-489f-9963-51b3d09edf55"
        },
        "item": {
          "id": "030fd612-50b5-4820-8836-65ea17cc00e3",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "8dd510d3-df89-4a64-9807-13c93d0c7286",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 103
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f546fbb2-756b-4290-b392-a0005c79f3e2",
        "cursor": {
          "ref": "870559e4-d6a8-44e7-a19e-d23547370583",
          "length": 250,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "a9f88cfd-694f-4e93-b2c6-a8f5460254ad"
        },
        "item": {
          "id": "f546fbb2-756b-4290-b392-a0005c79f3e2",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "0d4b9104-8efa-4aba-93eb-91d0c54ce3c6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 103
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4ac4a0ae-c68f-4d3b-957d-7f58818c87fb",
        "cursor": {
          "ref": "747f4be8-458b-48f6-ac00-3fba92aa01bd",
          "length": 250,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "81843a97-6924-46a0-9afd-5a58cba0c26a"
        },
        "item": {
          "id": "4ac4a0ae-c68f-4d3b-957d-7f58818c87fb",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "93406d4a-2b9f-4a6b-90ed-c7af992390ff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "77c5755f-5dd3-4071-a149-60688aecf77b",
        "cursor": {
          "ref": "83e7d1e4-f099-415f-b363-92723bc2df22",
          "length": 250,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "c8c929f6-4f85-4d06-be4d-837f4e1f45e0"
        },
        "item": {
          "id": "77c5755f-5dd3-4071-a149-60688aecf77b",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "7516f0ed-19ec-480d-82f5-e8d762b39f97",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 101
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7cf3de3b-4939-423c-ab1b-084b2079ee9d",
        "cursor": {
          "ref": "8521559d-b0f3-4b7c-9b29-3c194fc90829",
          "length": 250,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "e33031e6-5326-4e0e-aa86-ca55985bc766"
        },
        "item": {
          "id": "7cf3de3b-4939-423c-ab1b-084b2079ee9d",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "e3b4b689-4ed5-498c-a785-c24901b8b54c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 101
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e792ec13-e143-441d-9fa9-c553c8cb3d1e",
        "cursor": {
          "ref": "1c2fc794-0293-4df6-ab7f-32bd5c918e4a",
          "length": 250,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "0a9079fd-0eaf-41f8-9abf-d199a2cb6a8a"
        },
        "item": {
          "id": "e792ec13-e143-441d-9fa9-c553c8cb3d1e",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "182779ab-5072-42f7-b05f-7949fbb54556",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 101
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c05bbafd-4cc2-4ffd-9b00-4cdb41265295",
        "cursor": {
          "ref": "cecc0f1a-5c3f-4587-a967-5717dedf7cff",
          "length": 250,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "3c55d7be-6ddc-4738-a348-cf8c2283ef78"
        },
        "item": {
          "id": "c05bbafd-4cc2-4ffd-9b00-4cdb41265295",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "2f1f39e1-04ef-44fe-8ff3-014d215c3bfd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 101
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "450c7407-fd43-44a0-a744-ddf178fbc68f",
        "cursor": {
          "ref": "17801cbb-eaf1-4c7f-9ce6-445ff4153797",
          "length": 250,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "0707aa58-c52e-4349-8cbc-bcd3d0a0c900"
        },
        "item": {
          "id": "450c7407-fd43-44a0-a744-ddf178fbc68f",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "ba780c5b-dfa1-499f-bacf-e69499482a2e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 101
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "895c8658-9825-46aa-a5a9-cdd728408349",
        "cursor": {
          "ref": "4773f8a7-731a-4681-babe-48be1f8decb7",
          "length": 250,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "0f654845-0210-4ca5-a0a7-37805d312ad0"
        },
        "item": {
          "id": "895c8658-9825-46aa-a5a9-cdd728408349",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "356b25d7-a0e0-492d-857d-8bf848d209c3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 103
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3fe0537a-969f-41af-8d2d-d3eb47328239",
        "cursor": {
          "ref": "d578f804-3472-4b5a-9bdb-88848b169972",
          "length": 250,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "a0d452b4-e121-446b-a4cf-446fb87914c1"
        },
        "item": {
          "id": "3fe0537a-969f-41af-8d2d-d3eb47328239",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "9c827131-d1d0-4615-a15a-20091611ad83",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 107
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6dbcefc9-7be7-4a18-ae9c-9b37e77989f2",
        "cursor": {
          "ref": "064fa74d-fbc4-44fd-a9bd-ff1ef4ce7c6f",
          "length": 250,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "fbc3bbad-da00-4b6a-b2c8-fc6d716bd132"
        },
        "item": {
          "id": "6dbcefc9-7be7-4a18-ae9c-9b37e77989f2",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "c1e15ff2-ce1d-4c9e-a222-b47f9d1d47f0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 107
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "79ee0560-765a-4590-b30f-8c29f5554ed6",
        "cursor": {
          "ref": "16381454-6578-4854-9d74-738e95722903",
          "length": 250,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "fb4ba239-8247-409e-8e70-1862cbe8aa42"
        },
        "item": {
          "id": "79ee0560-765a-4590-b30f-8c29f5554ed6",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "5a498f09-7a10-4eb8-a4d8-afba88ae0410",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 107
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "48ee13c2-1f83-4518-8dcb-6ee1fb68cb7a",
        "cursor": {
          "ref": "d8ae83ff-b97f-4d56-ae3c-6b9b6217f461",
          "length": 250,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "bdff46a7-aa73-47a8-93c6-01815336e516"
        },
        "item": {
          "id": "48ee13c2-1f83-4518-8dcb-6ee1fb68cb7a",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "bd8c5c79-c6a2-494f-9d66-2bd15260c579",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 107
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "af0d2b07-45a5-4020-9d0d-101a3e8f1dcd",
        "cursor": {
          "ref": "5f00824e-c6fa-4420-b222-25b1d73826a8",
          "length": 250,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "49d88c35-99ad-4060-b437-e3b6aaa102c2"
        },
        "item": {
          "id": "af0d2b07-45a5-4020-9d0d-101a3e8f1dcd",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "58bb3ae9-b17d-4efd-a87d-cf030340fb88",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 107
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ec4bb073-2d34-4801-bd7e-c9c9914bf318",
        "cursor": {
          "ref": "5f7665f8-e198-495e-a1ae-11315aa8850f",
          "length": 250,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "a14a701c-23b6-462d-b984-7c962f0147b8"
        },
        "item": {
          "id": "ec4bb073-2d34-4801-bd7e-c9c9914bf318",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "2a952578-0329-4677-9664-ac318773fe00",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 87
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ac96669-8c11-4d17-8231-1d00907c94cc",
        "cursor": {
          "ref": "5ad838bd-6e69-4d5a-82ff-9041e436826a",
          "length": 250,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "a64baa9d-cb9f-479d-975f-5b52297173d5"
        },
        "item": {
          "id": "5ac96669-8c11-4d17-8231-1d00907c94cc",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "f235fd08-56af-44b0-b8de-a38a8d476c8f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 125
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fa7b14ed-66cd-4b1a-99ce-22ec039976e8",
        "cursor": {
          "ref": "72dfb20f-158d-4a59-9139-0ea1da35179a",
          "length": 250,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "a4515aee-8e15-4eef-aeb3-610fa9ed8df9"
        },
        "item": {
          "id": "fa7b14ed-66cd-4b1a-99ce-22ec039976e8",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "33f9700c-e559-469d-b461-51c68cd7a118",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 125
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "66654f6c-9b5c-4752-8a06-291f1509f568",
        "cursor": {
          "ref": "cc2a345f-93b9-4fd4-8ae7-f8d2b4598e9f",
          "length": 250,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "4de155da-6fdd-41ea-a55c-bd2fb30f3d34"
        },
        "item": {
          "id": "66654f6c-9b5c-4752-8a06-291f1509f568",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "3edc332e-9e68-4706-87eb-349636631d47",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 125
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c95436d-a04e-4d42-9dd3-9e2e17f08bf7",
        "cursor": {
          "ref": "6073d251-6711-4bd3-b15b-568cacdb8808",
          "length": 250,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "1180c823-b2f9-4b84-ae6c-375c6776c8b6"
        },
        "item": {
          "id": "0c95436d-a04e-4d42-9dd3-9e2e17f08bf7",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "f228d178-30a8-4a1c-b401-62eaa10a9659",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 125
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e220ef17-33dc-404e-a1cd-98b87905f55c",
        "cursor": {
          "ref": "2cca3026-dea7-4c0e-8898-2b9b48dd5bd1",
          "length": 250,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "d6cb4bef-cf91-412f-9738-07a82198eea5"
        },
        "item": {
          "id": "e220ef17-33dc-404e-a1cd-98b87905f55c",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "65acdda0-98ad-4180-8973-9ac4e919acc5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 104
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a8f6b85b-fdb5-4851-b55e-954e3b259a08",
        "cursor": {
          "ref": "847ca1a9-3f41-40ea-bc74-dbb128a79a3d",
          "length": 250,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "f48feab9-f77a-4d1c-8054-a70d7b03927a"
        },
        "item": {
          "id": "a8f6b85b-fdb5-4851-b55e-954e3b259a08",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "d4a776bd-9b4e-4154-9684-2173a28bcb54",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 80,
          "responseSize": 104
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2516c472-b6bf-4524-8f8c-ce2d93a5fcd6",
        "cursor": {
          "ref": "860cf3c6-690b-4d79-abe5-b4c235788b67",
          "length": 250,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "c4b4341d-6bcb-40a3-acc0-272867a3deed"
        },
        "item": {
          "id": "2516c472-b6bf-4524-8f8c-ce2d93a5fcd6",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "4c4f4bcb-a22c-4cec-9e00-d3dd3361eee5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3cbf3658-e02b-4e0e-a134-6d866ff34bbe",
        "cursor": {
          "ref": "953decdd-9ffe-4560-9c39-2f1ab2dcf904",
          "length": 250,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "a5bc4113-fb26-47f6-a44f-7f771f1dd303"
        },
        "item": {
          "id": "3cbf3658-e02b-4e0e-a134-6d866ff34bbe",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "97e59422-e4da-4a63-b12f-d5bb551fe4dc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 128
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4de96ff4-455a-45d0-976a-f6457d5d601f",
        "cursor": {
          "ref": "789d08c8-1cfc-4cdc-85a9-0a2f4ced6159",
          "length": 250,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "ed75f984-4b44-42a5-b7ac-c4411d4b59a1"
        },
        "item": {
          "id": "4de96ff4-455a-45d0-976a-f6457d5d601f",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "9daf043e-f19d-4959-b386-e133da9fe3e5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 128
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4ec23f60-07ef-4f02-a5a9-a0b774ec0869",
        "cursor": {
          "ref": "1f25ac09-696a-46f0-8894-29c11f40a660",
          "length": 250,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "57f1cb25-c086-4bdf-85e3-414f1479d633"
        },
        "item": {
          "id": "4ec23f60-07ef-4f02-a5a9-a0b774ec0869",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "23776560-8409-4b54-87c1-5a097dbf8420",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 128
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8f3b51d3-523f-4b73-97ab-863cfe39c609",
        "cursor": {
          "ref": "7155cc1c-73ca-40ef-8a9b-9a0ad9a95bba",
          "length": 250,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "ea4de5c7-c94d-4214-b5ab-a39a5727189d"
        },
        "item": {
          "id": "8f3b51d3-523f-4b73-97ab-863cfe39c609",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "3f684b0a-a182-4f7d-90fc-490287fd092a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 128
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c54bd40b-7131-436d-bdda-29ed388aae82",
        "cursor": {
          "ref": "3e780024-5dad-41dc-a215-d3bb37e6638e",
          "length": 250,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "12743855-001a-4b87-af9f-a62a1336b5e2"
        },
        "item": {
          "id": "c54bd40b-7131-436d-bdda-29ed388aae82",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "f8f08928-b292-4764-9328-796acce9a3bc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 104
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "745419eb-45e9-4d03-8aee-5ad18b302cb8",
        "cursor": {
          "ref": "01cd51f8-eb82-44c9-9d76-b40a17ebbdfe",
          "length": 250,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "1e9ace3d-3dec-4533-bca6-f36b445b86e2"
        },
        "item": {
          "id": "745419eb-45e9-4d03-8aee-5ad18b302cb8",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "333ae329-b16f-4554-8041-d0fc2442a18b",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 77,
          "responseSize": 104
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1bb09bad-6c41-4a03-8530-de020f375b39",
        "cursor": {
          "ref": "9a6d6160-6404-4b7b-aeb2-4d1c66966b1f",
          "length": 250,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "da90b3d1-7ec8-432b-b981-4a121a4cc8e4"
        },
        "item": {
          "id": "1bb09bad-6c41-4a03-8530-de020f375b39",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "07774dc2-6076-4bd2-bea2-d1546310d469",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 93
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eb4dd5bd-b196-454e-bb09-e32daa6b3e2f",
        "cursor": {
          "ref": "df033657-b489-4514-9e90-7877dd5b300e",
          "length": 250,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "1e084866-b78a-4235-8351-211d3b7f1f1c"
        },
        "item": {
          "id": "eb4dd5bd-b196-454e-bb09-e32daa6b3e2f",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "d6f37d71-629f-4549-aa84-fabd055cc4ac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "df996cca-72ae-4fdb-94c1-56739bde161c",
        "cursor": {
          "ref": "f46dacaa-5909-426f-9088-88fd3812198e",
          "length": 250,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "0d520082-3bba-42bb-8121-5e90bcc4a6f8"
        },
        "item": {
          "id": "df996cca-72ae-4fdb-94c1-56739bde161c",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "70369d7a-75c6-4b56-b6de-35178ce6c648",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "41b10870-80dc-478e-862c-2875c0572954",
        "cursor": {
          "ref": "24f1755b-8b1a-4fad-81bc-a519606bd101",
          "length": 250,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "4f6c6631-db93-4b1a-b060-5a3b2a1a8cfb"
        },
        "item": {
          "id": "41b10870-80dc-478e-862c-2875c0572954",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "0e066491-575f-45f9-850b-fd4cb80e39d4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "484a1136-5ed0-449f-b406-321f4f8818ee",
        "cursor": {
          "ref": "e96620d5-43a5-44e4-91dc-db6a97ba4ec8",
          "length": 250,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "9ff6db6f-5c4c-40a4-bf9e-b224ad273e97"
        },
        "item": {
          "id": "484a1136-5ed0-449f-b406-321f4f8818ee",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "078300df-9bcb-47e2-8d71-f7f973cdd724",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dbffa490-6b82-4d45-9cf1-749821fcf0b0",
        "cursor": {
          "ref": "7544a6fd-0804-4768-b834-531ff30646d7",
          "length": 250,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "8e96e692-5379-426d-8658-f835df213202"
        },
        "item": {
          "id": "dbffa490-6b82-4d45-9cf1-749821fcf0b0",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "d5ba27ed-6d51-4431-9202-ab4ed50359be",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "594c5412-72a8-4c85-b72f-c1e9c96bafaf",
        "cursor": {
          "ref": "5e67c31f-484a-494e-8955-ae4a5f7b89d2",
          "length": 250,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "1d927dad-b8c5-4d00-a2ba-e8efdcb7559c"
        },
        "item": {
          "id": "594c5412-72a8-4c85-b72f-c1e9c96bafaf",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "7b312353-da39-4d2f-a6ec-16ca87e2aa5d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1b60c7dd-0c3f-420d-877e-84f5435cfeaf",
        "cursor": {
          "ref": "b44c038d-d043-4f00-9bb8-f5eec619ba89",
          "length": 250,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "b99c3021-a980-487b-948c-22c783b2fec7"
        },
        "item": {
          "id": "1b60c7dd-0c3f-420d-877e-84f5435cfeaf",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "f1c66c30-f8f4-450d-8174-33529b2c000f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 98
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "02ca0497-09f2-464a-96f4-da4f5bfd3585",
        "cursor": {
          "ref": "fd6b8b50-4a47-41c8-bc5f-fbd4088045e2",
          "length": 250,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "779937ed-9c1e-4440-9876-d7de5cac2436"
        },
        "item": {
          "id": "02ca0497-09f2-464a-96f4-da4f5bfd3585",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "46ba8096-d975-49f6-bf11-bc85c919217b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 120
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ac10199-c47e-4062-9a1c-264df1ba21c1",
        "cursor": {
          "ref": "dcc19c79-8c97-4c8a-9a1e-3dcb378322cd",
          "length": 250,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "3e7abb3c-5a12-4814-96d0-13dcbeacbb34"
        },
        "item": {
          "id": "6ac10199-c47e-4062-9a1c-264df1ba21c1",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "a1c6d391-dae6-4fe8-b0d5-9bbe826149da",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 120
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bde283ab-0a6a-41f3-95e4-4812893b504b",
        "cursor": {
          "ref": "9ef39f93-7f1f-4208-9e19-c1675713c200",
          "length": 250,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "d9f9df83-f638-481b-92d6-6f120e19e90d"
        },
        "item": {
          "id": "bde283ab-0a6a-41f3-95e4-4812893b504b",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "9d62322b-3eb1-450a-a633-0a2faa41116f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 120
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "18add668-0bed-4b4f-82b7-9216790802f2",
        "cursor": {
          "ref": "e206668b-9ef6-4a3b-85c1-9020194947dd",
          "length": 250,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "9989bd1d-8123-409d-9cea-b14de5e7485a"
        },
        "item": {
          "id": "18add668-0bed-4b4f-82b7-9216790802f2",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "33f2c3e5-37e5-4562-a7b2-248ba709be03",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 120
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c9efc22-ef0d-44b2-968a-2cd5eaeeb664",
        "cursor": {
          "ref": "48648ceb-0496-44b6-9d38-f7cd25325a82",
          "length": 250,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "2b5bd5a7-d11f-4f83-8e91-4ed0da9d096d"
        },
        "item": {
          "id": "2c9efc22-ef0d-44b2-968a-2cd5eaeeb664",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "1714a2ff-1a5a-4014-bdd5-380dfef4c261",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 120
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "668b4546-5c1a-4fc6-899e-ed1bdef45a14",
        "cursor": {
          "ref": "f6aef82a-96ea-459b-b4ba-a2422f319ccf",
          "length": 250,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "0ec5dea1-2609-468e-9868-6f29f41821b9"
        },
        "item": {
          "id": "668b4546-5c1a-4fc6-899e-ed1bdef45a14",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "1880bd96-d660-43da-81fe-501f60ff94d4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2a7f87d9-6d13-4e9d-b39e-af864b5fac2f",
        "cursor": {
          "ref": "bb77255e-3619-45f9-b0f3-008d52e075bd",
          "length": 250,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "a696fa93-b7ca-4d12-a74a-88dd8acf16ac"
        },
        "item": {
          "id": "2a7f87d9-6d13-4e9d-b39e-af864b5fac2f",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "d7677449-f566-42b2-8120-2eca38cf6f2c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "05d32b74-6e03-4ebf-8a87-c33cdda53044",
        "cursor": {
          "ref": "74cdd71a-bc8a-4d27-851d-0e1a6fba0fda",
          "length": 250,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "e0a230fd-aefa-417e-8577-39f5f072452f"
        },
        "item": {
          "id": "05d32b74-6e03-4ebf-8a87-c33cdda53044",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "39126e3f-34f7-4da1-966d-7c4325d748e3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "978d914b-8495-46b8-bd30-55d80fc984fd",
        "cursor": {
          "ref": "490d7166-a17d-49b7-a0e8-5d51d1fc84bb",
          "length": 250,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "b6e3daac-8412-4adc-9aa9-345e6ecb1a41"
        },
        "item": {
          "id": "978d914b-8495-46b8-bd30-55d80fc984fd",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "11a90629-1125-424c-89b3-f0124e666253",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f6d71057-b445-43ee-b650-702e7bed28f1",
        "cursor": {
          "ref": "f805899c-1a7d-4440-9b06-e955db3d987e",
          "length": 250,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "e6184ec9-e964-4259-a089-b00308418fec"
        },
        "item": {
          "id": "f6d71057-b445-43ee-b650-702e7bed28f1",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "18cf6912-6e3b-470e-9387-f3a536f8f5d3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "32fdf33d-860a-44cd-a766-55e0abdc2faf",
        "cursor": {
          "ref": "e3506af2-1660-47f1-a2e2-9f143e0f9221",
          "length": 250,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "48235610-7480-434b-b00a-075533d71533"
        },
        "item": {
          "id": "32fdf33d-860a-44cd-a766-55e0abdc2faf",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "92f5a004-376f-4225-9b93-90cb40f55bd1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 75
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ff0199e6-312d-444a-b569-a6720cecae47",
        "cursor": {
          "ref": "a24e11cd-a90f-44f6-b8f3-5a6c9979bad7",
          "length": 250,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "ff5a74b9-98b8-4322-a795-e55a7408a3f9"
        },
        "item": {
          "id": "ff0199e6-312d-444a-b569-a6720cecae47",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "057f2d50-4297-4d3d-9e6d-93971e69d679",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cae82a98-1a8e-4ee2-a58a-cbfd8439ca57",
        "cursor": {
          "ref": "e7b5de3e-17d1-41b2-adf0-68287b57a2e5",
          "length": 250,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "d610de58-15d8-4ca5-89b1-6ebafa6f6245"
        },
        "item": {
          "id": "cae82a98-1a8e-4ee2-a58a-cbfd8439ca57",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "868d446f-bc22-458c-b76e-55761d1eae0f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8eb0d2b4-0baa-4274-a65d-bdf0d5a7668c",
        "cursor": {
          "ref": "d6999374-916e-40e5-93b1-115cee76df07",
          "length": 250,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "506dcdd8-cd0e-43a4-a7aa-3955b2cf00b3"
        },
        "item": {
          "id": "8eb0d2b4-0baa-4274-a65d-bdf0d5a7668c",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "e70b610a-f3a1-4f0b-8b4c-96718236f929",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "168d3e37-791e-4931-84fa-bffddb5f7571",
        "cursor": {
          "ref": "59232cf5-80b8-45d1-b6d4-7a8f6e1a4ce5",
          "length": 250,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "787af392-7b9e-4e81-9d96-5b0d9f111416"
        },
        "item": {
          "id": "168d3e37-791e-4931-84fa-bffddb5f7571",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "cea21438-f949-4608-9f6b-a1207f5c51fc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0219b0ed-e47b-485d-a141-7c72eb74a39c",
        "cursor": {
          "ref": "45889652-27a0-486b-adfa-c85707241f21",
          "length": 250,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "40917c4c-c2e9-4418-9394-b15b7b1acbe1"
        },
        "item": {
          "id": "0219b0ed-e47b-485d-a141-7c72eb74a39c",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "300320cc-b6c4-4a16-9a0e-dcd909cbad3b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "412dafdc-0813-484a-be0d-33e59f074960",
        "cursor": {
          "ref": "0b2caf3a-cef2-404d-b698-bf1cda55947d",
          "length": 250,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "b3a234eb-6c8c-4fc2-8aac-056b6b495aee"
        },
        "item": {
          "id": "412dafdc-0813-484a-be0d-33e59f074960",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "bd882ff1-85ec-4b5f-975e-bdee8aefb183",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 87
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "de2b82a9-95c2-4813-96c9-04e843cf0540",
        "cursor": {
          "ref": "da5a5ca5-f58d-4d8d-9c41-36147f8f9425",
          "length": 250,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "6e2e726d-92f9-4a91-ab5a-2828199bd6c0"
        },
        "item": {
          "id": "de2b82a9-95c2-4813-96c9-04e843cf0540",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "59c9e5b3-0bc5-4e73-99da-69c109d3d05c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d8543630-bd45-4254-932a-4e44ac0a4e02",
        "cursor": {
          "ref": "c288bf51-7610-4bf4-ab8e-3b829c1d0755",
          "length": 250,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "29e84dd0-d3b6-450c-8e21-93cdc53dd72b"
        },
        "item": {
          "id": "d8543630-bd45-4254-932a-4e44ac0a4e02",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "0304c5c6-3abc-465c-9528-001c3d266ffb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "68b05ff9-a55d-4d48-877e-085a03322d2e",
        "cursor": {
          "ref": "6ab09cd9-a6b2-48f7-a69e-f76f98592c0d",
          "length": 250,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "f8927c60-7656-4342-b3e0-17fc36edd5fa"
        },
        "item": {
          "id": "68b05ff9-a55d-4d48-877e-085a03322d2e",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "fa3e0a13-f6d0-495f-ab72-d785746354fa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d497a3e9-04d3-417c-9160-1b4a59fd097a",
        "cursor": {
          "ref": "7ca7e546-a9a6-4fa9-a75e-3f085ed9967b",
          "length": 250,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "87f1e728-8ffa-498f-9867-a3ec05ca9dd4"
        },
        "item": {
          "id": "d497a3e9-04d3-417c-9160-1b4a59fd097a",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "124e02b0-e565-4c3a-ae87-8859b09b0458",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1b083685-00f1-4c5c-b991-dff12adbafc6",
        "cursor": {
          "ref": "f68a1403-99e3-42f2-b67b-433991c8f809",
          "length": 250,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "fe35a568-dd51-477e-bff9-b7ea42a5d146"
        },
        "item": {
          "id": "1b083685-00f1-4c5c-b991-dff12adbafc6",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "b5a294d1-08d6-4f45-9b00-129b792b8433",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 414,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "430ace78-0621-4f07-9686-76c33fd3953f",
        "cursor": {
          "ref": "f0b39120-e3fd-448c-abc5-2920070b45e7",
          "length": 250,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "d42243cf-f84f-4321-a2aa-84efff439f7c"
        },
        "item": {
          "id": "430ace78-0621-4f07-9686-76c33fd3953f",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "b00ad8df-3006-410c-94bf-54cf4dc6c7c7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 97
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "16cf2346-4774-4f42-adfa-530168582575",
        "cursor": {
          "ref": "e1235e66-9601-4366-a8ce-d1250695fb38",
          "length": 250,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "1e166bef-ec90-4f77-a981-f49df0e641fa"
        },
        "item": {
          "id": "16cf2346-4774-4f42-adfa-530168582575",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "b301d46c-a1b2-43f6-a3b5-ef43a00f7deb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eed434c5-4ae7-4b1e-8a43-0c0df8a0024e",
        "cursor": {
          "ref": "504f42e2-1087-46f2-8fe9-8a373b72d309",
          "length": 250,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "e252d446-e247-4c71-8b86-baadcaf4dd8d"
        },
        "item": {
          "id": "eed434c5-4ae7-4b1e-8a43-0c0df8a0024e",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "701a01d8-c23d-46c6-944f-f126ba1a800d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d33af8a0-4c8e-4315-9ba7-e961cae381ac",
        "cursor": {
          "ref": "846cc258-1e5d-402b-8bfe-94cbe6c0cce5",
          "length": 250,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "b29f010c-5758-447a-b251-511009630077"
        },
        "item": {
          "id": "d33af8a0-4c8e-4315-9ba7-e961cae381ac",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "655c45d0-e017-48f5-8b8a-a2551b2ac6c8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "057a4beb-d301-4bbf-a5db-6a2e94ba51c9",
        "cursor": {
          "ref": "6b6abd6c-1176-410f-905d-fe6a06bbfd76",
          "length": 250,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "a1c087f1-06f8-4999-a5f4-9d98f5ddf321"
        },
        "item": {
          "id": "057a4beb-d301-4bbf-a5db-6a2e94ba51c9",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "734d5b30-bfe3-4d31-98dc-8c8a8a32db58",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9e34f0cf-6f0c-4fe2-b04c-061022707a24",
        "cursor": {
          "ref": "82073052-59c6-429a-987f-564af9fb06a8",
          "length": 250,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "a332fbe9-4706-4c69-9e77-67953d83fb84"
        },
        "item": {
          "id": "9e34f0cf-6f0c-4fe2-b04c-061022707a24",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "f47fe930-78c3-4347-b724-1c4aecb73e89",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c33f5942-b92f-4d32-b3e8-34c7b3540b83",
        "cursor": {
          "ref": "a18bbe49-7314-4a5c-80fb-32d0122f3663",
          "length": 250,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "79e57649-08e7-4963-944f-c2e4095364c5"
        },
        "item": {
          "id": "c33f5942-b92f-4d32-b3e8-34c7b3540b83",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "ec385ecf-a265-40db-9903-2e6230d9e718",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "725aaf49-bece-435c-b0d0-1b560b61ea10",
        "cursor": {
          "ref": "221630fe-868a-4c0b-9d10-a5f577a8b947",
          "length": 250,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "b1bd2b16-6525-4546-8ed6-1bfd7d92fa01"
        },
        "item": {
          "id": "725aaf49-bece-435c-b0d0-1b560b61ea10",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "12bfcd99-e9d5-4548-9aa8-5364a689d6b8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 161
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2108636a-c269-4c1c-ab48-117fe40c4abe",
        "cursor": {
          "ref": "533ae349-473f-4222-b37f-749b7ac8b296",
          "length": 250,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "c182e9d2-3b3e-4be8-8a21-3440d98924ad"
        },
        "item": {
          "id": "2108636a-c269-4c1c-ab48-117fe40c4abe",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "7f86bcb4-7376-45a5-ad9b-764fd2092c75",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 161
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e36bee7-bee0-4aef-ab30-e1c4a597a59f",
        "cursor": {
          "ref": "dc43adf1-ef27-4943-ba41-51ff514a2eae",
          "length": 250,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "d3de8006-56f2-48d5-ad56-561aba459108"
        },
        "item": {
          "id": "6e36bee7-bee0-4aef-ab30-e1c4a597a59f",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "4a3bcd14-7520-454a-91fd-845cb6a88884",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 161
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "47616702-c5cd-4423-b7c2-4104e12923a4",
        "cursor": {
          "ref": "da26808a-9f29-411b-aebd-cbc9aa3db332",
          "length": 250,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "ecd81102-2f7f-4641-b9b6-d60932204722"
        },
        "item": {
          "id": "47616702-c5cd-4423-b7c2-4104e12923a4",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "7ac7b021-c3a6-4cb8-b002-6dbf954c2648",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 161
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "78897119-31f2-4d18-9dcc-4e78d16271d2",
        "cursor": {
          "ref": "5197516e-0384-4e8f-b989-0516ddb3bbd3",
          "length": 250,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "569c4d53-efda-4313-9c8f-a4d28e143e30"
        },
        "item": {
          "id": "78897119-31f2-4d18-9dcc-4e78d16271d2",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "acd3cbea-5cde-46c5-bd7b-fe2efe1e98fc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 161
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "20696cc3-29c3-47ae-9633-a9d569d9b9fd",
        "cursor": {
          "ref": "7197fe77-3e5d-4aaa-a37f-b07d8c402f42",
          "length": 250,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "ec7e0d59-07fa-4e16-bfb1-4848edd9d006"
        },
        "item": {
          "id": "20696cc3-29c3-47ae-9633-a9d569d9b9fd",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "6e804705-2d86-4535-b096-bb84fbe0616d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 101
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "825ae3ac-fec5-4755-8a2e-73a28ec00bb4",
        "cursor": {
          "ref": "d99277b2-87e1-49e5-bc61-9f87093b0add",
          "length": 250,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "5495dc62-4bab-4a11-80eb-4ec00228047f"
        },
        "item": {
          "id": "825ae3ac-fec5-4755-8a2e-73a28ec00bb4",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "3bcca99c-f418-4bd3-ae90-2f021913fe59",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "18b26d4f-c5cc-49c2-8ff7-8aff6a974921",
        "cursor": {
          "ref": "65934ccb-e8c3-484d-a178-9b762c07b468",
          "length": 250,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "ef47b940-053f-4b2d-8a0c-ff83fcf91df7"
        },
        "item": {
          "id": "18b26d4f-c5cc-49c2-8ff7-8aff6a974921",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "79c8f4ff-71c0-4c25-972c-776b4c7ff8da",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "464e9e06-9034-4eb1-8e4e-f605a3111d60",
        "cursor": {
          "ref": "d6e0e35a-3f3c-4d6f-8f21-c48e4c0e296b",
          "length": 250,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "4df3c6f7-8b23-4280-be09-a2b5dab3b3f4"
        },
        "item": {
          "id": "464e9e06-9034-4eb1-8e4e-f605a3111d60",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "f4d37927-a4d7-4a19-9481-6bfdcbd7399c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "094d6b5e-1daf-489d-83c9-7c7a30ef9244",
        "cursor": {
          "ref": "998ae19e-4cfc-497a-aaf3-e5669b1ae815",
          "length": 250,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "5ac38951-96ec-424e-86e5-ad45c2d24853"
        },
        "item": {
          "id": "094d6b5e-1daf-489d-83c9-7c7a30ef9244",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "65db96af-b03e-461c-9d0e-78244bfc97d2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be1688fc-e787-4680-aae4-c7268e07ea4b",
        "cursor": {
          "ref": "96d03dea-1585-4d08-aa49-c62d5fe6220d",
          "length": 250,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "e79c549f-1336-4a6f-be22-47255843f840"
        },
        "item": {
          "id": "be1688fc-e787-4680-aae4-c7268e07ea4b",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "381359d1-057a-46c2-b435-ea1514e3ba67",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3f280aee-996d-41a0-806b-52b6b4fb99d0",
        "cursor": {
          "ref": "ed8954f9-3c88-47fd-9cbb-d090ad6a96ae",
          "length": 250,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "ff9b96fb-6ac5-467a-bd32-7576fa3e740f"
        },
        "item": {
          "id": "3f280aee-996d-41a0-806b-52b6b4fb99d0",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "dbaecfc4-86be-45f7-a03c-652f1ace4933",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 116
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "55882474-a8db-4e10-86fc-793696d733e9",
        "cursor": {
          "ref": "d4c3343f-8ea0-49ba-ba41-5b004014532b",
          "length": 250,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "72f119b5-cb3e-4aea-ae91-e7b5b1b3748d"
        },
        "item": {
          "id": "55882474-a8db-4e10-86fc-793696d733e9",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "1b57cc8f-211c-4893-9b1f-0199f7c7b846",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 76,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ecf52154-e2bb-410b-959f-82ef67268cca",
        "cursor": {
          "ref": "ca9b297d-b3c9-4c21-b93c-1109713d589c",
          "length": 250,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "31139a4f-264c-4155-a6c8-d8485d4f5b89"
        },
        "item": {
          "id": "ecf52154-e2bb-410b-959f-82ef67268cca",
          "name": "credentials_issue.credential.issuer:dup"
        },
        "response": {
          "id": "22518be5-4f52-40c8-9f3f-1d72322b22f6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 132
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:102)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 1,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:2:102)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:3:102)"
            }
          }
        ]
      },
      {
        "id": "69c4f542-620b-4921-bfbd-39e85e0f00e8",
        "cursor": {
          "ref": "6499be98-1550-4165-8776-274158a2bb78",
          "length": 250,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "f43b6da2-61c8-4329-a755-be291008ee0a"
        },
        "item": {
          "id": "69c4f542-620b-4921-bfbd-39e85e0f00e8",
          "name": "credentials_issue"
        },
        "response": {
          "id": "3f18200f-daf9-4111-9c3c-fa9ccf88a646",
          "status": "Created",
          "code": 201,
          "responseTime": 9044,
          "responseSize": 1222
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false
          }
        ]
      },
      {
        "id": "399099df-af59-49eb-9ca5-e140fadc9172",
        "cursor": {
          "ref": "ecd02267-e3c6-401d-8173-819cb9210de6",
          "length": 250,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "c9c0151e-c74f-4e00-b693-1400c3701e30"
        },
        "item": {
          "id": "399099df-af59-49eb-9ca5-e140fadc9172",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "33ffc864-d4e6-4a70-af4b-78f6dd5082d9",
          "status": "Created",
          "code": 201,
          "responseTime": 8588,
          "responseSize": 1224
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "2495dcd6-9c6d-446d-9b3d-d8e58ec5cee1",
        "cursor": {
          "ref": "9fb7e31e-1ad9-45ad-a5d5-15cb3099a4c9",
          "length": 250,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "a2a449f4-96b3-4677-9b28-1612456ca9b5"
        },
        "item": {
          "id": "2495dcd6-9c6d-446d-9b3d-d8e58ec5cee1",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "298a88a9-a23c-491b-91c3-9cb9a24cc579",
          "status": "Created",
          "code": 201,
          "responseTime": 8234,
          "responseSize": 1229
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "cefcc3fd-340e-4662-a754-166b4311357f",
        "cursor": {
          "ref": "2b7b1299-9ae7-4e56-b45e-31d888632390",
          "length": 250,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "a2e11dda-7a44-476f-bd93-71eddc4a7134"
        },
        "item": {
          "id": "cefcc3fd-340e-4662-a754-166b4311357f",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "a29be02b-9b74-4a24-b48a-e72cb797bb8f",
          "status": "Created",
          "code": 201,
          "responseTime": 7769,
          "responseSize": 1235
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f7d6734-1b53-4a02-9529-6b763912d512",
        "cursor": {
          "ref": "f8b6da93-5959-4e9b-bc07-081bec5ef3a1",
          "length": 250,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "01c5a0e5-dfdb-4072-b829-a6705dd7f7d3"
        },
        "item": {
          "id": "7f7d6734-1b53-4a02-9529-6b763912d512",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "c4d6ed9b-6698-48e9-af7e-5b14d7dbb324",
          "status": "Created",
          "code": 201,
          "responseTime": 8368,
          "responseSize": 1224
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response proof.created matches request options.created",
              "message": "expected '2024-06-27T00:39:31Z' to equal '2006-01-02T15:04:05Z'",
              "stack": "AssertionError: expected '2024-06-27T00:39:31Z' to equal '2006-01-02T15:04:05Z'\n   at Object.eval sandbox-script.js:3:107)"
            }
          }
        ]
      },
      {
        "id": "32cd3cd4-f957-44ab-a93c-836c9429414c",
        "cursor": {
          "ref": "a3af8c71-248c-4038-af64-09161604e414",
          "length": 250,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "e3b71a1d-6da9-4892-b0db-550104915a2d"
        },
        "item": {
          "id": "32cd3cd4-f957-44ab-a93c-836c9429414c",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "5e36cd71-ff72-4bbe-94d7-9d3bb71bfc26",
          "status": "Created",
          "code": 201,
          "responseTime": 8388,
          "responseSize": 1222
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "88f5dab9-e701-4dd5-acb4-56793a6c3476",
        "cursor": {
          "ref": "73e84ab2-0978-4ba3-84e7-689fe88417b5",
          "length": 250,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "a153457e-326f-486f-a721-8eee0f7924f5"
        },
        "item": {
          "id": "88f5dab9-e701-4dd5-acb4-56793a6c3476",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "0b0ae14d-cbeb-4265-b9b0-0a3e326c6732",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 80
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5fe1d394-19a4-4b30-941e-592a50873ff8",
        "cursor": {
          "ref": "06099576-20fe-430d-9ba7-5b6982725166",
          "length": 250,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "8c606cab-ca07-4bc8-9917-a616f88c9f99"
        },
        "item": {
          "id": "5fe1d394-19a4-4b30-941e-592a50873ff8",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "d86f96fd-87f7-4070-8a23-82fa3d490be4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cdba6dd8-92c3-429a-b8d5-fc20626a08fe",
        "cursor": {
          "ref": "86942f27-f3e2-45cd-9a11-2a5705e1c406",
          "length": 250,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "943853e4-cb83-4e2a-a9fe-6b3e04525f4d"
        },
        "item": {
          "id": "cdba6dd8-92c3-429a-b8d5-fc20626a08fe",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "9318c30c-7da9-41a0-98b4-fa00ce6bb203",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "09382879-1ca1-49ae-8a25-7004c4166e5d",
        "cursor": {
          "ref": "6ae221cb-802c-482d-9347-da922a71e938",
          "length": 250,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "42a0d412-b758-49e0-85cc-54f2cde605a4"
        },
        "item": {
          "id": "09382879-1ca1-49ae-8a25-7004c4166e5d",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "7748e9ce-190d-43af-a4f6-c48c66080ee9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fb88c09a-b8e5-4824-ba48-ded327b44d50",
        "cursor": {
          "ref": "58d4be5d-6d62-43e9-8dd3-c706bf11b728",
          "length": 250,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "55ad5fa7-4ad2-4e96-af91-0e04232146ea"
        },
        "item": {
          "id": "fb88c09a-b8e5-4824-ba48-ded327b44d50",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "b500e30b-9827-412b-822b-ff708028df59",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "74a8b687-c73f-404f-81de-cf0af9e329e9",
        "cursor": {
          "ref": "cc4ca1be-5ca5-40db-9410-5c028bc1b268",
          "length": 250,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "43366451-90bc-40ea-a332-43a9ab4ea5e7"
        },
        "item": {
          "id": "74a8b687-c73f-404f-81de-cf0af9e329e9",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "e8452e2a-38e5-4f2c-b7d5-61b814c4edde",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "60349270-966e-4791-808d-23c8de540987",
        "cursor": {
          "ref": "b04584d3-abe2-48f4-badd-18eb005f8507",
          "length": 250,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "367c2ed9-0485-4493-b5a9-3f5d36df3697"
        },
        "item": {
          "id": "60349270-966e-4791-808d-23c8de540987",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "6818f4b5-2a72-42f2-9619-c51c343e0127",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "962fcf02-7bc4-4f54-93eb-424281e351eb",
        "cursor": {
          "ref": "ee042e1a-4220-4652-8c97-783b43a53642",
          "length": 250,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "00907a45-3914-40d5-8072-dd469e6c2873"
        },
        "item": {
          "id": "962fcf02-7bc4-4f54-93eb-424281e351eb",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "ec1aa40f-3833-4ce7-9700-d43cfb797b1f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9b9e48b5-b58f-4e84-a0ec-12d513deaede",
        "cursor": {
          "ref": "e1e36943-b884-4a49-bdb9-697688a6a1a5",
          "length": 250,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "e336c7a2-fdee-4a4f-a1ed-14b518351c2e"
        },
        "item": {
          "id": "9b9e48b5-b58f-4e84-a0ec-12d513deaede",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "51d3fa44-4fd7-4fd3-b188-bb0c08b9fac6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "25aad0e1-b5fa-460b-98a1-ee12d24992db",
        "cursor": {
          "ref": "e0ffed3f-e6d4-4af3-a6ca-6657c717a2e0",
          "length": 250,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "b2773b22-d776-4d6f-b674-3ef50e957b67"
        },
        "item": {
          "id": "25aad0e1-b5fa-460b-98a1-ee12d24992db",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "b91ab0f5-283e-499e-9fc8-4b4a87aaa9ea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9068e7c7-bb17-4c38-bb93-85481a7d46e3",
        "cursor": {
          "ref": "57a5adb0-06d4-4b32-bdfc-b407e6787c4f",
          "length": 250,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "4448cedd-5380-49ec-af5f-c07e5d564915"
        },
        "item": {
          "id": "9068e7c7-bb17-4c38-bb93-85481a7d46e3",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "faffb42c-2c37-4e89-8443-5d972c7fbe4b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "240af5ac-5dba-41c3-bfbb-1e66bbaa47dc",
        "cursor": {
          "ref": "61546e89-c673-4eda-bfcd-b77f1a9c6675",
          "length": 250,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "df7eaa12-d944-400a-99f0-f57c0585f8db"
        },
        "item": {
          "id": "240af5ac-5dba-41c3-bfbb-1e66bbaa47dc",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "0906f989-1822-42d1-b56e-5a199e09c47f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "29a05da3-32fd-4c80-bf3c-790405a4551f",
        "cursor": {
          "ref": "f897bd11-5dbd-459c-a9d2-817fe5939880",
          "length": 250,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "aba0ec7d-dcce-4a3f-9426-f06288f727d2"
        },
        "item": {
          "id": "29a05da3-32fd-4c80-bf3c-790405a4551f",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "39cc2eb8-1a5f-47ca-89ed-82200beda263",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6879a534-7f7c-4e57-a412-20ad9edd15b1",
        "cursor": {
          "ref": "b52c5123-6b39-488d-9487-6d048aac4397",
          "length": 250,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "342f2c66-0c77-449b-a2bf-1838f856b715"
        },
        "item": {
          "id": "6879a534-7f7c-4e57-a412-20ad9edd15b1",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "0450813d-cfe6-4fed-8887-47f9a80f9ba4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f9af0a8-1743-47aa-a91f-ea0d22197325",
        "cursor": {
          "ref": "36c23603-c9ac-44ec-89f7-3dd362259801",
          "length": 250,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "540dd13a-ecd4-4bf5-9a68-ce262da13a3a"
        },
        "item": {
          "id": "7f9af0a8-1743-47aa-a91f-ea0d22197325",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "ecd4ebc1-bc52-4b63-80f8-5946074765ae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c103e22c-7da9-409c-8cc5-8553ab443b1c",
        "cursor": {
          "ref": "072325ae-5aad-4dee-b220-17a2ecea1df1",
          "length": 250,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "e6f6735e-720a-41a5-951f-edc1e7b01709"
        },
        "item": {
          "id": "c103e22c-7da9-409c-8cc5-8553ab443b1c",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "eca53253-cfda-4e99-bf99-4bc6fdb9f801",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ed5e8ec-3a19-4676-a971-5c010a9489f6",
        "cursor": {
          "ref": "349903ab-4615-4089-8971-14423a7f33e8",
          "length": 250,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "7d692ff1-0468-4e43-8552-b37201661088"
        },
        "item": {
          "id": "3ed5e8ec-3a19-4676-a971-5c010a9489f6",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "b4e7f232-4a73-4ac0-b3ae-9a0a404544f4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0aefcf9e-b19c-4760-b542-af9a877649f5",
        "cursor": {
          "ref": "923dfb6d-fce1-4cac-baed-09f50016d0ae",
          "length": 250,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "276bee7d-64a7-4526-a8f5-0e2ef8e41dac"
        },
        "item": {
          "id": "0aefcf9e-b19c-4760-b542-af9a877649f5",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "9ee971c4-9fab-4575-8489-63f6aed318c8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8c018714-dd2c-492e-bb71-61b0b370b3ae",
        "cursor": {
          "ref": "3e5fb8d9-dbc0-426e-a5f3-11c3fefeee74",
          "length": 250,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "6a4ed25d-c48e-49c5-8415-e89629e9ea7b"
        },
        "item": {
          "id": "8c018714-dd2c-492e-bb71-61b0b370b3ae",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "a689b5f1-17e5-4798-80d8-ef818f72663d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 95,
          "responseSize": 93
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "88073a7e-cf35-40a6-9460-b6dab015a085",
        "cursor": {
          "ref": "a0c56151-e15f-4304-bd22-6e0a743c6009",
          "length": 250,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "56b36519-43c6-43dd-8d29-33527cedf472"
        },
        "item": {
          "id": "88073a7e-cf35-40a6-9460-b6dab015a085",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "4c1b9b14-f91c-42b2-aca2-6c4c5259c494",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "162b9773-51fe-4c27-addb-78e4c934a716",
        "cursor": {
          "ref": "13e8d683-85e4-4787-a6f0-8e1352454172",
          "length": 250,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "d285b0c0-d03c-4482-ab1a-ae6e6b994e22"
        },
        "item": {
          "id": "162b9773-51fe-4c27-addb-78e4c934a716",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "a0ecfc4a-89f1-4b07-b31b-2889553684c1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c11d1422-1cdb-4de1-98cf-e1ff1086cf0f",
        "cursor": {
          "ref": "0456b61f-e890-48c6-8d3e-c1a6c5a7231a",
          "length": 250,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "dcfec6d0-2008-4e31-91c3-da3de6f57a29"
        },
        "item": {
          "id": "c11d1422-1cdb-4de1-98cf-e1ff1086cf0f",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "5f40d8a0-41f1-4935-bd43-35a143d1b93e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cf1ed5a0-82e2-47f6-8a2a-f588c5548db0",
        "cursor": {
          "ref": "d2e32eaa-d7e8-4bfe-b634-3d3175583c34",
          "length": 250,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "ac68efed-0fc5-4b23-9dcf-b32703bd61d7"
        },
        "item": {
          "id": "cf1ed5a0-82e2-47f6-8a2a-f588c5548db0",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "686b6cf2-cea7-4c32-91c8-ce0c284d2362",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "24132b89-ac7d-440a-8e7d-7cc05fdae7d0",
        "cursor": {
          "ref": "96fe832c-042f-40bb-a4c2-8c92a0531c87",
          "length": 250,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "618c3537-fce0-43d2-b951-0149237fae9c"
        },
        "item": {
          "id": "24132b89-ac7d-440a-8e7d-7cc05fdae7d0",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "7e53e5d8-21d6-4698-9785-ddcd7620113c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9879123b-3470-4884-bdd7-53343a06d4c5",
        "cursor": {
          "ref": "1d31dd9f-bdc0-4260-b8a7-12cb3d61c01f",
          "length": 250,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "76737e20-f286-4f76-8ae1-6ff2acab38f4"
        },
        "item": {
          "id": "9879123b-3470-4884-bdd7-53343a06d4c5",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "417b8d75-9c70-4c1f-ac36-f3c41873ebf0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 108
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d09ee27e-6d2d-4506-addc-15b653325755",
        "cursor": {
          "ref": "a143dfad-c307-4847-9ac1-9cefe8523378",
          "length": 250,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "6ec0e6c0-94be-4857-b23a-6ff22d10f6df"
        },
        "item": {
          "id": "d09ee27e-6d2d-4506-addc-15b653325755",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "4e5ea8b4-f989-47d4-865c-5357c2a94cfc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 95
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "04065dc1-f5b7-4b44-b3b3-ff2bc89ddcfc",
        "cursor": {
          "ref": "af00d1fa-cc32-4d43-9a93-1be88a4b303e",
          "length": 250,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "ac58156b-2a54-4b09-85c2-5f5f90ec8e8a"
        },
        "item": {
          "id": "04065dc1-f5b7-4b44-b3b3-ff2bc89ddcfc",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "bed522d7-1e7a-4390-a733-0ca5e2c1c5a9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "693fb495-75df-43bc-8692-73b43a0e3496",
        "cursor": {
          "ref": "fd968dec-6060-44c1-b414-2de79b59979d",
          "length": 250,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "c077b6a7-e6d8-484f-8408-4e8de39373b5"
        },
        "item": {
          "id": "693fb495-75df-43bc-8692-73b43a0e3496",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "30148f0b-aaf4-4269-9fff-045cff402dbc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0b8d4bec-534b-491d-8ca6-94fe3a936b7e",
        "cursor": {
          "ref": "3917f7b8-f182-4d66-a92d-f79e1cfda835",
          "length": 250,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "5fa00948-f7f3-49e2-8986-65a9b4d3a9d9"
        },
        "item": {
          "id": "0b8d4bec-534b-491d-8ca6-94fe3a936b7e",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "baafdf0a-b89d-4042-9e75-280a10e6e8dd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c6afa8d-64e2-4391-a95e-4498ae31c11c",
        "cursor": {
          "ref": "50580938-9094-4dc7-b118-d76c6cad4b75",
          "length": 250,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "9e39e2ed-f455-4940-b5e4-9b6fa2d63ab3"
        },
        "item": {
          "id": "2c6afa8d-64e2-4391-a95e-4498ae31c11c",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "80ad0c08-9e31-4ed8-a7cd-6c2267ac8239",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eb573d20-72ba-473c-a882-e85a13bc8465",
        "cursor": {
          "ref": "9c141a17-9969-43e7-974b-b9515d76fa5b",
          "length": 250,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "e2219341-9dfe-4c3a-803b-8862f2e3a14e"
        },
        "item": {
          "id": "eb573d20-72ba-473c-a882-e85a13bc8465",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "34bd14df-29cd-4052-9ca1-d946e1c43f71",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "28c6f884-efc7-4608-9e91-6abe12c2f92d",
        "cursor": {
          "ref": "2894f992-eea3-4b8b-8853-8d8f467a3e04",
          "length": 250,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "0ec5a7c5-5509-4b06-9f6b-cc76d5d1c985"
        },
        "item": {
          "id": "28c6f884-efc7-4608-9e91-6abe12c2f92d",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "02717aa6-ae1b-4b00-a5df-d575318a5c68",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "51c58043-197d-4459-9f33-8c025458cc8d",
        "cursor": {
          "ref": "64df9c84-9925-4237-9ccd-b8b639111cc0",
          "length": 250,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "5bf07015-2766-4613-8ab9-f891aecb721e"
        },
        "item": {
          "id": "51c58043-197d-4459-9f33-8c025458cc8d",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "5a8c819d-202b-41d2-997a-891c8d7407ff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cec8cbab-027d-4803-8b39-44a3e343a9d5",
        "cursor": {
          "ref": "9ce55e5f-7a9a-4806-9919-cd910a9eb87d",
          "length": 250,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "1bd7c9b1-9695-49b6-96d4-29ab652a30cc"
        },
        "item": {
          "id": "cec8cbab-027d-4803-8b39-44a3e343a9d5",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "13144fdc-ba03-44b2-8367-b920f32bac5b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ba9d034-f9c1-452a-aebb-a5fb1d0f3f36",
        "cursor": {
          "ref": "3b76b813-649e-41f5-b4cf-58ef1db4cc54",
          "length": 250,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "2b585f3e-69c7-4eed-940e-601c7919f7c4"
        },
        "item": {
          "id": "8ba9d034-f9c1-452a-aebb-a5fb1d0f3f36",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "884a499a-31cd-49df-916f-39f855c3da95",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a3a8adb1-e55f-4360-883a-e8b29ba35376",
        "cursor": {
          "ref": "c9263ce7-eb77-4ba3-9f18-d102b4fafca5",
          "length": 250,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "68e06aa6-7c68-46db-a32c-96cff49711ba"
        },
        "item": {
          "id": "a3a8adb1-e55f-4360-883a-e8b29ba35376",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "11283299-34ba-4e55-8a09-9503915a0ecb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1ca19887-35ab-4304-a576-92cbdf88af47",
        "cursor": {
          "ref": "14ffccd7-f388-4732-bc03-74f8e9065e3a",
          "length": 250,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "f6cd1add-f103-4e4f-a242-62bd873f42ad"
        },
        "item": {
          "id": "1ca19887-35ab-4304-a576-92cbdf88af47",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "92113b10-e216-43d4-afcb-75aac7df05cc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "372b4438-5eb8-4b95-bebc-d36ae3e669ff",
        "cursor": {
          "ref": "8dba4dd0-610d-42d2-ae5b-be5d1d29cc75",
          "length": 250,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "319c5fe2-731e-49f2-b22f-85711a74b780"
        },
        "item": {
          "id": "372b4438-5eb8-4b95-bebc-d36ae3e669ff",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "34729dae-704e-47fd-a334-4cbfc49d453a",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 75,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "895ca148-f71c-44b0-9247-a366ca8a8cdd",
        "cursor": {
          "ref": "ba458523-8f5b-4b13-af13-b243ef9e5f7e",
          "length": 250,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "4a81c624-eb76-46dc-9eaa-936186db8e91"
        },
        "item": {
          "id": "895ca148-f71c-44b0-9247-a366ca8a8cdd",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "a55777d9-f262-4fe8-8088-3e7ce5041159",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 88
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8c59f4f7-81c1-44f1-81ad-cdf75f90391f",
        "cursor": {
          "ref": "da2f4adb-766d-4c83-a800-d6a48e915109",
          "length": 250,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "cf837fa3-ae2c-4e3c-89a4-e6c0ed2bdc07"
        },
        "item": {
          "id": "8c59f4f7-81c1-44f1-81ad-cdf75f90391f",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "cf6d0bfb-db60-4af1-9e94-cff69f732d79",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d523386e-f279-43f9-9d7d-aa8abffc7635",
        "cursor": {
          "ref": "c6dc66d8-bffc-4d85-ba05-e5c8cbd5a0b8",
          "length": 250,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "b6cf7c43-085d-460f-babe-a487cdabfbd6"
        },
        "item": {
          "id": "d523386e-f279-43f9-9d7d-aa8abffc7635",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "869425df-e882-4cef-88a2-27613f3abfd9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2b708afa-82f8-446f-b79b-8702ab19d063",
        "cursor": {
          "ref": "ab720d01-d518-4751-966f-4c801c332afd",
          "length": 250,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "ff824443-7c65-4549-b26f-9210aa1ddada"
        },
        "item": {
          "id": "2b708afa-82f8-446f-b79b-8702ab19d063",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "572d027b-b3c4-4415-bd0b-e009eed2e336",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ee94d0dd-981b-4aa5-aef6-d6065fbf31ba",
        "cursor": {
          "ref": "e55aab2f-c033-42b9-ab14-2ac7760a8bee",
          "length": 250,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "8813e02e-55a4-4d53-880b-69c550aa6f51"
        },
        "item": {
          "id": "ee94d0dd-981b-4aa5-aef6-d6065fbf31ba",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "2569d096-417e-4abe-a8f3-e05ddfdf4039",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "71fc11a9-f226-4a3a-a5f4-6a5b09e6dbc8",
        "cursor": {
          "ref": "2c512672-30be-432b-8518-52c69e93789f",
          "length": 250,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "587f941a-0325-46a8-ad63-16c6719c72cf"
        },
        "item": {
          "id": "71fc11a9-f226-4a3a-a5f4-6a5b09e6dbc8",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "24ca4ddc-7d98-4517-af87-5031d2ea4ab3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 86,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c08064d2-4d50-4695-9364-2516cfa51099",
        "cursor": {
          "ref": "a0a1af34-b5f0-4953-b626-94a9b8e39475",
          "length": 250,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "46a24ef4-a913-4636-af66-1b1d4e35491b"
        },
        "item": {
          "id": "c08064d2-4d50-4695-9364-2516cfa51099",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "7f6d8d13-4cc5-40b4-bbf7-c92ebd1392c9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 99
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "84505c50-ceb1-4837-a62a-b982f35c36af",
        "cursor": {
          "ref": "397491ad-7ef1-4f61-9c2e-f615319eebca",
          "length": 250,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "755eb39a-6d21-4368-b9c4-7b7e454f9038"
        },
        "item": {
          "id": "84505c50-ceb1-4837-a62a-b982f35c36af",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "a2742419-bb7d-42f0-92bb-3488c0ebb3e1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ffc79a23-b1d5-4d7d-8bd9-f7f6bde481f9",
        "cursor": {
          "ref": "80a73d76-91b2-4689-a136-e2acfcbe42dd",
          "length": 250,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "b82598e3-672a-4c66-a636-49be65d2405a"
        },
        "item": {
          "id": "ffc79a23-b1d5-4d7d-8bd9-f7f6bde481f9",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "b0cb587d-7785-451b-a967-8b0ddae155ed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "741c39af-2441-4afa-8f22-15c718bf52dc",
        "cursor": {
          "ref": "8d61c196-094f-446f-9e3c-d807003898e6",
          "length": 250,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "14d03166-71a1-4902-82fe-55f451c3fd94"
        },
        "item": {
          "id": "741c39af-2441-4afa-8f22-15c718bf52dc",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "236336ff-dc2a-4ec2-8ac6-c836c4994ad8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3a95b501-8b0b-4210-92f1-0142a3afe37f",
        "cursor": {
          "ref": "58fac759-29a7-4487-8575-2ba47b1b809d",
          "length": 250,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "3677b838-f137-4888-809c-5148021d4d64"
        },
        "item": {
          "id": "3a95b501-8b0b-4210-92f1-0142a3afe37f",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "c1a87213-a9b2-433d-9513-1ee194052096",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "37832069-0b6c-45de-9627-7ab3dda07517",
        "cursor": {
          "ref": "f56d8074-cc56-4bb1-8e8a-b03d4e12f038",
          "length": 250,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "095e62ba-886d-4792-9b93-f32e70253f92"
        },
        "item": {
          "id": "37832069-0b6c-45de-9627-7ab3dda07517",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "a863b56b-db32-4679-b26c-f2cf04ea2acf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8daa4cd4-7dde-4c22-8ead-28c64db98dfa",
        "cursor": {
          "ref": "10270e14-aefb-4f42-af0d-3e8a8274128b",
          "length": 250,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "6a54d5e3-c95f-4a45-b220-74ecacbaa3ed"
        },
        "item": {
          "id": "8daa4cd4-7dde-4c22-8ead-28c64db98dfa",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "62b521db-fe6b-4e75-9ca5-5feac140ce80",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2480a785-6bce-4d91-95c3-a1e9755cbfb7",
        "cursor": {
          "ref": "9fcf5f8e-200e-4f30-90ea-4c43534d5a38",
          "length": 250,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "602b1bd5-1e39-4fd9-b3a1-7094c695ac0b"
        },
        "item": {
          "id": "2480a785-6bce-4d91-95c3-a1e9755cbfb7",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "0aeeac6b-789f-4c2a-bc8c-336d88621023",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bbd5c1ef-ea34-45c0-8b4f-95fcd92293c6",
        "cursor": {
          "ref": "cfc2c8a2-5297-4a29-9874-efb606ac6599",
          "length": 250,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "4248bb8c-5cd2-4d4a-a0f3-abb910da789e"
        },
        "item": {
          "id": "bbd5c1ef-ea34-45c0-8b4f-95fcd92293c6",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "fc427118-cf28-4a53-95aa-a1753e9d1726",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c5be107a-dd46-421c-9eac-3df60d0845ae",
        "cursor": {
          "ref": "2ccf56ae-e2b4-4880-80b6-d0b5e4b9fb7a",
          "length": 250,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "95235290-2800-450e-83a2-aaf4850d9bcc"
        },
        "item": {
          "id": "c5be107a-dd46-421c-9eac-3df60d0845ae",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "a744d296-c974-42f9-bd9e-ed864d8e2b74",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc103227-d88d-4b76-a8fb-7487c023c6d5",
        "cursor": {
          "ref": "9fe07981-bdb2-4d5d-8c9e-5e3f7aef02a5",
          "length": 250,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "72b3f56a-e6ad-4c8a-ba33-7c511c967b5d"
        },
        "item": {
          "id": "fc103227-d88d-4b76-a8fb-7487c023c6d5",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "e470b726-74a9-4f87-996e-41c4237c5afb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fd41ec18-6d82-40c4-a3a4-d06477c2c6fc",
        "cursor": {
          "ref": "999f004b-10bd-4a87-8fd8-2ea304a4047c",
          "length": 250,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "5a8dba96-0854-496d-9316-d49faee85b77"
        },
        "item": {
          "id": "fd41ec18-6d82-40c4-a3a4-d06477c2c6fc",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "da036b51-8c4d-4499-99e8-7f848c34439b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3488b1ad-be8c-48a4-8089-a8357cb46f0d",
        "cursor": {
          "ref": "9883c37a-b441-4d73-ad9a-59010309584c",
          "length": 250,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "2985420d-d52a-4863-94c6-51361f8fc055"
        },
        "item": {
          "id": "3488b1ad-be8c-48a4-8089-a8357cb46f0d",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "d6c80da0-fdee-4279-9f93-c86c74f07ffe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "09ec4b63-1bde-4f45-a981-2c0b07b6b3c7",
        "cursor": {
          "ref": "130cb22d-24a8-4d8a-8f5f-b9cca0bf9bfd",
          "length": 250,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "78f1830b-4fda-48d8-9a7d-73d65965a2aa"
        },
        "item": {
          "id": "09ec4b63-1bde-4f45-a981-2c0b07b6b3c7",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "c93b6d12-3c8d-4acf-b188-de39a0a01ccd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "892e26d0-5205-4128-adef-56e0a85ebce8",
        "cursor": {
          "ref": "69ab5a04-f4ea-4d00-8c31-10a087cb2540",
          "length": 250,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "1975fa67-ffa6-4b27-b10c-43c51c590c98"
        },
        "item": {
          "id": "892e26d0-5205-4128-adef-56e0a85ebce8",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "95439613-1c5c-46da-ada9-4fb226f31f34",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cfa51362-f864-4440-b8dc-d2d091d1c51f",
        "cursor": {
          "ref": "ee31cbf7-c1cd-46af-a255-153e48c7ab53",
          "length": 250,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "c581c6e1-1453-4e44-b585-f05c2c73eb4e"
        },
        "item": {
          "id": "cfa51362-f864-4440-b8dc-d2d091d1c51f",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "00e8dc63-a3f2-43cd-8f19-f99b0203c6bf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e495832e-bcaa-4b87-bad6-8cc679a8b2f7",
        "cursor": {
          "ref": "aca5e0ec-703d-455b-8df2-281b0ff4a379",
          "length": 250,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "4f4ef41d-0598-4704-b827-a950cb97df06"
        },
        "item": {
          "id": "e495832e-bcaa-4b87-bad6-8cc679a8b2f7",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "4319f18d-5ea6-46d7-aa8a-4c824df7e070",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 95
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "350ebf0a-fda1-47fb-bcb0-b879b4973a1d",
        "cursor": {
          "ref": "279b0d54-89b0-4843-83f0-4222dacda0d1",
          "length": 250,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "6dca57bb-2199-4b95-8997-572e140a1535"
        },
        "item": {
          "id": "350ebf0a-fda1-47fb-bcb0-b879b4973a1d",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "6d162003-01cf-474f-956c-7522503f0fc3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f53a487-50ad-4060-89dd-30da9c795e23",
        "cursor": {
          "ref": "7ee1a8cd-5bb7-4105-ba70-4d800f3fc04b",
          "length": 250,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "177d3b5e-be9a-44f0-b5da-b6b43bb93802"
        },
        "item": {
          "id": "1f53a487-50ad-4060-89dd-30da9c795e23",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "1fdf8d67-98d7-450b-9dd9-63b5d681d0d6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b827af1f-ebb7-4995-9b3c-320df002c39a",
        "cursor": {
          "ref": "f8cc213f-e27c-4f2b-84ae-befcfcd24076",
          "length": 250,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "7b276a7b-18d6-41ff-8d99-55271d35ebc0"
        },
        "item": {
          "id": "b827af1f-ebb7-4995-9b3c-320df002c39a",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "df7cb93c-1ddb-44d6-b743-32f8ba9ac172",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d0303303-f893-4938-bdd8-a994a19b9448",
        "cursor": {
          "ref": "b10d05e1-926e-4be0-8683-2669ecb0461f",
          "length": 250,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "f0632761-3c70-4be1-8cd2-029ad4c62e29"
        },
        "item": {
          "id": "d0303303-f893-4938-bdd8-a994a19b9448",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "5cacbe19-950a-4ce2-b633-5b4c8acda8c1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 94,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f4c3512d-f7e1-483a-a86f-41e95f35ea81",
        "cursor": {
          "ref": "2c58201d-8426-4b7a-a780-f72c64bb7aef",
          "length": 250,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "474ec165-4885-427f-95ba-3068df50f73e"
        },
        "item": {
          "id": "f4c3512d-f7e1-483a-a86f-41e95f35ea81",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "56115c79-5967-4a72-adf8-4041c71595ff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f5065c8b-aef5-4ae3-97ba-3c6be03ea50b",
        "cursor": {
          "ref": "e49dfc47-ffbb-4714-a018-e3fe4b24d901",
          "length": 250,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "4223a39b-b36d-4757-b49b-cb551e4286fa"
        },
        "item": {
          "id": "f5065c8b-aef5-4ae3-97ba-3c6be03ea50b",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "c16dadf8-55fc-4b46-b7a5-7250bdfb63d6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4eed88ff-1d50-493a-b63c-404e20ac9b94",
        "cursor": {
          "ref": "4059a5cd-4a8a-4b36-8e0a-86bd2468af12",
          "length": 250,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "b46be1c3-96f0-44d1-88dc-0285be5b44a2"
        },
        "item": {
          "id": "4eed88ff-1d50-493a-b63c-404e20ac9b94",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "da91ad58-f8f7-4dd8-9b7a-1dfcb0901c7a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 117
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "59fff4cb-584e-48df-999e-c8d06591d21a",
        "cursor": {
          "ref": "2988ad2d-3bb6-4ad1-99a8-b605d9328662",
          "length": 250,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "3eda9a28-6822-4220-a336-8a45e6daf493"
        },
        "item": {
          "id": "59fff4cb-584e-48df-999e-c8d06591d21a",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "956032d1-50b8-4132-b0d5-1332e9394862",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 117
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cf336b83-9df9-4d2f-850b-52d9a334b723",
        "cursor": {
          "ref": "9925f966-89f5-42fa-9f22-abe9105d0524",
          "length": 250,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "51a7ad8d-b38e-4bb1-b99a-1f398919ba3d"
        },
        "item": {
          "id": "cf336b83-9df9-4d2f-850b-52d9a334b723",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "0088ddd9-1856-4ba3-a480-4b5f56fa84a6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 117
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "630a0e7b-ceb3-48d6-9a81-666b1643b4ff",
        "cursor": {
          "ref": "78b72184-52d4-4a08-8c0b-73048f3c4f99",
          "length": 250,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "cbb766e6-7456-4491-bce5-8e9071d65ba9"
        },
        "item": {
          "id": "630a0e7b-ceb3-48d6-9a81-666b1643b4ff",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "89245118-2736-4dd2-9a1c-0da7f72aaeb0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 117
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bfc8ec56-c0e0-47b2-8f9c-79597b6ad20a",
        "cursor": {
          "ref": "359269d3-1d8a-4010-830e-bbfa32702479",
          "length": 250,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "4b643990-1ed3-4639-8cb9-9556f179f9a7"
        },
        "item": {
          "id": "bfc8ec56-c0e0-47b2-8f9c-79597b6ad20a",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "fb59035f-a1a7-4db1-8192-2765be3ed8a1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 117
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a9279ec-1aa2-4144-ab91-2abe4304e2da",
        "cursor": {
          "ref": "08b7cf33-e582-4b5a-9bfa-5f104d91c064",
          "length": 250,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "a4ac9b79-ae5b-4332-8975-825be551be0c"
        },
        "item": {
          "id": "4a9279ec-1aa2-4144-ab91-2abe4304e2da",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "bd0f351f-23c6-40c5-8713-0cfd56ce4c82",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 97
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1de35ef0-3c9c-4120-9360-f46118ed4153",
        "cursor": {
          "ref": "f4f3c5e6-d399-43a8-96f5-34529d94cf37",
          "length": 250,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "e5cb5bfb-5349-4b4f-91f6-26d2daa58edd"
        },
        "item": {
          "id": "1de35ef0-3c9c-4120-9360-f46118ed4153",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "34ac7e68-428a-4688-9297-309680ce3ab7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 135
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fcbd17a8-8f40-4d7a-acf3-d1dff9194c5c",
        "cursor": {
          "ref": "55321fc3-dde6-47f6-a368-c8ce37def675",
          "length": 250,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "5ab5b5b5-88f4-4410-b52d-e72cc5b28941"
        },
        "item": {
          "id": "fcbd17a8-8f40-4d7a-acf3-d1dff9194c5c",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "13640d3a-6f42-44ba-ad57-57e1f7a67878",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 135
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "082be069-525d-41d4-96f5-5838effb37f6",
        "cursor": {
          "ref": "3291c1b3-a79b-404d-a6a0-7af9eaa33d51",
          "length": 250,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "62fd80e8-71b8-4a69-9a7b-03ca0942de6a"
        },
        "item": {
          "id": "082be069-525d-41d4-96f5-5838effb37f6",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "759d36e8-00dd-4847-8fed-9abd8a4ece35",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 135
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d4b18b3d-87ee-44ce-9b0b-5bb77f322d35",
        "cursor": {
          "ref": "03b7d05d-cb8c-4ff2-87cd-3690fc222f60",
          "length": 250,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "e4b62bdf-23a1-4a9e-b511-cd5144df7a19"
        },
        "item": {
          "id": "d4b18b3d-87ee-44ce-9b0b-5bb77f322d35",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "7c52224f-7b2b-4ab1-9286-5013438345be",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 135
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bbbce630-2cec-46c2-ae1e-3944e8a309cb",
        "cursor": {
          "ref": "bc6a0e70-07d3-4d9a-9e9c-05bf7f7b07ec",
          "length": 250,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "57b2197d-0f3c-4b8f-ad58-f92492a4bc1c"
        },
        "item": {
          "id": "bbbce630-2cec-46c2-ae1e-3944e8a309cb",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "12702141-6ef9-47c5-8742-acf6fb8fe1b1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a7ae750-2ecd-4b0a-86e7-ce2a3929c8d9",
        "cursor": {
          "ref": "80d07eff-cb3e-4ce9-9c89-3880960251e5",
          "length": 250,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "f9fbafde-1ea8-4921-ac01-7f57b17d0235"
        },
        "item": {
          "id": "5a7ae750-2ecd-4b0a-86e7-ce2a3929c8d9",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "3d5c1217-8d93-4971-aa64-15d35bb8eff6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 138
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fb7f91c7-39ed-4c4e-8f69-525059595dca",
        "cursor": {
          "ref": "de087fa5-e9c6-4388-ad14-eb642ce065c9",
          "length": 250,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "88cde2b2-8337-4f73-b389-05709e660926"
        },
        "item": {
          "id": "fb7f91c7-39ed-4c4e-8f69-525059595dca",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "7030033c-e87e-4071-81c3-ce13025ad31f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 138
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f2ff189f-1b41-4dde-90bb-a10e12157a0a",
        "cursor": {
          "ref": "af0a465f-8e3e-4336-b788-ea3037cbba75",
          "length": 250,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "9edf58f1-82f0-49eb-bd3f-9cf3f33073cb"
        },
        "item": {
          "id": "f2ff189f-1b41-4dde-90bb-a10e12157a0a",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "9deeb351-3ecc-4855-8bbc-0624c8658ddd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 138
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5fbbb751-ca50-4657-a4f4-add637b8d6c8",
        "cursor": {
          "ref": "328831f8-0930-4563-95c6-2ae8664aeb1b",
          "length": 250,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "2811836c-a397-41ca-866a-b4247e220b9d"
        },
        "item": {
          "id": "5fbbb751-ca50-4657-a4f4-add637b8d6c8",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "e5b17b4b-93cc-4bd8-9673-4f3a197fdda7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 138
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "66b73b51-a990-4391-a20e-88d1a24ed846",
        "cursor": {
          "ref": "c7df708a-bee8-4156-a10a-1711c7e5dbee",
          "length": 250,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "7e90b3c9-7f9b-4949-a7ca-c9849bf99b3c"
        },
        "item": {
          "id": "66b73b51-a990-4391-a20e-88d1a24ed846",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "3f300742-8580-4c91-9732-4e19c653a61a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 138
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e588ca7-1d0a-4c95-b4a9-a8033aeb4861",
        "cursor": {
          "ref": "f2ebd27e-91e7-4ef8-9ef4-5fdf2a946318",
          "length": 250,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "df2e108c-2c3e-4801-8d82-6ab3d2118ee0"
        },
        "item": {
          "id": "1e588ca7-1d0a-4c95-b4a9-a8033aeb4861",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "76f27e8e-f9ef-4188-936f-1ef22a08f643",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 103
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5f92552e-0e49-42e3-a6f7-533918e02b78",
        "cursor": {
          "ref": "e241e370-2a90-48ad-a088-2185c60368ea",
          "length": 250,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "a233f22a-16d7-421d-87e2-2210316015b2"
        },
        "item": {
          "id": "5f92552e-0e49-42e3-a6f7-533918e02b78",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "8c45956c-e8b0-4351-ae80-a0204055d954",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 123
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "25f27751-f268-4bf4-93be-d3c127107e4c",
        "cursor": {
          "ref": "7b6e638e-9cb1-4c84-99c5-9f5041ea29ec",
          "length": 250,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "837e123b-de2e-4eb6-8718-7415a026a6ef"
        },
        "item": {
          "id": "25f27751-f268-4bf4-93be-d3c127107e4c",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "856ce8fb-ef20-49d5-a0cf-24c1a1c61933",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 123
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3977d973-3395-45ed-8602-e10920a97c51",
        "cursor": {
          "ref": "9c13bfce-b03b-48a6-807c-8fa8619ea41a",
          "length": 250,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "024f4ca7-a559-49f3-adc3-901a7e138ae2"
        },
        "item": {
          "id": "3977d973-3395-45ed-8602-e10920a97c51",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "bc543a59-295c-4015-a664-187942959f67",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 123
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cceca3a3-7cba-44ba-abd5-0c35a6e522ab",
        "cursor": {
          "ref": "54566c7b-840f-4aaa-930b-c046dd3361da",
          "length": 250,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "9568d266-23b9-4b66-bc83-24eae2999f62"
        },
        "item": {
          "id": "cceca3a3-7cba-44ba-abd5-0c35a6e522ab",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "9c3963d2-a1e5-400e-86c4-95ae4e1b5929",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 123
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "232ac1c9-2dfb-4bf9-be76-39a07ee6324b",
        "cursor": {
          "ref": "1cc0329d-9f45-47f8-ac20-73f4d6582706",
          "length": 250,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "7d57a1d1-e43f-4afd-8833-29b0badde26a"
        },
        "item": {
          "id": "232ac1c9-2dfb-4bf9-be76-39a07ee6324b",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "903fd793-3466-45bc-a468-649b41e75d50",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 123
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0716b6ca-93cf-4aa3-99ec-8cb97486b508",
        "cursor": {
          "ref": "23cd6586-28d6-41aa-bf23-a9397070cb78",
          "length": 250,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "848ac81b-3a9c-4222-b6c7-ab59741d4680"
        },
        "item": {
          "id": "0716b6ca-93cf-4aa3-99ec-8cb97486b508",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "d055c1fa-be6b-43e4-955b-1955c8ef451c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 131
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "667c5338-f4cd-4f06-ae8a-cc09f9314cff",
        "cursor": {
          "ref": "c1d84090-6852-499c-8c8a-852031706774",
          "length": 250,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "fbadbf34-a765-4a41-bc38-fd77e0e046a6"
        },
        "item": {
          "id": "667c5338-f4cd-4f06-ae8a-cc09f9314cff",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "13e853fa-8d04-4ba6-8b85-bd1f0b7eb510",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 108
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "68fd6165-068d-4d65-929a-2c0db920f913",
        "cursor": {
          "ref": "ee2156e4-1901-47d1-be83-74ecc87713e7",
          "length": 250,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "18f8d698-f8ac-49e2-a793-e64b1b93085d"
        },
        "item": {
          "id": "68fd6165-068d-4d65-929a-2c0db920f913",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "b6d3fc18-a149-4961-8cda-39d514d7ed3e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 130
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9d54b717-5905-4bcd-9720-3d1bbf004ac3",
        "cursor": {
          "ref": "1697aef0-8d1e-4663-8bc5-cbed49ba3ae8",
          "length": 250,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "24403918-89a8-467b-9403-c110d6aac45f"
        },
        "item": {
          "id": "9d54b717-5905-4bcd-9720-3d1bbf004ac3",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "68b69ca6-438a-4a5e-a66e-4e9ab3621674",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 130
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c328930c-7132-446d-8d06-87bdc97307d7",
        "cursor": {
          "ref": "56d7b7f3-05d5-4527-9eaf-9571959eca08",
          "length": 250,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "f5df4517-5e79-4745-bd55-244378024707"
        },
        "item": {
          "id": "c328930c-7132-446d-8d06-87bdc97307d7",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "614a0546-5c2f-421f-aeff-d223a1043340",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 130
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f450408d-beb8-4398-ac8b-87102c1a4ea7",
        "cursor": {
          "ref": "10649302-4899-4440-9786-214481c43b48",
          "length": 250,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "f97e940b-5fc5-4b4e-b72b-4b40a272298c"
        },
        "item": {
          "id": "f450408d-beb8-4398-ac8b-87102c1a4ea7",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "7acfca61-b25d-45f0-ae07-b7e8c52d2033",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 130
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "205031f9-f8f3-4b4d-be40-0e8b62ec8f7f",
        "cursor": {
          "ref": "9e121bd3-43cf-4abf-b838-9205495e8b7d",
          "length": 250,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "53facd29-9174-473c-8b09-d468be83c0db"
        },
        "item": {
          "id": "205031f9-f8f3-4b4d-be40-0e8b62ec8f7f",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "9cfe3f35-3057-4e97-91cc-e8e38dfef707",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 130
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3504630a-7082-4399-a98c-1d0fcd34004b",
        "cursor": {
          "ref": "cd1775b3-d9dd-471c-943e-2984fd00de7e",
          "length": 250,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "a15ca1c0-1e54-4469-a6ee-7e315bed122c"
        },
        "item": {
          "id": "3504630a-7082-4399-a98c-1d0fcd34004b",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "b697c5b2-99d0-4e32-8afd-4b861f5cf8aa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 129
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e4c8bb3-4957-4048-b00c-8538552e13f0",
        "cursor": {
          "ref": "9c57578b-0d48-467d-af00-6a9cf3ee2c14",
          "length": 250,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "65554cbb-9486-4d54-9ace-ffbc69df34ff"
        },
        "item": {
          "id": "6e4c8bb3-4957-4048-b00c-8538552e13f0",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "9fadc097-27ab-46d4-b20c-11b510cee7f2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 129
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "236d89f4-5aab-4e4e-8a3f-2c3aa2c208b8",
        "cursor": {
          "ref": "6dd314f2-57da-421f-a76f-e001924c672f",
          "length": 250,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "61ec9554-2110-4951-80b3-39a05b0bb359"
        },
        "item": {
          "id": "236d89f4-5aab-4e4e-8a3f-2c3aa2c208b8",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "c1db1323-b7e0-459b-ab6b-d5c62bd3db51",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 129
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1201f267-8ac0-42fb-b030-f3e36320c7ab",
        "cursor": {
          "ref": "189e94fb-f6f4-41cc-b9c7-7cfd48719a75",
          "length": 250,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "b3bc1f93-847b-44f7-a291-c7c9742ac87a"
        },
        "item": {
          "id": "1201f267-8ac0-42fb-b030-f3e36320c7ab",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "3ed25cf0-14cc-403c-87cc-47bc3eeed200",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 129
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da8855ee-4665-4e57-89ad-575da30b6881",
        "cursor": {
          "ref": "73aa19d2-a829-4dbb-98fb-80dd12c97179",
          "length": 250,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "12002d3c-1cc3-488b-956d-45571dafe8d1"
        },
        "item": {
          "id": "da8855ee-4665-4e57-89ad-575da30b6881",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "7d47ee97-6dad-431f-8839-e7b5b2aaa670",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 129
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1ee9d086-bdba-473e-8122-be7daa35101a",
        "cursor": {
          "ref": "f54d2c0d-d1f6-4f77-9faf-c5584e1598e4",
          "length": 250,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "44ec2c61-3f9d-4296-83e7-453957f6317b"
        },
        "item": {
          "id": "1ee9d086-bdba-473e-8122-be7daa35101a",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "0d3dfa4c-7eba-41ae-91cb-3e5d3495a203",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e7447b6-63b5-49db-8486-8abeb299a7aa",
        "cursor": {
          "ref": "28de0e51-9060-4fec-8ce4-f46fb8466da5",
          "length": 250,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "1b5eff4e-cda9-46a7-a69e-48b8f0a15636"
        },
        "item": {
          "id": "8e7447b6-63b5-49db-8486-8abeb299a7aa",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "10578d72-5665-435a-969b-d8f14c120725",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "206a9ecf-d479-488d-8d4f-9922b22b44f1",
        "cursor": {
          "ref": "9b4d6be4-9d0f-459e-96df-f21f685230bd",
          "length": 250,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "e3aff7e3-e44e-4098-941f-5b159a2cdf3c"
        },
        "item": {
          "id": "206a9ecf-d479-488d-8d4f-9922b22b44f1",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "c2ee43b5-d916-4470-85c8-4c54953c4b3a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac4677f4-d24a-4e14-9461-10548b74ebc0",
        "cursor": {
          "ref": "2c4f4711-c863-4866-93e1-0dcc07311868",
          "length": 250,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "7263c7db-2ce3-4bae-8ca4-1361b88bf234"
        },
        "item": {
          "id": "ac4677f4-d24a-4e14-9461-10548b74ebc0",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "61efbf6d-edbe-4694-befa-87e03b11516d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e4b396c-029c-4f1f-9119-1f3751595002",
        "cursor": {
          "ref": "04a68509-2374-4b9e-b546-2593f894c5f8",
          "length": 250,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "dbc2c5c1-4824-42d1-af32-be4967ff310a"
        },
        "item": {
          "id": "6e4b396c-029c-4f1f-9119-1f3751595002",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "0c2872df-b8a0-4513-ad32-cf74dc5be134",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "164a2c39-a820-4d33-b30b-96146aa525b2",
        "cursor": {
          "ref": "7eb35860-f8c7-442b-b8cf-9e6853368bb9",
          "length": 250,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "29665877-6565-4b0d-ac64-1bc4c7370311"
        },
        "item": {
          "id": "164a2c39-a820-4d33-b30b-96146aa525b2",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "4d6f9f3b-1515-4dd3-adae-8adfac8ab734",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "72cd6d0b-7ef7-415c-899c-c417f384965e",
        "cursor": {
          "ref": "8cc2cc5b-96e4-43c8-974f-a983910fad0a",
          "length": 250,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "5780a5c7-818c-4c16-bdd1-3e1d6c89983d"
        },
        "item": {
          "id": "72cd6d0b-7ef7-415c-899c-c417f384965e",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "66e64ff2-8278-4b73-93f4-c06f18c353ab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "31c992fc-db3f-4b1c-bf0d-d374d5e7bbbb",
        "cursor": {
          "ref": "648a4d5b-70a8-4233-a236-45c0a250152b",
          "length": 250,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "6b70c431-8fac-4777-875b-11bf856eba20"
        },
        "item": {
          "id": "31c992fc-db3f-4b1c-bf0d-d374d5e7bbbb",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "7b10d24f-00ae-41ce-b280-885a4b6ad0b3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "66b615d9-9789-4488-a92f-e66bf33457b0",
        "cursor": {
          "ref": "08714e32-ca25-4dd8-8d48-85abcfda224c",
          "length": 250,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "09ce0a1e-0ce5-41e0-85ec-91257be4179c"
        },
        "item": {
          "id": "66b615d9-9789-4488-a92f-e66bf33457b0",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "71ba1340-08ca-429a-8d78-f28c4eee67a6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c545486e-abcf-4d5d-ae2a-c952b868dcac",
        "cursor": {
          "ref": "5de89f2e-d661-43f7-a41f-3e81bd0c814b",
          "length": 250,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "a0b93696-ff2e-49d1-9088-088ec50a6380"
        },
        "item": {
          "id": "c545486e-abcf-4d5d-ae2a-c952b868dcac",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "57217686-84b2-493d-829e-66f2fb98c90c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fa8cedbc-6a68-4060-b864-25b928dc3583",
        "cursor": {
          "ref": "675bfb6b-c2e4-464e-9a4d-51b626ff6ebc",
          "length": 250,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "7a95eb85-9818-4c18-90d8-5a7c53f96087"
        },
        "item": {
          "id": "fa8cedbc-6a68-4060-b864-25b928dc3583",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "d7998037-02bc-4742-a913-002af421e2fa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "004ef15f-87d3-484b-bb88-d9d6beb2a84c",
        "cursor": {
          "ref": "a4a91b05-d69b-42b9-b9c6-d3162076713a",
          "length": 250,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "51f852fc-1614-469c-abed-255490246cdb"
        },
        "item": {
          "id": "004ef15f-87d3-484b-bb88-d9d6beb2a84c",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "7a290e0e-3c40-468d-8bfb-6e9da9818cfa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "35b24db6-20b6-495c-8399-4bf55da8279f",
        "cursor": {
          "ref": "ed80e7a0-f673-44ca-a811-4af54f3e890d",
          "length": 250,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "8f17a579-dbd8-4305-ab99-30c1ab862d47"
        },
        "item": {
          "id": "35b24db6-20b6-495c-8399-4bf55da8279f",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "4d5c6461-57f4-49af-bd84-411204fe4c66",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a96f7a8c-bb9b-4d18-bbc3-6448dfc782bb",
        "cursor": {
          "ref": "334207e7-1f48-4e97-9d73-732cbdcd63d7",
          "length": 250,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "ab127393-3d22-4d62-bec5-0859d9b86aa2"
        },
        "item": {
          "id": "a96f7a8c-bb9b-4d18-bbc3-6448dfc782bb",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "39a98427-e986-4e88-8bf5-1ca41d739e97",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f6c092e2-e1fb-4336-bf33-c58439e7606a",
        "cursor": {
          "ref": "b49f7a56-ba1a-4816-922d-2930469bbc06",
          "length": 250,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "5d47052d-4f27-410b-92b1-3a2283cf9e32"
        },
        "item": {
          "id": "f6c092e2-e1fb-4336-bf33-c58439e7606a",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "8ff71bf9-cd43-46d9-96fe-a544ffce49df",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "58e29847-0093-40d4-b747-3588b87f830c",
        "cursor": {
          "ref": "4ffa0745-f188-4dc9-b02c-9b399a2c79b2",
          "length": 250,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "c6fad08e-c11d-4c95-881f-27f38069cbcb"
        },
        "item": {
          "id": "58e29847-0093-40d4-b747-3588b87f830c",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "823066bc-435a-41e3-b168-7d94a914b513",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "68f2adae-f3d9-4f00-9ec9-5dccfe8062f0",
        "cursor": {
          "ref": "fb44cb23-01a2-490c-8ae6-585cfb962a37",
          "length": 250,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "1399229b-6cfe-4266-9fe3-2f46f18733ce"
        },
        "item": {
          "id": "68f2adae-f3d9-4f00-9ec9-5dccfe8062f0",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "1a6420d2-a841-42f1-a68a-4d21a9bc9758",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d2a2b299-e9ef-4eb1-b695-de6e6dc222e4",
        "cursor": {
          "ref": "15452d4c-f735-42aa-af0c-166ccea954de",
          "length": 250,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "4acb47c3-381f-41a5-b310-99d0bc1e4fa6"
        },
        "item": {
          "id": "d2a2b299-e9ef-4eb1-b695-de6e6dc222e4",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "fd8a060c-b72b-4486-ba71-d0b304f78b70",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "10f41379-5388-42b1-b47d-c3caa64daa0e",
        "cursor": {
          "ref": "6c5775d2-14bd-4f99-b305-ec1107a39e8b",
          "length": 250,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "035cff56-c78a-4714-948b-04f3159f3fec"
        },
        "item": {
          "id": "10f41379-5388-42b1-b47d-c3caa64daa0e",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "ed94f5a2-7670-48c8-b20d-180d5014622a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "13ba4f37-c080-45f8-86db-af78cb1cf4ac",
        "cursor": {
          "ref": "1897080b-e277-419c-b526-f3ea94cebb27",
          "length": 250,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "eb1c1f7f-a7ad-4a0c-887b-9f83432ada89"
        },
        "item": {
          "id": "13ba4f37-c080-45f8-86db-af78cb1cf4ac",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "9d68d7b8-bf53-4730-a549-27973b525802",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "87e440e2-9beb-4af5-8e09-94615ffa5d34",
        "cursor": {
          "ref": "207f3138-f478-412e-8c69-c56d048e9ace",
          "length": 250,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "529fe643-59c4-489f-b161-19a1844d1d68"
        },
        "item": {
          "id": "87e440e2-9beb-4af5-8e09-94615ffa5d34",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "311a76e1-0c97-40b9-a441-cf1c63ca36a1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1d53f036-b260-499b-9470-5fa746642134",
        "cursor": {
          "ref": "e6a5e63d-75ae-4317-8e1c-fd8d303cc260",
          "length": 250,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "65b5486e-1835-43e3-8ced-da1b73272ee3"
        },
        "item": {
          "id": "1d53f036-b260-499b-9470-5fa746642134",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "da2bce5c-6f47-4442-94d3-5317708887b4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bc0fa857-c6d7-497f-99b5-b8a7ba4ea013",
        "cursor": {
          "ref": "5246860e-d63d-47ee-8a07-e154170bd573",
          "length": 250,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "5d8a82ca-1842-453a-98e3-e7d412cc5788"
        },
        "item": {
          "id": "bc0fa857-c6d7-497f-99b5-b8a7ba4ea013",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "c5dd1753-e979-4f1c-bc21-ad704230a995",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cc2cd8d0-4e5b-4e7b-a734-87060bd89f64",
        "cursor": {
          "ref": "e2ad44a6-088c-43fc-a2fb-632f85608829",
          "length": 250,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "cdf68287-d507-458e-92c4-2a18c57ad53e"
        },
        "item": {
          "id": "cc2cd8d0-4e5b-4e7b-a734-87060bd89f64",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "6840c536-7942-4659-8925-a277e7f54947",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cd67f716-6c42-468c-88c6-118bf29cbe46",
        "cursor": {
          "ref": "ba764a4d-540d-44ac-b040-5b024154941f",
          "length": 250,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "9cd92a89-ec47-4833-9e8e-6884841a6b72"
        },
        "item": {
          "id": "cd67f716-6c42-468c-88c6-118bf29cbe46",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "a870fa28-69c0-4a7d-95e8-0ff74bcdd95e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a425b4ce-c0ef-408b-86e2-60e56ae6a914",
        "cursor": {
          "ref": "1d60e6d8-8b4f-4a8a-9938-f13a7d55005b",
          "length": 250,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "70839d20-c045-4bb7-ab83-62c12bc85d68"
        },
        "item": {
          "id": "a425b4ce-c0ef-408b-86e2-60e56ae6a914",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "931cdcb4-b37e-451c-a161-3bbca0e5aa0f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a8f66c2d-06f5-4978-a481-38de436fdcf8",
        "cursor": {
          "ref": "b07c12eb-c603-459a-9a3e-c9065d32e4a3",
          "length": 250,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "7d735d8d-db50-43fe-897b-bd9b03a98bfa"
        },
        "item": {
          "id": "a8f66c2d-06f5-4978-a481-38de436fdcf8",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "e84659c6-5bf1-43e5-98f0-9d3e11e05041",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bedcbda6-96c0-4a57-8c28-500fbb0eba5d",
        "cursor": {
          "ref": "c1d924e7-ec78-40c8-956b-a64c1ce7b624",
          "length": 250,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "38edbc2e-88e5-460f-a800-a81035dacb68"
        },
        "item": {
          "id": "bedcbda6-96c0-4a57-8c28-500fbb0eba5d",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "ca3a8eb6-7a77-4029-bbbf-c080fbfb77f2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "71f93a5e-5587-4b5a-a723-4a770b71085d",
        "cursor": {
          "ref": "17ee377a-20ef-42f5-ab53-86bb2fdf7d78",
          "length": 250,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "7c16e53e-0ae7-4271-81c8-31197e2a23f4"
        },
        "item": {
          "id": "71f93a5e-5587-4b5a-a723-4a770b71085d",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "e05d544b-b8ce-439c-85fb-f4de9982f7f4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7fa4e4c8-68a7-409d-9f0d-29c145e24f26",
        "cursor": {
          "ref": "c2ae72fa-7061-400b-953d-aed6d4da9872",
          "length": 250,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "d5c3154f-a272-4cd4-b696-be0a9da1ac09"
        },
        "item": {
          "id": "7fa4e4c8-68a7-409d-9f0d-29c145e24f26",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "c9bc00bc-58f1-4d44-b657-e5da3ec39845",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bc34a9d5-63ed-414e-a562-e1086fee904e",
        "cursor": {
          "ref": "e8cba7df-5c03-498d-bcba-ec615501af16",
          "length": 250,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "a4d41cb5-a855-4ec4-b2df-b1d9f4533eec"
        },
        "item": {
          "id": "bc34a9d5-63ed-414e-a562-e1086fee904e",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "0ce48b45-ad1c-47f3-ad10-c46e6f0b0494",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ac9d568-ba5a-4c0d-a1a2-3129dc194b84",
        "cursor": {
          "ref": "bc0abda6-a889-4ce1-8a74-225c71fbc410",
          "length": 250,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "07e4adc1-2cd2-4a5f-9539-ac72829ac2d4"
        },
        "item": {
          "id": "6ac9d568-ba5a-4c0d-a1a2-3129dc194b84",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "bd6ece9e-418d-453f-baf4-286e166ca0f4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "578004ce-7654-4986-adc0-f019f8ad585d",
        "cursor": {
          "ref": "a1712a36-00c2-4bf5-9fd7-1cb8578d96f9",
          "length": 250,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "09e711af-46e7-4bf6-972b-3fcb4328a466"
        },
        "item": {
          "id": "578004ce-7654-4986-adc0-f019f8ad585d",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "58059305-e395-4543-a11b-4df0412111ec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "961665d1-6972-4ff6-8ae4-491e3d093733",
        "cursor": {
          "ref": "ba03e98e-b699-4c67-8fe4-4ebcc30d93f6",
          "length": 250,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "df0be3ea-0abd-4403-93dc-0f943e3a63af"
        },
        "item": {
          "id": "961665d1-6972-4ff6-8ae4-491e3d093733",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "b876dfee-1243-48ad-bce6-07966374fa4c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "55d0d2ee-78e4-4d78-8117-871901f42241",
        "cursor": {
          "ref": "906550e6-b888-43d9-bf43-b2ddd1918585",
          "length": 250,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "f1067e08-2c9d-40d6-869e-24f300ea355a"
        },
        "item": {
          "id": "55d0d2ee-78e4-4d78-8117-871901f42241",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "dd38e38f-9ea2-4a3e-bcd6-09c47b78cc34",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 77,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a6e32393-d281-4178-af2c-e27c575d867c",
        "cursor": {
          "ref": "57e909f8-872d-4969-ae63-18d5a8c927fe",
          "length": 250,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "92f60998-9235-4ad2-852c-46f53360e065"
        },
        "item": {
          "id": "a6e32393-d281-4178-af2c-e27c575d867c",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "0c91307b-03c8-4482-a6ad-6d2f935b7207",
          "status": "OK",
          "code": 200,
          "responseTime": 2390,
          "responseSize": 416
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ac09557-5d86-4026-b3fe-87f4315e4886",
        "cursor": {
          "ref": "c43276b6-b4aa-4f3d-b12c-a077ca5d0f75",
          "length": 250,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "3bffbade-25ab-44d6-90d2-d9feff402644"
        },
        "item": {
          "id": "5ac09557-5d86-4026-b3fe-87f4315e4886",
          "name": "credentials_verify"
        },
        "response": {
          "id": "23bae825-e170-4f78-b2d5-2d4360a568a4",
          "status": "OK",
          "code": 200,
          "responseTime": 2552,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "136a0557-8a94-47e4-98fe-00e620481bcf",
        "cursor": {
          "ref": "9443b0ac-e53d-4ebb-877b-74c50d3cdf52",
          "length": 250,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "bfd095e1-3efd-401f-be97-c4a0a4e34fec"
        },
        "item": {
          "id": "136a0557-8a94-47e4-98fe-00e620481bcf",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "7c236fb8-c5c2-4c01-b6c5-380c666bfbb4",
          "status": "OK",
          "code": 200,
          "responseTime": 2302,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "df6925d1-493c-463a-91d2-3dd4bb91ad11",
        "cursor": {
          "ref": "59ef311e-777e-4c1a-a641-2a448ff1dc44",
          "length": 250,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "cea424ea-2e2d-453e-9e5d-cbe65087d42a"
        },
        "item": {
          "id": "df6925d1-493c-463a-91d2-3dd4bb91ad11",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "ab532892-4750-467a-8fc3-265534706ce1",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 82,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "df6925d1-493c-463a-91d2-3dd4bb91ad11",
        "cursor": {
          "ref": "59ef311e-777e-4c1a-a641-2a448ff1dc44",
          "length": 250,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "cea424ea-2e2d-453e-9e5d-cbe65087d42a"
        },
        "item": {
          "id": "df6925d1-493c-463a-91d2-3dd4bb91ad11",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "ab532892-4750-467a-8fc3-265534706ce1",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 82,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4d94ca1a-9ee9-4a4a-8275-b5a17e2a8a1a",
        "cursor": {
          "ref": "0ed745b2-eddc-4158-ba61-d7b4b5ee09ce",
          "length": 250,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "fe5b5984-32bf-4aad-b327-67c46f31b3ba"
        },
        "item": {
          "id": "4d94ca1a-9ee9-4a4a-8275-b5a17e2a8a1a",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "7ad09a0e-811a-45f3-a371-cd5d887c88d4",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 76,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e039c2c7-6e59-4f40-93f8-2fcd31236563",
        "cursor": {
          "ref": "974e7311-657e-47af-9531-0040012cc930",
          "length": 250,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "0d73b218-4f1d-42df-824b-160749d0e858"
        },
        "item": {
          "id": "e039c2c7-6e59-4f40-93f8-2fcd31236563",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "ae7088bc-8989-4c58-ac34-0a8e13450d8e",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 76,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}