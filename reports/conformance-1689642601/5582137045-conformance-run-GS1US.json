{
  "collection": {
    "info": {
      "_postman_id": "4bd78d4a-8f35-432a-a4e9-9e5a47c7c93c",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "1e5470fa-9d05-4867-ab78-9e604810ebb5",
        "name": "Clear Cache",
        "item": [
          {
            "id": "d92a248d-17ed-4b99-9be2-d5d2701bc354",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "5ff1a561-87df-4b9f-8c17-1a03c76fa4af",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "9af37976-25b4-4856-9645-c8285a816cf8"
                }
              }
            ]
          },
          {
            "id": "73464584-eb3b-4f75-97a1-73abd05bf699",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "9ec5bbb3-130f-48b9-9b0d-7714b2123c4b",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "6df14bd9-7154-4414-8cc0-b058e6264780"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "3c960963-f6f2-4904-a906-101745c01699",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "76094f64-2b24-4954-b7f0-b143d2938536",
            "name": "Positive Testing",
            "item": [
              {
                "id": "dcbd7a56-41bc-4d0f-bd76-b8e69d586b4a",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "f078ad15-0d3a-46bb-a1d9-f8d1b69951db",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "d8258f22-16f0-499d-b358-854ec17da293"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "0a8c2a2d-d875-4cb0-82d5-00efffa2d0ae",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "133da413-7527-4308-8f7f-f7b5a9a711f6"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "aaf87c3d-348f-4cd7-8152-e8e68ec5b6c7",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "1e799707-e5e3-49bf-bb79-5917b0bb5039"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "8cf8480c-47c5-4669-af11-152aa2980c64",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "df0cb828-5ae4-4670-92a8-38cbc929664e"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "24bc35fa-d3ae-4e98-926b-d408ef85c58f",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "2512cf39-53d2-4353-b743-9d612246f8c4"
            }
          }
        ]
      },
      {
        "id": "880d85e6-4644-40c5-a518-51d9c4c474bc",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "a7a47387-3374-4b47-8034-e80ecc4a6eb7",
            "name": "Negative Testing",
            "item": [
              {
                "id": "9f7836ef-d1de-4148-8a5b-ed640a23cde2",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "1ca8040e-e4aa-4819-bae1-6745fb87de19",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fdde6ad5-5714-49f3-907e-7b6922a29747",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "ee77af4b-1bcb-4423-b539-c4d28650cfc4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "66440c64-335d-4e48-b1bd-d600aa0ef421",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "13ef05a4-8937-4339-a1be-672fe3204775",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "c05abb82-dc33-44ac-b319-78d22e1d9215"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3c3e9f2c-4729-4b21-a760-485ed0cd9095",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "568e8371-4ac9-4031-a4df-62dd7599e3f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "85f52fad-664d-4341-a1c6-199720d722a6"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "72523680-7a93-441a-8f9e-06cc31f7b1a0",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "04286529-1a09-4c6e-8e4b-f374cb90e346",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "47a33d7f-470a-488c-a099-f1cf2f0adbd3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "d91b7990-d058-45d6-8df6-74c6b3e7581c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7ae5a7e8-458d-4d78-a31d-6f540eee657d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "612dacc7-0fcd-42c0-9a8a-fb23bc75c1b4"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "96e20d05-687b-45d1-9e93-c766ff0aeaa4",
            "name": "Positive Testing",
            "item": [
              {
                "id": "e25a0d31-2462-46cc-94c7-453ce6d19a19",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "832f6cda-6249-45e9-a3df-46278a106d38",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "8f534216-4bbc-4fe7-9f73-5f4921f2c410"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "97017791-20b1-4743-9672-ba5fd30b31c9",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "6f486274-ad3f-40bb-a3ec-69e9859c215e"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "35259073-bedc-44b6-bdf9-7fe487aab175",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "06ecebac-72a3-4f78-8694-537761fac4d6"
            }
          }
        ]
      },
      {
        "id": "b1bec715-e1b3-436e-bd58-6ac05f511547",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "1279c6f7-d7d1-4e1d-95d7-9fe0e671fc9e",
            "name": "Negative Testing",
            "item": [
              {
                "id": "49b51909-a970-45cd-8747-bc0c2f75f062",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "3de88054-1f96-4d81-8e1e-07c8b45ecc10",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3f34309d-9772-4788-8a31-74c1dc542cfe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eec94ec0-1d2b-4bc9-a313-d157ac9fbd2e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8b5d50f7-a223-4c55-923b-6d527b0d6592",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "fb47ee3b-37f0-4286-90dd-b2d96a808de1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cb24d229-0450-4f4e-958f-eabc8a9218d1",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "be213dce-936b-4b31-bd84-3140d9800c97",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b3a9252e-4ab7-439a-8bdf-dee75c5cb221"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3d259c80-9086-4125-ba2c-b447d9b82785",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d7f6aebf-0f0e-4094-b7a8-de5e4db8e33f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "564f4676-31ab-4d01-a228-73e70b8bb939",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "27beacd1-526e-46cc-965c-b960d64164bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3c0dd608-16f2-44ee-bb22-7302c4b65c1a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0717c48b-8eb6-47ff-a3be-540e12c6b334",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f1b24e81-f5fe-4199-aa34-bf41055a3b81"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0a26b9ad-abc9-4d91-909b-8694258af2de",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0455ff28-87ed-48db-b343-bf60c062674b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d2513703-ebbe-46b2-98d1-eeaa4b5c2e39"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b298631d-af41-4e2f-a849-99b1b3904a54",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "cba7f248-4338-4e68-91ac-7d1df4269d67"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fdfe868e-734b-4129-ae7e-13cc120ac6b8",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "856dc8a3-09a8-4a9a-a1f7-df6d0c965c06",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5d7077fb-c6b4-48a3-a9ec-6a4bcd255ed7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5d644ed1-6507-4a65-aeca-999e45373b8a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "1dc34a86-ed6c-47d4-94d9-edf07ee79cbf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6410b8ee-1cd7-4961-893e-77b2697eb70c",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e89bf19-de17-4f8e-a050-565281c17925",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a2e5a437-c8c4-454f-a452-eb887b66b2c5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0b6ad003-f0de-49e0-9648-051a20098696",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f9290736-8921-41cf-894e-e283633ded83"
                        }
                      }
                    ]
                  },
                  {
                    "id": "33c94099-5fe7-4e3a-ad11-99fcde7dd634",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4d44d8d5-8c83-4164-a7a6-44d9b20df1bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "13437dab-ed76-42fa-bf49-8b72bc94a9e8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c390b7f4-74a5-44db-8445-be959f0928d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b2247e11-bf20-41d3-9c90-f602e2c47e8a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ed611dfe-7871-40d9-ae5c-80e71a95aa7f",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0444a558-1455-48e5-bb44-ae963a62d685",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "75d8f2d6-1e9e-400a-84fd-b974aeb31387"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cc552331-a785-48e7-8f76-aeab4c192427",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "0831d25e-d1fa-417d-846a-65e06236bb06"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c1f42703-9459-4980-a2e0-92a9b3a6d3d4",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e5009e5e-20d5-437e-b442-9f0249fab8e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "22e90106-e001-4166-96c0-8a4f0e1d0b3b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7b4e7eaf-6233-40d2-8c33-275c4a65d029",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "254d1096-dd17-472a-9be1-49326d156eb1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "391c26c4-47b8-41de-a4a7-f073002b6b3f",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5579d5b5-91b4-43aa-8eb5-5e30bd04f2d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d789bbbc-cdc1-4101-8193-9c010773fdc0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6dff6f6f-41d8-47cb-b1a1-296e0b8ea50b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a2735cae-9329-441f-934c-692bfa1f26aa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9f55163f-5ec1-46a3-88f6-8f1aec17cf21",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "43510755-c856-493e-9617-280891ced1ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "93c52055-b5ad-4a9c-855a-477fa879fff6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "87805a7d-9f0c-44eb-8aed-077223e29e9d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e1ba453b-2bd7-4cb5-9079-8cd88f718715"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fdec748a-4188-4a52-91f0-80cddabaa8f7",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c4a3009b-c97b-4fb0-99f9-5d6392c15513",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2dbd3852-fd94-4192-bb7a-776984404c8e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "65e83de9-7382-4621-ae9a-379aa65d378c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "561a18bc-f405-406b-9940-c3326c8ab9ec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "838644a5-2b5b-4811-a598-b2af4718ac8c",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "673cbf43-bef1-49be-a3ff-63c70f6ed102",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c408ea1f-a797-48f2-8ed5-26ad9dff864b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "440c951c-d839-4731-9c45-fb022a65aac3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b6da9ea9-d520-42d1-81fe-230af1a32dab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c2a52f18-3722-4c87-abd6-94f6a46331b6",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d1cd5d65-fdd7-4fcd-b23a-8193dd518451",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6c2b7668-424b-4f59-882d-7962ae0d9c30"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "23a2463d-4bcb-40a1-a0b1-6ca93ed8a540",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "9aad107f-6916-4ade-960d-9647e3251fe4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "00fbc505-e8b3-4d21-bd45-28f4d0c34a5d",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "76617354-2b84-48a2-bcc3-29396d20afec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "24b34ec5-11ef-49e8-b66e-079cebb9141f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c68eccee-5ffb-4839-9b65-b8b80d9dc089",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b3f3f935-8b02-4098-a78f-bd297c6d1baf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9d2c2900-72fd-4aeb-a544-70d0ca47c78a",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "56e4c5f1-eaaa-49ce-bf6c-5115d318a5b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "59276f78-6893-45f1-8170-d4c02afacbd2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b0b131fe-ac41-4234-9cd0-1887228dce3c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "1bf8f1d8-8c9e-46e2-974c-e9050690420b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2aa9b56e-ac26-4ceb-aff2-31ab81499331",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1e6b5f72-8ecf-4db5-8329-a827a04b0f80",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9b69f498-2ba0-4fb5-89c9-c25b45760d07"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f4614f00-5cb0-4902-b3b9-2829fecf831c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "30d9ca24-f9a3-44d2-80d0-adcb2efc409c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "429b496c-21da-4836-a7ac-620cd4897edb",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8621d8c9-95c7-4dd1-9fa8-4976bb82e061",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9ddd92c6-5c6a-429b-9ebd-79d22d14de5a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "05457a1b-73d3-4d46-98bb-223af1d9360c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "22661d27-1250-44e2-abe9-91180e58041a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "832afd15-841f-4f9b-9682-d8db480f1f25",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9f8fc3b2-8acc-465a-b71a-4f1426f860f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c8a70fc1-4ef4-4e4f-a95f-e25a9eb7cca6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a219eb47-2e95-4829-a488-8ae37cf8b78f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "ca074b95-8421-494d-ae40-4be853100758"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a94792a6-4d1f-4af0-896d-ae1e376231fb",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "04454da7-4e30-4f32-ae17-6fd58534dbf9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9dc5bf8e-c1f7-47c7-9924-bfac49d26803"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "11010f4f-1bb9-42d3-8993-623105813c79",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "7ac31053-c33c-40ea-88b0-94e4b195b8c8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ebda4aa4-b791-4a03-8484-2c05911d0188",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bc375da6-e58e-4a50-bee2-6d6ac931a829",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2ecc1739-ef1a-4431-92a0-a60716a81fdb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "688044ed-89e7-4180-9b09-8ae9273632d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "e2ada1a3-67bd-408a-b788-a2ff1b4cbb76"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1ce4b45e-b0b0-47eb-ac68-cb1f507c9400",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "56ceb1bb-267b-4bf7-9d1d-88215060362b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "06286444-e953-44ab-a336-5e330d490c05"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d8ff72f9-e058-4863-98e9-17a1eb18b1c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "c876dbde-b155-445f-8444-07961955cf14"
                        }
                      }
                    ]
                  },
                  {
                    "id": "341386b2-e863-4fc0-b9b8-14366d9dbc7c",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4d9dcc9f-c2f5-4ba6-97ca-2f00b32c3373",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6689cc8e-cd3c-4828-8467-9315a027e6eb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cc089695-5116-41f7-983f-813d8f4da52e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "066c6254-9c75-4d9d-9dd7-7e7b1627ee35"
                        }
                      }
                    ]
                  },
                  {
                    "id": "76a1e77f-3026-4db0-bd15-48327016315e",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "61f8fd3a-5680-459d-a727-d911e5e0455d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b8b13411-09ef-4c49-a754-6d601b9787c0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d619c726-98ef-42d9-b830-3d16d7e856f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "70989d18-a2ba-44d7-8653-be621dff45c6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "09b859d1-98c8-497e-92cf-689487274b51",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "35f323af-ff7f-4967-b540-847135913e46",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f924cc38-7c6e-43fd-9f67-6ebdf0302e61"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "020c359b-b994-4596-a45e-d5bff9489c99",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "0a168f80-3066-4b89-a48b-89fad66a851e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c5a189b3-3a9f-45f2-a392-d1e187b55d54",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "029fb047-69ff-4a63-870d-1fa2dca729d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "55e870fd-d769-4187-aca0-3c6542614ad9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "27c93b6f-814c-4a2a-8096-f4bc442576ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "429ba705-dc2f-4551-b690-d2fcdfe12446"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d6d40b51-3075-4143-bee9-60e7c692f532",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b6c11c95-a63f-4bf9-ba74-8a36fe8aa739",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cee3e741-fbfe-48b1-a0b5-4e3b57ce8866"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "de599598-57da-4138-b0de-c5a9073b889a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "ffbb8160-f0a2-4468-9ca6-f212f9f589cf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2c7453e9-1ba2-4d40-9c46-c4b48bb96fd2",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7d207de6-5858-473f-9040-79914d6d4b47",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "14e096cd-a45b-42fc-b633-5b1cd9191454"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "36f3be04-f59a-47d6-adf9-38050f355afb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "4b4aef59-f18b-4a11-b97b-8512427e81d2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f5edccb0-3629-486c-8930-24f494bc4153",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8e6628d4-c5b1-406c-b3fa-02e4ac459aa2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1e8c071e-0695-4802-899f-e52efb617a5a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e5092465-9a76-4f8f-9d1a-ae46817fc14d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "23161a7b-b885-4973-8e80-0dacd053843c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f44fab48-ebcc-426e-9de6-bf429bee7eaf",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ea5d59f9-241f-498d-902a-84f363c4cdf7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "055aaac8-a587-4965-8e68-7d81134a7f29"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "82de22bc-263e-4e18-9c96-6ed0ddf4bae5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "f6262db4-31ab-4b4b-8c22-48421acecffa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "71d8b8e6-433b-4df8-a6f0-e54bbcfe40b1",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d8138a25-6384-4462-8830-19e306d106dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d514798a-f1a5-498d-86a6-b69d9891eb7f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9d97cac8-9ae5-496f-a474-c2924547e6b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "711d7a16-5a87-4118-9737-9678d675c749"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3ea3f54b-2cce-421c-a0ee-34c2fc38b57f",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "032af60d-4960-4504-9af6-a9707245bba5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7d43722d-77fe-4ad0-836c-62db6d4d6905"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a779f042-4610-4278-ba98-be0e9a4234f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "77e7425f-4997-466d-be01-51e91deb3a31"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b3917012-2a6f-4ba5-a6eb-32b9503d6178",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6788ac9b-667f-4ad8-845e-5b515465ac90",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1a8f4540-6ce3-419a-a1d2-bf7a1fe56f74"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f3359497-e269-4cc3-b143-866d9b265053",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "542ec013-9e9d-44b1-8bc3-7dc2fc44b89f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d41394fd-e51a-456e-b609-370c3cc68525",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "45ffa11c-336b-471f-8b17-300b63998443",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0391dfa4-2fcf-4fec-96e2-2937dea28d86"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1a17cb1c-b2ac-46e3-a953-725a6ae1af94",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "d837f380-b918-4e07-a13b-9036c5d442b0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "67532e36-08ae-475b-b79e-f878dd480d49",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8e877dfd-151f-4561-ab8f-83463d2745d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cc50e3f0-0603-4080-b48d-0c529200d646"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "00bd52c9-7642-4b36-9214-431d170b7225",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "5cfd2689-9ff6-4d37-8382-7f8e9731c632"
                        }
                      }
                    ]
                  },
                  {
                    "id": "374c9f8b-899e-49d0-ac31-abb3bbe70080",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ba99f385-a02d-4cb7-9376-6288b285ae5c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "c2aeea54-01ed-488c-be96-bb0a362be023"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4a15667a-4f0e-4355-ae24-3db9d7d99e95",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "6fbc6804-901b-4f84-80ad-29f0eb0670ab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "34b5020a-0b06-42d8-ad1b-07c01ddfcc32",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ab815571-8632-45b7-95ee-0bf8c5bd65d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7c4504c7-2fbb-421d-9738-af1467baabfd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c3bbd29c-6bf0-4954-a9cc-02bc1ecb8550",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "10d8b6cc-11f8-471c-8fbd-1d1ab2ee43fb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "115505eb-082c-4447-a3d0-ffcb84917cde",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ef9a584f-0eb4-4e65-aa00-e5c2524ebddf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "00aca3d3-9c89-403d-8f4c-d7aa38f309a0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1d91499a-685c-4c62-9220-91b5a35aa853",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "c5fbe054-8dc9-44ed-ae44-8c4885d91306"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0ec74c4e-df53-4131-996c-4736b8253cc1",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3f906ec4-9631-4c86-823b-a076c912d309",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1fafa766-9fb1-4e05-9098-055e7199e666"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "314cadfc-4abf-4dbc-aae3-7ee5a235c654",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "5b7597fe-001c-4216-baf5-6ea92871608b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fe5fbd82-d27d-4038-96f6-9ae71c9aa53b",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bbbd480d-8e1e-4d56-83fa-8aa405cd34d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "90df21e1-4a63-479a-a76d-ed0e4f8250f0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "49c02801-6a27-4fd2-8cfc-552ca62b96ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "512cdc6b-1d99-49a6-b689-5c64ed9efc1c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d1df27a1-9e08-425c-9aa4-fb7d863e9fa7",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a5909f47-fa4b-42f7-b7a9-439e1018d639",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "94a76a1b-81db-455d-ba38-e1b72f667b8b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "61b648a8-f6a3-4ca8-b2c6-ccceee06f978",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "4a534d21-4fdf-4872-9d90-138613efb521"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6078c5a9-81f1-4487-810f-0bba7e54186b",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bbffa0b2-5b73-44ba-98f0-dbe75b13cd8e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2d667042-1727-467a-bd0e-439e4a0daa88"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e1e32166-e9cc-4173-bc6e-b022b45b4027",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "6f102358-2e33-44ac-9bb7-0cf45ef22ddf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6a7e5d6c-8e42-4313-9cce-8fbb7514b0be",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "81ab3412-a241-44d5-84ef-082657443b39",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b64d2eb3-1a5d-4b95-9b8d-dde3d8173e30"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "da962b0c-9557-46aa-a317-04a3a11fe444",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "aef5d6e7-02fd-4b2f-a8bd-20ae9fd6296e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6e1304d6-edc2-4957-98d1-1b32af783638",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "64ab0e6b-8b1b-4c1f-9fa2-4586d5ce3ae9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c38f921e-33a5-4bab-bbfb-0db2fe0fb17b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8796d43d-ee61-4bfb-8f02-65a72625a1f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "08bb55ea-ec25-4936-afe3-79f5dd07fb08"
                        }
                      }
                    ]
                  },
                  {
                    "id": "95b81c21-a9d7-4701-adb7-4df0714bc8f6",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "26e9c840-507f-48fb-acee-a50590922635",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ed078d85-896a-464d-b57f-3de86d441350"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1bfef1c2-f1c7-42e0-a119-c0a365df06e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "ad5b15db-2af5-42a6-899b-fd942ecf0fc6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e7524173-2a99-4287-8192-f03b5bbf5b0c",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d3f57db4-d628-41c2-9d81-627568878050",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e07ac35c-41b3-4c53-872c-907ed9ac0297"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7c6165b5-ff1c-4765-a21e-f9df7ac5503b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "0fb7028c-0356-4903-8ad3-74859f5289b1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "db059e2b-3c11-45bd-bf8d-94d44dc106ea",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6542f3e0-1aec-4c53-96e9-d82a87f9181c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3e485f25-991c-480f-82e9-f9781d461725"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c4f93f0e-40a1-4352-9c5e-3028e6a1531d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "1b9991a4-6877-4fc9-bf14-d5e8096d9e35"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3ff00a13-0480-4edf-97c5-43414a86caa1",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6a07c773-b308-4cdb-84f4-9c3050af7058",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f9440cca-0229-4e6b-9931-16ea33153292"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1d63c7da-1f8e-41f5-ad02-fd25f4b64012",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "323c40c9-eb32-4870-bc52-8c1875835069"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cd4273ab-da74-456d-aa59-5712adb4bc4d",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "376eb3fd-da82-4953-adc9-3c8bc6346afd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fcfcd50d-530d-474c-a1d7-bb4bb3caa5aa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "16b6a757-e4e6-443d-8276-44e9e258acef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "c9d0ab5f-3128-49ad-84e6-1afb3095ff99"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6bd6d579-5eb5-4fc5-930d-70145883c7dc",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "883ab47e-928d-47d5-a8f4-59d96c0153ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9091ad11-2061-4002-9562-6eacd3e364be"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cb416ce4-da99-4759-8d7f-3ae02e7b3ca7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "f5246b5c-1934-41c1-8f7e-9de4d23677da"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4bd771ec-9ea5-4c6f-ba1f-a35a668cc45d",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c0429c83-555e-4963-b1b0-e6ffecb6929b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9d6e3d9f-c055-4a99-9d3e-28ce5765cfa9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "af04481e-dd65-43ff-94b9-d83cd5b06647",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "900def37-ad5c-4039-8258-a9e16b14e2a1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5cd01a86-afca-4406-80d5-2fdc61097c0d",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "953a4fbd-9763-4640-b150-c80e5bd48321",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9c917410-1626-412a-b6e3-66e27ea0cea1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2fa91a9c-efc8-4140-b09d-662ad773ea01",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "03de43d8-07ab-48ec-a15f-eec3c500e6d0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f360558d-5f00-4d1e-a5bc-154cacd8b2c7",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "25773b0c-61f0-4e4c-9ece-5c4d85d71eac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3113c10c-212f-4f52-b125-845ca5768898"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d127c233-76e1-496f-89a6-78ccf22db795",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "c41ef2ad-a59a-4278-a882-3f1cc1b1e37a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eb632830-3d23-4181-bcaa-36888f48a4ab",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fe23a107-c6d6-4b57-b68c-49654784f6f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "27b59560-104c-463e-b665-4596c21c4f86"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9173621d-fbb7-4db7-900c-9de31d8ceb15",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "90e41245-7864-4a85-9e12-06f67f6f39db"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5b680d3b-3e31-48db-955d-1cb8212adb54",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c286e7a9-21a8-4dff-af36-28c7c4470727",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "be67f57a-a89e-4fc0-b966-8d5c5398b430"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4506453d-2a0f-4390-86b0-47925a18c72c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "35eb2d83-e2e2-4108-9aac-3cc9c25d8c7a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b0b45a1d-e93c-43df-be1e-51ea6e7a8eac",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a771ea7d-eb62-45e6-870d-204821a8e816",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "56d0fb7d-03fd-4d19-ae55-c5f8f10ba412"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e338d4de-f550-45fb-991a-65ff5f5f85c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "7cd55969-ac56-42ec-bd93-48bd84ff57da"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d842b681-19e7-4f71-9581-c0e0d00c8288",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "78e5eae1-52ce-4297-9e28-0e39df60287d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b4ff793e-cacf-41bc-b89b-0daae82b90d7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c89dea3b-2277-4ab1-a101-610c5056ae29",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "ad6d8aa3-f590-4666-b00f-043cbe1b9b4c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "09fa753c-7d65-4d1c-8f79-ab108b75c5ea",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c0c87836-7f51-43d6-8948-4755b947e3dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "89bd453b-277e-4116-9a98-456c68cc2f65"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "084a5478-4406-4b59-a918-f75396608e60",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "9d0ad1f3-c24b-438e-bd02-32a2ed701507"
                        }
                      }
                    ]
                  },
                  {
                    "id": "865fb40b-7daf-4903-8d21-345a61d371da",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0af0d65c-1e6d-4eec-8e33-1d9b11dfe501",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5b79cd1b-265c-4ae3-8765-94e27c8c0f4f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7b2cdc83-7bf9-4ec8-b1a1-52a387bb2e5e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "59a5c4af-c1d8-4d75-9f06-9d5051ed853a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "068089a6-1133-40ab-b736-8689d1ff71d6",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7e30dfe1-2096-4def-8cfc-7bf5e16598a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9ae9c6b2-6006-4fe9-ba8d-317059531910"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a16fe4d8-401e-464c-bc84-54c87f73ff67",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "951ed093-f8e5-464c-bcf8-b8a0ad67c249"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dab2685c-acfb-459e-a53a-b262613f3ead",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9c27a937-9a50-4ea1-bd7e-efb348002308",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6acb32a1-fadc-42b3-8cf2-6fc16875d07c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "07592c76-53ea-4025-87f6-d178d07980b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "9b694e81-7989-4c78-88f6-3e01016da60c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3d91d0ac-7a33-40fd-a047-6856cde1c34f",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2c714c96-2a37-4865-92aa-c5dbe0d25148",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cb9fc647-2dc4-4d1f-b7af-3bd89f3f6d2f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "93d8e9bf-1f38-4a2b-8d8b-1b868ba4b3fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "9c106401-32a0-4b76-8bc9-5d4f1d60f5f7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4e36ae45-d83f-4537-9a19-68e675f9037d",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d855a468-d8df-425e-af03-4e1607d62974",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ae13d7ef-a297-4638-b479-eab90fa5ce30"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "60cad37a-9f34-401e-9afe-c1782cbaef9e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "2bbd8277-005f-4da4-bc2a-92f4aa56bdc3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e66c7c0a-c1fc-4962-bbe3-e7d7d6f88fcb",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "18ca0e93-764e-49e2-b609-9aa7a10f8095",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cd3caa74-a8be-401d-af30-a8b265c715b0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eb9a958d-eada-4ffa-bced-d08005606cd3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "ad43ed9a-b025-4b01-8464-af503fddd81f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "83c25e08-293e-430d-8312-6eed98dae9d8",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a7339a15-903a-4adb-ae58-34f6e5f6affc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3e5295cb-c353-4fa8-8141-9eda5cf14055"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0a2c84fb-d774-4748-bf1a-6ec5b4465086",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "42253c60-9128-4534-b7e2-d15745d19272"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1978c3b4-3240-4e53-adac-da4afe970bbe",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "585d397b-616e-4f11-99f0-67bc8925e33d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "43366178-f602-49f5-8015-946139f2cb3c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "01043e38-519a-43a0-8424-6a19c17f4db2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "0f0b5fd0-d6f0-47a7-a693-193073a003e7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ab4815db-3519-445f-8998-d5cb69b8bbbf",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2dc2cd63-a5c1-4486-9bd9-e717a32411c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0cd7ec51-3762-4910-b893-7446df38b0f3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c6f2c4a1-9399-4a76-aeb1-fdcfa0d752ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "79b7369d-0cd5-4745-9a7e-f73cd26854dc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "61b3573b-6797-47f1-819d-c4179ce518f7",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d4b35286-736a-41c0-ba93-94fb76dcebfa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1482ab8e-129d-4db9-b20b-a52898605030"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "85963675-21c0-4a1b-b131-84e889ff30d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "1d343882-1b81-4095-908d-5a862daf4852"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b5603108-9a1d-482b-9850-4bbac9006125",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e2f1b035-ec5c-43af-91ef-75c360751b9f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e377d765-99c8-4bcc-9a09-65d503398342"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d45c9a17-9e48-4354-a3e8-88181b8a1bdf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "cc948f9c-f1a7-46b2-b47c-dfbe1bfdbe21"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0d30f904-3f43-4da5-89f8-30261a69d191",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "60d129dd-de73-44df-9ceb-7459b30c5ebc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a61a7b79-b09f-4190-b310-8d19efc2b69e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6595fea0-9721-4a46-b164-a3f0f1f94c28",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "53705768-ba27-4177-9dc7-052330386933"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b603af9c-94f8-4425-a1f6-01e7798b81e1",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a5b46060-82c6-4ee5-b2b4-2f1acd66703e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1b30917f-ed30-4652-88ef-b9c900f4e89e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8e13d2d2-d5de-4a04-a241-6565f2501e4c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "463bb052-3d5d-4ced-b73f-c243d75cc95f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eea14ff7-9a9c-4db9-b4e6-bccdddbd65ae",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1502c3ff-1e14-4860-8679-fbb1b053d732",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9a530b73-b051-431f-8fd2-4525ba0e1f5b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b1e386f5-eff0-441b-bfea-003ce33410f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "48559cb6-c84a-4f1e-934c-707ba24ff467"
                        }
                      }
                    ]
                  },
                  {
                    "id": "55e9c79d-5681-4696-bdb0-0476fd4e7cd4",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3151c110-c2dc-4aed-a914-10da7af518f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dc71fef7-8cff-4975-b261-b87258dcb490"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "01251a32-21a4-48a1-b1a3-f334f3e475bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "39ba17d9-ea74-4536-92a1-0a539df9bfc1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "617bd47b-d018-4552-bbda-09acf0fe917f",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8784d549-acd9-41f8-a721-cec0a94faf97",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "14a79d52-62d5-47c1-9286-cbc048991e27"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2c89c014-2c4d-4251-8b4a-4141b849cbc5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "1b9777c6-83cd-432c-9a0d-eddc197876ef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "09fc91ea-12fc-4eb9-b1b4-20de7ca43b87",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eae83c4d-6c78-4263-878a-eb4824786967",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2f8b0976-3827-4604-9170-b3c4dd4d12ef"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9528e3fe-5c6b-492a-86df-48bb20182b7e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "18d2b9e5-1516-41c2-8846-4d344fb0bf55"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0fe3530c-24be-4139-adda-0007f40038ce",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "46833eb0-37cd-46ae-aac0-c9111c270049",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9978f40e-5dde-4ce9-aa8c-38e8e4dbb379"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "171d8948-254e-4433-a3d2-ecd93a6395cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "9e67c0cc-38c5-487e-a01f-5498bc7183f9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f32a9e1b-3346-45d6-96d4-1b7077c855f4",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "17f5ee51-96b0-4d5c-a25f-2831f034914d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c6c0f830-6410-48ab-a9a9-2489ed2cf7b8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7e91af86-5b15-44de-806b-f89b14135727",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "8f299684-3d90-4727-85b7-b60e9d6a0d17"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f067427a-969b-455f-95ed-ecc87d8afc4f",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "56993ba8-7918-429c-931f-c89cb8ae8084",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e6b9a91c-64fb-4d3e-8749-699659cfe45c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "421a114e-e632-497f-acb5-900da6539d34",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "475fb12d-c02b-4617-acba-8ab2c216456b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "29755676-c7a1-499f-99b6-c338c48fccd6",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "62f71fe3-c077-45da-bd7a-e9810872880c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7cfb2616-9771-4028-9f82-c18e4a0d29d1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3ba8081c-be22-484e-a588-f345355e0cdb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "b972a3ce-a2da-4fab-886b-9f2aee15ff1a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f782601b-2091-4a34-b2c2-6ee99b551879",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d092f8a9-1ce6-4654-aefe-ea93ff1a6aed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a9596520-4257-42da-b3af-21f0a8c7ce7a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7a3ca5ec-c324-4788-9b78-ae0bb27e5f92",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "22eb4763-79fc-4dbf-82f7-e0a3a4fc8916"
                        }
                      }
                    ]
                  },
                  {
                    "id": "78086676-455e-4fc3-b91f-f05bbeff310e",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "321d4bd6-d4d7-4f51-809a-f3fbb408844e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3f795165-d7b4-4421-b469-82a5cbf445e8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "720f5e22-b89c-425a-a922-1f7f78fabf3e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "d776c93b-42e6-4c86-a9b5-74dcd2cc6b3f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cba063f9-3ff6-4978-983b-cd736625574c",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b8e832f1-086c-49f3-bf50-5f9783661385",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "925431a8-0d5f-404c-b3a2-d580027a3695"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5c231558-19c6-4733-b9ee-5840a80a7fd4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "8d3532d7-3300-40a9-b3dc-c5d5762dc702"
                        }
                      }
                    ]
                  },
                  {
                    "id": "64721dd8-e088-4f90-b722-3614d1de8436",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f161dec4-a3c4-4616-b238-fe04df851a6e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e4cc3f6d-239e-4947-a31a-fd4d89f70195"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fcdd1c03-80be-4e60-8ea9-5a323df4a1b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "d75e0e77-8e08-4402-ad2e-8e67f3af5fae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dc4e4e12-2683-4df3-b357-2acb715776ec",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7f2e0bb0-72e2-4a78-b4a0-6d6653678dbd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6e78590a-ed64-4593-84ac-0dfc0a694c3c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8efd4097-4795-44f2-a372-dd2e9f73df50",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "acc37c7b-913f-4d4c-b441-955e305ef1a7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "81ea4620-f31c-4427-b3aa-65b3b57f9766",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8c432a98-f19b-433b-9b92-d744e5c44623",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f2bfdbcd-5f3c-46be-b64a-4604c2a06a5d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7f51d56d-3c45-445b-8bb9-94ed547076f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "1f74c3c3-aef0-41b9-9440-55b4ea9daa1a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9d7ff17d-2880-4f69-a42f-35d1ae871ba5",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1907aa75-1200-48c1-b6c2-1a684cfe3118",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c2ea76a2-b752-42b7-a04d-da3d2108dcd0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6b2d1dfd-ca6c-42bb-a6bf-38d900b6e435",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "aa4241aa-da81-40ce-89ee-125c960ec3b6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ddd3f8ff-c21a-48a8-8f01-0b1ef2d69b7d",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3beb6c09-061b-4557-b142-19b8a767608d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c679b896-e03d-4d47-b0cd-964268e4d6ec"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "83f9a8ca-977a-4f88-8023-6abd0a7035c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "70b51945-64b9-4311-a210-a20b801e0e1a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a976a15f-a1df-4a8b-9e39-3ec705ef1f18",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "66ea160e-c120-4d65-aa0f-4db5a43c7978",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "64ed63ac-0a22-43ee-a20a-51d70017b516"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b3925bad-0169-4de5-9991-7ed0ee6d7b22",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "eec411c4-729d-458e-b383-3e65f71a1b09"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d7a675bc-90d1-45b7-97f5-4580c501e996",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bac9c420-8779-473b-8b92-9a2fc7f4c15a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7f31aabc-082b-4f62-b05e-91d87992d466"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9de711ce-e1a1-49c4-8119-010f6e902f7c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "b5fb4d61-8dc0-47a5-9e5c-87d1e859b6d9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "402ad18e-9367-4d64-a02d-a64411693e0d",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bc7055b7-a58a-42a7-b8ec-c97ca81c9415",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2527bc02-fd39-4962-83d6-25b119648d51"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "67c7a7e2-77b5-4223-84de-4d91ed576e75",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "35c832a5-f592-4a79-b18a-2fe48995209d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "88040a18-0a46-4209-9194-6a30050d77d2",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "921cc094-e103-4059-8e4e-0b98027b478d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "64d13d91-aa81-43e4-b359-ac06edbe63d7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b6052151-b2e9-482a-8bf0-53c2657a2dfb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "e45bf61f-12ae-4fef-9fe7-47c6fe91df8a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1d80f903-4c51-4789-ba55-ae5002059efe",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "154a8b06-8e26-4655-b98e-46a3a385821e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "f8d362ec-66ba-443c-bd27-6e11b77c325d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1f71f02a-fd18-4047-aa5b-9cf5c9e60fdd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "2033420c-430d-4550-912f-8c6e2cf18603"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "5fad27be-8222-4057-9e2e-f985d287cb60",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "bfb578f8-e855-4400-abf6-989607e1103d",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "757a9715-4cb8-4cbc-9eac-269602cc208f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "9441d178-6a03-46ea-8f40-7c68653ab16e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fdcd0801-983c-4999-9493-fbd06f5d05e7",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "619e40d8-0939-48c0-bf47-c669b3507499"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "0bbc1f6f-a04c-4ca4-80f3-63d7ef54ac95",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "9618618d-2a17-4cc7-8f97-192aaf2b3c66"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "8ccf716e-4c81-4988-824b-5412108ef20c",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "8065675b-8ea5-4fd7-a3e1-544379334943"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "0ffe4af1-bfbb-4e9c-b164-62e4bf751420",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "3196e55e-f171-41c7-ba96-8b9bbfe1c85c"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "ba52ac8c-064d-4e9f-98ef-5bfac9f6bd18",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "7784afd9-53f1-49cd-b645-6b41d31d3b50"
                }
              }
            ]
          },
          {
            "id": "f595270b-13dd-4b8d-ba6a-f5936cc4c849",
            "name": "Positive Testing",
            "item": [
              {
                "id": "df38d26e-0d68-4714-bd77-dda68cacaad5",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "655da83d-f3fa-495d-a493-bb99754775d3",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject matches request credential.credentialSubject\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject).to.be.empty;",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "1c018a6d-127c-4360-aaf5-545ad8feca0f"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "c3dbec0e-b9b7-4e86-a4c4-dd6dbd4c8622",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "d8e70104-225b-4a7c-97b4-9762649a55bc"
                    }
                  }
                ]
              },
              {
                "id": "26d75ebd-315a-4fec-8b30-9c4b6ce7675a",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "24a78856-a134-4956-98a9-560c394f66b6",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "61a7fe8c-8a83-4491-a2fd-33249118b673"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "17167e4f-d7d8-4354-ab12-43a826211f2a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "09cfe1d6-3fdf-49f3-8415-a313b204625a"
                    }
                  }
                ]
              },
              {
                "id": "bee1d65c-669d-4c73-87aa-ece8bd83b4af",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "86b4fe9a-d5ec-4bc5-8ac2-53dcb21a3cad",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "18e07142-37f7-4938-81e8-95a649a94dad"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "8be40103-6007-434d-a6f3-6d77c59b90c2",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "91b37a82-18b1-4e9a-b03a-9bc7aa255096"
                    }
                  }
                ]
              },
              {
                "id": "9eb001e2-525f-432e-8776-17b4cb8d6e8d",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "95ad6ad1-8af4-42a8-9252-90f07910d894",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "0b3dce65-0c40-4853-8994-bf6f68a6724c"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "0fe852b1-cc55-4895-a4c7-acb77a81f89a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "2d3d7883-8529-4903-bbe7-ce9431e1057f"
                    }
                  }
                ]
              },
              {
                "id": "1d42567b-c607-4114-89c6-bfee96cc2205",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "b735881e-e194-452b-8ef6-7b09e30182e2",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "922d5bbe-cf47-40e6-8aa5-ad58aed006a0"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "837752c3-1e89-402a-bdec-087205f4cee6",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "cf77b323-f12a-4bb4-8cb6-b37739e726a2"
                    }
                  }
                ]
              },
              {
                "id": "e4ac1ba9-c1e1-4f9e-9df0-ec2c86cecfb0",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "15702905-5172-4824-a6d9-dd7050db7c25",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "c24ef8b4-1791-4a3d-b284-0c5f146385d2"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "0af75dec-1370-42c8-9fa9-60acd795492e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "afac96f3-297a-4348-9e90-c486df7ccd59"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "dce64675-e25d-4111-a4f3-2e7a1c89d9c3",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "70d89188-9fb6-4db9-9abd-12fe5595d8ff"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "91b90d1a-c6ab-43a3-b366-755c84ef70fb",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "88a7373f-fa61-4fb1-af93-f9d1a7f387fa"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "95d892cd-c07e-4c42-abe9-a602e984af34",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "cab84a98-228e-45b8-808c-0b326d0b479d"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "395aa8d5-3a7f-41ab-8ee4-013ed2cc91f3",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "7718d734-6bfa-4a6c-8e25-251939416732"
            }
          }
        ]
      },
      {
        "id": "f946c9a5-6790-420a-af35-36f39c7dfcfb",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "e0924134-b0e6-4296-a9aa-02f32b4d5b4d",
            "name": "Negative Testing",
            "item": [
              {
                "id": "5f823067-0caa-4582-a718-ed4068ff8789",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "68fd4cc6-7257-4b09-9ff1-999c5ac6cc1a",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2a843aaa-af0d-425a-bae0-d2fa35d84780",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6ccecda9-10ff-4f48-9977-2a79259069a5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cc5a31b0-e651-4b28-88ec-d885ca09a8b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "50f0cbf3-2c48-4448-915d-1dfede873c1d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f018f27e-156e-47bc-8e5b-79ee24fab256",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5479dacd-bccd-4606-b7d8-41ca8a396a49",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8a643492-04d3-4aba-933f-c4f7d287801b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b07c7814-6cd4-462a-b185-5ae072e183fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "2e480b41-28d5-413e-b586-acc54acaa876"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e1bc4866-0ae3-43ba-864d-ec9858a091a5",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e0ed9ae4-6bbc-44ed-9396-ceac9a311073",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "09db214b-70ed-430a-af95-b8d4349c03d5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e512a0d5-fdee-4f4d-ac2b-f7a9bd6c59b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "8fbef3d6-77fc-43e1-bc61-af0602316292"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7088d9a9-8881-44df-b065-8e254a33df76",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d0c5a0a8-5dd9-4baf-bc8d-14abed144d20",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7bb44e39-f7a1-4079-bdad-69045217aef4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "24de3d41-08bf-4cf3-82e6-3b3d28e79a9e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "42db47ca-f164-445a-8f33-8a37c68e7837"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9eb62be6-abaa-4577-9d18-287f172e7b0e",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1b7d79f6-6f62-4f2f-9d43-809d3e335344",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9f5a553a-d652-49a4-a1a8-bd6dfacfa22f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "36dbd23a-89b4-492f-95aa-b142b2816d6d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "911984ea-8ddc-4f46-a1d7-964ee1b641d7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "668ebed8-ef90-4097-889e-b4d3c5647d18",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fbb02fce-62e3-4ab3-b98a-d4fa09d16c31",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "00c3799b-f668-46bb-9a09-8a25f0cafd60"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fb4aa3a7-6e11-46ba-8128-191d88e879be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "ed7b4311-e7c7-4c61-9545-803a297d1a71"
                        }
                      }
                    ]
                  },
                  {
                    "id": "349e7d05-e176-4c7e-acbb-961d3521aadb",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e68815e2-7bdb-48bc-b6d2-509184eaeefe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4cfb8f24-30bc-4623-97cf-4e0ff0d94616"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8bd9d83f-44af-456b-a834-3256e9cc2f3f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "b9230711-e5e0-4fe0-b8aa-0b4e71977f26"
                        }
                      }
                    ]
                  },
                  {
                    "id": "28c01244-8fed-4982-9048-81c8e3287cdd",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1a3da6e0-58b0-4d96-bb62-50891541be66",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5b1f24e6-fde0-459b-8cb8-585d75a6bb7d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "548b8808-7a0e-440d-a2a4-67cc96daf1b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "802ee060-b3ef-46cf-9503-096dd9117470"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8f687fa6-7b10-48a1-9b1b-1d7f4ef25774",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b14b443f-d22e-48d8-8110-eba97237d0fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "43974ddb-21ab-408e-ba0f-90cb5be5a315"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "207adab5-0a28-4aa9-952c-3d1def710880",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "8ca89b31-dc19-402f-adf4-1aade48be83e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2e4137ce-ad5b-49cf-a111-972ccc0af54b",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6a0b2e57-9e45-409c-b65b-f2d1ace7332b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e6e942df-93e1-4ccd-b3ed-76f110de5c1a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "80f7ae6f-f8f0-48ea-bbae-33028f5c33fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "d8262162-c7e4-404d-9f89-060a10127e12"
                        }
                      }
                    ]
                  },
                  {
                    "id": "070792fa-e381-4f21-9ce2-bd40583996e6",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f3a49621-66c6-4aa6-9e16-2d7e4a1d407d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fd297060-f8b5-4191-ab32-6ca9ee6f07d5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "166c2ad0-eb11-4d7f-ac9b-8eb4ddea0a58",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "e48f0d59-ff06-43ca-9e51-69cf73f7d29b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "675e5150-111d-44d3-9465-a42464f79f8e",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0a26a007-5a1d-4b46-9f43-95c39aaa1ac5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "349740cb-2ba8-4773-a0d4-153799c49fb2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bda7247c-3d3c-4098-ae10-2f21e51e972e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "acb9b026-54d1-425e-80b7-4a38b403afff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "331b8aa5-dcd9-4e08-a520-ed2c88c0a5d1",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "51c36a12-531a-4c88-952e-71c903893b14",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "479b90ba-665f-4b94-9cf0-148474c4d87a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9d99a576-a812-404c-8b64-1cbaec4eb518",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "4fc19aba-aa5b-49e6-b231-e7fbd8bbe56c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f99b10b2-f6d2-428a-8e00-41fcbe51106b",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f454bcad-6406-4a67-af40-fca56f899afa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "71929cdc-2b6b-446c-a0e9-35815d7b5936"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9b3cfb2c-5a4b-4f83-803c-2ca98680d66d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "06ff6341-fb9e-484a-b81f-2349660d6be2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5c4fe0ba-f0e2-4b15-aa29-9c6f7d9f39c4",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b2ff8f7d-11f9-4598-b2c1-c9c36ef68cb7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a720ab28-1c32-4c4e-8cdc-7ded48951111"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9a421468-ea85-4cf4-beab-70b9bfbbce45",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "c19c09ca-9639-4cc3-bc71-bb0839cf2ba5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f643c3cf-70c1-488e-8f46-ef0670aecf5d",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1ff7e235-16c9-46f3-88df-6621db1bf16d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b195783d-c0f6-4849-aad8-68dd99cea5dc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "719c5e01-da28-4364-98d2-4420688096e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "6570b699-4efc-4a7c-b7a9-13cba0a0edcb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c23af3ca-6afa-440d-9e58-f8167fe7b3a2",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4bbc99ff-ee24-462c-bb1d-9849d0bf7808",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6088af6b-3566-405c-a3e2-6e7eadfcef6d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1ac44088-0bc0-4dd3-9908-68137ded4fd5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "48be59f2-0f85-4749-a4e6-a7d41ad03295"
                        }
                      }
                    ]
                  },
                  {
                    "id": "36426b54-4233-4fa1-91c8-584debe37e57",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7888446b-d6b7-4dc0-931a-70420f365317",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "930dffe5-8875-4cde-9d99-88db92ffaa8c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1792d9d9-092b-4e37-a430-c975d5a36dd2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "6deaa869-bea0-496c-80d4-59cd405ce07a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f2ee14f1-40ff-4b7c-a349-13505a5c302a",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "66bb8f83-4a6b-4747-9f2b-90fef3b5ebd3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1e6f0cdb-8d4b-4dbb-95fa-d85385478830"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5fd830e6-1e90-41d6-ba5a-a8e0abf8a9a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3b2f9351-4686-430d-a847-27c961525ebf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6154d0ba-251b-448e-b3bd-498816a78668",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "52cfaff5-9151-4afd-8b41-f1124afe5bd6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a486c3e4-3d3e-4142-8ba2-3d4d44af62c0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ceb0e3ed-eba0-41f6-a8c1-13e74e4c44ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6568e508-9559-4cdb-93cc-d5c67a26c1a8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7dd9c4a1-d05e-47f4-aaae-5f5d64ef2a46",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "04dd5bf2-1e7e-439d-94a8-64cbcd1dfa6b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d2c8dde2-e6b0-44cb-802e-01b901f8545d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "47380dd1-98f2-4201-a634-61cbab6aa816",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b817d937-8b00-4d6c-b1b6-2899741dc850"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d7c6030d-3374-43a9-8165-2ab483102cd8",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7fffe046-b96b-4638-81f3-3cfe3d4d83ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "74d42943-7287-44ef-b0d0-12f93f5a8646"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "32378b72-3d47-4320-8d45-80c186a5b411",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "082ebab9-804a-4e2d-b2eb-8eef7852ee64"
                        }
                      }
                    ]
                  },
                  {
                    "id": "489fecf3-8885-44b9-b8f6-d5d22192b918",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7bbdefc7-5dba-44f8-b0c8-21d87c3a98bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0118c5cc-93de-40cc-bbfd-2737cd52afaa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c75ec429-74a1-4f06-ba98-f0dbda9d047a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c0cf0f49-13e9-4946-ba1b-3cd21e0b53c0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5902ee48-372e-42ce-b4b3-b3338e46522d",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "101c156f-a96d-4123-b45a-231b8dfc03f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b8059448-795f-42e5-956c-0cc27d914422"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3a37575c-ef52-4410-9b7d-fb6c59b1dcf5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1711b8b7-9c1f-449b-b902-1fe46b52b851"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1b4f047d-d9d6-44cb-8f50-409557d12169",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d7a5ce87-70e3-4523-9680-f0cc360c7157",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a0734cf8-cf26-42a7-a72a-0b4505a15017"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bbf6db37-fc07-4510-9cba-90771280f02f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c545c3e5-db3a-4d5b-a74e-018910911eb0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "95624ce7-8cd7-472a-bd2d-f4448c252272",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a3bac2b6-0ef4-44cc-bc26-5176f3eb66d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e7e4a0be-cd9e-44e1-bb40-08305c6efa45"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "01700680-e798-4f85-8567-35b62805eab7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "86b002ec-76e2-4a2c-8644-daccb7b246b1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "21c6061e-6b2b-434e-948a-a38e61ab9a7a",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "97bbd2fc-dd66-4115-9e27-22f3effc6980",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "186531ef-b17c-40fe-8fb4-edf4cba5c2d7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "76caeffe-af7f-47a5-a301-a56915331cdd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ec20d656-a041-4fa2-b1b7-0b8d6aa0faff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d5ffac35-c53f-44a9-b6da-05bb930df750",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "586bd312-953a-4c12-b7ae-7690227f694e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f79ced0d-ba0a-4a58-bdf2-5238847acd4d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7eeb8c7f-4160-41a6-ace9-ffd6dc5cdecf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2cbca365-87d3-40fb-aff4-e7ce63b5a847"
                        }
                      }
                    ]
                  },
                  {
                    "id": "541b0140-2bb8-4477-ba50-92d323d4d924",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "269c3ed7-7b26-4b0b-aed3-445f9c789994",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "96678f29-5c94-4a9d-b32c-22eecde2bb6e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ba7c4a89-88b4-4c04-b8ab-6fd775d6316a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "92181838-5042-4329-a09a-1dd1f0a51556"
                        }
                      }
                    ]
                  },
                  {
                    "id": "450c1f84-eda5-4fd1-ab39-579f22bf98e9",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5fbf88e2-1586-4be6-a538-dfed8a827d11",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1e9244dd-9f30-4dfe-9753-752d6f0b249e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8851b246-8e07-4167-a729-da6c82777c50",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "32b95f5b-a680-454a-bbf1-9d59468127fe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a4e2151e-c753-4234-a3d3-d4d0a996a52a",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2b732b53-380c-47a8-9ac5-5d35e5fc2e95",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9db978e9-7244-445e-b935-c5fe8c18092d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1f009a48-233c-409f-9059-f186fcdf9e63",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4f764df4-4e06-4943-be0d-a1be724cf540"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8d17c71f-bf30-4628-9f16-1e9a72665514",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c696e862-86df-4d92-b70f-b55a0182ad70",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c6b3f66b-a242-4f92-ac8f-cc79241924c2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ff189394-fa4b-467e-a3f3-81dc8b172ff3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b10e1714-7d99-4a14-9012-51cd6604c571"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "fae2a27c-0275-4c5b-a8fd-8c22a9c53732",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "4f23cd45-7133-4474-8de0-355eb8b471c8",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ab1889a8-b47b-468b-a971-ef22494bf9cb",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "7ea789e9-9396-43f5-9a82-794896317b6a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "16d7baf1-a16d-43a6-8b47-34ab00a9b0f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "28901fa0-9c8d-4861-a164-76ecf69296de"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "63d00b76-e846-4287-92b5-027244756181",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "4cd91f90-50b9-4630-b6f5-d620066f34e4"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "f408faaf-6551-47ec-9b17-b3c027a00555",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "973ea2b2-fcde-4cbd-94d9-4609b032fe26"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "3ba2ab68-e411-45d1-b0e6-a6fb7e43a959",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "c2dacfa8-846b-439d-9db4-70153edb297e"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "15581f94-bfac-4631-a99c-1b1052a360c1",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "4c6a2330-bee2-4954-803c-5b743d1a88be"
            }
          }
        ]
      },
      {
        "id": "ac6b8a6e-b3e6-4831-8e44-58021433b454",
        "name": "Credentials - Update Status (StatusList2021)",
        "item": [
          {
            "id": "3e41ecb1-517d-4cfd-b288-e6cc5ae604a8",
            "name": "Negative Testing",
            "item": [
              {
                "id": "2f10e408-ec58-48d3-855f-78fd4d03ca7f",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "95b1c198-11a5-4021-addc-6db9700dfa72",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f8799d1e-53a8-4020-b9cc-bc2945440a9b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ea5ecaff-05bb-4d0b-85c0-607ce623f655"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e05033e6-f16b-4ba5-b2a6-b5f0aaf573f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "3a0273e8-f532-4d78-8e80-b5ab7ee1642f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5c0a41ad-e18b-4000-8731-1d4f189ded88",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4520737b-8871-4168-afeb-e9184fa98767",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ce571632-2cd1-4d91-ae6c-afbb8efc42ec"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "076b908e-c840-4625-8936-040168453160",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "646b591c-0c5a-4dbb-932d-6fa7368123a3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d556ad4a-ce8a-4ad9-94cf-8ac393cb2bbd",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0f424834-e29d-4fec-a8e6-b305282c39a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f6f56437-99e4-4392-b32f-7704421139cc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "973778bd-9e69-4bf6-b7c9-389d2ca6e7a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "ced3d0a8-3830-4bdb-999a-7923d1322f25"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6bee866b-5453-4f1b-9764-4b22c0f0f6f9",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "053618a3-cb47-407f-9312-33b8e55bb2be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "25c13e60-babf-4f55-a5b1-281fb93a2d33"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "03c0c6bb-2a1f-463f-b0a6-45db91b02daf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "3995d8a1-a034-408c-af80-ad055129ad74"
                        }
                      }
                    ]
                  },
                  {
                    "id": "582360bf-0698-40d4-bed5-f56bd62f4a67",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5e69ca8b-e4d5-42e5-aede-4e482b35348e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e17e41ca-7f36-4f51-b3ef-98c415691ecd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dfcb2fbe-8495-497f-b25c-a1a58c73f6a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "507a827c-b427-4911-80f9-2ad087985dd3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0b6fa68f-aca9-492e-bd1a-3f946bda4e9f",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f147eedb-88f1-4f35-bead-a0227d59ac82",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fb3fe412-b8dd-47e0-b301-4f11126562b3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5c866889-5aa3-45fb-abf7-0f6efc9528a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "f3d3b4ee-de5f-43f5-a9cc-e1e40376e52b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "17584f9e-baee-4e86-bacb-1ee75ee3f2bf",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "274b6fd9-ddec-423f-9a31-b9a00da138c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a53f4038-c1f5-4f98-9c57-ef126155f755"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5d284f4d-fcda-4c15-9a50-4f7c0c8bba72",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "3303fb6d-045c-4d58-a743-1ac4ab68dd7a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "920490f0-cd2a-463c-b6da-796c841f562a",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "771318f2-2fbe-4160-b07c-4c4a39f578e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "98d43ce3-c27a-4500-ac1e-22556380272a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "852f8b27-0025-4896-acb6-b71586aebcc6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "06412b07-d8b1-40e5-98ae-d91dfae39674"
                        }
                      }
                    ]
                  },
                  {
                    "id": "edc2a533-a063-407b-8084-4a70494aa5da",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1305bec0-c44f-4c35-a2a2-ea83aa27bdf3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "406b0d28-9e16-4bb0-91e5-cd657ee90188"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "80329b7b-43dd-4088-b3ff-9c43f0b34cee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "08f16ecb-81a3-4bb8-8929-22b1bd831050"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9485135b-e92c-46c1-8700-2fe0993b4510",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "11f6128f-f235-4b39-a727-e4e617bb5280",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1a36edc0-faf3-4574-a603-2fbd5bc5a678"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "93d5a921-dd10-4285-a980-a4885d3f873f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "2a9fb994-3bda-4004-b956-fe3350016ac9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "188f469a-5916-4f1d-ba1e-c5bcec38caa2",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6121a229-be6c-4c87-8ec5-82d509b977a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "858250b5-92fa-4fc5-908e-3de7ca0e5e9b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7435e300-6e79-4728-b4d2-efb01b949663",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "ba04af7a-e131-4956-a250-8b59e6c45913"
                        }
                      }
                    ]
                  },
                  {
                    "id": "21be486b-7d70-4760-a968-fe52b3c484c5",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8eec883d-98d0-46e9-a759-b562ea8f0f81",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4271d041-5463-41aa-a587-cbaa4a34edcb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "126ab0a8-92e2-4e1f-8bc8-db3fd723c769",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "a6c6b89a-7a18-43af-ac61-8e7189a09a42"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1c6ca3ed-91c4-4ce7-b896-a8913793a2f9",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "69735c81-eefb-4ad1-a1bd-e45ca994a516",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a3e6c83f-e496-45dc-a088-697378da7270"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3ab0dd7d-9909-45e5-831c-425c5a069bfa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "e93def94-c8f8-45b4-9876-9e803400c88c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fd35c865-b7d6-4c86-af36-82d97747a818",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a1f268fc-d727-4ced-95aa-15bb851f2fa6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "29f4397e-43f0-4ec4-ab4b-3653a19d1fc3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6c473aa9-df1e-44c8-b60e-545729a94f6c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "3fc4b85c-fb84-4b71-afdf-67721ee0d4f8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "94fe778b-1722-45c9-80a7-eb06c6b61f5d",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "079b632c-0fd7-444f-a6fe-fd18a3b40e8c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dd80b616-50b0-4f7c-919c-90a19cae523d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4673a6aa-6943-41ff-8a40-8e45ec14e060",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "3bebb12b-5c70-444b-86df-99a13d6275bd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3ac917a0-6f32-458f-a665-1a54c65e22d4",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5ba6ae32-f2f2-49f3-ab1f-f7cf5030e579",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "76aa6403-9a0e-4082-9504-6943957356d0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "17909bcd-0751-4ed8-b453-bfbdf613b53a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "05896fa3-ce55-47a3-93b5-445e08770a60"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f95c5943-a250-49e6-8fb1-ae65d6a534c7",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "86beace1-6836-420d-99da-ff315fa005cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c0682f8b-c52c-460e-a457-0ba6cb14faaf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "42baa9e5-e268-4ef9-8829-e4fda87d5593",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "b0731f53-f529-44cf-96a6-267dfeba4599"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1d6a2589-fc99-41d2-85e6-f50323d31a39",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "201a4134-158c-484a-9303-4df783359b5c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0875fcbc-bf0a-49bd-aea4-65e25c34422d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5dabe008-39c2-469f-bef9-8ff8381cf685",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "1481c9ea-3b9f-49cd-92b0-c5f7275cb57c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "93eb6056-9ed1-4ca2-b2f2-3c9d7094b556",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7568b26f-615d-47b2-b808-d9e215003ee7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "55c5cd54-9d73-49d1-9058-6d195e62706b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d3518ea6-bc0c-416b-a964-8b74f47710b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "dd91e1d5-1cf4-4901-ae6f-7c4c0ccf8135"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fb63d727-80fa-4539-86b2-af77a396699c",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9a853d01-4587-4913-8021-43f488ed8392",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e35b031c-ffee-4342-8cc7-160d82acc607"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "059ca8d1-e92b-4bf4-8738-cb2c326112fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c53f5c07-ef2f-4d56-9916-da0eabec0f93"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ec1a6784-6622-4b30-958d-131f342a435d",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5254309c-8bd7-4665-a049-9c4f79afe7db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "09837ff9-2a49-477b-b105-ce701499a337"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "da76266c-f3cf-4239-97d9-2b2da211efc5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "aa3f5488-a5ee-4c0d-b2dd-6b6212af9dc8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c27dc3da-a4be-4600-955b-97bbbb2d1c4b",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5f39314a-f478-4560-96b0-460885ef5e51",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "90d91f39-c436-4aca-9543-0c5ffce53397"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d1520565-08e0-46f9-bd89-21382af021c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0dbc3a51-456a-4d29-853c-dd7644a50b41"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6556bec8-cbdd-401a-9067-268dd25be50a",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "481a2e40-81f5-4a70-88ad-60b426fab63f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0e5756be-2d84-48ad-9e12-744bc5176493"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "41fb3ad0-10fd-42b1-b585-cfecc97237de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1f6837c5-5f8b-458a-915f-8f0415903803"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0a5524f1-b0a3-4989-bb2e-c5a51147d335",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b6d8318d-1799-41b0-9df8-73f07f07a771",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0a289f7e-ef67-48a2-b91f-91ef09584b1b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2ccbb415-08d5-490b-8663-5e6b8a44ab98",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c4f6c939-4416-4756-9e7d-bcde697ce301"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e0996f1a-d828-40a9-a524-76b0ec64b7a2",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b4585d32-9cc8-4a1b-b48b-7ef28b4041fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7f14622e-f07e-492e-82d8-dd0960d18163"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "491cf305-b694-4964-8ec7-c7e2ef9c18fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1b49829b-b449-41b2-af06-bc1a63e9dbdd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d819f30f-9569-44d6-9bf8-18541fefbb6c",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ddfe70c5-4f46-4fd8-b11f-defc356ac803",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2aa52b59-63b0-412d-8126-a2e92d5e00dc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "697c861e-5afd-44e0-9ff7-54037da8ed61",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "459bc500-598b-4389-9be7-a90abda1c6c5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9d265947-9a29-477e-9758-16cb54e79a07",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c5b115ec-31ef-47da-930e-6eeb301d49dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ac1019b7-a8af-4b69-9391-8444a402184f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "22d3d515-5efd-4967-b858-210bc3bda2b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8fa84278-d5da-4e06-a680-ab66e0df72e3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e31787f2-980a-4122-aefb-c446a30a740c",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c1ae6fe1-7a9e-4a75-8712-891dcb33f310",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "40d0ee44-248a-49c6-a53b-7df164c20f73"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7e8cc55a-252d-4ed5-828f-1c2d2a64434d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "47fea119-a7fc-4176-815e-b57804a6e056"
                        }
                      }
                    ]
                  },
                  {
                    "id": "97ed7b1f-f055-414e-9120-acc0d7b7d967",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9490a04c-5fa2-48c1-a4ab-dc676e8b406c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9ef6bfb6-7bc8-44f8-a50a-14d16b8ddbbe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "42c32238-19e5-4eb5-9e92-453790a86d6e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a458ecb9-a196-45ba-85dc-7b4f1cd0688d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d5386815-f7a5-4a0e-8878-6cfa47abc180",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "013fbea5-9595-4ebd-8dc8-6a40f9346a70",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a500a9de-b73b-4072-a506-23d917b6dfe6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e660c44e-f40d-4827-a21e-50411553ca3a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a44cdb51-33bf-4b53-a5fd-da1d81d14ec0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c557ad23-d1f3-4da1-9935-d62dfc3decca",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f844c9ee-eac8-48d5-b170-a43f0e6aae97",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4fedc315-7fba-4f63-8a33-28201078e21d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8832d2d2-4ce9-4167-ab51-9eee63a12016",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f19ac567-da23-46f5-9255-1aaaf5d9dda9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9328d0ec-435a-4868-bb49-e84fcdea47b4",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "465040fd-d3f3-4c49-9594-6b8893ebf7f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "07ba962c-aa93-44d8-9d98-f03511d0363d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "04124415-ff7b-40dc-a0a4-9de36f25ce6d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "51b3d336-d9c1-4850-93f8-28a558187601"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6149affe-bbb4-4845-9dab-f3578381de96",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7fae8e1a-20bb-4c8a-ab10-140cc4690b88",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "09317d94-d788-4871-996c-62c459ddbd0c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b1f6ed76-c369-4ca0-a954-38d5861b331f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "718c1fb0-3ea5-4318-b143-c2b2e42bcc9d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "17c471f5-2057-4f88-8775-650ee9a3a544",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4da09228-5205-4218-9729-712d75f040d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "92d912fe-9090-4163-a65c-4b53a1548082"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "57bb58b9-a03c-4592-b2ef-b61624bce662",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7fb58c7a-3ac0-48b0-bf32-2d2b78b873cb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f14cb166-fefc-4f1a-84cd-da266bf02ada",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "81f468a8-ea6a-4cb3-8bcd-62f83dc91c84",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2b567a21-705f-48e5-bb6b-7117bec29d86"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e1970857-adc6-46f6-b60c-294349c301ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "98d7639f-ec1f-436c-aa47-aadbe784f77c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c5e21c2b-ff76-45d7-be1b-92e981f5ed18",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b8826cf2-30e5-4075-b841-e63742d0647f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e6d08869-ffa2-4432-b083-18f5d7365857"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b74d5878-2291-4847-82a0-7cd3960fdad4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "97e702ae-5191-4f67-a280-8062cef352ca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8241b2bf-6732-4916-b649-4a5d0d800964",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "901ba959-1f31-499d-962d-13e3b3fb630e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e287ea8c-b374-42a2-bfcb-7547b158d045"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "764178a5-00df-4f8c-a1b1-e28be7b6119b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2b3309b3-c160-4667-b2f7-427454b3a25e"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "ddf61876-9a84-4408-b895-ca1a3aa59fa2",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "5da2fdf1-13f7-460b-815e-3965ad845b9d",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fbcf65eb-9cc5-46ba-a934-6ea06bc2e4c5",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "8bfea77a-4ec2-464c-9c44-38d59ab67ab1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4f0c4349-64ae-4835-8735-77e47dffada5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "a6970156-e9aa-4468-a826-7f7c32107091"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "9414c810-2a0f-4260-a8bc-ea4cc0bf2044",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "809d3446-0e3e-419a-9021-db81abac9b9d"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "7f3dc6c7-d586-49ea-910a-a83ddc07991c",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "0b19cf91-d54b-4170-b42e-489d825f43df"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "260a7d7f-43d4-4e3e-b299-97975d492d5b",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "7ed807ed-3b45-4ab9-a7fa-34a5bf02cac4"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "1bd00c8f-1cb6-447a-bb28-8f0c0fd4b598",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "299b5373-1b6e-45dc-b580-4961b43790bf"
            }
          }
        ]
      },
      {
        "id": "7679a7fe-b4d1-4d74-8f32-7b0fd8b8738a",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "3928a504-4269-4806-aeaa-098d5c3a504a",
            "name": "Negative Testing",
            "item": [
              {
                "id": "57647904-4686-4db2-a9ca-9857eac3a25f",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "c7e89710-7fed-4d73-be51-17d03da0c6b6",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b0437331-af3d-4412-a271-7962f9a69d99",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1e1b9cf9-ea8c-4471-b65d-9b0d86822820"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8f8f69fa-dba4-4611-aee1-cd0d3b384bd5",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9573cada-4bb0-4f39-aa18-1184c011866c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "10f60709-ed2b-4e29-9f54-e199edc30f3c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "76b5d1c1-73f9-4938-9438-e897fe205b9e",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "df75b4e0-6db7-4d1e-95c1-9c3dc8a949cf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "46fd8578-fd3c-4d9c-9e8b-216a01d280ad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4f34e731-efaf-47c2-8312-a0c774ea5dea",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aa6bf749-0f07-4e95-bdb0-e18b990aba6a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c4e134d3-a73e-412c-a8da-30d66f7a0624"
                        }
                      }
                    ]
                  },
                  {
                    "id": "14b378ca-e375-412d-81b5-2e432d0cd289",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b4616e9-8653-4b72-9692-25c4e4d31f89",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "53999051-4bdc-480f-afec-41bf6235ee76"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3d4c93d3-e70a-4327-b66d-151ea68f47f0",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d3128c30-f87d-42da-a29c-f2627690184f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d4600936-5ce2-47c1-92d9-92dbd6c51768"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bf79e476-2496-45b9-8f25-211aca2318e7",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3eaafc9a-4dcc-45ec-bdbd-ffaf9f226a18",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3144f84e-ffbc-4e82-96eb-1b9531271dfb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7c456f82-dad6-4576-a970-b7210a2c8712",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0521c27e-2892-4323-9c0f-0cb726633952"
                        }
                      }
                    ]
                  },
                  {
                    "id": "09e5dd00-ea1f-4b7b-ac1b-b836d6f0a17e",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d88e811a-6229-4c51-aaa6-4860d1c8cbea",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "253dd7e9-5a52-4ba1-97dd-613458c206f1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "37731585-8dca-4f3f-a238-3a88c092dbb3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3b1f0bbb-eeab-4117-bb7b-3af207b63d85"
                        }
                      }
                    ]
                  },
                  {
                    "id": "82403b2e-3461-4ec5-b744-27e694e66e63",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4c0c005e-50cb-4b6a-9583-35fa0dd76a23",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "268c72bf-5e63-46a8-9827-70c8bb2b444c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2c638ca7-f8d1-4dd4-8380-a3352fdfc568",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a6be0dcb-cb22-4350-94d6-8f572c44db52"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bb5efc46-84cc-47d1-9421-32457bbe4ab9",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4a3605a1-4417-411d-912f-ea150ffe1187",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5d6e98ab-eda7-4671-8892-5615ae1fe027"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4cf2e6d3-8443-4bd9-9aba-14d78cc412c7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8a152294-a64d-4b8f-bb67-b8f21f898bb6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3039016b-a8ec-47ec-a527-34348e15d0fb",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f596d92c-3ea9-4c87-8a58-1d09ab579845",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9d229c36-9a92-4d53-8eb9-e2d0a9a665fa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3cdec339-ad6a-444b-9375-8480febbdf08",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2e6edbe3-91dc-43e7-9f9b-c8269a5025a6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "98dd64ef-dee9-4c22-bd63-4746cb716cfd",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8097b52d-59ae-4c99-a974-c59544986829",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8a8847e2-5917-47a2-8e7b-1fefeebaa8c8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d2a6737c-34c6-4298-8ba3-3341607d8938",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bc6f5f15-b8a7-4477-9aaf-e164ca2cd5ba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "73478682-0ae0-49c7-b0da-5a4be418bb85",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "935e05d8-c05d-4262-ada9-669d7860dbc8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f1d30af5-a59f-42cf-8d15-f3eeb5edda0f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "28cd7fec-6ce3-48db-a475-2b42c420b5c5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d5e0e31e-1cb3-4d8c-9230-6da61618eeb5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "39123798-8dab-4679-a3be-101846871a88",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5d1de169-2334-412c-915b-ae205a63554e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "294e1a4a-d253-4011-b6d8-2491a1a2def5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d7378fce-a64b-41e3-8764-61eacea67685",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2d4c68f5-29cb-4a8a-bdef-7997667b6a03"
                        }
                      }
                    ]
                  },
                  {
                    "id": "554a9cd7-3157-4fd9-afbd-e67e01ef0d71",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5a1da962-4023-41ac-ad9c-57fc21c9bb04",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "461314e2-a926-4948-b08f-a003e7464fc3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c2b20e90-b434-4940-bcf3-0bf7ac62e589",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "83de1a1f-6361-4c42-a43d-4ddadc1f9f92"
                        }
                      }
                    ]
                  },
                  {
                    "id": "75874851-7192-4e91-9a27-30f51c33a427",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ac76c5d6-7fb8-4d48-bf00-312f1dcb5f4e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e487746b-110f-4872-ac24-fae4c3d23224"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "316c511d-e133-45ee-a083-cce9d56f1df6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f31d80e7-e27a-4931-9e05-43d4986042f4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d7d731c4-b910-4d78-8bb9-bd781cf6ca63",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "357fa58d-8363-4090-a252-c01ae743f76c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9e75df1b-a78a-45f4-8e5c-869aef676d14"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff7b8f03-9a45-4c84-838f-cd7e8831cbe6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3f5f15bd-7b66-4483-85f2-aa99ff02b6a2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e32609d3-7499-4318-bee5-3982a0806e4f",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c149a38b-2ef4-4802-923c-a232f884a321",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e4cdac00-446e-4f46-947d-6ab9fc619b19"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "02e27706-5be0-467f-87e3-64b223b40d7f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "427e9563-8a1f-47ae-b4fb-996e4fbfb90a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b0faa60c-b48a-48a2-a6f6-66d1263a99b9",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2984d0c7-87d4-48e0-b270-390e0d7731b2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "38e3a583-e1af-4eba-a164-fc72b3624f73"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cae8a7ba-346a-4c1e-94bd-66e46a6de251",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1c978ac9-4cd2-4455-8766-4918cb8d9b89"
                        }
                      }
                    ]
                  },
                  {
                    "id": "50b4deb8-4aca-4896-a2f9-fdafa52bb2f2",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "98b82f91-a189-44a1-b587-fba26c439c9a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "df52753b-fa8a-4258-bb4a-05315ce15d13"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b1af4dcb-a6eb-418b-a180-9d7d9a225b8a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "29079ce9-d6d0-4405-9660-7363b9ea3717"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1802cef5-b2e0-41df-a4a9-df969981745b",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "06d97983-70f3-4c02-93ec-056311f4a6e2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0cd65759-8af4-42b2-9e11-a48440c0cc44"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a207d81f-86cd-4326-87a5-9bfdb3c798e4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e99ab889-d07c-483f-9c25-e43a5646e2d1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f4fced01-d0bd-47c9-8ec8-55823442a7ea",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "76c5e330-6c9d-464b-afa7-5b0d6fe34317",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9a737e11-bce7-4389-bb8c-1815b430ca7c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2f12c3fd-3609-4671-85b0-c6a206a1a30e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "db08feb5-9d3a-49b2-82af-322943e38863"
                        }
                      }
                    ]
                  },
                  {
                    "id": "24ec87e3-0b27-44ca-a4f4-8f00bfa2f1ed",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f228dd3e-9c31-45ae-9ede-e60add8c85be",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4c7bf21e-b6d3-4a22-914e-92cdb274f17b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7c782f2f-0f80-43c7-9f0c-df842e8b158e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "008bc066-66bf-4ef5-bb88-cebd57809201"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3f1b1323-7995-417d-86e6-e4922f24b8e6",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "afa21447-0fa8-4dc1-b592-79b4fb6dc815",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "604cc0a4-8098-4edd-948c-078f35ac0768"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ce20b59b-6170-427d-bb8d-143aaeb30be1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "efbfb730-08da-443c-9634-196c7cc916f5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e11a3d7f-3e48-4e3e-934d-73c3cbee1577",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "24550f3e-2942-4449-8d16-1e2ffce749ca",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7ce0f025-23de-4198-80c5-5707453add0b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6a3abb8e-288c-4a65-8d48-e0924291713b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "836d303c-6d42-42fe-b1e0-f2b7d6d951f5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0d036fdc-1110-4d7d-838f-7872a99c4487",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "73da0f62-cfba-4c61-a80a-d9d1ce432c8d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "695103ec-5629-4137-89e1-b37a367de686"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4bced937-af76-4c47-9e87-a7a06720e33e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e063fc09-cbca-4451-b961-11a3121a87c9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cef0715e-4183-4417-a073-0968376f66d3",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6218aacb-c85b-4e59-9917-323443fb0a19",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "eedcff42-a446-4310-a9bd-14e20c184eeb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c87eb3f4-3cf4-47eb-a5e6-8b73b7c52ba4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a71aac1b-f04e-45fc-84fd-01200437f0b5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ec81157e-0588-4e62-972e-ce45fdd3874f",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "95429246-8504-4ae0-bd01-5dd709d512c2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dff4400b-edd9-4e05-b405-6b7d6d884c4d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ae11f24b-6274-4f6a-88e3-6fcd28340e32",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6af8bef7-3f23-4d1c-aecd-a7c2c0727a2d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6731273c-43b5-4a06-a65e-a4e1af196000",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e22e087b-f682-4cd4-ab13-66500816a485",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "55defe4c-9537-4326-a48d-5ab3c24894d8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6487d85f-6067-47c4-9fad-9ad64e83fcb9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "beafee4e-74c6-4579-a599-06424fdf9571"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e595cd3a-22f7-4202-9ee4-07ad14b0ac27",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a5302fa5-5fe2-4624-8f2a-cdc4d1b51e5a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bce21502-3470-4d3a-a65e-05b8621cb481"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "39966b31-b251-4502-b412-2a7d59844327",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "19d62b2d-3c75-44e6-8377-2a98b53ced24"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8ae6d8c5-25cc-4220-aaf0-d56424cd26e5",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cbb01c7b-fb96-4684-be7a-a4977cbcfb8a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "dec4b736-8b0a-4f2a-a315-654c978790b3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8321ad36-254c-4f25-9574-3561f8f64ce0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e1fec80f-2161-4b0b-acdb-1df5fe0cae12"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e3cd3c36-e596-47b0-968c-c3d5c2c4fbc2",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "20088303-7ace-469c-a331-fee52b24d8fd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3331c757-a381-4b29-b26f-f3703359aa42"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9ae95158-cf03-4eed-8caf-658cf5163582",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8e5bddcf-e6a2-4eea-ae39-4c8c3b7564e9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "92dfaf05-afed-45d6-993a-c93cf0b2b3a6",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dba0160e-b6a4-4747-917b-6ce74a0520b2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ffc328a4-e639-49b9-832a-aea056afc361"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "88301d61-4716-4b4b-bf68-1e18906d56ee",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3aabe3e4-058e-4f5d-a1dc-ba16f84c5d07"
                        }
                      }
                    ]
                  },
                  {
                    "id": "64fbc43d-8133-4a45-a056-6c84fe0cafcd",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c8f0ce80-57c7-4c5e-a697-7f2ebfc99bee",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "477cd98d-3131-44ff-82a8-849f8eddd45e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "678dc1d2-cd59-4045-9822-95bc122f6128",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d389d63c-2513-49a3-a212-5ab56008342d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0ba3e133-03d9-4943-bb00-8f7a2cbac4d3",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "693ca8f2-3f11-4f16-a162-c3eebb530675",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "97758745-163e-4db4-8add-bb390514fe75"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "228a3d88-c65f-4b7f-8db8-94cdc92145e6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f1e1a68a-c4f6-4097-a2fc-b4853f2267b9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2cc0400f-4722-493f-a45f-bf1104794e7e",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f9030c80-e13f-4bca-aba5-98021ae85122",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6ba0472a-6663-47de-b46d-6241c6178329"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "44c90aee-d751-4a4e-82b0-23b2de9f7d3f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4c377661-961c-48ad-a98c-a99ac5486910"
                        }
                      }
                    ]
                  },
                  {
                    "id": "15ac6584-948b-4c05-a006-becc436f590f",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "91cd9b81-db29-43c4-9b7c-b1c3f633b5e0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9bf5c622-1449-4981-9ced-8f7f7a8c1ccb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4c3ffc3f-df8d-4975-bbdb-364b18a03d1f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8d933891-a043-4e2a-b95b-769124343d48"
                        }
                      }
                    ]
                  },
                  {
                    "id": "34c85638-5a9c-4730-9d74-b990c799e5af",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9cc4ccd8-b995-4bd0-96ed-858accfae169",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5a4f7ba1-74f8-4374-8475-90874caedaf9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dc4a8b7e-f68f-450f-8fe7-a3992c49557d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "93f6b0d2-48bd-4c25-a9bf-d1f980354079"
                        }
                      }
                    ]
                  },
                  {
                    "id": "557d6ce5-31a0-4cbc-a862-a4a26a566d26",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bfd988f6-c69a-48f9-b1b0-d4a3df36ef4e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a994acf5-5932-44f3-a0a6-2ae9f4d9a4db"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4254a522-e742-4fca-ae36-7b070cb46543",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b838261f-2ec4-42d9-b922-ad96cf3b877d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0432efd4-518f-4239-a7c6-7f0f18d837fa",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2d284926-8d6d-40c1-b9e9-99632bfd7143",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0530e0dd-463f-4dd4-acad-54a7e06af0b4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1e325770-2db8-4e5f-b87d-001e6f143eb7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2dd0e714-c222-4958-b835-e82f6559595d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "30f23c49-96c5-4969-9bfd-9a5e06d9c051",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7183711c-b138-47e2-ba42-fef37b14c183",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "079f3aa0-6159-4984-ab97-f169ad0d9ffe"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "72bb614b-e2a2-4f1a-8701-1c5d11eca6c7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "02ee4208-44e7-4f56-af77-61ccfe3b0e99"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fc109caf-5c00-4bd0-9cc7-f9f695b753bc",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1664532b-bbac-4add-9744-4eeda139c94f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "72aa497e-c3f0-4162-9131-34c52bf83663"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0195d128-d336-4a0d-b428-0c72afd993e2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0f65d68f-e4ef-4d8b-991b-de7f611e72b0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2b7bfcf0-7b6d-4f4a-9250-da6ca4e4d6fa",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8241abc4-462a-4831-bb5d-362afe80da24",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9258d8b5-71cb-4c87-bb39-dc8631f7435f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "833d97e0-04bb-434e-a4ae-71ada9a0389e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "231578e2-40b1-4fc3-8859-2ded979a8f0c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6caf0782-efd2-4e52-a099-f08205c20209",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7c7882c7-db62-4674-bd72-1196b496f577",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2c2f550a-6d55-44c5-9ea3-381be4a32ed7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d97d2bbb-04df-421c-8b9e-dbbf55006cc4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4aba6af3-af64-4586-b2fe-68a7bd7f20ba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fa016e20-e09a-4086-af76-86819c6cf46e",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "afaf4597-28a4-455a-8705-56b8bf8603b8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "85e9ff5c-6237-4809-8a6e-36eaa10de438"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a02de8a0-1305-45d6-946c-776f9205e596",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "da08b835-1379-4b5c-84b4-bc978937385f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cd49eaf9-6c93-46b3-8e5b-3a8f10f2dbb2",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c39cddb0-255b-4054-8ee1-8cc0abd35065",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "61793261-a4a1-4172-8a6f-b41604e24b71"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1bc58fbc-0fb3-4bf3-8bfe-bad56381fd0a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "babd7ea3-8253-4ba6-bf24-18a3358ce286"
                        }
                      }
                    ]
                  },
                  {
                    "id": "00febd99-c00d-4130-9a81-40cfc0210218",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "015453df-513d-4477-9ffe-7b8dc2411415",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4ce068c2-7b37-49ec-a3ee-8c34232ef05a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "879997c2-aa5d-4fc0-aff9-88ef9eb4ef73",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1ea8986b-3971-4978-a985-d600c5cfed54"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0fae3570-689c-4073-acdd-c02515ef4796",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fc3abbb5-4a69-4b8f-b96c-05152ee5b978",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7f124f72-a18f-4415-967a-264748e8011d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "00ab94e3-6459-4c27-a627-0ea96cda7e98",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "db5fa94b-a9ec-458f-bbe0-b963294d4202"
                        }
                      }
                    ]
                  },
                  {
                    "id": "36f43236-004d-47ce-831f-929341c87162",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "24402f07-5246-47d3-a44d-9859bd2d9f5e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dd7c75ab-4aa0-4dbf-99cf-94ff8b6fe32c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ffb54980-3f81-4e35-b9bf-a56219794111",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6981ebcb-2390-44e6-a4cc-319a7e6fae10"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9693dc1c-031f-4188-9787-e0a2530a19ca",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8e5dd729-9943-47ea-a844-94549cf73717",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "887e9c09-d19e-40ad-b732-91e8f2319642"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b8c549c0-f3a5-44df-9cb0-bb0e2583d161",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "55302095-36e9-4bbe-a5b7-3a37a238014d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2de99f9c-eb94-4394-ae68-a77ff014f9fe",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "19062d0a-77cb-43d1-a53c-b13fdfea3525",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a199ec7b-55ae-496d-98b9-cacd7fb7e192"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "11c4a7c1-3886-4f98-8946-80c8d7add19d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "095cbff0-db91-41d6-8624-bac37393e9e9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3903fdca-817e-47d8-866c-c78ee8ba57d3",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5e4150f2-a8e0-4c2c-a73c-2e2fc803c59d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "daa082e1-94f8-4c0a-a51a-2419ae66bc5d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3fb6bb0d-8775-4d3c-8d71-5b2d21736cf7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "76019b78-f679-4426-9914-e0d4ced0d923"
                        }
                      }
                    ]
                  },
                  {
                    "id": "34745e6b-a7af-4ea2-af76-ea12bb174247",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5b0bef63-6db3-4460-b522-a97a86779d60",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9178b3f2-9800-4dd8-aa85-1a942b71d7a0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "60dc6146-fd61-4f5f-91eb-95b3897b2647",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1f8ddb17-509a-49e0-84a5-6b3ea45ba32c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e32f8d78-af30-4ccd-b8c1-b0ac2fb830bf",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cf4fd613-9f95-4322-9295-ce629dc305ee",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "95409a38-5e3c-4cd1-b600-06b2f80f2be6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dc681fa9-5151-4306-82b5-707961c89754",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fe1827c8-bea2-4c33-8d34-3beafd6c9f43"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d0ea0202-1a9d-4f3f-9402-782e05193f65",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5f29c112-7e96-439f-b3c0-90ff394d392a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0edd3090-c4a3-4a22-b556-0148f5dd24b6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7ca679e4-1165-4e90-87c5-b7836372b54b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f71fd9e9-4e79-4c91-845e-7e38b841039d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "08c0f743-4a9c-40c7-ade6-dcfecda08487",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eda3fd07-c80e-4b78-acaf-62f0ec23f659",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5d30742f-3dfd-48e9-9672-7cb960344057"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "66308664-9a77-4d8e-8872-a1a312f6a6f5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6102d66c-1261-4067-abe7-a564d5fc15e0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1eabfa48-fe5c-4989-9c7c-698fb573a205",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7e2a6cc1-1164-4e14-8cab-002f01ec7556",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5ad87cb6-389f-44c6-a7c4-7d109dde8ebf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5b1a96da-5486-426f-9bb9-597ed34414ec",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9f073a88-eb7c-405a-8ccd-e38334fe95d6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "74b4b96d-7923-41a1-81f9-bce08ec11572",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b959c7ee-deee-4d81-ad07-7fe24f040921",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ed0f78dd-00c5-459c-bb77-e47b871d4b93"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8db03c00-4edf-4b84-a969-b2f39cb06b2e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "43d99624-94eb-46ce-89cc-c5321c735355"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6aea739b-6641-4c57-9868-c76324b79469",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7c335170-5962-41fb-9ed5-912aff015e99",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "494264af-dd50-4840-9802-027dfe1947f9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "659f0a32-784b-4d8e-8368-676ca21dfbc5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6cae54be-dc04-4d84-9bfb-d44640e88881"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0aeaf995-b827-4702-af09-7302f024ce1f",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d3e08b37-e4ed-4469-b68b-89d882ad9caa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "213c748c-82b9-4b74-932d-e35ae7d0fa54"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f6f96482-5713-483e-a95f-1787d4d11944",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "274d79b0-adda-4640-b3a8-dabd3aeb88e8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3f3dfd31-023d-41be-98f1-324b9979d4d4",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6f51ea2b-8904-4a7f-b92c-f8944ddb453e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "152a532d-a9f6-4e84-9fb7-86d9f38ed207"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "81acbd32-79c4-43d9-ac84-1b6ef68fecd8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1457677c-6e17-48bb-981a-aa1b465cae6b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d496d0df-9623-48d7-9cdf-e81a449ced3e",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d9eecba2-fe05-47fd-a0f5-90e2f3b472fd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "50cc9d99-abe1-499a-9733-d0885ba4f958"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ce8b4222-3cb3-4ac4-a300-003551f97281",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4100c98b-5364-41d2-986a-f3ee8c382467"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c1b8ff0f-6141-4a46-bf6e-cf3725f219df",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "22632de3-4751-4c8e-8f94-c4bfd7fce6e3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eb573921-31bb-46e7-b4a1-7a1dc66f5943"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "45c05783-8c96-4b10-90a3-f02bed24b826",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b8c68a0e-9ce0-45ce-807e-b243a447ba43"
                        }
                      }
                    ]
                  },
                  {
                    "id": "13f58504-a144-4e51-90cf-817ee93f86ee",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2e00f1f7-4386-4ba1-b44f-e59800127ab7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7a0366be-6562-4c6d-9920-fee198e8dbf6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fdb32fbc-4ff6-471c-9600-a7fecd98a5e6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a66d226e-c29c-4016-80c7-40e21dc04daa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "69bd4c54-a60c-413f-bc72-c161cc5f23a7",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aeffd4ea-a32b-4055-b2ca-01a13340de50",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "08d0082d-05cd-44ec-9009-b55760211745"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "25ee83db-5886-47e4-b15b-bef77b11d632",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "97521d65-89ec-45d4-af16-f7dd477e50b1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9fa0af68-83d1-4438-830a-7b5afb04ea7a",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b1529695-8925-44f0-8f06-2b2b981cc586",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e2d39660-0d33-477e-a311-82284e44abe5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1d27376d-c19b-4c02-b8fa-29dadf1379ed",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3bc91cff-1c7d-43b9-949f-49de6b57ec74"
                        }
                      }
                    ]
                  },
                  {
                    "id": "04cd5b52-beb2-416b-b368-3a85e582e835",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c2353809-2d9c-464a-b2f8-b89468a133be",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "48b4bda2-8f94-4687-afc6-bc0d817274a1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d1b5a7f5-a4fa-4f10-a275-93b6885478da",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7b5e3d3e-9c64-49cb-95fc-8be13fd2e920"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cf536398-7294-48ee-9e85-63455cdc7e42",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "38cb7dbc-2498-4bc7-9d3c-3e2373caad90",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7b713bc3-3c85-4acf-a37c-e97b194fc61a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4bafb7f5-21db-4b50-ba83-681ff45f939d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d05e1fb7-59f0-4807-9150-f642d5fab8d0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9ece9e6b-96a9-4efa-8419-67a9860cbee1",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dbc39597-281b-4e76-b8a2-7a9960cbb4be",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f52a666c-f127-4c37-9019-030f90100621"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2fbb0e74-bf54-4ca1-a473-6d4b58e1f3bb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "af1bfe35-2ddb-49a2-b115-450d3aebb2dd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "523b83dc-88df-4c4d-972b-a60773a119ad",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8d8bfc54-b372-41d4-97f9-fbc195299bb4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "51ba2b9a-3cc9-4afc-8a2a-6b815fecd446"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e2fc1084-07ef-4879-91a7-6ffcc15eb6ad",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cede3abd-7a84-4e10-b144-a5dc47120a5b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "98d72526-338a-4cac-85aa-58a0774af9f7",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9b8e6898-86a9-4b67-931f-dca018539b6c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "93a52633-a0cc-464a-ad77-c0f1f03b6f59"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1017254b-92ef-4688-bb53-4a5e950f7fb6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "31a30c4e-021e-4fb5-ba54-29e2436d08e5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "33075330-6c66-4256-b378-27c955cbe1f1",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1de1e3f0-82d2-4cfd-ad93-7deddc8e2c6d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b6f0c89b-9f67-49f5-8cca-fb57b19fb169"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b52805f6-77bf-4ed2-bf0c-a005434ae78b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5fed4260-a727-4a4e-8bed-635715792d13"
                        }
                      }
                    ]
                  },
                  {
                    "id": "90668e24-1f65-42ee-9796-9091174e8d30",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b041f678-8d33-44b8-b370-c3b20c49a1e8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e2aa93a1-c897-458b-8612-8900fdcfa3c6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "78c3d8c5-f640-4210-b16b-576838f21bfc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "db546c5a-9d3e-432c-a653-7497a7d9fa11"
                        }
                      }
                    ]
                  },
                  {
                    "id": "60348930-1ed3-40e5-abe1-e231858989c1",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3de5fd91-e332-41be-9218-2c7d0d7d2914",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a448b4e6-7206-45e6-8ab1-9e772b7c3f0e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "789acb41-dc4b-4d1b-94ef-f42fd3eea554",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6995b535-0a07-458f-bf7c-60cb0c6ffc35"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a2716646-eda9-4d45-9952-d6542f9f73aa",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fd23cba5-ef64-4b59-9305-a3753f097f29",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "34b9defc-3b86-44da-9498-c9193491bbb0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "38ceb326-6730-46e1-ad54-10b579e4bb5b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3273f1cf-f27d-40f0-9111-b40a66d8a32c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "808ae60a-2c2e-4dad-b981-f8fb672e4363",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7fe41827-8c76-4ae6-a466-7e02ac7b896d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "66470eea-b7e1-4465-9feb-95dbcb2f903e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c23649da-1e06-4701-a8fc-f2a2a3bf1d18",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2aa39aed-f13a-42fb-9acf-01c7d772f58c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e5ef3994-dda7-46b8-828c-be4d49a3df05",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "60e7019e-a454-4f9b-9506-c0456f528266",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "39e63754-2e61-4a5b-a745-6e702c8eaf55"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b485332f-4691-4bfe-8bfb-993f546412be",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5fa7b2da-6ed0-4424-a9be-02b860915602"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9b76b9dc-2035-4e9a-9638-451f05dbf877",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f176e827-8c41-4dda-a6f9-03b314c4e8c2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "eaac7530-28a4-4d6f-870f-291d418afd3a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e5f2ce07-a995-425d-acec-dcac76ba41a6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8c6b8667-0202-4516-bced-856ebdb7b84e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f28f0a8a-3939-422b-9b8d-0293b9dfde3a",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a99cb1aa-9e93-4b67-9532-a64b400b5832",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "33dfed41-c474-48d9-a05e-f7cc30246ddf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bac82012-345f-47a1-a188-a1a555985357",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2a4c31bf-e950-4f96-becc-e3ca0092b56b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "38d2039e-621f-4455-bf16-bb7c5311e94e",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "389eb1b5-de98-4236-8498-c3afb04f8110",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "21d4957b-d1e1-49a1-a634-60c75db2ca61"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "846cf647-cab8-4dc9-bfbf-cc56d094f0a3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3c9ee945-10ea-4ea6-b11e-dab4f3605b79"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7306098b-e9ff-4860-aee6-4e09a7211dba",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1e7c2747-78f0-4ee2-ae80-d724eafc97f2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f77317e8-b5a2-43cd-bcff-b96e8a736ca4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "501bbeac-6877-438c-b8cb-51fba30b6b01",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1daa5309-422f-49a8-b11b-c5d3d34fc100"
                        }
                      }
                    ]
                  },
                  {
                    "id": "431e8ed7-8a00-44b1-97ac-d39e668a340b",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "951fa130-79c0-4ec6-86a9-806b827d0bf5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b0f1fc57-a3cc-4ac8-bc54-5ba6c3248c5b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a87fa0a9-d2d2-4b14-95bc-ef516d31c03f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "41155bc1-9319-440e-876d-ffe0bb65431a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "064860de-98a5-4dca-8cfe-f1e2fc714c46",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0ae16538-435a-4544-b3c8-a0e05affb54a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d7cc41d6-5df4-428a-8e6a-130c9695238d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a39f4d81-0dd4-4757-a3ae-1c1d3aa60328",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4ffd425e-6e4a-4339-b7db-acaad6946933"
                        }
                      }
                    ]
                  },
                  {
                    "id": "17f5a84f-7944-4bdd-b583-75a96cc82661",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6cb327e5-bc4b-4b7e-a980-30e20ff9158d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1bf4d920-7c0d-4cd5-9a8a-e3fe5b1eecb7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bdaf831e-bdb2-4052-91ac-c8287ff39134",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f228c4c3-f417-4f21-99c0-0f9e9a800a18"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cf8c7500-d830-4d6a-9054-7cd2bbdb0318",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e1c1cc59-0040-43f5-8299-71311c206610",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "29601e3c-607e-49d5-bf94-6d1a0a5a4d2c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "eac1c874-8a4b-498a-ad54-636b67a82381",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4f747087-bff9-4c7d-b0e5-104c76f67e34"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e26796ec-61bf-4c82-8240-fff535fa3492",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1707f7b4-a869-4dca-8a57-8bf1fcabb947",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9bb30d12-5268-41ba-a7d4-fb1ad57619b7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dc8ad740-2758-4fa5-97ce-0d2f6bebe0c4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "89bf6a74-578f-42db-9280-48d338734d65"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9548a7f9-cb07-4f03-ae6f-130e85ab51b0",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8feb4a0b-8cf5-48b8-a332-06e89185d658",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "00f607f2-f57d-4fda-91ee-0c0555145673"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "119e1f72-2109-4311-8e9f-9f72aa31a5e8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2008cb44-c69a-4eda-a638-88e02aabce93"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9686090b-548f-43f3-a372-797ec0b58c0d",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b7c56a96-4be9-4aef-8c5d-fe44d696ed99",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "057e7250-7c42-4614-9152-304ed0d6f427"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "178aa83f-f6c1-4b73-b6c5-3731cac34d5e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "da82a704-33a7-4fba-a9dd-daaf4d8ad436"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1de4b770-76e0-414c-8b99-a43e4d804920",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a3fd0f74-d3ea-4ae8-8153-9a2431915bc2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ff3cbcc5-ff02-4a76-bbb5-f4ee0a760c33"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a20c3326-1e8d-4608-9cb7-089a1be73718",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6c7e939b-2130-42d5-88fe-2df538ea6264"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0f410583-a8b0-4d00-94e0-6d1938183f91",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4dbb4f83-7683-46b5-884b-2de23a7b0649",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "225fef7a-d21c-4058-86e3-77b1def82598"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3c7cb561-58e5-4d6a-b3ae-219945ff2ae5",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c52399bb-c30d-442c-8f4b-1dfacb56952a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b4c07168-9fbe-4d93-b807-fb5140bcee9a",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "72bba1a6-be2f-4945-acb6-f2e05433b3eb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9a95d8d4-3f2a-4b8f-89aa-838ddca239eb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ac5245e6-6a5a-432c-8e79-b89d2ad4b150",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3c220259-5c9b-449a-bfbd-91b2a019281f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2095d803-3c42-4856-8f88-953af591e3cd",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d8818ecf-d22e-40b1-b6cf-2c3563626186",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a70d52b6-5530-4374-aef5-0069a05eb472"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "780c0f86-63f0-433f-a4f2-b2b2ff536130",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "59e0e4f8-a8ea-49e7-b942-2fb7b0a4c6c6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6aaab22d-a713-4072-8c35-5966d9d6bc8a",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1e9bf4a9-30dc-4074-83c2-c2c273def854",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "011ffe47-2546-41db-8736-f6e51a775a6b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d34d350-aadc-4dcb-a000-d2816f913055",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eb48fd0a-293e-4d44-832c-969e410fe26b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5ced4793-7275-4ba0-bfcf-b14d44743bc4",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7a0e948e-9364-4f6e-8b01-8cac0b36f138",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c9eaa736-e547-42f3-9055-326de3c45ce8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b1286616-3794-49fa-8ef4-e3ba1956f309",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "31a90a66-c686-4891-b358-4ad6f66da521"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6808604b-ec67-475c-ad9a-0eedd68e5680",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b2b592c0-b3e7-4721-911c-d60a8aef5371",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "14092913-6e21-4a55-92c2-0783d310ab09"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3ec82b6e-0426-41b5-887d-3df131ad7997",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ed5ba0d5-e957-4648-ab03-fbbb32e281ec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e8b90598-224b-49bd-81af-6c07d47354e3",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a8bad9c4-3341-4b51-be00-0ddad0040cd4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5fd1f767-3b93-4539-a05c-c471cf2aeedf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6e1f79c3-a4a3-4af6-a247-6d25107d1c3e",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f12aef46-5c05-4ed9-9cb0-a9165dc609f0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a6e6b731-3dc5-4012-a15d-103988702ffc",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7174c532-6347-4bcd-bbcf-0805ea9167e9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8d0fa4b2-aaa2-4d55-b226-54fc0a5948d6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9b70a3e8-b82a-44f5-b9c8-87906b51d614",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c2b2baf9-1a3f-4756-9ffe-f686ecccea3c"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "dd45ea8a-072e-4b4a-830b-ea6990bc33d6",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "fc686102-205f-4fdd-9deb-6743517bce5c"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "08c91647-e310-447c-bcf7-6e5e8745fb0c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "af7805de-4389-413d-a4aa-e4fdea13c095"
                    }
                  }
                ]
              },
              {
                "id": "d8f76c3f-2fde-46c6-8fb4-8caa99df02cd",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "4a5c8cd7-b4f9-47df-b341-4f62a20c004e",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "08f10eb5-6278-480e-9352-0ce55c13e2a7",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "6b9734f5-48c0-47d2-ad03-90ad365609fb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ebefcd16-8e07-41d9-9093-a8a1717416db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "01aa2f79-b361-4005-87d2-11889c1a6fa7"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "7e40379f-2f5a-46e5-b9c5-c08ee9a18b7a",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "4de4ffde-9038-4725-be39-c6111394a7b0"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "97b802a7-ecb3-4c84-8bc2-572d4d10eb8b",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e1d3bea4-9a25-41fe-a82d-c14eebda0ac9"
                    }
                  }
                ]
              },
              {
                "id": "3a5d3906-1fac-4def-8342-ba793c3b903c",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "1dc74285-0bf4-44c0-9624-2404892f80d2",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "04dfa346-26b2-4cd4-b7eb-757e6adcd0fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "95c0f353-1ced-4db5-a9c9-1a8f176a9d80"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5cbbf3f1-befc-4f1f-b9dd-1ab7df02ca38",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d00fb756-7f70-4832-84a0-196b74b9fea8"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "a1039481-a974-4f1a-9f7f-950ed61ea35b",
            "name": "Positive Testing",
            "item": [
              {
                "id": "dd48a452-d3ad-44a1-bce0-bca24e017bfd",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "08c59ea0-ce12-4e94-a676-69104a0f4f45",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "7fc3fad8-f99f-470c-89f3-83c154dfafed"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "966163c7-e51a-4adb-97ba-4768c7952cf6",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "ec80e7e7-3a48-482d-8d40-79e13c037939"
                    }
                  }
                ]
              },
              {
                "id": "012f1b1a-611e-469a-a41f-5f60813116f3",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "4d6bdc6f-868b-4f9d-abd9-e1ce37fd3ce5",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "6f171754-de3a-449b-a1ec-f56fa73d8acf"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "85b4e6b0-13fa-41f0-8fed-87724ad7e174",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "62ef3b90-1949-4bdd-be8c-39a12864a216"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "544da9ae-2307-4c09-b1b7-35c4e37657d5",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "1f055201-99ba-4f91-9eea-6f9089a8c642"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "d7a6151a-aa2a-4996-ab23-59dcf33f85f3",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "5a493ede-e5db-403c-a84d-2fdf2b35205a"
            }
          }
        ]
      },
      {
        "id": "4873e16e-1cda-4444-9f81-bfeac59e9ccc",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "6312db82-f922-4391-8e71-6d2587f40285",
            "name": "Negative Testing",
            "item": [
              {
                "id": "952e8bbb-7a95-4412-97a0-8f7e6dcde2c0",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "ebf8d87e-814f-46f0-b11a-63d0456c5894",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a88be117-fb61-4b54-8fa6-12e514389e2b",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "c272d01e-b353-46a1-96a5-5b7b2ea0c12a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4ef526e2-0a77-4829-bbea-867772d3a533",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "170c5042-fe67-489d-9709-32861872c214"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "90e6f4ce-a9db-474a-af9d-ea9ec7c56c52",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "6b8cb3d2-5d66-4919-a5b7-b184b294848f"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "febe1881-156a-4ccd-82c0-a7d33dea61e8",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "3041dd57-99a7-4576-bbb7-5d61d1b6765c"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "98ad86ac-8e97-4a67-8511-da1ff22d0c48",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "206c1809-a600-47eb-994d-328b4f5a087b"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "abf29ec7-f4ea-4785-bea2-cbafbb4d612d",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "268f96a1-15f5-431b-81d4-b5d99fd334b7"
            }
          }
        ]
      },
      {
        "id": "468f3362-7244-40db-86db-3713dc06511e",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "536c916d-921d-43c3-a714-ac55ea86f4f2",
            "name": "Negative Testing",
            "item": [
              {
                "id": "0895f4b1-d301-4b91-9ad6-a697f168e129",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "a1bfccba-529e-4cd1-b977-da9517bdd87b",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4bbcf0ff-83de-4d0d-b03a-cff8bc7b2635",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "161d316b-1d32-417a-af6a-2c261f01429b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5224876c-f9af-49a7-8c0f-46a8062de2fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "bf88ac59-69cb-4338-b895-c2535424e45a"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "3a6dad4e-2bea-4b77-b320-04e17450a0e7",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "7b38404a-e0a3-4866-9090-75afd0edae08"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "6743d023-cac6-40b3-96bc-3f933fd2a2e4",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b239ab56-a494-47cc-8952-8bcfdb4fab16"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "58a1aad9-1f9c-4962-b6d3-bad4b0fdf6ee",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "c89e4e25-de28-4a20-bd28-6fbff03e331c"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "07447019-130a-4c68-a8c5-99741d45b0ac",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "54a5f70b-614b-4e1b-815b-eaad5080a871"
            }
          }
        ]
      },
      {
        "id": "cf62dd1e-64a0-492c-afbe-a55ab6bc26e3",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "635215be-a0f7-426a-aee5-f88c9d23a9c3",
            "name": "Negative Testing",
            "item": [
              {
                "id": "4a270370-835b-4861-917e-194f73995f49",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "a7ce0852-1a52-4604-9448-afc534acbfdc",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "23552228-c72c-4298-8634-8ead8f6199a7",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "1f6e9b3c-01b6-4afe-bdfa-4431d037e50b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "eb4e9b6f-6cbc-47ce-a767-58878ac4f569",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "a803e8dc-03a6-466d-ae86-b230aa0ebaa7"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "cc67bfc3-078e-4509-bc25-c1ce23847b51",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b9748e05-97c0-42aa-873f-0efe5db00677"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "4aec5fa7-d479-4482-8164-d3138d1553a9",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "af06f4f3-cc47-4c62-92f0-d14417acfb80"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "b4df00c2-4e74-4763-80f4-1ee563305144",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "cf12d01d-175a-4ca6-9148-72ba7f014850"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "38b27711-432c-4c05-8585-f2bd6444ef1d",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "0e58188f-e436-4d28-8910-cf3fdbe41ef3"
            }
          }
        ]
      },
      {
        "id": "95c22ee0-2743-4c61-9915-453848d75061",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "67da2887-a4f7-418d-b4ab-7eb72d938e77",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "2d24b8d4-42ae-41a4-b174-a98c950d19d2",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "9e1b6ac9-567e-45c0-9949-b227d707d125",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "d753279f-5e8b-415b-99f6-adde32a725e8",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "d1ad4230-cf36-4631-9596-4cdfa213c334",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 2083,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 284,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 571,
        "pending": 0,
        "failed": 24
      },
      "testScripts": {
        "total": 1046,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 1037,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 239.6197183098591,
      "responseMin": 10,
      "responseMax": 6881,
      "responseSd": 814.1330802069416,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1689642356621,
      "completed": 1689642436239
    },
    "executions": [
      {
        "id": "d92a248d-17ed-4b99-9be2-d5d2701bc354",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 282,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "b7994369-3cff-4ad0-98a9-baaf2157c121",
          "httpRequestId": "7e65931e-6090-4dfc-818c-88660e879635"
        },
        "item": {
          "id": "d92a248d-17ed-4b99-9be2-d5d2701bc354",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "08340f65-66fd-4ff3-918d-50cd3d01b435",
          "status": "OK",
          "code": 200,
          "responseTime": 63,
          "responseSize": 0
        }
      },
      {
        "id": "73464584-eb3b-4f75-97a1-73abd05bf699",
        "cursor": {
          "ref": "e8757004-42f4-4327-8223-ba5b5eeaf539",
          "length": 282,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "5fd370a5-d0b3-4952-8bfd-246073900830"
        },
        "item": {
          "id": "73464584-eb3b-4f75-97a1-73abd05bf699",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "4263bf2b-663a-46e9-a7b8-11b953cac30c",
          "status": "OK",
          "code": 200,
          "responseTime": 10,
          "responseSize": 0
        }
      },
      {
        "id": "dcbd7a56-41bc-4d0f-bd76-b8e69d586b4a",
        "cursor": {
          "ref": "5fba29b8-fea1-449e-8fbd-d9c85552372e",
          "length": 282,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "5da5e21e-0afb-4317-bf31-fcc718e6ec79"
        },
        "item": {
          "id": "dcbd7a56-41bc-4d0f-bd76-b8e69d586b4a",
          "name": "did_json"
        },
        "response": {
          "id": "5219c9e2-1094-48a8-82fe-6adf50addb80",
          "status": "OK",
          "code": 200,
          "responseTime": 416,
          "responseSize": 2778
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1ca8040e-e4aa-4819-bae1-6745fb87de19",
        "cursor": {
          "ref": "a7c4cc46-af5c-47cf-9ef7-d4b0bbb12d4e",
          "length": 282,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "95cc1cfb-7492-4820-9781-9f117e6a03f6"
        },
        "item": {
          "id": "1ca8040e-e4aa-4819-bae1-6745fb87de19",
          "name": "did:invalid"
        },
        "response": {
          "id": "6ac3d961-08f8-48c0-85ee-d38c44e0b72d",
          "status": "Not Found",
          "code": 404,
          "responseTime": 892,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 404",
              "stack": "AssertionError: expected response to have status code 400 but got 404\n   at Object.eval sandbox-script.js:1:4)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1ca8040e-e4aa-4819-bae1-6745fb87de19",
        "cursor": {
          "ref": "a7c4cc46-af5c-47cf-9ef7-d4b0bbb12d4e",
          "length": 282,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "95cc1cfb-7492-4820-9781-9f117e6a03f6"
        },
        "item": {
          "id": "1ca8040e-e4aa-4819-bae1-6745fb87de19",
          "name": "did:invalid"
        },
        "response": {
          "id": "6ac3d961-08f8-48c0-85ee-d38c44e0b72d",
          "status": "Not Found",
          "code": 404,
          "responseTime": 892,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 404",
              "stack": "AssertionError: expected response to have status code 400 but got 404\n   at Object.eval sandbox-script.js:1:4)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "66440c64-335d-4e48-b1bd-d600aa0ef421",
        "cursor": {
          "ref": "afa3ac36-0112-468f-a38b-dba622619b3d",
          "length": 282,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "66fc4041-eb6e-4848-8eca-4bd4d50b61f1"
        },
        "item": {
          "id": "66440c64-335d-4e48-b1bd-d600aa0ef421",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "2fa2856e-3ddd-4197-a4cc-1f1bd27960bb",
          "status": "Not Found",
          "code": 404,
          "responseTime": 43,
          "responseSize": 127
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3c3e9f2c-4729-4b21-a760-485ed0cd9095",
        "cursor": {
          "ref": "fa59771c-4858-41e8-8e2d-9c3066ce05e2",
          "length": 282,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "7ce151a7-fe60-4147-a448-0c891253a2cd"
        },
        "item": {
          "id": "3c3e9f2c-4729-4b21-a760-485ed0cd9095",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "702dfd8b-6c13-4007-bb4a-fddffc754362",
          "status": "Not Found",
          "code": 404,
          "responseTime": 40,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "04286529-1a09-4c6e-8e4b-f374cb90e346",
        "cursor": {
          "ref": "ae07051b-5bc7-4a24-9a25-7e00b8c68d33",
          "length": 282,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "53577ac9-e3ef-4500-ba1d-cc880ae9e020"
        },
        "item": {
          "id": "04286529-1a09-4c6e-8e4b-f374cb90e346",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "df2157df-c2ec-4e0e-8bf8-d532d163919c",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 27,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e25a0d31-2462-46cc-94c7-453ce6d19a19",
        "cursor": {
          "ref": "dd93fd79-01e7-49e1-8393-03d135c2edfa",
          "length": 282,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "71d505a8-cee3-446a-bf6f-75afe84af28d"
        },
        "item": {
          "id": "e25a0d31-2462-46cc-94c7-453ce6d19a19",
          "name": "identifiers"
        },
        "response": {
          "id": "0a7d0e75-8f05-439b-91e9-1cda5af98b34",
          "status": "OK",
          "code": 200,
          "responseTime": 68,
          "responseSize": 2450
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3de88054-1f96-4d81-8e1e-07c8b45ecc10",
        "cursor": {
          "ref": "d021a9ed-276e-43b4-a66b-7c60ba391cd7",
          "length": 282,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "6b57f248-26e3-44c9-9c2c-86cd107c7ecd"
        },
        "item": {
          "id": "3de88054-1f96-4d81-8e1e-07c8b45ecc10",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "1eea95cb-aaaf-4e90-82ce-30c8b8d491b6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb24d229-0450-4f4e-958f-eabc8a9218d1",
        "cursor": {
          "ref": "9eef0533-8ed4-4f46-9afb-12c9970a6b7e",
          "length": 282,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "0ec028f4-9f18-4a04-81fe-b477ac16ddb9"
        },
        "item": {
          "id": "cb24d229-0450-4f4e-958f-eabc8a9218d1",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "d3e85afc-215b-4889-924a-51fcf802f75d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 164,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "564f4676-31ab-4d01-a228-73e70b8bb939",
        "cursor": {
          "ref": "b7bf5916-7900-4068-83e9-d1a678f917e8",
          "length": 282,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "2df6ff9c-d087-40dd-8e99-7425d673e84b"
        },
        "item": {
          "id": "564f4676-31ab-4d01-a228-73e70b8bb939",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "076a431c-e5e6-4d85-81be-efcd88813ed0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 124,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0a26b9ad-abc9-4d91-909b-8694258af2de",
        "cursor": {
          "ref": "1fbd9c1f-2da3-48e7-8168-bce8650e0562",
          "length": 282,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "52958b1a-03a2-4cdb-8cda-6f0c8477f79e"
        },
        "item": {
          "id": "0a26b9ad-abc9-4d91-909b-8694258af2de",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "28cd4562-5f1f-4005-9313-9e42a1d18a54",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fdfe868e-734b-4129-ae7e-13cc120ac6b8",
        "cursor": {
          "ref": "a286c078-7284-48e6-9267-5b946bb84bb5",
          "length": 282,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "ec76ea5d-2e97-4127-b650-54cb39dc094c"
        },
        "item": {
          "id": "fdfe868e-734b-4129-ae7e-13cc120ac6b8",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "9779e77d-d949-48f1-96ef-8ff268446dd3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6410b8ee-1cd7-4961-893e-77b2697eb70c",
        "cursor": {
          "ref": "c419e73f-4448-412a-83ff-ee5e71af7781",
          "length": 282,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "e0f7cf89-609f-46e8-8557-5bb091cf7c31"
        },
        "item": {
          "id": "6410b8ee-1cd7-4961-893e-77b2697eb70c",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "541dcbdf-7f33-4802-b266-5c03669fc9a9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "33c94099-5fe7-4e3a-ad11-99fcde7dd634",
        "cursor": {
          "ref": "aeb77561-9564-4289-8eed-ae655b4cad25",
          "length": 282,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "eb5bcfdd-cf19-4375-a576-cb630215e26b"
        },
        "item": {
          "id": "33c94099-5fe7-4e3a-ad11-99fcde7dd634",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "169e3497-b4cb-4855-8374-d9170e6f1f96",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ed611dfe-7871-40d9-ae5c-80e71a95aa7f",
        "cursor": {
          "ref": "a8861f19-c58f-4677-ae28-8b78e60dde88",
          "length": 282,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "fdbb4e3d-f032-43f6-a3dd-d1a094649253"
        },
        "item": {
          "id": "ed611dfe-7871-40d9-ae5c-80e71a95aa7f",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "5b277672-2eb4-4833-bf9d-0598d13f70bb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c1f42703-9459-4980-a2e0-92a9b3a6d3d4",
        "cursor": {
          "ref": "ef4b883b-f540-41d9-ac39-93b24d1e7cec",
          "length": 282,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "7a929b70-70bc-449b-8d92-5b156e77e18c"
        },
        "item": {
          "id": "c1f42703-9459-4980-a2e0-92a9b3a6d3d4",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "0e950086-ab9d-4a6c-9c37-df46db3be4c6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "391c26c4-47b8-41de-a4a7-f073002b6b3f",
        "cursor": {
          "ref": "aa892bf6-57b0-4764-81d4-28cf030f8ba0",
          "length": 282,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "36f6f79f-3cd2-4ab1-a399-9ffc3bf3b45f"
        },
        "item": {
          "id": "391c26c4-47b8-41de-a4a7-f073002b6b3f",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "4696cca5-00cd-49ac-9a4c-43513682ae7a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9f55163f-5ec1-46a3-88f6-8f1aec17cf21",
        "cursor": {
          "ref": "0f73805c-e77e-4522-8aed-2c012bd39a7a",
          "length": 282,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "ae0493ff-92d3-49cc-a08f-39b04d0f049d"
        },
        "item": {
          "id": "9f55163f-5ec1-46a3-88f6-8f1aec17cf21",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "3f875f3e-8fce-4629-9ab2-a6007d9f714c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fdec748a-4188-4a52-91f0-80cddabaa8f7",
        "cursor": {
          "ref": "7c618123-f3b4-46d5-9d98-d1555709b5e9",
          "length": 282,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "01f984a7-11b2-439a-9521-2c1d948ff6c5"
        },
        "item": {
          "id": "fdec748a-4188-4a52-91f0-80cddabaa8f7",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "245e34c0-4daf-4a58-942f-63edc79503e1",
          "status": "Created",
          "code": 201,
          "responseTime": 818,
          "responseSize": 982
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 201",
              "stack": "AssertionError: expected response to have status code 400 but got 201\n   at Object.eval sandbox-script.js:1:20)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:20)"
            }
          }
        ]
      },
      {
        "id": "838644a5-2b5b-4811-a598-b2af4718ac8c",
        "cursor": {
          "ref": "c80e0069-0949-4d0a-a3ac-99d2ad6f1bd4",
          "length": 282,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "bdc57f74-9e0a-46b8-ad0f-5143d5666504"
        },
        "item": {
          "id": "838644a5-2b5b-4811-a598-b2af4718ac8c",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "3f5b437c-05d3-4957-bc6a-813e734049c4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c2a52f18-3722-4c87-abd6-94f6a46331b6",
        "cursor": {
          "ref": "2eab77f1-59f7-4ebb-ae54-5442a4d21984",
          "length": 282,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "d0b43368-a86a-4a8c-b3c0-5ab5fa5bf670"
        },
        "item": {
          "id": "c2a52f18-3722-4c87-abd6-94f6a46331b6",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "339d9b19-d9eb-4d8e-a528-8732a7283bfe",
          "status": "Created",
          "code": 201,
          "responseTime": 6319,
          "responseSize": 971
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 201",
              "stack": "AssertionError: expected response to have status code 400 but got 201\n   at Object.eval sandbox-script.js:1:22)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:22)"
            }
          }
        ]
      },
      {
        "id": "00fbc505-e8b3-4d21-bd45-28f4d0c34a5d",
        "cursor": {
          "ref": "d8da8c71-0024-4d5b-87a8-5584edca26f1",
          "length": 282,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "33eb73de-5a5b-4cdf-9042-43657b991723"
        },
        "item": {
          "id": "00fbc505-e8b3-4d21-bd45-28f4d0c34a5d",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "732f00f9-ccfc-49f9-8b5a-aaba90ea129c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9d2c2900-72fd-4aeb-a544-70d0ca47c78a",
        "cursor": {
          "ref": "b73b9966-fc90-4886-b96b-5bd9601f4171",
          "length": 282,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "938c502c-aeb5-40fb-bcd1-0af64bd99210"
        },
        "item": {
          "id": "9d2c2900-72fd-4aeb-a544-70d0ca47c78a",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "a9342a99-8889-4d92-8096-d293ff8e31c3",
          "status": "Created",
          "code": 201,
          "responseTime": 3986,
          "responseSize": 971
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 201",
              "stack": "AssertionError: expected response to have status code 400 but got 201\n   at Object.eval sandbox-script.js:1:24)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:24)"
            }
          }
        ]
      },
      {
        "id": "2aa9b56e-ac26-4ceb-aff2-31ab81499331",
        "cursor": {
          "ref": "2abc3429-227f-4ac8-9b40-ddea91d35b07",
          "length": 282,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "bc5bc4f0-6e1e-4c11-b050-277abb4b8f76"
        },
        "item": {
          "id": "2aa9b56e-ac26-4ceb-aff2-31ab81499331",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "a4917945-16de-4103-b673-365485ee1aa2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "429b496c-21da-4836-a7ac-620cd4897edb",
        "cursor": {
          "ref": "13558ddf-d88e-4dac-918d-659858e88a2f",
          "length": 282,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "f4f35f0d-08b1-42e3-9888-235f6e6ac17a"
        },
        "item": {
          "id": "429b496c-21da-4836-a7ac-620cd4897edb",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "f0db10d1-da6c-4206-916c-0b6ec77c788d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "832afd15-841f-4f9b-9682-d8db480f1f25",
        "cursor": {
          "ref": "d6656e6a-f136-429f-b7ac-08a9c541bc96",
          "length": 282,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "8fcf841f-4d77-4d06-8da9-0f27c67b1044"
        },
        "item": {
          "id": "832afd15-841f-4f9b-9682-d8db480f1f25",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "bc27e96e-b87d-49a7-871e-24f8b454581f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a94792a6-4d1f-4af0-896d-ae1e376231fb",
        "cursor": {
          "ref": "78797f39-2a13-4437-a2bd-b02018928d04",
          "length": 282,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "fa5afc76-929e-4447-aecc-a9850c84d031"
        },
        "item": {
          "id": "a94792a6-4d1f-4af0-896d-ae1e376231fb",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "b1293303-dcc6-4bde-ada5-027982a3f6a3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ebda4aa4-b791-4a03-8484-2c05911d0188",
        "cursor": {
          "ref": "831a1fa7-a072-4055-9b34-7adbd5be1194",
          "length": 282,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "178e6c2f-14c6-4fba-972e-5fbba2270c83"
        },
        "item": {
          "id": "ebda4aa4-b791-4a03-8484-2c05911d0188",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "672aa7b2-6cd2-4ad7-ad78-01983f16003e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1ce4b45e-b0b0-47eb-ac68-cb1f507c9400",
        "cursor": {
          "ref": "127b9cfa-a102-416c-af63-220b21e94316",
          "length": 282,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "af9bb0c0-c586-49da-a907-3defcb5bf62c"
        },
        "item": {
          "id": "1ce4b45e-b0b0-47eb-ac68-cb1f507c9400",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "8b4d62cd-581f-4867-b921-e69b290c1528",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "341386b2-e863-4fc0-b9b8-14366d9dbc7c",
        "cursor": {
          "ref": "b7dc1112-4c79-4f83-89f4-dc7c41bf17b8",
          "length": 282,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "e3d92b43-1541-4b8a-99e4-21c58bf01afc"
        },
        "item": {
          "id": "341386b2-e863-4fc0-b9b8-14366d9dbc7c",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "f8b0a245-e252-4ff6-bda5-6617cd026f02",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "76a1e77f-3026-4db0-bd15-48327016315e",
        "cursor": {
          "ref": "51b6a6ad-0565-4540-ad6d-c07dde1cc463",
          "length": 282,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "f696d338-8140-456c-b83c-8de7c20186a8"
        },
        "item": {
          "id": "76a1e77f-3026-4db0-bd15-48327016315e",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "b682d877-91b5-43ba-b32c-9f11965012cd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "09b859d1-98c8-497e-92cf-689487274b51",
        "cursor": {
          "ref": "f6464754-3705-4810-a45c-e8cb67ef4d7b",
          "length": 282,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "80aa0b88-9767-456d-9871-9ffe947d6880"
        },
        "item": {
          "id": "09b859d1-98c8-497e-92cf-689487274b51",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "f624e958-0156-4b62-951c-e7c8230203bf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c5a189b3-3a9f-45f2-a392-d1e187b55d54",
        "cursor": {
          "ref": "71146554-c777-423c-a5ab-53d19ac76351",
          "length": 282,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "76ab1cb1-e8ca-41b3-968c-5876f49c1d47"
        },
        "item": {
          "id": "c5a189b3-3a9f-45f2-a392-d1e187b55d54",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "6d63b47d-926b-49dc-be06-cb6c3f752419",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d6d40b51-3075-4143-bee9-60e7c692f532",
        "cursor": {
          "ref": "01689a47-f19a-4a24-9f02-677bad351c94",
          "length": 282,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "ae0c2018-24a4-468a-ba5d-b9a8c9f98e8b"
        },
        "item": {
          "id": "d6d40b51-3075-4143-bee9-60e7c692f532",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "fd02bbe0-ad70-4d23-b35c-ebe945468591",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c7453e9-1ba2-4d40-9c46-c4b48bb96fd2",
        "cursor": {
          "ref": "798dcaa2-46ea-4f88-b2c1-6c0138b75ddd",
          "length": 282,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "d5509dd0-4976-416b-818f-3497372ea674"
        },
        "item": {
          "id": "2c7453e9-1ba2-4d40-9c46-c4b48bb96fd2",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "d0eb0d80-a98a-4168-8353-bf7573a319db",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f5edccb0-3629-486c-8930-24f494bc4153",
        "cursor": {
          "ref": "58801ca4-b16d-4848-9a7c-f056bb1eef39",
          "length": 282,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "93aadfad-e0e2-4cba-8510-9a889c2a5ac4"
        },
        "item": {
          "id": "f5edccb0-3629-486c-8930-24f494bc4153",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "0383bc09-9a4c-4cd8-9436-61f6544dcbb7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f44fab48-ebcc-426e-9de6-bf429bee7eaf",
        "cursor": {
          "ref": "e85b6049-c75a-4034-95b5-2b0828969152",
          "length": 282,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "a107b53e-9fdf-4839-8129-25fa708412bc"
        },
        "item": {
          "id": "f44fab48-ebcc-426e-9de6-bf429bee7eaf",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "3156990c-6ffe-4c62-a50d-43c63ee468e7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "71d8b8e6-433b-4df8-a6f0-e54bbcfe40b1",
        "cursor": {
          "ref": "44aef3db-f5dd-41a3-8584-6df4a76cbe66",
          "length": 282,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "24abab9c-f6ad-49eb-ad87-51770b217600"
        },
        "item": {
          "id": "71d8b8e6-433b-4df8-a6f0-e54bbcfe40b1",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "ea20d370-b6ca-4ded-a6bb-2c5c61c46143",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ea3f54b-2cce-421c-a0ee-34c2fc38b57f",
        "cursor": {
          "ref": "171dbc4f-6387-4a98-a828-716b0ddda487",
          "length": 282,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "fe64385d-1ca2-4a2d-9857-6602a58fe1af"
        },
        "item": {
          "id": "3ea3f54b-2cce-421c-a0ee-34c2fc38b57f",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "cf4f3170-7221-440c-899f-8bfe9e20313e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b3917012-2a6f-4ba5-a6eb-32b9503d6178",
        "cursor": {
          "ref": "33738df9-bb7c-4eaa-be09-906ed9f8de08",
          "length": 282,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "7ec0e7e0-8c79-48f0-9f8b-c8bf8b8a1303"
        },
        "item": {
          "id": "b3917012-2a6f-4ba5-a6eb-32b9503d6178",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "091df474-d670-424c-9b0e-df42b057c551",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d41394fd-e51a-456e-b609-370c3cc68525",
        "cursor": {
          "ref": "4566dc6d-e3de-4fd4-ad24-bd233511cf53",
          "length": 282,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "cff5e72e-40b2-424e-a792-672b612e179e"
        },
        "item": {
          "id": "d41394fd-e51a-456e-b609-370c3cc68525",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "f9065929-435c-40e5-a881-81407e9e3bc4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "67532e36-08ae-475b-b79e-f878dd480d49",
        "cursor": {
          "ref": "f23c8809-1a1c-4a66-b6f9-702ae8d49997",
          "length": 282,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "0eb7003e-a8f3-4f72-828b-b81e751eb832"
        },
        "item": {
          "id": "67532e36-08ae-475b-b79e-f878dd480d49",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "4e5eb4a8-fa05-425d-9e46-886264f3fd1b",
          "status": "Created",
          "code": 201,
          "responseTime": 2838,
          "responseSize": 970
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 201",
              "stack": "AssertionError: expected response to have status code 400 but got 201\n   at Object.eval sandbox-script.js:1:43)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:43)"
            }
          }
        ]
      },
      {
        "id": "374c9f8b-899e-49d0-ac31-abb3bbe70080",
        "cursor": {
          "ref": "462361f4-c1ee-482d-8121-2b69b9efd3ca",
          "length": 282,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "b607fe37-07eb-47d0-beea-6933f172dacd"
        },
        "item": {
          "id": "374c9f8b-899e-49d0-ac31-abb3bbe70080",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "2aeb8bf9-598b-4bd3-8b88-381fef6c8b3a",
          "status": "Created",
          "code": 201,
          "responseTime": 3625,
          "responseSize": 971
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 201",
              "stack": "AssertionError: expected response to have status code 422 but got 201\n   at Object.eval sandbox-script.js:1:44)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:44)"
            }
          }
        ]
      },
      {
        "id": "34b5020a-0b06-42d8-ad1b-07c01ddfcc32",
        "cursor": {
          "ref": "20f60c43-2d36-444b-821f-adaa5d43264c",
          "length": 282,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "a7a3b565-fbfd-499c-90bb-a6f87efffef2"
        },
        "item": {
          "id": "34b5020a-0b06-42d8-ad1b-07c01ddfcc32",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "a7f643e0-b0b7-4132-8420-6491d0ba6784",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "115505eb-082c-4447-a3d0-ffcb84917cde",
        "cursor": {
          "ref": "7c96269b-860d-432d-87f1-64f299ac8fe6",
          "length": 282,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "a6277c34-17c4-461a-944a-937f301d89b3"
        },
        "item": {
          "id": "115505eb-082c-4447-a3d0-ffcb84917cde",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "66a3e4c5-32cb-4fc0-8773-3eddd6d8f02e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0ec74c4e-df53-4131-996c-4736b8253cc1",
        "cursor": {
          "ref": "7f5b242d-7aaf-4335-b810-19627cbc8949",
          "length": 282,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "989b1671-fab6-4d9d-9784-a8ef67e28837"
        },
        "item": {
          "id": "0ec74c4e-df53-4131-996c-4736b8253cc1",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "6ea88a1c-36fe-4e56-a1b6-f8bf3aa481f4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe5fbd82-d27d-4038-96f6-9ae71c9aa53b",
        "cursor": {
          "ref": "2314e769-33cd-4865-a9cf-7b52e4825ac8",
          "length": 282,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "c6b891e8-0fc6-4d57-a40f-5b8f0da9cd30"
        },
        "item": {
          "id": "fe5fbd82-d27d-4038-96f6-9ae71c9aa53b",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "5469b0e8-71b1-4470-84f4-c1ee23f9f9b2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d1df27a1-9e08-425c-9aa4-fb7d863e9fa7",
        "cursor": {
          "ref": "9b7b4121-3767-44ef-a6a0-cf1715d17c93",
          "length": 282,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "420e4506-57de-41ad-9fae-cfa90b51c12f"
        },
        "item": {
          "id": "d1df27a1-9e08-425c-9aa4-fb7d863e9fa7",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "c95be133-16c4-4211-9f27-7e308d92b7a7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6078c5a9-81f1-4487-810f-0bba7e54186b",
        "cursor": {
          "ref": "ac669d47-281e-4f19-8f3d-cc0666e9748b",
          "length": 282,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "81306ffc-c905-466d-a625-709ebee36edc"
        },
        "item": {
          "id": "6078c5a9-81f1-4487-810f-0bba7e54186b",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "c69d963b-776f-4bae-bb56-82bd56276500",
          "status": "Created",
          "code": 201,
          "responseTime": 2581,
          "responseSize": 971
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 201",
              "stack": "AssertionError: expected response to have status code 400 but got 201\n   at Object.eval sandbox-script.js:1:50)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:50)"
            }
          }
        ]
      },
      {
        "id": "6a7e5d6c-8e42-4313-9cce-8fbb7514b0be",
        "cursor": {
          "ref": "acc13428-77d7-4ba8-bcb5-169111430bc2",
          "length": 282,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "76c0ebe7-8b21-4df1-af34-5665039c4d6e"
        },
        "item": {
          "id": "6a7e5d6c-8e42-4313-9cce-8fbb7514b0be",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "d91943e0-2150-41a0-afd9-eccca5f6bc3d",
          "status": "Created",
          "code": 201,
          "responseTime": 2962,
          "responseSize": 970
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 201",
              "stack": "AssertionError: expected response to have status code 422 but got 201\n   at Object.eval sandbox-script.js:1:51)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:51)"
            }
          }
        ]
      },
      {
        "id": "6e1304d6-edc2-4957-98d1-1b32af783638",
        "cursor": {
          "ref": "932db6aa-d7a7-4225-a0df-e330e9261948",
          "length": 282,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "2dc7ee66-b8f5-43a4-b042-284b5b119583"
        },
        "item": {
          "id": "6e1304d6-edc2-4957-98d1-1b32af783638",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "f2853bea-48ff-45b0-adf5-414cc28a97ab",
          "status": "Created",
          "code": 201,
          "responseTime": 2755,
          "responseSize": 971
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 201",
              "stack": "AssertionError: expected response to have status code 400 but got 201\n   at Object.eval sandbox-script.js:1:52)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:52)"
            }
          }
        ]
      },
      {
        "id": "95b81c21-a9d7-4701-adb7-4df0714bc8f6",
        "cursor": {
          "ref": "0ea6b140-d525-49c2-9dbe-aca1a96ab4c1",
          "length": 282,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "898ca986-0596-46a4-97c5-c89709757d4f"
        },
        "item": {
          "id": "95b81c21-a9d7-4701-adb7-4df0714bc8f6",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "c5b8bccc-ad7b-4e05-8b0a-be28ba74235f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e7524173-2a99-4287-8192-f03b5bbf5b0c",
        "cursor": {
          "ref": "3ab7327c-df1c-4a45-bf4c-7af15df68b9a",
          "length": 282,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "febcefbe-fb38-4972-8c04-441b7daa7a2d"
        },
        "item": {
          "id": "e7524173-2a99-4287-8192-f03b5bbf5b0c",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "03f0706f-e912-490b-89d4-9b846775600b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db059e2b-3c11-45bd-bf8d-94d44dc106ea",
        "cursor": {
          "ref": "6de32071-f9d2-40e0-a4e1-3f9b6bf9c6ea",
          "length": 282,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "aecd7759-6f8e-44d9-abbb-b0666576f1a3"
        },
        "item": {
          "id": "db059e2b-3c11-45bd-bf8d-94d44dc106ea",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "0c8fcc67-8564-4c2a-8919-421e40036290",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ff00a13-0480-4edf-97c5-43414a86caa1",
        "cursor": {
          "ref": "26d1248d-ffe8-4a13-a2f9-73347d61fff6",
          "length": 282,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "0960d844-c689-470e-8749-58b3ddfc1d76"
        },
        "item": {
          "id": "3ff00a13-0480-4edf-97c5-43414a86caa1",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "f9db5813-bc9d-40d6-bf7b-d6332b113700",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cd4273ab-da74-456d-aa59-5712adb4bc4d",
        "cursor": {
          "ref": "16d433db-b28e-4ef9-bd84-1508bec647e1",
          "length": 282,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "7a4f9e7c-2adb-4e65-8d24-997b93d72e5d"
        },
        "item": {
          "id": "cd4273ab-da74-456d-aa59-5712adb4bc4d",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "341b7259-6633-494e-aceb-53995d8f3345",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6bd6d579-5eb5-4fc5-930d-70145883c7dc",
        "cursor": {
          "ref": "d4b8732f-2b51-4921-8851-b06b9601a765",
          "length": 282,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "d6dea66e-4027-4c56-bdd7-6a907d438543"
        },
        "item": {
          "id": "6bd6d579-5eb5-4fc5-930d-70145883c7dc",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "6786541e-e427-4a32-8809-d2f03a2321e8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4bd771ec-9ea5-4c6f-ba1f-a35a668cc45d",
        "cursor": {
          "ref": "e91fdc1d-bc7d-4aab-be0d-9aeace63c3e0",
          "length": 282,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "dcdcee67-8f4b-43ec-bd15-288288208b34"
        },
        "item": {
          "id": "4bd771ec-9ea5-4c6f-ba1f-a35a668cc45d",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "e800e563-e909-412d-ae6e-abe358b935b4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5cd01a86-afca-4406-80d5-2fdc61097c0d",
        "cursor": {
          "ref": "99e00277-e483-449e-a5ff-1320c4f21379",
          "length": 282,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "5ac781d9-5c57-44fa-a3f2-42b6603e23fb"
        },
        "item": {
          "id": "5cd01a86-afca-4406-80d5-2fdc61097c0d",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "d226f38f-3c1e-4843-94e9-be01a9e9cf2b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f360558d-5f00-4d1e-a5bc-154cacd8b2c7",
        "cursor": {
          "ref": "3c37ceba-24c8-4e50-a852-193ff2a3202c",
          "length": 282,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "45b9a2f2-80fe-436d-9f3a-8a291f403f73"
        },
        "item": {
          "id": "f360558d-5f00-4d1e-a5bc-154cacd8b2c7",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "bb9b0254-9dde-4c05-afb7-6f837e43324e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eb632830-3d23-4181-bcaa-36888f48a4ab",
        "cursor": {
          "ref": "1c80681c-dda0-412f-8bd5-bd863f3e3f81",
          "length": 282,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "d38ce6f6-be3b-4b30-9aa6-a5d1ab66e654"
        },
        "item": {
          "id": "eb632830-3d23-4181-bcaa-36888f48a4ab",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "e5e7d564-0574-4550-a8ad-1d45d38b63d2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5b680d3b-3e31-48db-955d-1cb8212adb54",
        "cursor": {
          "ref": "47347444-82f3-4113-b931-defdd7c27f5a",
          "length": 282,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "62febc81-fba1-4828-845a-3b615e42fcc2"
        },
        "item": {
          "id": "5b680d3b-3e31-48db-955d-1cb8212adb54",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "22badf26-fe92-4d91-b29f-15f97cb2dedb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b0b45a1d-e93c-43df-be1e-51ea6e7a8eac",
        "cursor": {
          "ref": "19c42e85-c122-4d36-962b-340ea437a81d",
          "length": 282,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "b717b963-f564-431b-a567-95daa8504faa"
        },
        "item": {
          "id": "b0b45a1d-e93c-43df-be1e-51ea6e7a8eac",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "741c91ad-1850-41d9-8d0b-e4f458d93fab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d842b681-19e7-4f71-9581-c0e0d00c8288",
        "cursor": {
          "ref": "9531d36c-94a7-4e72-a90b-8dd05e63fe8e",
          "length": 282,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "1ca4d514-fb0d-4b92-aafa-b175f134e15f"
        },
        "item": {
          "id": "d842b681-19e7-4f71-9581-c0e0d00c8288",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "2dd3fd53-2d09-4f9a-a275-755e0776e9a2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "09fa753c-7d65-4d1c-8f79-ab108b75c5ea",
        "cursor": {
          "ref": "d620106f-fe9e-4457-99f5-e93c1e47c3fb",
          "length": 282,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "da46e23d-de93-4be0-961f-ebc1ae8bfa0b"
        },
        "item": {
          "id": "09fa753c-7d65-4d1c-8f79-ab108b75c5ea",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "3f06fb66-9bec-4c2c-bf4b-d96c3f4ea9a2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "865fb40b-7daf-4903-8d21-345a61d371da",
        "cursor": {
          "ref": "c19155ab-cf2b-467a-838f-f65688b3d899",
          "length": 282,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "e5134457-1716-4c08-8789-c909fa3d2aca"
        },
        "item": {
          "id": "865fb40b-7daf-4903-8d21-345a61d371da",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "37148f6e-af2b-4cbf-a1e9-460ad11eb505",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "068089a6-1133-40ab-b736-8689d1ff71d6",
        "cursor": {
          "ref": "3d4ec1a2-4b59-4e04-b4a1-61a897f3303f",
          "length": 282,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "1602b28d-6e6c-474e-8e3a-2edb5c117121"
        },
        "item": {
          "id": "068089a6-1133-40ab-b736-8689d1ff71d6",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "af160fdd-9a12-4999-b2b8-8df8627be588",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dab2685c-acfb-459e-a53a-b262613f3ead",
        "cursor": {
          "ref": "9cd7355d-4b85-48fc-917f-f5893f9bfbde",
          "length": 282,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "d98c922a-2484-4a37-9142-2a73836178e5"
        },
        "item": {
          "id": "dab2685c-acfb-459e-a53a-b262613f3ead",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "db79ae8f-c545-4c73-bc15-6bd5234cbc53",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3d91d0ac-7a33-40fd-a047-6856cde1c34f",
        "cursor": {
          "ref": "003e8616-981b-452d-b280-7f683cdddf95",
          "length": 282,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "16178e07-a9e8-40aa-be0d-206ced82efb8"
        },
        "item": {
          "id": "3d91d0ac-7a33-40fd-a047-6856cde1c34f",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "0609bcd3-b7cf-4f38-bb30-fd3e8bc8d290",
          "status": "Created",
          "code": 201,
          "responseTime": 2672,
          "responseSize": 976
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 201",
              "stack": "AssertionError: expected response to have status code 400 but got 201\n   at Object.eval sandbox-script.js:1:70)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:70)"
            }
          }
        ]
      },
      {
        "id": "4e36ae45-d83f-4537-9a19-68e675f9037d",
        "cursor": {
          "ref": "c1449226-7fff-4b3d-931f-e423ee515a7d",
          "length": 282,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "7c88c4b9-7c50-4811-b3de-d861260e07ba"
        },
        "item": {
          "id": "4e36ae45-d83f-4537-9a19-68e675f9037d",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "b7e2e594-9b50-4dfe-9ba8-36af426f6577",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e66c7c0a-c1fc-4962-bbe3-e7d7d6f88fcb",
        "cursor": {
          "ref": "ee6a3c5b-8653-44e4-8bd6-0c48860b1eaf",
          "length": 282,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "04a6e6cb-a461-4403-9cef-55954ea3274b"
        },
        "item": {
          "id": "e66c7c0a-c1fc-4962-bbe3-e7d7d6f88fcb",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "58e28da3-3b28-417a-a1b2-a35df4bf3a40",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "83c25e08-293e-430d-8312-6eed98dae9d8",
        "cursor": {
          "ref": "8f365111-811c-4ed9-8919-d292e1e5820d",
          "length": 282,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "12574347-d9f0-4915-a06d-3f4e5d33d578"
        },
        "item": {
          "id": "83c25e08-293e-430d-8312-6eed98dae9d8",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "24ec3924-e6dd-450c-862d-5ec2bcaf2d3a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1978c3b4-3240-4e53-adac-da4afe970bbe",
        "cursor": {
          "ref": "4705abc2-46a0-4862-b2d1-5a80c7f27050",
          "length": 282,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "46dc672a-5064-438d-80fc-1987d4b97d85"
        },
        "item": {
          "id": "1978c3b4-3240-4e53-adac-da4afe970bbe",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "f4077689-0abf-4829-9d89-08685a12819d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ab4815db-3519-445f-8998-d5cb69b8bbbf",
        "cursor": {
          "ref": "ab2794e9-cc35-4400-8900-bf7754fe1a27",
          "length": 282,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "3ee478cb-d608-48e6-a80f-1cefee81913a"
        },
        "item": {
          "id": "ab4815db-3519-445f-8998-d5cb69b8bbbf",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "ebcb1adf-40ed-46a0-8f8b-dfb1e0232fa7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "61b3573b-6797-47f1-819d-c4179ce518f7",
        "cursor": {
          "ref": "b16debad-d71f-46e6-a2aa-c3d78a6e3fa2",
          "length": 282,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "075f0d43-6079-4b9d-8125-1c06a00e4b58"
        },
        "item": {
          "id": "61b3573b-6797-47f1-819d-c4179ce518f7",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "a3de1748-a597-44c1-bedf-1e4225e23ee4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b5603108-9a1d-482b-9850-4bbac9006125",
        "cursor": {
          "ref": "b3a1407d-1128-47e9-bbeb-2ebb0ebc5787",
          "length": 282,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "95954d3d-067a-46c2-aea6-1cc3b58785f9"
        },
        "item": {
          "id": "b5603108-9a1d-482b-9850-4bbac9006125",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "5db1ca31-08f0-4411-85f8-ece16b79ac9c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 144
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0d30f904-3f43-4da5-89f8-30261a69d191",
        "cursor": {
          "ref": "f3d90fb3-2d9b-4087-968e-cfe38e22b029",
          "length": 282,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "ca748845-9811-447f-ab98-0f7f573f0ec0"
        },
        "item": {
          "id": "0d30f904-3f43-4da5-89f8-30261a69d191",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "9c2a93ef-b79f-43e0-b7ef-abb5c547ff37",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 144
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b603af9c-94f8-4425-a1f6-01e7798b81e1",
        "cursor": {
          "ref": "faf67ca7-4953-42d2-85a8-5cb18c376baf",
          "length": 282,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "887e02c1-b9cb-4c9c-9173-66b1f2272c50"
        },
        "item": {
          "id": "b603af9c-94f8-4425-a1f6-01e7798b81e1",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "09b0354f-1d18-4508-ae0d-a821209adf0c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 144
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eea14ff7-9a9c-4db9-b4e6-bccdddbd65ae",
        "cursor": {
          "ref": "69600068-e72e-4854-a489-a881aaf754cb",
          "length": 282,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "0531d489-65d1-46b7-bc46-275807bd0987"
        },
        "item": {
          "id": "eea14ff7-9a9c-4db9-b4e6-bccdddbd65ae",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "67b06f96-162e-4ce8-9e0e-21ef32ad14ac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 144
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "55e9c79d-5681-4696-bdb0-0476fd4e7cd4",
        "cursor": {
          "ref": "4e319467-e2bd-4ee4-9412-af060adee7ec",
          "length": 282,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "c57c7fa2-baa9-4d94-ab20-95132af9c2bd"
        },
        "item": {
          "id": "55e9c79d-5681-4696-bdb0-0476fd4e7cd4",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "20f4e1d6-e30e-4906-83df-40b050c02d24",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 144
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "617bd47b-d018-4552-bbda-09acf0fe917f",
        "cursor": {
          "ref": "a6ee9965-02e5-42fe-bf36-2ad5c7c07ea3",
          "length": 282,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "f6a6c21b-19af-4307-adaa-d0b057343311"
        },
        "item": {
          "id": "617bd47b-d018-4552-bbda-09acf0fe917f",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "d60d8b02-7c92-457e-8eed-955f3cd27a58",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 144
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "09fc91ea-12fc-4eb9-b1b4-20de7ca43b87",
        "cursor": {
          "ref": "500c50c3-de30-4b86-b35e-59b3c087e4fc",
          "length": 282,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "c4cc7c60-4185-4c84-ba21-a6db67bd06f6"
        },
        "item": {
          "id": "09fc91ea-12fc-4eb9-b1b4-20de7ca43b87",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "221e0766-5401-4397-9b4b-3e0c96e2b0a0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 136
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0fe3530c-24be-4139-adda-0007f40038ce",
        "cursor": {
          "ref": "dce25b1a-7ade-454e-9138-cb857c37acc3",
          "length": 282,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "97749aee-1164-4a57-a01b-f157b8f6b49b"
        },
        "item": {
          "id": "0fe3530c-24be-4139-adda-0007f40038ce",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "2d6e2cd2-04d5-4136-8ee8-a887ffa4f7f5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 136
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f32a9e1b-3346-45d6-96d4-1b7077c855f4",
        "cursor": {
          "ref": "7dc00b7f-fff6-44d1-9bc8-d77df3800cf9",
          "length": 282,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "8bfa5dfe-e4cc-48f7-a465-4d4c3b6ce146"
        },
        "item": {
          "id": "f32a9e1b-3346-45d6-96d4-1b7077c855f4",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "f6102498-9fca-4176-94a5-621ec17c77fc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 136
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f067427a-969b-455f-95ed-ecc87d8afc4f",
        "cursor": {
          "ref": "818c750c-05df-42ff-9cd0-ac2887d912d6",
          "length": 282,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "c8d3dd25-0f20-4b49-b285-c45da7cf0bbd"
        },
        "item": {
          "id": "f067427a-969b-455f-95ed-ecc87d8afc4f",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "a86ec0a2-b313-421a-ba31-856f3a6e71a6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 136
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "29755676-c7a1-499f-99b6-c338c48fccd6",
        "cursor": {
          "ref": "72726de7-9062-40f5-aa2b-b2259125e4eb",
          "length": 282,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "f2cf2289-506f-4ae6-abe3-8eadbe3a2885"
        },
        "item": {
          "id": "29755676-c7a1-499f-99b6-c338c48fccd6",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "7b0a945c-0a7e-47df-9d1d-b2b08e5fd2c4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 136
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f782601b-2091-4a34-b2c2-6ee99b551879",
        "cursor": {
          "ref": "4e2f058e-2723-476a-af02-cb52b6c9b177",
          "length": 282,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "4296b191-02a8-4603-b782-a035167c632f"
        },
        "item": {
          "id": "f782601b-2091-4a34-b2c2-6ee99b551879",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "1c8687fb-0e5d-4d63-a5bc-4517fcd06c7d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 136
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "78086676-455e-4fc3-b91f-f05bbeff310e",
        "cursor": {
          "ref": "e0687755-f005-421f-95e4-0083aa3c47a9",
          "length": 282,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "d86fc084-e013-48ea-9eb0-a1033cf520a6"
        },
        "item": {
          "id": "78086676-455e-4fc3-b91f-f05bbeff310e",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "074a4fe1-e0b7-461f-83dc-c925250bc30c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 132
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cba063f9-3ff6-4978-983b-cd736625574c",
        "cursor": {
          "ref": "f645468e-29f1-4559-b75b-3c0f96efb401",
          "length": 282,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "3fa696ed-5312-4bba-875d-21d8286b7a38"
        },
        "item": {
          "id": "cba063f9-3ff6-4978-983b-cd736625574c",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "59ce7aa2-e3c6-44bf-b8c7-634b09fa6aed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 132
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "64721dd8-e088-4f90-b722-3614d1de8436",
        "cursor": {
          "ref": "180ba90e-8b6d-4b20-bbbf-12f25bbba42d",
          "length": 282,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "96d4872c-0e3b-4538-890e-e8a1f18ad8b7"
        },
        "item": {
          "id": "64721dd8-e088-4f90-b722-3614d1de8436",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "4388269d-5768-46a4-b848-1302328fe82c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 132
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dc4e4e12-2683-4df3-b357-2acb715776ec",
        "cursor": {
          "ref": "3f9e624e-117b-46ca-85f7-4374e6c3a3b8",
          "length": 282,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "9b231d68-408d-4494-98b7-3df6e2e3e786"
        },
        "item": {
          "id": "dc4e4e12-2683-4df3-b357-2acb715776ec",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "a1cbd421-2984-405e-afb0-00723607df5b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 132
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "81ea4620-f31c-4427-b3aa-65b3b57f9766",
        "cursor": {
          "ref": "e9d40415-e97f-40cf-91f1-7fbf6db185a5",
          "length": 282,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "21b48029-1206-49c6-9494-cc361068fe0b"
        },
        "item": {
          "id": "81ea4620-f31c-4427-b3aa-65b3b57f9766",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "d6937927-0b1d-4d42-8324-7e93e1893493",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 132
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9d7ff17d-2880-4f69-a42f-35d1ae871ba5",
        "cursor": {
          "ref": "b5b9edc2-e419-40ea-9283-1ca8adffc8d3",
          "length": 282,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "9a2f470b-89ed-4f7a-9600-bf927a2fc7c8"
        },
        "item": {
          "id": "9d7ff17d-2880-4f69-a42f-35d1ae871ba5",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "4885892c-85f0-4cbf-8b5e-b03132a2113b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 132
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ddd3f8ff-c21a-48a8-8f01-0b1ef2d69b7d",
        "cursor": {
          "ref": "e95f99f5-d4f5-4b89-be7f-4d1c83ab57fc",
          "length": 282,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "d233e380-8ec2-4db1-b130-401ba4c4ab68"
        },
        "item": {
          "id": "ddd3f8ff-c21a-48a8-8f01-0b1ef2d69b7d",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "9a6a8b64-1b18-4951-a5bd-23961cd8aa9b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 132
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a976a15f-a1df-4a8b-9e39-3ec705ef1f18",
        "cursor": {
          "ref": "3810a080-97a8-4c17-9b06-13c9459a048f",
          "length": 282,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "a145f5e3-8b97-4c77-86ae-8c8d38f911a6"
        },
        "item": {
          "id": "a976a15f-a1df-4a8b-9e39-3ec705ef1f18",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "fea127c1-5928-47da-b5a3-178e781e513b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 132
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d7a675bc-90d1-45b7-97f5-4580c501e996",
        "cursor": {
          "ref": "1b29a087-d5bc-43d3-b88a-e33803325558",
          "length": 282,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "280918c9-bce1-4ebc-ba21-231a293708fa"
        },
        "item": {
          "id": "d7a675bc-90d1-45b7-97f5-4580c501e996",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "d85e4e96-0c2f-403c-94d7-0ae44fb51a9a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 132
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "402ad18e-9367-4d64-a02d-a64411693e0d",
        "cursor": {
          "ref": "0a29d4f7-3a58-4cb0-8884-0e16b3afb6d3",
          "length": 282,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "3604fa9f-da4d-4f95-9ff3-0bf3e5c2e6f9"
        },
        "item": {
          "id": "402ad18e-9367-4d64-a02d-a64411693e0d",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "71aaf8f7-c759-4171-8705-a0e0e9799a5b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 132
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "88040a18-0a46-4209-9194-6a30050d77d2",
        "cursor": {
          "ref": "72e5b393-922a-417c-9d53-9342ddf9312e",
          "length": 282,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "d97ddc79-1a04-441d-bc29-95033d2f1b7c"
        },
        "item": {
          "id": "88040a18-0a46-4209-9194-6a30050d77d2",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "aa2d3370-966d-4d85-8263-f587a650d41b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 132
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1d80f903-4c51-4789-ba55-ae5002059efe",
        "cursor": {
          "ref": "9a9b09cc-6371-4b96-a014-087237d83969",
          "length": 282,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "41de9d9a-c3bc-4936-9f3e-dc2b92556439"
        },
        "item": {
          "id": "1d80f903-4c51-4789-ba55-ae5002059efe",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "e62ad171-f667-4191-830a-d780c0985b59",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 132
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bfb578f8-e855-4400-abf6-989607e1103d",
        "cursor": {
          "ref": "62df3345-1dd0-46a7-bd5e-0a06525a7e5d",
          "length": 282,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "587c95cb-9e7b-4bb1-aa15-950797ebb8b7"
        },
        "item": {
          "id": "bfb578f8-e855-4400-abf6-989607e1103d",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "7ab57fdc-942e-4fb8-af13-b20440e2fffc",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 27,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "df38d26e-0d68-4714-bd77-dda68cacaad5",
        "cursor": {
          "ref": "e1d072cb-91e9-41e8-bf40-652e87a9de24",
          "length": 282,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "de1578fc-1d91-4bcf-bb3f-7cb9fb8640bf"
        },
        "item": {
          "id": "df38d26e-0d68-4714-bd77-dda68cacaad5",
          "name": "credentials_issue"
        },
        "response": {
          "id": "9e88bedc-de8d-4f58-91ea-d16d66dbc2a7",
          "status": "Created",
          "code": 201,
          "responseTime": 2651,
          "responseSize": 971
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject matches request credential.credentialSubject",
            "skipped": false
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false
          }
        ]
      },
      {
        "id": "26d75ebd-315a-4fec-8b30-9c4b6ce7675a",
        "cursor": {
          "ref": "277d8cc3-7be9-493e-93aa-aacd4dac6e64",
          "length": 282,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "26673d32-fbff-45f4-b020-a999df670f72"
        },
        "item": {
          "id": "26d75ebd-315a-4fec-8b30-9c4b6ce7675a",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "8556b62c-fb43-4680-b536-930598fd9bf4",
          "status": "Created",
          "code": 201,
          "responseTime": 2789,
          "responseSize": 985
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "bee1d65c-669d-4c73-87aa-ece8bd83b4af",
        "cursor": {
          "ref": "b8b19b85-a2d0-4e79-b9db-e9a1eb131318",
          "length": 282,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "c2cbb0bd-d950-4236-9ee1-af819bed024a"
        },
        "item": {
          "id": "bee1d65c-669d-4c73-87aa-ece8bd83b4af",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "0ba015dc-fb13-4d63-b88d-dea70faee196",
          "status": "Created",
          "code": 201,
          "responseTime": 2688,
          "responseSize": 970
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "9eb001e2-525f-432e-8776-17b4cb8d6e8d",
        "cursor": {
          "ref": "f8882a90-a4f8-4796-9ffc-3ea1314d5ace",
          "length": 282,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "a513699f-8b98-4709-bc02-1089a2dbff21"
        },
        "item": {
          "id": "9eb001e2-525f-432e-8776-17b4cb8d6e8d",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "d9791702-474c-4893-9801-377ffacec12e",
          "status": "Created",
          "code": 201,
          "responseTime": 3301,
          "responseSize": 993
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "1d42567b-c607-4114-89c6-bfee96cc2205",
        "cursor": {
          "ref": "df967be9-d2bb-49c9-9700-ee6115d0937a",
          "length": 282,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "38c9e51c-e282-4389-a8c0-e6607e36bc86"
        },
        "item": {
          "id": "1d42567b-c607-4114-89c6-bfee96cc2205",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "6ea4da06-41bf-42a3-a0a2-1a770b60a2e8",
          "status": "Created",
          "code": 201,
          "responseTime": 2321,
          "responseSize": 971
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response proof.created matches request options.created",
              "message": "expected '2023-07-18T01:06:48Z' to equal '2006-01-02T15:04:05Z'",
              "stack": "AssertionError: expected '2023-07-18T01:06:48Z' to equal '2006-01-02T15:04:05Z'\n   at Object.eval sandbox-script.js:3:106)"
            }
          }
        ]
      },
      {
        "id": "e4ac1ba9-c1e1-4f9e-9df0-ec2c86cecfb0",
        "cursor": {
          "ref": "29016f65-d019-44aa-a0d8-c26b72083216",
          "length": 282,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "e3f5109f-512b-4f29-92c5-80ee4f9290e8"
        },
        "item": {
          "id": "e4ac1ba9-c1e1-4f9e-9df0-ec2c86cecfb0",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "a79bf8e2-002e-49ab-ac6f-f9a7bdc51529",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 95,
          "responseSize": 132
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:107)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:107)"
            }
          }
        ]
      },
      {
        "id": "68fd4cc6-7257-4b09-9ff1-999c5ac6cc1a",
        "cursor": {
          "ref": "1af01069-59fb-4ff4-aef4-dc919425d8eb",
          "length": 282,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "40b7028a-1f58-42e0-8854-58ac5b1a0778"
        },
        "item": {
          "id": "68fd4cc6-7257-4b09-9ff1-999c5ac6cc1a",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "16fbd4be-3f4a-48a4-a11e-9253cf24ed25",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1030,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f018f27e-156e-47bc-8e5b-79ee24fab256",
        "cursor": {
          "ref": "bb1a9f04-76ac-4ff3-92b6-17b03564fb5d",
          "length": 282,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "2d656337-1770-4c27-87f6-26bff782e7bf"
        },
        "item": {
          "id": "f018f27e-156e-47bc-8e5b-79ee24fab256",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "df46c262-801a-48be-a43e-fdce251a76ce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 679,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e1bc4866-0ae3-43ba-864d-ec9858a091a5",
        "cursor": {
          "ref": "54558857-670f-4525-bfaa-eefd185cb3b3",
          "length": 282,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "b85b7e03-d818-4f0e-9fd8-8c30efaeea03"
        },
        "item": {
          "id": "e1bc4866-0ae3-43ba-864d-ec9858a091a5",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "9e74a7cc-dce2-4980-89d7-de34b948adc2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7088d9a9-8881-44df-b065-8e254a33df76",
        "cursor": {
          "ref": "8217c4ff-2713-4954-8ba5-1e725963aef5",
          "length": 282,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "4edc88aa-51dd-4fc5-b7ee-2e5aebda9116"
        },
        "item": {
          "id": "7088d9a9-8881-44df-b065-8e254a33df76",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "f00f42f2-0d10-41d6-9926-f127c86a5c11",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9eb62be6-abaa-4577-9d18-287f172e7b0e",
        "cursor": {
          "ref": "ced87824-b967-4d0e-86ec-3650ca099313",
          "length": 282,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "979e6b89-86ed-4495-8ef7-9d42f6f61c04"
        },
        "item": {
          "id": "9eb62be6-abaa-4577-9d18-287f172e7b0e",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "0d6cfbd7-45f9-475c-9a28-f4445fa64c88",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "668ebed8-ef90-4097-889e-b4d3c5647d18",
        "cursor": {
          "ref": "2a549874-8e59-4d98-a954-5fdc4dae4143",
          "length": 282,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "75175a56-0fdb-4a42-942c-b8b68a9764a6"
        },
        "item": {
          "id": "668ebed8-ef90-4097-889e-b4d3c5647d18",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "6936d87f-f2f0-421c-bb33-472e51da5a78",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "349e7d05-e176-4c7e-acbb-961d3521aadb",
        "cursor": {
          "ref": "163099f6-d3e0-4d47-b7e4-7822af7a7cba",
          "length": 282,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "d7c095aa-8f58-4a84-a287-cb6724cd3ee2"
        },
        "item": {
          "id": "349e7d05-e176-4c7e-acbb-961d3521aadb",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "d349aa9b-7518-4816-8f79-319d5b9afc19",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "28c01244-8fed-4982-9048-81c8e3287cdd",
        "cursor": {
          "ref": "ca7dd656-f361-4d87-9d4d-3821fce79184",
          "length": 282,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "9ca49077-8d24-460e-b783-451425fb66c8"
        },
        "item": {
          "id": "28c01244-8fed-4982-9048-81c8e3287cdd",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "29004ce3-e0f2-4d0e-8809-9ffb016a7089",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8f687fa6-7b10-48a1-9b1b-1d7f4ef25774",
        "cursor": {
          "ref": "d4be04c6-10cd-4593-af48-80eee7109fd2",
          "length": 282,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "7854bd18-0c36-4939-882a-b326b36b6420"
        },
        "item": {
          "id": "8f687fa6-7b10-48a1-9b1b-1d7f4ef25774",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "7a78d4af-3f2f-4ef4-832c-389302ea6e84",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2e4137ce-ad5b-49cf-a111-972ccc0af54b",
        "cursor": {
          "ref": "f538ac05-9578-46e2-bb7e-ebadc623fd63",
          "length": 282,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "748aff6d-3703-4d87-8117-b76205067677"
        },
        "item": {
          "id": "2e4137ce-ad5b-49cf-a111-972ccc0af54b",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "6a1dc94d-2c8e-4ca1-8f02-11241a1e85ff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "070792fa-e381-4f21-9ce2-bd40583996e6",
        "cursor": {
          "ref": "7cbc95cc-ed7a-48ab-9a64-076a4bcd2048",
          "length": 282,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "209418d8-ec81-420c-8703-293fa0e50dda"
        },
        "item": {
          "id": "070792fa-e381-4f21-9ce2-bd40583996e6",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "744ea8c6-7247-4cd2-9f8e-f0b69937440e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "675e5150-111d-44d3-9465-a42464f79f8e",
        "cursor": {
          "ref": "c828a7d9-0667-484a-92d3-a42088782385",
          "length": 282,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "00946587-3d33-4e6f-84b6-de662ab3c57f"
        },
        "item": {
          "id": "675e5150-111d-44d3-9465-a42464f79f8e",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "fcc6bccc-18ed-42eb-bf0a-d154b8582b78",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "331b8aa5-dcd9-4e08-a520-ed2c88c0a5d1",
        "cursor": {
          "ref": "70a73c44-777c-4009-9a99-7bf0da739008",
          "length": 282,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "1ca17e44-a825-4871-83a4-62fb28a95772"
        },
        "item": {
          "id": "331b8aa5-dcd9-4e08-a520-ed2c88c0a5d1",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "b1cd832f-81e7-4730-97f2-ce3cc43a4f19",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f99b10b2-f6d2-428a-8e00-41fcbe51106b",
        "cursor": {
          "ref": "a140a3f8-aefd-4483-88d7-032c8ddff9fb",
          "length": 282,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "75df4465-58c6-4990-a71f-6244c3fe0ff3"
        },
        "item": {
          "id": "f99b10b2-f6d2-428a-8e00-41fcbe51106b",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "ae46d5e9-a76d-448e-9a05-c50d057bbb4a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5c4fe0ba-f0e2-4b15-aa29-9c6f7d9f39c4",
        "cursor": {
          "ref": "f70a3212-f555-44cb-bfc5-148417df3ae6",
          "length": 282,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "15cff433-c3a9-4c5e-bfda-045581d4ee85"
        },
        "item": {
          "id": "5c4fe0ba-f0e2-4b15-aa29-9c6f7d9f39c4",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "979262ae-2982-4efb-9ada-ab29e667b120",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f643c3cf-70c1-488e-8f46-ef0670aecf5d",
        "cursor": {
          "ref": "9b59041f-d994-4c5c-b9cb-5459a8051c46",
          "length": 282,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "78801904-1c35-45ed-851e-628665c14fb2"
        },
        "item": {
          "id": "f643c3cf-70c1-488e-8f46-ef0670aecf5d",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "04e36ee9-c401-4567-8fea-78b305e023fa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c23af3ca-6afa-440d-9e58-f8167fe7b3a2",
        "cursor": {
          "ref": "e338f0d9-29b3-45f8-b248-f00d06860294",
          "length": 282,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "2844c24c-f62c-4a6d-9686-7a2778b3fee3"
        },
        "item": {
          "id": "c23af3ca-6afa-440d-9e58-f8167fe7b3a2",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "b63b5914-93fe-4c2d-85d1-b5851fd8d8e1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "36426b54-4233-4fa1-91c8-584debe37e57",
        "cursor": {
          "ref": "2ffe2c70-543a-4310-9f8c-cd9102535898",
          "length": 282,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "11c4161a-e05b-4470-8848-6bf489268df2"
        },
        "item": {
          "id": "36426b54-4233-4fa1-91c8-584debe37e57",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "ce4b6fbf-d24f-464d-8cc2-ee146700e1be",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f2ee14f1-40ff-4b7c-a349-13505a5c302a",
        "cursor": {
          "ref": "3ca8886e-4ceb-478d-909c-44cd486c1840",
          "length": 282,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "669e6d8c-34a9-42b5-b592-73697f19a658"
        },
        "item": {
          "id": "f2ee14f1-40ff-4b7c-a349-13505a5c302a",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "47eeb62a-dd1b-4456-92be-df111f30ba57",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6154d0ba-251b-448e-b3bd-498816a78668",
        "cursor": {
          "ref": "467afdd6-89d1-42de-8439-97c1bce96eef",
          "length": 282,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "309f269d-5279-4ab4-ad3a-6f58312cafc2"
        },
        "item": {
          "id": "6154d0ba-251b-448e-b3bd-498816a78668",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "e6cb5f48-9480-4276-bbd2-eb33c9073f56",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7dd9c4a1-d05e-47f4-aaae-5f5d64ef2a46",
        "cursor": {
          "ref": "23efab62-05d3-4917-9328-231d00c21e98",
          "length": 282,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "d1f22b43-3cab-4142-bf5e-04984a824902"
        },
        "item": {
          "id": "7dd9c4a1-d05e-47f4-aaae-5f5d64ef2a46",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "e6382fa9-1db4-4df4-afde-bd0c1ba289db",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d7c6030d-3374-43a9-8165-2ab483102cd8",
        "cursor": {
          "ref": "da74e80b-2606-44e5-9a04-d791714ee116",
          "length": 282,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "83931207-ddc2-48d5-ac14-3bd1c28c9f11"
        },
        "item": {
          "id": "d7c6030d-3374-43a9-8165-2ab483102cd8",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "4f944c6b-79a7-470e-97fc-2948db3a56cc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "489fecf3-8885-44b9-b8f6-d5d22192b918",
        "cursor": {
          "ref": "6d9a9d28-f4d4-4245-baa9-44fa65fc37d2",
          "length": 282,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "90cc3813-d60d-4fc4-b482-b5266965c852"
        },
        "item": {
          "id": "489fecf3-8885-44b9-b8f6-d5d22192b918",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "20e7c39f-5553-4cb2-a2a5-aa802808c3a1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5902ee48-372e-42ce-b4b3-b3338e46522d",
        "cursor": {
          "ref": "13ed6aee-0c58-45bd-88b0-9c15c130955d",
          "length": 282,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "a6471667-4bdb-4fd4-84bb-685dcc64f529"
        },
        "item": {
          "id": "5902ee48-372e-42ce-b4b3-b3338e46522d",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "06a0c0d2-cff8-441f-808d-d336a8630813",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1b4f047d-d9d6-44cb-8f50-409557d12169",
        "cursor": {
          "ref": "716c0f3d-befd-4f09-80d0-30602eb4e8ba",
          "length": 282,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "a30a2f4e-3934-411c-bf63-fec9b26b917e"
        },
        "item": {
          "id": "1b4f047d-d9d6-44cb-8f50-409557d12169",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "17df669f-27c5-4cb9-b302-9527e7830ea6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "95624ce7-8cd7-472a-bd2d-f4448c252272",
        "cursor": {
          "ref": "9bf5f63f-2a6a-4436-a8ed-cfa7023dde32",
          "length": 282,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "1c7aa9d0-0a52-44f6-894b-4754f52f4058"
        },
        "item": {
          "id": "95624ce7-8cd7-472a-bd2d-f4448c252272",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "dc4ec9ca-2d40-4a6d-a222-429738513e5a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "21c6061e-6b2b-434e-948a-a38e61ab9a7a",
        "cursor": {
          "ref": "df098cae-8540-46ef-8a8f-2c12e4eb8efa",
          "length": 282,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "da0d7ba7-44da-4977-926c-e5f5cc7d300a"
        },
        "item": {
          "id": "21c6061e-6b2b-434e-948a-a38e61ab9a7a",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "f805c8c1-0260-478f-809f-26c4bb3345eb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d5ffac35-c53f-44a9-b6da-05bb930df750",
        "cursor": {
          "ref": "cd09f4eb-7451-4752-90c0-fbc805cb43e6",
          "length": 282,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "2a661c8c-960a-470e-96ac-6eeccb431a57"
        },
        "item": {
          "id": "d5ffac35-c53f-44a9-b6da-05bb930df750",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "e3ba83ab-f1f8-4fba-86ce-e38256e30a80",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "541b0140-2bb8-4477-ba50-92d323d4d924",
        "cursor": {
          "ref": "e9a78dcc-4e8c-4ba8-b534-9e8f102bafed",
          "length": 282,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "8cc468c7-f667-4ccc-ab6a-aad12fb45036"
        },
        "item": {
          "id": "541b0140-2bb8-4477-ba50-92d323d4d924",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "a440ff7c-6c55-4837-ae5a-bfa6c8424883",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "450c1f84-eda5-4fd1-ab39-579f22bf98e9",
        "cursor": {
          "ref": "5dbeba83-86d6-4121-818d-ba8b5d27b825",
          "length": 282,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "add71773-3a2f-4532-9dfe-0ccfd994b65d"
        },
        "item": {
          "id": "450c1f84-eda5-4fd1-ab39-579f22bf98e9",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "4173c0fe-9129-4dfc-929f-4cc01430bdfd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a4e2151e-c753-4234-a3d3-d4d0a996a52a",
        "cursor": {
          "ref": "9fda2faa-181a-4fc3-8cdd-d94bb418621c",
          "length": 282,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "43087190-c192-41d0-b5f8-c52a7ab5a419"
        },
        "item": {
          "id": "a4e2151e-c753-4234-a3d3-d4d0a996a52a",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "db94e0de-fbfb-48bc-aa43-7a40b475716e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d17c71f-bf30-4628-9f16-1e9a72665514",
        "cursor": {
          "ref": "5d6aee2d-18da-4a1f-b86c-e64fb9dfaf1e",
          "length": 282,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "c056cbad-5f2c-4fd9-b29a-d1d0cb92ff03"
        },
        "item": {
          "id": "8d17c71f-bf30-4628-9f16-1e9a72665514",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "9b087dc7-671e-444e-bc1d-cc16830ba236",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4f23cd45-7133-4474-8de0-355eb8b471c8",
        "cursor": {
          "ref": "83b068bf-fc94-4e2f-b0e3-46815dda2806",
          "length": 282,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "81d97b1a-96b5-4544-9d8f-664529372a29"
        },
        "item": {
          "id": "4f23cd45-7133-4474-8de0-355eb8b471c8",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "27aee0c5-1dea-4f82-89f1-455722fc464b",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 28,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "95b1c198-11a5-4021-addc-6db9700dfa72",
        "cursor": {
          "ref": "e3f95bdb-2fe4-4620-b792-d657000160fb",
          "length": 282,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "5cbffb24-1b39-4b55-972d-24dd1f0c0b26"
        },
        "item": {
          "id": "95b1c198-11a5-4021-addc-6db9700dfa72",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "45800940-d6fa-4242-903e-05175bed576d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5c0a41ad-e18b-4000-8731-1d4f189ded88",
        "cursor": {
          "ref": "8c6f37e0-33eb-4924-b786-5418b9a28637",
          "length": 282,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "d6caeeb0-5d07-48f5-b6e2-d2536f9ed80e"
        },
        "item": {
          "id": "5c0a41ad-e18b-4000-8731-1d4f189ded88",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "12780f56-c2f6-49f6-9826-8b785e09e374",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d556ad4a-ce8a-4ad9-94cf-8ac393cb2bbd",
        "cursor": {
          "ref": "a469f697-6998-4c0f-a154-2453affd7090",
          "length": 282,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "95ddf560-3829-4cf5-ad87-ff4a32ff50df"
        },
        "item": {
          "id": "d556ad4a-ce8a-4ad9-94cf-8ac393cb2bbd",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "2f898331-b865-4ca1-819c-beec87410459",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6bee866b-5453-4f1b-9764-4b22c0f0f6f9",
        "cursor": {
          "ref": "12dea4fc-761d-447e-92b8-a616a2398816",
          "length": 282,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "a9e14c27-e373-46a2-9bb7-13b770619882"
        },
        "item": {
          "id": "6bee866b-5453-4f1b-9764-4b22c0f0f6f9",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "aba02829-3eaa-43e4-8646-88d8a11dd790",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "582360bf-0698-40d4-bed5-f56bd62f4a67",
        "cursor": {
          "ref": "b23af7a0-2e96-4015-b864-2c838577d59e",
          "length": 282,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "c0ec7e07-f299-4fbc-ba44-20b386b98ac0"
        },
        "item": {
          "id": "582360bf-0698-40d4-bed5-f56bd62f4a67",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "78c3fb50-11cd-43ad-a1a9-b8e450245ec8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0b6fa68f-aca9-492e-bd1a-3f946bda4e9f",
        "cursor": {
          "ref": "10717bc9-7560-4e5f-b31a-e705ce49bc6e",
          "length": 282,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "95a31536-c623-4c89-902c-8ff012b61228"
        },
        "item": {
          "id": "0b6fa68f-aca9-492e-bd1a-3f946bda4e9f",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "2c122fe6-3722-48b2-96ef-80bfb284b2a2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "17584f9e-baee-4e86-bacb-1ee75ee3f2bf",
        "cursor": {
          "ref": "cc479034-acbc-44a8-bd56-79e833d78a67",
          "length": 282,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "90814e03-0157-49b3-a873-d94fac824149"
        },
        "item": {
          "id": "17584f9e-baee-4e86-bacb-1ee75ee3f2bf",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "a3e29ee8-6316-4c63-b786-d6226c280583",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "920490f0-cd2a-463c-b6da-796c841f562a",
        "cursor": {
          "ref": "1740ad49-11af-4294-816a-2c09404ae62e",
          "length": 282,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "cb9aa273-d79f-442a-883d-a9e0cc4793ac"
        },
        "item": {
          "id": "920490f0-cd2a-463c-b6da-796c841f562a",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "634ab076-dfa1-48f6-95ef-7f8c3793713b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "edc2a533-a063-407b-8084-4a70494aa5da",
        "cursor": {
          "ref": "85b17ba9-332d-4dad-8ef4-d1461266ef63",
          "length": 282,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "41343b9f-1aeb-4b72-9f63-0471b97662bc"
        },
        "item": {
          "id": "edc2a533-a063-407b-8084-4a70494aa5da",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "f14e387a-c603-4cab-a4e4-cfc74a7b69c1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9485135b-e92c-46c1-8700-2fe0993b4510",
        "cursor": {
          "ref": "64479c2f-51f5-414a-84cf-43ce3c00d27a",
          "length": 282,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "3a7a663d-b82b-4ec5-9e1e-52b144d02999"
        },
        "item": {
          "id": "9485135b-e92c-46c1-8700-2fe0993b4510",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "ce305f91-0bca-4e6f-a688-4dfeaeca2b8b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "188f469a-5916-4f1d-ba1e-c5bcec38caa2",
        "cursor": {
          "ref": "4414956d-63ef-4f13-8907-e5197c56e0c7",
          "length": 282,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "2e41d0f9-86e9-4fe7-954d-77ff66c3e2ca"
        },
        "item": {
          "id": "188f469a-5916-4f1d-ba1e-c5bcec38caa2",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "350f459e-6edb-49ea-b6e7-90a897fecb80",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "21be486b-7d70-4760-a968-fe52b3c484c5",
        "cursor": {
          "ref": "9938c79f-8589-4a57-a8a6-3ba4af95e287",
          "length": 282,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "cb6fd0c6-bcc2-4893-9412-8b0fb15fb90f"
        },
        "item": {
          "id": "21be486b-7d70-4760-a968-fe52b3c484c5",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "86756cf5-1816-4619-bc08-1650bf1007ca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1c6ca3ed-91c4-4ce7-b896-a8913793a2f9",
        "cursor": {
          "ref": "b7eddbf9-c26f-4f2c-9329-11230a794e0c",
          "length": 282,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "b259c50a-2738-4aff-9c27-5af254cead9f"
        },
        "item": {
          "id": "1c6ca3ed-91c4-4ce7-b896-a8913793a2f9",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "d478a44c-5ad3-4208-932d-39ba615ebca7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fd35c865-b7d6-4c86-af36-82d97747a818",
        "cursor": {
          "ref": "d4743686-72a5-47f9-85fb-d8f865f1e89e",
          "length": 282,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "85eebda1-e107-4082-956e-f18ba6483d67"
        },
        "item": {
          "id": "fd35c865-b7d6-4c86-af36-82d97747a818",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "8f0b8985-0cf3-4347-925d-0ac60e9507cc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "94fe778b-1722-45c9-80a7-eb06c6b61f5d",
        "cursor": {
          "ref": "a219fae7-1a22-4f7c-b072-9f0b78f332be",
          "length": 282,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "1a379077-425f-47f1-968f-df4221d93383"
        },
        "item": {
          "id": "94fe778b-1722-45c9-80a7-eb06c6b61f5d",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "88d5fe5d-dab6-475b-bbb0-0702e214c826",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ac917a0-6f32-458f-a665-1a54c65e22d4",
        "cursor": {
          "ref": "62f86069-1af6-4dea-8a0d-4b00febef5e7",
          "length": 282,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "03c991ac-92c3-4848-8f5a-8c1123a5ae98"
        },
        "item": {
          "id": "3ac917a0-6f32-458f-a665-1a54c65e22d4",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "2c3c0dcc-6a69-42b6-9337-11ddc75b8345",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f95c5943-a250-49e6-8fb1-ae65d6a534c7",
        "cursor": {
          "ref": "109d1eda-82bc-48a2-b935-ac95ef4c8ba2",
          "length": 282,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "a344dbd3-8231-4353-be28-91c4fe6c8b3d"
        },
        "item": {
          "id": "f95c5943-a250-49e6-8fb1-ae65d6a534c7",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "2a851f01-13d6-48c0-8eb6-1ba222e4ab8c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1d6a2589-fc99-41d2-85e6-f50323d31a39",
        "cursor": {
          "ref": "276b69cb-0c3a-4dcc-87bd-085f6f39d3fa",
          "length": 282,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "65e76521-753e-4463-8671-b0b16c19c407"
        },
        "item": {
          "id": "1d6a2589-fc99-41d2-85e6-f50323d31a39",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "84605fea-fd8b-4602-bcd6-3af4a3769367",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "93eb6056-9ed1-4ca2-b2f2-3c9d7094b556",
        "cursor": {
          "ref": "903a302b-3ba7-4331-946f-87a1dd79865d",
          "length": 282,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "4b7f9874-14c3-4a99-b238-15ecff898934"
        },
        "item": {
          "id": "93eb6056-9ed1-4ca2-b2f2-3c9d7094b556",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "7a36b1af-4f0b-4d36-ac4d-38a332b449eb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fb63d727-80fa-4539-86b2-af77a396699c",
        "cursor": {
          "ref": "9a02dfb5-1cf7-416b-9c6e-b9d3f0d7a548",
          "length": 282,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "e8191f67-1071-4d21-a8ad-5a4b872fa136"
        },
        "item": {
          "id": "fb63d727-80fa-4539-86b2-af77a396699c",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "778f7c96-f4d4-466a-af9d-029485f96c71",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ec1a6784-6622-4b30-958d-131f342a435d",
        "cursor": {
          "ref": "378dc6a0-8087-4f26-a278-ac3806109e72",
          "length": 282,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "dcf3c978-440f-4d8e-9fbb-bdaa18ed4931"
        },
        "item": {
          "id": "ec1a6784-6622-4b30-958d-131f342a435d",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "6dfbb557-dcf7-4ff8-935e-dfb77b7f56b8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c27dc3da-a4be-4600-955b-97bbbb2d1c4b",
        "cursor": {
          "ref": "5b3d5791-151a-4189-9acf-4df52abe4956",
          "length": 282,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "6b038825-70dd-4e27-8dd4-767c976df8eb"
        },
        "item": {
          "id": "c27dc3da-a4be-4600-955b-97bbbb2d1c4b",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "f63b3061-0ada-442a-9fcc-d2c184494044",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6556bec8-cbdd-401a-9067-268dd25be50a",
        "cursor": {
          "ref": "11cb7e7d-6a0f-41e6-92c2-4f4f646cc76e",
          "length": 282,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "cfcc807f-1d20-4bf4-9f0f-82b8d62faa96"
        },
        "item": {
          "id": "6556bec8-cbdd-401a-9067-268dd25be50a",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "34d1d2bd-d408-45a8-981f-c262063b29e0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0a5524f1-b0a3-4989-bb2e-c5a51147d335",
        "cursor": {
          "ref": "c3dfbe62-393c-4f5f-bf72-475175c49e2b",
          "length": 282,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "a4573736-7771-4219-9399-e9d58db85fdb"
        },
        "item": {
          "id": "0a5524f1-b0a3-4989-bb2e-c5a51147d335",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "a86cfee9-a625-4013-934f-4bea2d578269",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e0996f1a-d828-40a9-a524-76b0ec64b7a2",
        "cursor": {
          "ref": "73e31e7b-3cca-4858-809a-f2948b12ac4e",
          "length": 282,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "e2912d01-2afc-4fc6-af61-bb7f721471fb"
        },
        "item": {
          "id": "e0996f1a-d828-40a9-a524-76b0ec64b7a2",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "69b87c46-63ac-4faa-8388-4683bd8a633c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d819f30f-9569-44d6-9bf8-18541fefbb6c",
        "cursor": {
          "ref": "b23e34a0-6a2f-4e65-a8e1-0e052e9123f0",
          "length": 282,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "35675b7c-13bb-4310-86f4-4ed4bbd89238"
        },
        "item": {
          "id": "d819f30f-9569-44d6-9bf8-18541fefbb6c",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "8b6e2966-c53b-4d00-bf18-91486de0a926",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9d265947-9a29-477e-9758-16cb54e79a07",
        "cursor": {
          "ref": "f186ba6d-5131-4707-88a0-e46758d14bff",
          "length": 282,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "383e505e-0a42-43f2-be9f-b5d988d2a74c"
        },
        "item": {
          "id": "9d265947-9a29-477e-9758-16cb54e79a07",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "4f7d4b5e-e545-4fd4-91b9-cb29834ca772",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e31787f2-980a-4122-aefb-c446a30a740c",
        "cursor": {
          "ref": "00f43228-1942-45c2-8b51-99905bba6c9c",
          "length": 282,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "2201f128-9112-429a-8eea-5b076837175a"
        },
        "item": {
          "id": "e31787f2-980a-4122-aefb-c446a30a740c",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "900cea8f-1cd6-4ef3-a300-6915905237ce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "97ed7b1f-f055-414e-9120-acc0d7b7d967",
        "cursor": {
          "ref": "7a1e145a-9644-44d5-857c-c3fc4ffa2e55",
          "length": 282,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "58c04644-1148-4533-aca4-684022cc8587"
        },
        "item": {
          "id": "97ed7b1f-f055-414e-9120-acc0d7b7d967",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "c22206da-ad17-4f80-9f48-64305b2eb9b7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d5386815-f7a5-4a0e-8878-6cfa47abc180",
        "cursor": {
          "ref": "0ba33025-3d3d-411b-99b7-3a7bdcf36465",
          "length": 282,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "9de04b07-1791-46c9-9578-2321db777365"
        },
        "item": {
          "id": "d5386815-f7a5-4a0e-8878-6cfa47abc180",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "94f848b8-d5c7-4451-a172-7c15796fe16e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c557ad23-d1f3-4da1-9935-d62dfc3decca",
        "cursor": {
          "ref": "1256a246-2dbd-4ed0-a36e-02661b0186d0",
          "length": 282,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "0203802e-bae1-4c98-b871-0e1d480409bf"
        },
        "item": {
          "id": "c557ad23-d1f3-4da1-9935-d62dfc3decca",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "5b19c9d6-75e7-45c5-8ba3-966b65e5ee47",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9328d0ec-435a-4868-bb49-e84fcdea47b4",
        "cursor": {
          "ref": "d8fae716-7e59-4bd3-bee9-f5aded4de6a9",
          "length": 282,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "9cbae7ad-df01-4278-80fa-366cb99e9e00"
        },
        "item": {
          "id": "9328d0ec-435a-4868-bb49-e84fcdea47b4",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "fda8ebe0-355d-4919-a81f-7ffd26385438",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6149affe-bbb4-4845-9dab-f3578381de96",
        "cursor": {
          "ref": "12973306-ef09-45f4-8c7d-e6399ad52094",
          "length": 282,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "17dfa5b0-c552-483a-8ee6-9dcc9d286100"
        },
        "item": {
          "id": "6149affe-bbb4-4845-9dab-f3578381de96",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "d199b796-f2ba-4118-8d2a-ca0a15a93f75",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "17c471f5-2057-4f88-8775-650ee9a3a544",
        "cursor": {
          "ref": "84adde20-3d16-49f3-aa63-c404d206b889",
          "length": 282,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "06d80c07-58a5-49ad-af93-8ce0690bcbf2"
        },
        "item": {
          "id": "17c471f5-2057-4f88-8775-650ee9a3a544",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "eefc1acc-a45c-43d3-a734-5f8e2e1651ac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f14cb166-fefc-4f1a-84cd-da266bf02ada",
        "cursor": {
          "ref": "0c2697e6-9db7-458c-9d5e-1b1a2d6d3760",
          "length": 282,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "2e82f4a7-4f58-4836-b4b8-c3a3a55f47c8"
        },
        "item": {
          "id": "f14cb166-fefc-4f1a-84cd-da266bf02ada",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "7172f34f-cbed-44a1-ab92-79e46cfbb788",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c5e21c2b-ff76-45d7-be1b-92e981f5ed18",
        "cursor": {
          "ref": "196cc44b-7ce9-46d4-ac91-1b6f378d5b26",
          "length": 282,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "d2720caf-e612-4218-a6da-8bc192e39810"
        },
        "item": {
          "id": "c5e21c2b-ff76-45d7-be1b-92e981f5ed18",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "f229abd5-0c91-4c43-bb77-3412afc268aa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8241b2bf-6732-4916-b649-4a5d0d800964",
        "cursor": {
          "ref": "ba2bc094-72e4-4221-80fe-8859a9f8f17e",
          "length": 282,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "200b0c65-2f8c-4e76-9459-b91f71617bf7"
        },
        "item": {
          "id": "8241b2bf-6732-4916-b649-4a5d0d800964",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "48612919-1309-4534-adff-d39a3fd7d54a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5da2fdf1-13f7-460b-815e-3965ad845b9d",
        "cursor": {
          "ref": "8b74b18b-db34-4802-9fd0-df6d366860b4",
          "length": 282,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "4b381a91-016b-4eff-afc4-5b5985c8bfb9"
        },
        "item": {
          "id": "5da2fdf1-13f7-460b-815e-3965ad845b9d",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "d1d86191-8c13-42f0-bd76-36dcf7cde344",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 27,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c7e89710-7fed-4d73-be51-17d03da0c6b6",
        "cursor": {
          "ref": "c360f7e9-d883-446a-aaed-f9ebfaa313f4",
          "length": 282,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "aec75242-e5d4-4a13-9392-5af07926ac2e"
        },
        "item": {
          "id": "c7e89710-7fed-4d73-be51-17d03da0c6b6",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "e4ac9beb-9f35-4675-bdbd-f83581be7a33",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8f8f69fa-dba4-4611-aee1-cd0d3b384bd5",
        "cursor": {
          "ref": "47a26243-8fd6-4368-b70c-2b7397c0f588",
          "length": 282,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "8b84e2f8-172a-4433-8c7f-d64da2275e9f"
        },
        "item": {
          "id": "8f8f69fa-dba4-4611-aee1-cd0d3b384bd5",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "2ad402f8-0b3e-4f58-87dc-23d7e0c688be",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "76b5d1c1-73f9-4938-9438-e897fe205b9e",
        "cursor": {
          "ref": "11788800-353c-46be-822e-26119be9b956",
          "length": 282,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "31c49089-0f3e-4d2a-9717-df32a98eefc0"
        },
        "item": {
          "id": "76b5d1c1-73f9-4938-9438-e897fe205b9e",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "5f45f063-8538-48dd-9ed7-3594d1221a4a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4f34e731-efaf-47c2-8312-a0c774ea5dea",
        "cursor": {
          "ref": "a1a4766b-df3c-4f0d-a0a9-216c8f63e576",
          "length": 282,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "fadf33ae-5aa2-4fd1-ae10-78a023fa3007"
        },
        "item": {
          "id": "4f34e731-efaf-47c2-8312-a0c774ea5dea",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "23d57cb3-22c5-47f9-84e8-fd810d91965b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "14b378ca-e375-412d-81b5-2e432d0cd289",
        "cursor": {
          "ref": "201ffa75-3738-4cf2-a83c-2799e69a0f54",
          "length": 282,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "3764cc2c-d5cd-4f34-a1c8-cfc4032dec0a"
        },
        "item": {
          "id": "14b378ca-e375-412d-81b5-2e432d0cd289",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "82b38143-a7ac-4f08-8fe5-c9315ab66c43",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3d4c93d3-e70a-4327-b66d-151ea68f47f0",
        "cursor": {
          "ref": "13255e12-bedd-469b-90e5-d46cbe856712",
          "length": 282,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "d9696d59-8051-4bfc-beaf-cf8725431c7c"
        },
        "item": {
          "id": "3d4c93d3-e70a-4327-b66d-151ea68f47f0",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "34a74ab7-4c59-4710-ae92-0d9367aaf01a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bf79e476-2496-45b9-8f25-211aca2318e7",
        "cursor": {
          "ref": "012f821a-deeb-4d7b-a4d0-b6243a59196e",
          "length": 282,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "79edecb5-2cfe-48b5-b539-4121a351f887"
        },
        "item": {
          "id": "bf79e476-2496-45b9-8f25-211aca2318e7",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "42145a7c-c723-417f-9fd4-1a03fad86a9c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "09e5dd00-ea1f-4b7b-ac1b-b836d6f0a17e",
        "cursor": {
          "ref": "8f3660cf-a2e9-41c6-8449-b3e03f4662a5",
          "length": 282,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "ab6674ce-5b26-4540-8874-9e2c4b295368"
        },
        "item": {
          "id": "09e5dd00-ea1f-4b7b-ac1b-b836d6f0a17e",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "245807eb-a68a-4bcf-bcb4-ad849b8f2a58",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "82403b2e-3461-4ec5-b744-27e694e66e63",
        "cursor": {
          "ref": "26e877f8-ea54-4510-9007-1bc75587cb4c",
          "length": 282,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "d6839f9a-b1a9-4f20-9764-32576d1a10af"
        },
        "item": {
          "id": "82403b2e-3461-4ec5-b744-27e694e66e63",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "263033ce-81b0-4221-98c2-7422b1088049",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 750,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb5efc46-84cc-47d1-9421-32457bbe4ab9",
        "cursor": {
          "ref": "a159ba42-1263-4a42-83a4-c04fe8ab22d1",
          "length": 282,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "6de5d072-f233-49f1-856a-acfffe16c065"
        },
        "item": {
          "id": "bb5efc46-84cc-47d1-9421-32457bbe4ab9",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "9889a4c6-cd56-45d7-8307-c1cd865f45e6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3039016b-a8ec-47ec-a527-34348e15d0fb",
        "cursor": {
          "ref": "ff778c6e-d6e0-42e3-91fc-76d40931201d",
          "length": 282,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "f9625def-6464-4f1d-9395-85806422cd7f"
        },
        "item": {
          "id": "3039016b-a8ec-47ec-a527-34348e15d0fb",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "6174d405-1c9f-4ddc-80ec-9066417bb3db",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "98dd64ef-dee9-4c22-bd63-4746cb716cfd",
        "cursor": {
          "ref": "f755812c-47c6-4493-a5f4-3236486596cb",
          "length": 282,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "4c2a578a-a27e-48e9-b961-1dd4ab1683d0"
        },
        "item": {
          "id": "98dd64ef-dee9-4c22-bd63-4746cb716cfd",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "570e1fe9-4410-4eeb-b924-16e7fd865a59",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "73478682-0ae0-49c7-b0da-5a4be418bb85",
        "cursor": {
          "ref": "015cdec2-be72-43eb-8fe6-9d8adfe0ffc0",
          "length": 282,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "50b45c4a-8294-4231-864a-118e584b392d"
        },
        "item": {
          "id": "73478682-0ae0-49c7-b0da-5a4be418bb85",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "a9604f7c-fa90-460d-9b15-cb007f8226a5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "39123798-8dab-4679-a3be-101846871a88",
        "cursor": {
          "ref": "72c8f1f3-ab88-4e66-a67a-696dd39167ed",
          "length": 282,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "c63305dd-d1d7-4fbd-9187-247e1f8c00fa"
        },
        "item": {
          "id": "39123798-8dab-4679-a3be-101846871a88",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "04876d14-5439-4043-8c6d-6b791f82e379",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "554a9cd7-3157-4fd9-afbd-e67e01ef0d71",
        "cursor": {
          "ref": "c72d4c2c-34da-4eb6-9962-5f484636097f",
          "length": 282,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "c147fffe-ebdc-43ee-ae52-328cb905afba"
        },
        "item": {
          "id": "554a9cd7-3157-4fd9-afbd-e67e01ef0d71",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "ee96afae-2387-4d8e-a3e4-98757c13160f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "75874851-7192-4e91-9a27-30f51c33a427",
        "cursor": {
          "ref": "48ec51e5-aec9-42a8-846b-53f43339e7a2",
          "length": 282,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "18b09c03-a3f2-421a-8ebf-bb6ea873ccc8"
        },
        "item": {
          "id": "75874851-7192-4e91-9a27-30f51c33a427",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "8d0ae6ba-fe00-4a3e-89d9-54d9ad0de0ea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d7d731c4-b910-4d78-8bb9-bd781cf6ca63",
        "cursor": {
          "ref": "69f21740-6e65-4725-9220-9df30d13f756",
          "length": 282,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "9b00f62d-981e-41de-8ced-4c344cec9bec"
        },
        "item": {
          "id": "d7d731c4-b910-4d78-8bb9-bd781cf6ca63",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "34c5b2ac-ffd5-4454-b7a9-f122e25b202b",
          "status": "OK",
          "code": 200,
          "responseTime": 217,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 200",
              "stack": "AssertionError: expected response to have status code 400 but got 200\n   at Object.eval sandbox-script.js:1:195)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:195)"
            }
          }
        ]
      },
      {
        "id": "e32609d3-7499-4318-bee5-3982a0806e4f",
        "cursor": {
          "ref": "57f546e6-c323-479b-9a8c-f755a456cd6f",
          "length": 282,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "6f7e63c4-6d9d-4ec7-bc7a-8d5775b11126"
        },
        "item": {
          "id": "e32609d3-7499-4318-bee5-3982a0806e4f",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "71e4e86f-4e7a-4135-81c4-074579ca6abd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b0faa60c-b48a-48a2-a6f6-66d1263a99b9",
        "cursor": {
          "ref": "ca1c3329-671b-4362-bf04-3d60a3772805",
          "length": 282,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "d5044b37-683d-4611-9a91-0eb6019d753d"
        },
        "item": {
          "id": "b0faa60c-b48a-48a2-a6f6-66d1263a99b9",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "74c23d9b-034c-43e7-a1cd-9070d26b44dc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "50b4deb8-4aca-4896-a2f9-fdafa52bb2f2",
        "cursor": {
          "ref": "6361e52a-a68f-4c48-9035-9604d640c376",
          "length": 282,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "09e0041a-abdd-4940-a7a3-d4a22530c805"
        },
        "item": {
          "id": "50b4deb8-4aca-4896-a2f9-fdafa52bb2f2",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "6e407b5e-0f2d-4c4b-89e6-e9aa5afe8a94",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1802cef5-b2e0-41df-a4a9-df969981745b",
        "cursor": {
          "ref": "44b72c97-bbf4-4612-a6f3-1e7a5a6da061",
          "length": 282,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "a495b43e-eeba-49a6-be23-8b29db5a6d42"
        },
        "item": {
          "id": "1802cef5-b2e0-41df-a4a9-df969981745b",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "c5d0a97a-8838-421a-98b2-9196c0b184ed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f4fced01-d0bd-47c9-8ec8-55823442a7ea",
        "cursor": {
          "ref": "d58cc5c7-3b6f-472a-91a3-77152f724b55",
          "length": 282,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "03edc112-d0f5-40af-b737-1ac60681f4a5"
        },
        "item": {
          "id": "f4fced01-d0bd-47c9-8ec8-55823442a7ea",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "99e8b5e8-1e94-4c40-bc9d-f5ac5096ec41",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "24ec87e3-0b27-44ca-a4f4-8f00bfa2f1ed",
        "cursor": {
          "ref": "d4b2656e-0e89-4c44-9c8d-6771a32c2512",
          "length": 282,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "198b5f5b-066e-46a9-8fc1-744971b2ea3c"
        },
        "item": {
          "id": "24ec87e3-0b27-44ca-a4f4-8f00bfa2f1ed",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "1e70cf04-7cbc-49f3-9052-6ee8de1614b6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3f1b1323-7995-417d-86e6-e4922f24b8e6",
        "cursor": {
          "ref": "ac35fa21-32be-4ee2-8b05-c8204c4bfbdd",
          "length": 282,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "66f77965-b5ef-4043-b086-6249d985e7e9"
        },
        "item": {
          "id": "3f1b1323-7995-417d-86e6-e4922f24b8e6",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "b1d4c428-8abe-4615-8737-ffad22381b94",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e11a3d7f-3e48-4e3e-934d-73c3cbee1577",
        "cursor": {
          "ref": "28c39821-b5f3-4983-b68d-5b47c94f0db1",
          "length": 282,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "4c188e91-d56a-40b3-ad13-bca042c2c314"
        },
        "item": {
          "id": "e11a3d7f-3e48-4e3e-934d-73c3cbee1577",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "81938181-60e6-4a7d-9e16-6eeaa99bb422",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0d036fdc-1110-4d7d-838f-7872a99c4487",
        "cursor": {
          "ref": "6702ec96-4406-4265-8887-250ab4ed1959",
          "length": 282,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "eda47331-c032-4b55-9ab7-ee3a705e8cac"
        },
        "item": {
          "id": "0d036fdc-1110-4d7d-838f-7872a99c4487",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "e989eef7-23ee-4fc3-88e4-1392c7c162a3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cef0715e-4183-4417-a073-0968376f66d3",
        "cursor": {
          "ref": "58585a90-603d-40dd-8a3a-afaa99527321",
          "length": 282,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "f37ed1aa-d0b4-4906-9962-5e8dd617c6cd"
        },
        "item": {
          "id": "cef0715e-4183-4417-a073-0968376f66d3",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "8b2adc9c-11e3-4857-bb93-684c81b794ba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ec81157e-0588-4e62-972e-ce45fdd3874f",
        "cursor": {
          "ref": "8aa3c9d4-8a08-4382-88a3-d512bec9d6b9",
          "length": 282,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "a8123d31-afff-4958-b8c9-8f104e73b804"
        },
        "item": {
          "id": "ec81157e-0588-4e62-972e-ce45fdd3874f",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "0aca6715-0d02-4994-9bf2-a1e7896da3e8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6731273c-43b5-4a06-a65e-a4e1af196000",
        "cursor": {
          "ref": "75605531-f4be-40c6-a92c-8f43de662d04",
          "length": 282,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "961b0f03-b5ba-432a-8ea9-db08206eeace"
        },
        "item": {
          "id": "6731273c-43b5-4a06-a65e-a4e1af196000",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "1fb8022b-74ba-418e-9519-6dcb4b1f3daf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e595cd3a-22f7-4202-9ee4-07ad14b0ac27",
        "cursor": {
          "ref": "a73b2c5d-92f9-4996-8bda-ffc5eff0931f",
          "length": 282,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "a3f5893d-0fe2-4b40-b405-dea288b497b7"
        },
        "item": {
          "id": "e595cd3a-22f7-4202-9ee4-07ad14b0ac27",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "e1793e4c-5b07-4f5a-839c-1331685831b5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ae6d8c5-25cc-4220-aaf0-d56424cd26e5",
        "cursor": {
          "ref": "08a97347-ee86-4801-ab21-e6b89c6e34d3",
          "length": 282,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "a43bab72-7ef7-4693-bb7f-6f99e1118f33"
        },
        "item": {
          "id": "8ae6d8c5-25cc-4220-aaf0-d56424cd26e5",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "b469cad3-14c6-4c55-a3b8-c41c8b7926be",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e3cd3c36-e596-47b0-968c-c3d5c2c4fbc2",
        "cursor": {
          "ref": "30eacc2d-2055-4761-b937-d89290d8e86e",
          "length": 282,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "1fd0bd26-71fb-4b45-9484-fda7fdf80cfb"
        },
        "item": {
          "id": "e3cd3c36-e596-47b0-968c-c3d5c2c4fbc2",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "cbe3e13d-0688-4ac3-8dd4-621aad3b6094",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "92dfaf05-afed-45d6-993a-c93cf0b2b3a6",
        "cursor": {
          "ref": "a5422349-189a-492e-b2ed-ea3d8012d65f",
          "length": 282,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "894824ca-9747-4eb6-945a-4eb114ef5bb6"
        },
        "item": {
          "id": "92dfaf05-afed-45d6-993a-c93cf0b2b3a6",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "2f3165b2-184b-439c-a209-54b016fca6f3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "64fbc43d-8133-4a45-a056-6c84fe0cafcd",
        "cursor": {
          "ref": "b31f13b6-5640-4b5e-a5bb-90d843026341",
          "length": 282,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "4e844275-8e23-4dee-9ec5-b2fdc0b246aa"
        },
        "item": {
          "id": "64fbc43d-8133-4a45-a056-6c84fe0cafcd",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "e89e1456-485c-4f6d-9b82-b44ff6e29c7c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0ba3e133-03d9-4943-bb00-8f7a2cbac4d3",
        "cursor": {
          "ref": "44f8d28f-997f-434f-98ed-159f1f3a611c",
          "length": 282,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "fd2ed17c-3070-4ab1-b711-e3567f4f7313"
        },
        "item": {
          "id": "0ba3e133-03d9-4943-bb00-8f7a2cbac4d3",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "4a5f39f5-f44a-4abd-ac34-ee76652c3ed2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2cc0400f-4722-493f-a45f-bf1104794e7e",
        "cursor": {
          "ref": "6f7c3a39-b737-4f07-9796-3b2b5b089601",
          "length": 282,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "38329704-23b9-481b-a35d-24b4a90ef90a"
        },
        "item": {
          "id": "2cc0400f-4722-493f-a45f-bf1104794e7e",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "2ebda30e-d486-4f70-9bd9-79de0e2f2970",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "15ac6584-948b-4c05-a006-becc436f590f",
        "cursor": {
          "ref": "254ec944-0f11-46c0-95b7-b482694b56ea",
          "length": 282,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "acec6b3b-4609-4f76-8b8d-07831674b63b"
        },
        "item": {
          "id": "15ac6584-948b-4c05-a006-becc436f590f",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "d1315889-8cee-4430-9443-458810070504",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "34c85638-5a9c-4730-9d74-b990c799e5af",
        "cursor": {
          "ref": "a04da318-6b89-461e-83a7-210c916083a2",
          "length": 282,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "dfc98370-3f0d-4c23-a489-b978d28bd96d"
        },
        "item": {
          "id": "34c85638-5a9c-4730-9d74-b990c799e5af",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "8da97d9b-99dd-4a90-9411-ccd5d65baec2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "557d6ce5-31a0-4cbc-a862-a4a26a566d26",
        "cursor": {
          "ref": "20805b9c-02f9-41e4-91b5-5aa1ae97b30c",
          "length": 282,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "5a189094-924a-4324-8c47-e13947860751"
        },
        "item": {
          "id": "557d6ce5-31a0-4cbc-a862-a4a26a566d26",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "c2381766-802c-4ee6-934e-615ad2f9bd35",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0432efd4-518f-4239-a7c6-7f0f18d837fa",
        "cursor": {
          "ref": "62405416-babb-4f94-a8c3-d233ad5d92f0",
          "length": 282,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "d36d0ce6-5569-4747-935a-ae7504650f7d"
        },
        "item": {
          "id": "0432efd4-518f-4239-a7c6-7f0f18d837fa",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "9b64a9d6-a8eb-4a7e-a364-11055ec2bfb7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 219,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "30f23c49-96c5-4969-9bfd-9a5e06d9c051",
        "cursor": {
          "ref": "413cf673-6be6-4111-91d5-395a1a71347b",
          "length": 282,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "a87f6b46-7e06-47ae-9ffe-cac76f6f6d70"
        },
        "item": {
          "id": "30f23c49-96c5-4969-9bfd-9a5e06d9c051",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "df565535-1e7f-468f-93e4-07b3c570b0a0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc109caf-5c00-4bd0-9cc7-f9f695b753bc",
        "cursor": {
          "ref": "fa168173-2f55-40be-85b7-8a0b40b43ecf",
          "length": 282,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "19709423-3930-4fc9-9969-4793c9ec6925"
        },
        "item": {
          "id": "fc109caf-5c00-4bd0-9cc7-f9f695b753bc",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "4fb9ac63-1d67-40c4-997d-b5e85a987f95",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2b7bfcf0-7b6d-4f4a-9250-da6ca4e4d6fa",
        "cursor": {
          "ref": "22c2a442-c056-453a-a711-984c6e304a23",
          "length": 282,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "7bb77ccb-8559-412e-8cd1-289c05998e57"
        },
        "item": {
          "id": "2b7bfcf0-7b6d-4f4a-9250-da6ca4e4d6fa",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "8b272c2f-5eb1-4366-a6db-de2e510db6c3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6caf0782-efd2-4e52-a099-f08205c20209",
        "cursor": {
          "ref": "56543227-6bdc-4e74-971a-3dea4ec10215",
          "length": 282,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "e28321e8-202e-482e-9f16-bbdd3250c43c"
        },
        "item": {
          "id": "6caf0782-efd2-4e52-a099-f08205c20209",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "d622a6cb-7267-404d-8c17-f666dffb93fd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fa016e20-e09a-4086-af76-86819c6cf46e",
        "cursor": {
          "ref": "a33c072a-ed79-4173-8ccb-aba49c3653f4",
          "length": 282,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "be4c0427-2ea5-47b9-8000-4dc16817d160"
        },
        "item": {
          "id": "fa016e20-e09a-4086-af76-86819c6cf46e",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "6907136d-e5d0-43b6-9b14-14e06892ff9c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cd49eaf9-6c93-46b3-8e5b-3a8f10f2dbb2",
        "cursor": {
          "ref": "1b89dbad-b541-429c-8b36-efe38bd3140d",
          "length": 282,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "ddbbf917-0929-4453-b2e0-8d1bc0b5a1bd"
        },
        "item": {
          "id": "cd49eaf9-6c93-46b3-8e5b-3a8f10f2dbb2",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "ded3b0db-2957-496e-b2fc-4e4f2d1024fb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "00febd99-c00d-4130-9a81-40cfc0210218",
        "cursor": {
          "ref": "ea312330-34e0-4894-91e5-329106479ad9",
          "length": 282,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "f13f90a0-14c3-4ba8-b0ad-24917b54cc81"
        },
        "item": {
          "id": "00febd99-c00d-4130-9a81-40cfc0210218",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "83bd4f85-724e-4e1c-a943-efecacac8e97",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0fae3570-689c-4073-acdd-c02515ef4796",
        "cursor": {
          "ref": "eb69d5be-5290-4b50-9333-2e43c3fa6fa6",
          "length": 282,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "34f1c8e5-253a-4f24-bff3-4d7815b93dc1"
        },
        "item": {
          "id": "0fae3570-689c-4073-acdd-c02515ef4796",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "66268fee-4278-470a-b40b-b32457a262d3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "36f43236-004d-47ce-831f-929341c87162",
        "cursor": {
          "ref": "03f86c19-c249-423a-9db1-e4bad6c1888d",
          "length": 282,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "9365b59a-a28e-4b19-b980-9168ebba8784"
        },
        "item": {
          "id": "36f43236-004d-47ce-831f-929341c87162",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "a63efc23-364e-4de9-8ca8-c4696beecf24",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9693dc1c-031f-4188-9787-e0a2530a19ca",
        "cursor": {
          "ref": "e82a5a5f-bf25-42cd-b3ab-720ce467fafa",
          "length": 282,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "c41e4867-3ad4-4645-bf69-35bfe1b63c92"
        },
        "item": {
          "id": "9693dc1c-031f-4188-9787-e0a2530a19ca",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "cc0f06de-e346-4168-bbd2-8d2a3fada2d7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2de99f9c-eb94-4394-ae68-a77ff014f9fe",
        "cursor": {
          "ref": "65437d0b-b9dc-4736-afd3-38414f2c50b6",
          "length": 282,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "a6f22c60-239c-4417-b07d-fefe4bd945d0"
        },
        "item": {
          "id": "2de99f9c-eb94-4394-ae68-a77ff014f9fe",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "a1b8bfbe-6909-4392-9f74-eb41ad7416ff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3903fdca-817e-47d8-866c-c78ee8ba57d3",
        "cursor": {
          "ref": "be1662c8-9378-4121-a8b5-582b27d35891",
          "length": 282,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "8640d507-6c04-488a-9966-b3af2497bd19"
        },
        "item": {
          "id": "3903fdca-817e-47d8-866c-c78ee8ba57d3",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "d124fe66-9259-44fb-a4e9-ae462b0aa72d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "34745e6b-a7af-4ea2-af76-ea12bb174247",
        "cursor": {
          "ref": "a6ebdf4a-087b-4b33-9460-d7f4cf101175",
          "length": 282,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "c888c570-b6b0-4c56-9f4e-cdd899fcd05b"
        },
        "item": {
          "id": "34745e6b-a7af-4ea2-af76-ea12bb174247",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "d80e4d44-817c-4583-9a1f-0db8d35afeb1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e32f8d78-af30-4ccd-b8c1-b0ac2fb830bf",
        "cursor": {
          "ref": "40a3a1d7-5abb-4da1-8419-76ebee6bcfbe",
          "length": 282,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "1e6d1f7f-21a6-4dec-bce2-d3efe7a5a9b7"
        },
        "item": {
          "id": "e32f8d78-af30-4ccd-b8c1-b0ac2fb830bf",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "c1f98dff-32c1-44ab-843a-90777b58eb1d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d0ea0202-1a9d-4f3f-9402-782e05193f65",
        "cursor": {
          "ref": "8c7fb3d3-60c3-4ed3-8fec-0e3da1f4e3a7",
          "length": 282,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "89d741af-2a6a-4b5c-a367-9f6ad5ba5d3d"
        },
        "item": {
          "id": "d0ea0202-1a9d-4f3f-9402-782e05193f65",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "94d1e86e-3355-4a8c-9af9-fa98b80bac77",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "08c0f743-4a9c-40c7-ade6-dcfecda08487",
        "cursor": {
          "ref": "e3b14176-e607-421e-abc4-526b7abb4f55",
          "length": 282,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "ad0f592a-d704-4c46-8d63-ebb7342991e4"
        },
        "item": {
          "id": "08c0f743-4a9c-40c7-ade6-dcfecda08487",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "2bbe6ead-e944-486e-8c91-3dcf7f93e872",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1eabfa48-fe5c-4989-9c7c-698fb573a205",
        "cursor": {
          "ref": "bb7d357b-1af4-48b3-81cf-9820379409a2",
          "length": 282,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "d3da3e97-7c90-49b2-b4d0-54c7e269aa6c"
        },
        "item": {
          "id": "1eabfa48-fe5c-4989-9c7c-698fb573a205",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "5fa745e0-a9a7-4c46-83e7-af04622d3555",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "74b4b96d-7923-41a1-81f9-bce08ec11572",
        "cursor": {
          "ref": "51cba38d-62ae-45bd-9370-6a99a2af1145",
          "length": 282,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "d9662334-5892-47f6-9139-c2aa64a6388a"
        },
        "item": {
          "id": "74b4b96d-7923-41a1-81f9-bce08ec11572",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "46bd7776-103a-4798-8a7e-df2be50665f5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6aea739b-6641-4c57-9868-c76324b79469",
        "cursor": {
          "ref": "deea8c59-2308-4b51-97bf-f9b7972bfdbe",
          "length": 282,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "892f8746-d440-4cb7-9542-dd65a3588bb4"
        },
        "item": {
          "id": "6aea739b-6641-4c57-9868-c76324b79469",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "e21bc8c2-df4c-4a40-bc4e-e558b218e879",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0aeaf995-b827-4702-af09-7302f024ce1f",
        "cursor": {
          "ref": "34a882b0-e651-4e9c-b6f7-aedfca96965c",
          "length": 282,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "a759428d-7907-4dda-8269-66b7783ec4e5"
        },
        "item": {
          "id": "0aeaf995-b827-4702-af09-7302f024ce1f",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "31696074-7cda-447b-bd8b-443a9559c559",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3f3dfd31-023d-41be-98f1-324b9979d4d4",
        "cursor": {
          "ref": "0760e9f0-f43e-43c2-be79-9683bd2919fc",
          "length": 282,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "86323565-2e3d-4934-8c0b-0145e4549cad"
        },
        "item": {
          "id": "3f3dfd31-023d-41be-98f1-324b9979d4d4",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "773a4de9-8ebd-4a78-bbef-12271d1d5554",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d496d0df-9623-48d7-9cdf-e81a449ced3e",
        "cursor": {
          "ref": "5efb194e-fa7a-4f34-a014-c8c845796268",
          "length": 282,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "44c281a7-2398-40ae-bc51-4310f5cad4f5"
        },
        "item": {
          "id": "d496d0df-9623-48d7-9cdf-e81a449ced3e",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "db0826e0-0ffd-4727-8d74-469458a5c03c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c1b8ff0f-6141-4a46-bf6e-cf3725f219df",
        "cursor": {
          "ref": "7fd40f98-8ad8-49b9-9669-e752b2de5308",
          "length": 282,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "d17a8dff-cab7-4ab5-9fe9-8e6d1c9603ac"
        },
        "item": {
          "id": "c1b8ff0f-6141-4a46-bf6e-cf3725f219df",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "3cb83121-e79b-4b00-ad71-921a62dcad6a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "13f58504-a144-4e51-90cf-817ee93f86ee",
        "cursor": {
          "ref": "071e74c4-0a9e-4955-aae2-1cd9e6b39278",
          "length": 282,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "04244424-aa1f-4301-98e4-c2d12728a6df"
        },
        "item": {
          "id": "13f58504-a144-4e51-90cf-817ee93f86ee",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "ff01bc8a-6a5d-419f-bf65-82cea7744a9c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "69bd4c54-a60c-413f-bc72-c161cc5f23a7",
        "cursor": {
          "ref": "eef94be2-f48c-459d-a867-6c454ef1074f",
          "length": 282,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "c9cead0e-6ea3-4743-8e2b-ba677a8fdb5e"
        },
        "item": {
          "id": "69bd4c54-a60c-413f-bc72-c161cc5f23a7",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "9ca9d7e4-f281-47e3-b8bb-42e653cbfe91",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9fa0af68-83d1-4438-830a-7b5afb04ea7a",
        "cursor": {
          "ref": "f5abc801-b692-4da9-a84e-1062fda9df15",
          "length": 282,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "1db327a8-25be-4252-adfd-33c5786f0725"
        },
        "item": {
          "id": "9fa0af68-83d1-4438-830a-7b5afb04ea7a",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "a8e02889-ef4e-417f-a717-dfa04c8ed1f8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "04cd5b52-beb2-416b-b368-3a85e582e835",
        "cursor": {
          "ref": "0e5beaeb-814e-4e6c-8752-334324e4647a",
          "length": 282,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "22533424-69db-4050-a56e-cc662ce430f6"
        },
        "item": {
          "id": "04cd5b52-beb2-416b-b368-3a85e582e835",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "364706fc-5aea-4e52-8ed1-ee30eb6f1b23",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cf536398-7294-48ee-9e85-63455cdc7e42",
        "cursor": {
          "ref": "4ab58d95-600d-4713-86f5-f320ba81231e",
          "length": 282,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "6f44235d-ee1a-475c-8b5d-3edd3eb396f7"
        },
        "item": {
          "id": "cf536398-7294-48ee-9e85-63455cdc7e42",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "12e63fbb-a7c6-46a0-9f12-ab9dba0575fe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9ece9e6b-96a9-4efa-8419-67a9860cbee1",
        "cursor": {
          "ref": "06cf4c7e-0b4f-4a42-9ca6-7699e1d97460",
          "length": 282,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "acb1c89f-1a2a-4501-a9ae-c6d077e40e00"
        },
        "item": {
          "id": "9ece9e6b-96a9-4efa-8419-67a9860cbee1",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "93c33abd-14ad-43d8-ba3f-a0e583e458f6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "523b83dc-88df-4c4d-972b-a60773a119ad",
        "cursor": {
          "ref": "678d9e46-8495-4cac-a5b3-e4f0aa17da51",
          "length": 282,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "92fc149f-437c-4275-be27-777f36f13440"
        },
        "item": {
          "id": "523b83dc-88df-4c4d-972b-a60773a119ad",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "1ca6046f-441f-4d9b-949f-179bd50d1556",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "98d72526-338a-4cac-85aa-58a0774af9f7",
        "cursor": {
          "ref": "2e9b39be-76fb-408c-9d9f-426035bb63b4",
          "length": 282,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "17d03f5f-d780-49ca-b446-841e626d3e54"
        },
        "item": {
          "id": "98d72526-338a-4cac-85aa-58a0774af9f7",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "1dafe514-a42f-408d-b259-13bcb33361e1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "33075330-6c66-4256-b378-27c955cbe1f1",
        "cursor": {
          "ref": "3aca2a75-ec46-45a7-9467-bc92e45d7f36",
          "length": 282,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "5ffdfef0-cca5-4570-a61b-cbdc7895e3cc"
        },
        "item": {
          "id": "33075330-6c66-4256-b378-27c955cbe1f1",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "9da8fe18-9b53-4742-a1aa-015e3ea5549b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "90668e24-1f65-42ee-9796-9091174e8d30",
        "cursor": {
          "ref": "ba02784b-5a72-4cb4-bd35-b53132a0217d",
          "length": 282,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "7264eae7-e23f-441a-89ee-12e6645b3c22"
        },
        "item": {
          "id": "90668e24-1f65-42ee-9796-9091174e8d30",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "e288c828-d95d-4a92-b949-fdbb2fa5a26c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "60348930-1ed3-40e5-abe1-e231858989c1",
        "cursor": {
          "ref": "400dc60c-7be7-4690-8460-a4633d9135bd",
          "length": 282,
          "cycles": 1,
          "position": 251,
          "iteration": 0,
          "httpRequestId": "f64f7f86-8570-46f8-aa76-e272b1c97c66"
        },
        "item": {
          "id": "60348930-1ed3-40e5-abe1-e231858989c1",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "f03ffcbe-be01-4586-a786-92c2c12f9f0e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a2716646-eda9-4d45-9952-d6542f9f73aa",
        "cursor": {
          "ref": "11aab845-25a1-473e-b746-52d38730e580",
          "length": 282,
          "cycles": 1,
          "position": 252,
          "iteration": 0,
          "httpRequestId": "753c1d54-6817-4ac4-aced-10374990aa01"
        },
        "item": {
          "id": "a2716646-eda9-4d45-9952-d6542f9f73aa",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "69295d62-b26c-47da-9fe8-e3c8f77cc7b4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "808ae60a-2c2e-4dad-b981-f8fb672e4363",
        "cursor": {
          "ref": "560cf143-e7a2-4dab-80da-d4659d783cc9",
          "length": 282,
          "cycles": 1,
          "position": 253,
          "iteration": 0,
          "httpRequestId": "b295d935-461f-451c-99cb-4786e1d7c4ee"
        },
        "item": {
          "id": "808ae60a-2c2e-4dad-b981-f8fb672e4363",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "2e6a1bae-8f17-429d-86a4-e57db6557c36",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e5ef3994-dda7-46b8-828c-be4d49a3df05",
        "cursor": {
          "ref": "2a5f7ffe-e736-4fd5-bb83-d52d0bb821c9",
          "length": 282,
          "cycles": 1,
          "position": 254,
          "iteration": 0,
          "httpRequestId": "87119816-8762-4375-b34e-3be68a235a9c"
        },
        "item": {
          "id": "e5ef3994-dda7-46b8-828c-be4d49a3df05",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "53f4be59-5bfa-456e-a612-3b4f42a930f5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9b76b9dc-2035-4e9a-9638-451f05dbf877",
        "cursor": {
          "ref": "8294e591-c81b-4d88-9875-23db7e25b802",
          "length": 282,
          "cycles": 1,
          "position": 255,
          "iteration": 0,
          "httpRequestId": "7a90992f-425a-45f1-99b1-c13b2efdcd26"
        },
        "item": {
          "id": "9b76b9dc-2035-4e9a-9638-451f05dbf877",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "70eb51b8-778e-4457-9948-433373b8a06d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f28f0a8a-3939-422b-9b8d-0293b9dfde3a",
        "cursor": {
          "ref": "658f4538-4bab-452c-9964-2a2a3d8926b1",
          "length": 282,
          "cycles": 1,
          "position": 256,
          "iteration": 0,
          "httpRequestId": "57b65152-f68a-416d-9d21-309fbd70a744"
        },
        "item": {
          "id": "f28f0a8a-3939-422b-9b8d-0293b9dfde3a",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "48684904-e22e-417b-a44d-25f7f378df60",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "38d2039e-621f-4455-bf16-bb7c5311e94e",
        "cursor": {
          "ref": "1e9fcb05-2b31-43dd-a36b-a8bce60fb1af",
          "length": 282,
          "cycles": 1,
          "position": 257,
          "iteration": 0,
          "httpRequestId": "bb8ff2d8-9b98-4717-806d-6726d913451b"
        },
        "item": {
          "id": "38d2039e-621f-4455-bf16-bb7c5311e94e",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "5a62e9fc-0425-4b28-9954-bf8f8ef99dcc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7306098b-e9ff-4860-aee6-4e09a7211dba",
        "cursor": {
          "ref": "23fea3f4-e62a-4fa6-8b5c-999648cd502a",
          "length": 282,
          "cycles": 1,
          "position": 258,
          "iteration": 0,
          "httpRequestId": "676d5f54-1348-41f6-a051-4eef5287f50e"
        },
        "item": {
          "id": "7306098b-e9ff-4860-aee6-4e09a7211dba",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "cd564271-e545-4f50-b953-c2c977136105",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "431e8ed7-8a00-44b1-97ac-d39e668a340b",
        "cursor": {
          "ref": "60cff0e2-3615-47e3-a525-2ef7aadc0902",
          "length": 282,
          "cycles": 1,
          "position": 259,
          "iteration": 0,
          "httpRequestId": "775a04fc-b908-4d20-ab0e-676c358e2691"
        },
        "item": {
          "id": "431e8ed7-8a00-44b1-97ac-d39e668a340b",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "a328cf0c-7e3f-460e-b839-ffb2609550f7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "064860de-98a5-4dca-8cfe-f1e2fc714c46",
        "cursor": {
          "ref": "270966c7-051b-4690-a8bc-b425abdbb3f2",
          "length": 282,
          "cycles": 1,
          "position": 260,
          "iteration": 0,
          "httpRequestId": "f10a21d1-9e43-4419-a973-4296ca10d91a"
        },
        "item": {
          "id": "064860de-98a5-4dca-8cfe-f1e2fc714c46",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "11113416-8ebb-4e4d-b651-f6b4d967480d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "17f5a84f-7944-4bdd-b583-75a96cc82661",
        "cursor": {
          "ref": "435c2cb0-251f-40a0-8f16-fa1b2477f73a",
          "length": 282,
          "cycles": 1,
          "position": 261,
          "iteration": 0,
          "httpRequestId": "379b4846-67d9-448e-962b-f68a84014c82"
        },
        "item": {
          "id": "17f5a84f-7944-4bdd-b583-75a96cc82661",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "0606897b-41dc-456d-9c6e-674f918f7e4b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cf8c7500-d830-4d6a-9054-7cd2bbdb0318",
        "cursor": {
          "ref": "38016961-2790-4bad-bd43-61b1f5bc58f4",
          "length": 282,
          "cycles": 1,
          "position": 262,
          "iteration": 0,
          "httpRequestId": "fbbc94da-822b-4988-9894-f62f0f80c553"
        },
        "item": {
          "id": "cf8c7500-d830-4d6a-9054-7cd2bbdb0318",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "532cc89f-f52b-4a14-813f-9412a2a9018e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e26796ec-61bf-4c82-8240-fff535fa3492",
        "cursor": {
          "ref": "a310deec-9d70-4965-b8df-8a6c30cbaa20",
          "length": 282,
          "cycles": 1,
          "position": 263,
          "iteration": 0,
          "httpRequestId": "cad1156c-33e4-42f0-8da1-ecf390f9514f"
        },
        "item": {
          "id": "e26796ec-61bf-4c82-8240-fff535fa3492",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "8cad5bc2-305b-4731-8e2c-b5be611509d6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9548a7f9-cb07-4f03-ae6f-130e85ab51b0",
        "cursor": {
          "ref": "f0619c13-f958-459d-9f13-ddd5d568e18c",
          "length": 282,
          "cycles": 1,
          "position": 264,
          "iteration": 0,
          "httpRequestId": "3406cc1c-d6b9-41fb-a58b-8c6512777279"
        },
        "item": {
          "id": "9548a7f9-cb07-4f03-ae6f-130e85ab51b0",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "679ae130-3a3c-4095-9191-7eae08547c33",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9686090b-548f-43f3-a372-797ec0b58c0d",
        "cursor": {
          "ref": "42c512a7-01fb-489c-9c37-fd4e16fb9b07",
          "length": 282,
          "cycles": 1,
          "position": 265,
          "iteration": 0,
          "httpRequestId": "d2e63605-da42-4875-90d7-3b03ebfca317"
        },
        "item": {
          "id": "9686090b-548f-43f3-a372-797ec0b58c0d",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "5c93b5d7-759f-4024-87a4-f87582549241",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1de4b770-76e0-414c-8b99-a43e4d804920",
        "cursor": {
          "ref": "ac19e973-3a76-4e8c-8701-54306be0732e",
          "length": 282,
          "cycles": 1,
          "position": 266,
          "iteration": 0,
          "httpRequestId": "64e48343-157f-41ca-a2a5-46c93f210c48"
        },
        "item": {
          "id": "1de4b770-76e0-414c-8b99-a43e4d804920",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "c6a5d18c-930b-4e14-94db-fc4c34c2c05b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0f410583-a8b0-4d00-94e0-6d1938183f91",
        "cursor": {
          "ref": "eda651bc-2011-4594-aa8a-0158f012e827",
          "length": 282,
          "cycles": 1,
          "position": 267,
          "iteration": 0,
          "httpRequestId": "dd36df58-411a-4e2d-aece-b83a87cafb2b"
        },
        "item": {
          "id": "0f410583-a8b0-4d00-94e0-6d1938183f91",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "a1cd1341-7b49-49c4-a4ef-bb79caebdedd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b4c07168-9fbe-4d93-b807-fb5140bcee9a",
        "cursor": {
          "ref": "91a53646-52b1-4090-ab36-b36d9309fa39",
          "length": 282,
          "cycles": 1,
          "position": 268,
          "iteration": 0,
          "httpRequestId": "794c7c69-81f6-4ea9-92a5-cfc305a50d00"
        },
        "item": {
          "id": "b4c07168-9fbe-4d93-b807-fb5140bcee9a",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "ef738f25-86e7-4c46-80f7-42c8287fda81",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2095d803-3c42-4856-8f88-953af591e3cd",
        "cursor": {
          "ref": "f5df9755-fbc3-4434-aa9f-e712608b3713",
          "length": 282,
          "cycles": 1,
          "position": 269,
          "iteration": 0,
          "httpRequestId": "3ed2ee6a-b46c-4177-bc79-d0fa2a3eb187"
        },
        "item": {
          "id": "2095d803-3c42-4856-8f88-953af591e3cd",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "37756e74-bb49-49fa-9e85-985b0049f2bb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6aaab22d-a713-4072-8c35-5966d9d6bc8a",
        "cursor": {
          "ref": "56d6dc38-fa78-45c1-aaa9-140a011c0ae8",
          "length": 282,
          "cycles": 1,
          "position": 270,
          "iteration": 0,
          "httpRequestId": "d369f12d-4599-4fc4-98db-ac6f0dc320f3"
        },
        "item": {
          "id": "6aaab22d-a713-4072-8c35-5966d9d6bc8a",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "414d9c33-c8e8-4f7a-9a17-fbb489a35943",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ced4793-7275-4ba0-bfcf-b14d44743bc4",
        "cursor": {
          "ref": "03b2f6db-1e88-4169-90da-f407e4b6292a",
          "length": 282,
          "cycles": 1,
          "position": 271,
          "iteration": 0,
          "httpRequestId": "f80dd912-89a8-48ab-a5dc-32a3a637a562"
        },
        "item": {
          "id": "5ced4793-7275-4ba0-bfcf-b14d44743bc4",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "e8e43ec7-b295-4a91-9c81-d3b331c4d715",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6808604b-ec67-475c-ad9a-0eedd68e5680",
        "cursor": {
          "ref": "66e32c54-bc9c-47f3-946d-248e680f3aae",
          "length": 282,
          "cycles": 1,
          "position": 272,
          "iteration": 0,
          "httpRequestId": "d3e10634-8bcd-4676-b94a-ada052c2e27a"
        },
        "item": {
          "id": "6808604b-ec67-475c-ad9a-0eedd68e5680",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "0109e1a1-9f66-43d0-aa6d-815d79f01449",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e8b90598-224b-49bd-81af-6c07d47354e3",
        "cursor": {
          "ref": "6d137a9f-ff8a-4985-8b2b-0a737bb3d64f",
          "length": 282,
          "cycles": 1,
          "position": 273,
          "iteration": 0,
          "httpRequestId": "d4ba7a7e-f2da-4e5b-88d4-a96948e05aea"
        },
        "item": {
          "id": "e8b90598-224b-49bd-81af-6c07d47354e3",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "b079446a-4fd7-46bd-8643-9d78d22df842",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a6e6b731-3dc5-4012-a15d-103988702ffc",
        "cursor": {
          "ref": "49bc3959-3b50-4c22-bd95-5ddb24c366a2",
          "length": 282,
          "cycles": 1,
          "position": 274,
          "iteration": 0,
          "httpRequestId": "8b5ffd84-4c06-450d-8109-aede65a886d3"
        },
        "item": {
          "id": "a6e6b731-3dc5-4012-a15d-103988702ffc",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "275f09c2-d5d2-449c-93a2-86fbc1b24dfd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a5c8cd7-b4f9-47df-b341-4f62a20c004e",
        "cursor": {
          "ref": "ab790eee-afba-4888-9f22-d87636ffa6d6",
          "length": 282,
          "cycles": 1,
          "position": 275,
          "iteration": 0,
          "httpRequestId": "04ec339d-4f80-426b-9ae2-f320cbb765ec"
        },
        "item": {
          "id": "4a5c8cd7-b4f9-47df-b341-4f62a20c004e",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "d05f6e1c-20b9-4983-a090-29b75275c634",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 27,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1dc74285-0bf4-44c0-9624-2404892f80d2",
        "cursor": {
          "ref": "7ef1f1f6-8c14-4be4-a12c-7a165698a9da",
          "length": 282,
          "cycles": 1,
          "position": 276,
          "iteration": 0,
          "httpRequestId": "88090d02-dcb9-48c0-8285-0acc9cd9319c"
        },
        "item": {
          "id": "1dc74285-0bf4-44c0-9624-2404892f80d2",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "371083f4-4063-43ee-bb01-405bfb0deb0d",
          "status": "OK",
          "code": 200,
          "responseTime": 74,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "dd48a452-d3ad-44a1-bce0-bca24e017bfd",
        "cursor": {
          "ref": "3aa7d3ca-d041-4a8c-820f-56d259063651",
          "length": 282,
          "cycles": 1,
          "position": 277,
          "iteration": 0,
          "httpRequestId": "f6328ee4-92a7-4f43-a6ac-74bc77b59e9c"
        },
        "item": {
          "id": "dd48a452-d3ad-44a1-bce0-bca24e017bfd",
          "name": "credentials_verify"
        },
        "response": {
          "id": "929f08b1-50bb-494c-a720-316f9ca822e4",
          "status": "OK",
          "code": 200,
          "responseTime": 2203,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "012f1b1a-611e-469a-a41f-5f60813116f3",
        "cursor": {
          "ref": "baf7d861-5dcf-466a-8e0b-ef07cff24898",
          "length": 282,
          "cycles": 1,
          "position": 278,
          "iteration": 0,
          "httpRequestId": "d1fb7846-1dd5-4aed-8147-fa95af5f820c"
        },
        "item": {
          "id": "012f1b1a-611e-469a-a41f-5f60813116f3",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "2b8423c9-b8e5-4e7f-8b1b-8598ad1cddc8",
          "status": "OK",
          "code": 200,
          "responseTime": 6881,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "ebf8d87e-814f-46f0-b11a-63d0456c5894",
        "cursor": {
          "ref": "32ff44e2-aed9-4934-8c08-22995c585758",
          "length": 282,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "e953aa7d-6df9-4b11-8fe0-d349b4ac5681"
        },
        "item": {
          "id": "ebf8d87e-814f-46f0-b11a-63d0456c5894",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "199dd8c5-a016-4660-9e82-3ca4ddcc36ce",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 26,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ebf8d87e-814f-46f0-b11a-63d0456c5894",
        "cursor": {
          "ref": "32ff44e2-aed9-4934-8c08-22995c585758",
          "length": 282,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "e953aa7d-6df9-4b11-8fe0-d349b4ac5681"
        },
        "item": {
          "id": "ebf8d87e-814f-46f0-b11a-63d0456c5894",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "199dd8c5-a016-4660-9e82-3ca4ddcc36ce",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 26,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a1bfccba-529e-4cd1-b977-da9517bdd87b",
        "cursor": {
          "ref": "0f90d665-9e76-4062-9429-ac9670adf57e",
          "length": 282,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "a4fe5f72-0b69-4bd7-b479-8803d8a5511a"
        },
        "item": {
          "id": "a1bfccba-529e-4cd1-b977-da9517bdd87b",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "9be94fe5-b891-4315-b6e6-51827fb577fc",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 26,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a7ce0852-1a52-4604-9448-afc534acbfdc",
        "cursor": {
          "ref": "108c5b9d-3e92-49db-ba10-930898f9cd96",
          "length": 282,
          "cycles": 1,
          "position": 281,
          "iteration": 0,
          "httpRequestId": "0f338aed-fa5d-4207-a98a-068dddf16205"
        },
        "item": {
          "id": "a7ce0852-1a52-4604-9448-afc534acbfdc",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "56b10408-7117-4600-afde-7af534d48565",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 27,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}