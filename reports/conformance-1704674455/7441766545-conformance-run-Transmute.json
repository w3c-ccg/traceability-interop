{
  "collection": {
    "info": {
      "_postman_id": "0b8a4a7f-f952-4403-a9a4-909b37b8fa24",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "b7d8a6b0-f81b-4afd-89d5-f40e3334df80",
        "name": "Clear Cache",
        "item": [
          {
            "id": "06227710-fdb6-446a-82fa-2cb50aaac5fe",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "21ecb117-9585-4fbc-9ac7-20e05cab3d83",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "5387a541-358c-4eaf-9434-37612e12ed86"
                }
              }
            ]
          },
          {
            "id": "0b3547df-0246-4b20-a055-a3f00892e2b4",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "a4a602f3-1019-499f-a556-7927259d761a",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "4485fe63-e527-4692-9ea1-3b76d014e56e"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "12ac9dec-310b-4e6f-b3ec-dd0207476c26",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "4089d11b-c83b-4232-a5eb-ca4c9c6e39bc",
            "name": "Positive Testing",
            "item": [
              {
                "id": "62d52a90-2603-46ab-ac25-874454af6224",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "d37c478c-6b29-445b-9bba-5676badfcd22",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "520dfece-5cfc-4097-b6df-0cca552d63ef"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "567d097c-f3fc-4f12-b4cd-6bf5d24422e8",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "bcbd1c8a-1783-43ed-8046-7bad03423dde"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "f04461cc-7123-4397-ae2c-a7d1f2ec1a56",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "5cce772a-7fc9-489c-a020-a6fb337bb36c"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "abe64911-10fa-4274-bc97-8c4570e1b3b7",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "b54f5844-8b0d-4042-840f-34e4d5aa6d55"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "702110b5-d75e-44f9-8db2-ba8fa626426d",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "fb03b9f8-57a3-4da9-9add-6ddf311e19ad"
            }
          }
        ]
      },
      {
        "id": "b1238b7b-cbb3-40cc-9e7e-cf7b2de1791a",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "89c16734-94df-480d-8e93-2163b43fc2da",
            "name": "Negative Testing",
            "item": [
              {
                "id": "0d9fa52d-ade1-4b0f-bf11-85dcaed0d4bb",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "07d41be0-a431-4967-ad3b-0cf228100143",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cef23489-5212-4c26-be37-588d29d6a744",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "17434382-8fce-45d6-8ba5-05139406400d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1e7d9518-6e39-4fc2-a339-c683c846b4d1",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e614523-19fb-4271-ae1d-b725fece7ead",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "5a41c60a-6d73-4e8e-8f96-8d1a32f27b12"
                        }
                      }
                    ]
                  },
                  {
                    "id": "46dc9302-84e8-425a-929f-29a03d1f0dbb",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dbc33793-6eb3-4ef9-bbeb-d7c40092095c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "1921f73d-d565-4773-a978-55f0c314065f"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "c89a8d81-8233-4666-9593-d838a4546b22",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "8e776354-38e0-4db7-a379-3e6469d5ae80",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3b514fe2-3202-4f67-8622-3bf39452eca7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "cbf77af8-79f0-4ea3-b787-34b507a8ac4d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dbfa3f62-d8bd-470f-9332-2fa5ece10d2b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c01c4b23-0738-4f4d-9bfd-e3501890e067"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "6d7e7aaf-1faa-44f4-9983-d562ac69c69f",
            "name": "Positive Testing",
            "item": [
              {
                "id": "6d94d122-c314-4d23-b603-8ae7c0274a7a",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "727d4b16-a621-4e9f-826b-904551caced8",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "6724757e-fd37-4354-87f4-cddd7f833a5e"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "a9b95708-7686-4d87-943e-23ab8d936f4a",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "44821dc3-d056-4c59-8b76-8ae6da235cfa"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "90454688-7a76-4abb-9bd0-3878d7c253c2",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "f40cdf2f-5478-4971-9d19-749bf0505bef"
            }
          }
        ]
      },
      {
        "id": "87533dff-295b-4709-ba35-03640828e43a",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "c40345cd-596a-40a9-9d0c-4b5458b4b35a",
            "name": "Negative Testing",
            "item": [
              {
                "id": "7f1c8bd7-c4c4-4840-b8b8-da83075ddbdf",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "42bf5c3d-9321-443f-a989-28ccd982bc5b",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8825becd-33db-4ce5-b492-c7dc2e94fc5a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5bc6a273-9bbf-4154-a94f-43ce3b3306a8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "626134f7-5da6-4914-a62f-868f0994b871",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "29d20e4a-5ef9-4339-9c1f-99b4854b268a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f5e4aacc-9b0d-447a-af19-1d0e467876b8",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fdf0ed84-e8f7-4953-9cf0-6f2d819a9080",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7bc7b479-07fb-4a6a-b788-eb958b1c4826"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3cc31f91-debb-4c16-abf3-94bf10b5b556",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ebcb75b0-625a-47d6-a96f-07c02828fa05"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7da45f24-7f8e-4e2b-a6c5-deac81e11fba",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9f4d67e1-39cd-486c-a65a-f32c1109e7a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1580e827-b72a-4b1c-94a4-5047f9eefda9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fc3983f3-d749-47b6-8efa-d5e4875c9585",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "0456233f-5f3c-479d-8499-34066fce5896"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f25c24c3-36c8-4f3f-a9e4-cb3ef3fe9c01",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a598d8e8-96ca-4baf-a68a-303ebc7eb441",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "83b59702-ee1a-4580-97c1-820c9bf98874"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "62c4fbc8-fc2b-49cf-b063-14ace2b18f87",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "9848d7a9-49d7-4df5-9d5e-d7182ea4f1cf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "422dadf6-968c-4c0d-8782-2fa8c8bedcc6",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9f7e2b78-e680-49e8-90a4-f05cc659a788",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6b330403-8984-44d5-8d01-d1e442b1aa47"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c50dc5bb-5e43-4ed5-a826-800cbdae0227",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "2b657a65-e3c6-42bb-ac07-d9feaba7b464"
                        }
                      }
                    ]
                  },
                  {
                    "id": "96304e2f-f353-4ac6-97cd-b3da903c2df6",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "69312fe8-3514-4a54-990b-8def2d018c90",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e352f7d9-91d7-4bcb-9ec2-02d6987727b0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a3805c07-d11f-46d3-bdc3-e75d68e815e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "7a991099-1c92-4c33-a422-df78c502316a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5c93c57e-4bcf-438e-a7fc-174f56b40a71",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dbf4948c-1e3a-46a1-9e88-47b6648d3f5c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "10188fb6-19ae-4747-8170-e742a1eb173c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ab0f5093-4e3e-4664-8216-5dcd02fbbf59",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "cfd8a101-c7fa-4966-84b7-cd76d359aad5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3eee1154-4ad1-4b2d-9348-60d784a7c739",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a9f425b1-931c-4e86-bf3f-3aa79db3c658",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "57a69b77-fc5e-43c4-95f7-0a31da43e8d3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "abe24ea5-c4b4-479d-a0aa-716da17df959",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "5a3a280c-3df9-43e3-9f26-503e8c8072fd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c8eab1b5-42e6-4305-8343-598478c7d73b",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5cbeee86-26ac-480b-87e2-8c22a33753b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f7298b99-cd4e-4aa9-9e11-8f659f2050f6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "54e4fc4a-19c5-466b-92ea-5734e0d14042",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "631a256b-794b-458c-b40a-27a5b9dd0592"
                        }
                      }
                    ]
                  },
                  {
                    "id": "200e39d8-08c7-44c2-9569-b21e3634d289",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7d6b436a-6eec-4b65-8451-fa739b31d7bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5da723b5-d38a-420b-aa94-b16edbc5018d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "61ad4a59-2f94-4233-9286-9475f68befaf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "76216265-ea31-4008-9224-1a33964b922f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "02fc92ac-53b7-4dba-8287-ff177926824d",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4edbd849-56d2-4adc-9410-d52f9c4994c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d83b04d7-5b11-489f-b440-598f22c38048"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c1224f46-2526-43f4-af02-7b0e451f99c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "97f3303f-a271-452e-b026-ec74959c2314"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3a5aa3a3-881f-4f69-89d1-098524f666c9",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2d724938-fcb5-45d4-ac2b-e05926ad84e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bf95989b-c687-4ba2-a869-98ef7da8930c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fb96a0c5-e4a6-4c29-8876-0384905bab5f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ffd3b555-d721-4867-bf0e-867d8fe4ce8a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "76fef29e-a01f-4290-9eac-07fb489794da",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7224c0a9-8516-4280-a411-49509afbece0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c65c01e0-21f2-4eec-878b-48c148157c1d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "df9685e5-ce77-462a-912f-f90c8e4fcad5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e6d973ba-c6e7-4cb0-a59c-bc7f55e5347d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8b622c61-9fa2-43dc-98a9-a022bb2c1052",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2bbc608d-a8ce-45ae-8e7f-9b33ecb3d411",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bc3a76d4-6e87-4cc1-8f10-195bc5a9dd4e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5ceb70c4-cd91-4aa2-bbbb-bb7e1b0435ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "5c8a21e4-5ef1-4a3b-9d7d-6eb5a7f86842"
                        }
                      }
                    ]
                  },
                  {
                    "id": "49c3a4bf-37be-492f-a3c9-32da738d7e2c",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "644e2d88-89ae-4a60-aa10-031bcc06a09a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f4c9fe33-8038-45d9-b186-6cf250bc76d5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1ca10baf-a7ed-4b55-b2b5-0c943ffe7274",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "2abb8357-6527-4ef7-8461-915c192197e8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c636d730-1291-4b14-a7c4-dcea3d09f423",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "101e055d-6c08-4746-bb26-e44092dccb08",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "49fb39e6-fd87-446b-b370-e2c82ffe6814"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1b089f95-55c8-4acd-9510-8e148971a199",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "fcca83fb-bac6-4a00-b080-cb6cb92d8cc4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "704802b3-29a3-4df1-8d87-34c8727d70aa",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "280f6ae4-df65-4228-8bd8-c5ef71b6bc89",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "67ec2280-15a8-40c1-81b8-51e27e109e84"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "19dc979f-56dc-4d9d-bf5a-7afd0fb93120",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "3acf9782-a536-49f5-b7a7-674c3a179625"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c1d963ab-c00a-4e4c-bae8-9b0b8663986e",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f348d233-0dcd-463a-9bcd-f849236b791f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e0832ea1-6acb-41e9-a7a4-9481b8f2e09f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b5fa0f00-4eed-4c65-b80e-3e855996e029",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "3b06945d-667e-4a70-9a5f-753070de64a3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ed078091-53f9-4b23-ba22-8861f826e6fd",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "51f08f9b-b4a8-48d7-a1ec-82b3bf133a55",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6ea0913c-926e-4128-b4f2-dbe95a0f9c9c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c694c27a-2270-41ca-948f-fad4656e7a8c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "5bf26b49-2f0c-48cb-854e-0e4eb7c1e88e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "56e880a3-09f1-4d4e-b37e-fee166184d3b",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "69f54c75-0e7b-4d2c-8011-e0c07b6775fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "82e94743-c29c-461b-82dd-63ad0f35c6bb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fd4b0ed1-c1ed-434b-a37a-7b596e7ba898",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "25102c94-c981-4eb9-82c6-6637fb492fda"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f913651e-faa3-4440-b98d-3368071010fc",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "16f3cffd-7823-4987-8544-e995f5203d7f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d0708c57-ae0e-41a7-bf0e-4a7c59aae413"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a9b65ccd-9c54-4c62-8d9e-9b78e2cae26e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "a8d2ee49-5229-4ce8-8e4e-202223467a32"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6e680f0e-c8f2-40fb-ad83-ef67a5a35aa3",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "abec5459-6a55-41d0-8631-21d319a99877",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d6da793c-fd71-49f2-9582-133d8e58635c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4bf4225d-8a5d-4136-a872-f39198dde3d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "6b3df938-1f8e-4dd4-b1be-43c2fa70ab41"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d6298aea-b424-42cb-96c0-a2e4bb117cc8",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "455f5c77-05fe-4e75-84f5-27da65988fc2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "842cfc2b-a457-498a-943c-1195371fbd99"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fa108424-c364-4908-9d9f-159462d0d1a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "3bf7c091-ad52-4a2d-bea5-e9131ae6a058"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f4587961-1f82-4c89-979a-c9bfd39de954",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7487243e-06a2-4814-9e60-cb249a99119d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "92e9b6d3-c081-4492-95eb-7db8b558231e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cbd350a9-6b32-4a65-9333-ac9dea7704a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "1710287d-9b43-4547-8c11-6ea94b95bd56"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0b3f1e1c-9ab9-4cf8-8985-4cdf2de301e9",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "092bc385-0bb7-48d6-b0b2-2c07075d15b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f4f86358-ac12-496d-a004-a790b6fdde78"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3b7ef1bf-83ab-44f5-baf3-8f2c89ec23d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "be57942d-cbd2-42fd-b50d-edc1f4f7cc8c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c63f43bc-d06d-4ad3-98ac-84c172a8bd7f",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "056cf6c8-d238-473e-8e97-5b5bfd586349",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c16e09fb-d939-463c-8589-f5e454645f57"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6cc04a68-16c0-4ff7-905c-dea8dc7d559e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "54cbc0dc-ec33-469e-9cd0-8c99f2d4bbde"
                        }
                      }
                    ]
                  },
                  {
                    "id": "29bc3742-09c5-4853-af65-aef74fd23fe0",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8b840f2c-4e51-4795-aef9-cafcfb669480",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a3f1b1a1-36f3-40c8-a476-7ba1c4ee2423"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "99b683f9-ee68-47af-922c-aae22fedb4b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "2053254f-e1f3-40d8-bcd9-9b70c05cbfd1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "26ae7e03-818c-49e9-9e80-ed6b619cbde9",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff595c90-c40d-482e-ae8c-dea73a661916",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "69243355-52da-45d5-aac6-ed3b9f5e8147"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2f3843cb-f66d-4857-babf-ab8efe20c788",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "c019b74d-a8a7-45c0-a551-ee267a4b99e3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1bcba8cb-1bcd-44f9-a175-e8d40d315529",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee755be4-a750-4ccc-b74e-90b602830822",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f64d6800-5d1e-46a0-9d83-98186d61120d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c1d07f47-bc4f-462c-8645-8528020cbaa2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "c42e96d0-713b-48c3-a2ab-e987a4c86743"
                        }
                      }
                    ]
                  },
                  {
                    "id": "62cbf7b6-7f1c-4a36-bdb8-239fe725f5d5",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "68d01e9b-5684-4a09-b367-1392e804f3bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "02d9fdd2-4417-4272-b4c7-d08b60965ae7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ff4733d5-4436-4616-8b05-f750d6611012",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "81427c87-bf54-4c35-9754-e2bbdb7943b7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8410bee5-2a28-483b-81ed-6b4b3cf6c7ec",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d09ec3f5-dc4a-4c43-82fc-c9f7c8ad5acc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7daa03a1-2f01-4ecc-8211-a0e1fb1d6216"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d5f64337-d120-4f37-83a0-a4fc3cacd12b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "dcb27db9-90c5-4aa3-97e2-fd3508759d78"
                        }
                      }
                    ]
                  },
                  {
                    "id": "571908a7-0c89-49ff-9c69-d0f0c2774df0",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8c034189-d4cb-4582-a2c6-f1abc5b44244",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "86ad76a0-cb14-423a-8c2a-311dfc37503b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d0c803ad-0ebb-4fbc-a5a3-47b55550eeda",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "c9ec52d1-78e0-4d8a-9646-8a0cdad50cd3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "872b65e9-aabc-4928-9af3-e946ad591765",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8d9f5122-ad06-4e2b-89c0-7c8b9e61bcd7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "76262fda-b0a0-4e42-8af7-fa0e83f54afa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "993a3c50-395b-439c-a152-152a555a19cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "ac1fa567-44a1-4fc3-bb3e-24f029e4efe5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "888782b0-f3ea-4a21-93a3-4dabeb1c079e",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8ad04170-fa64-497f-8134-32a4e6a6b279",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7449b646-c211-412a-8fac-e309a9fb7234"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f1b60685-ea5d-46c9-885a-79bdec6b9b08",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "4ed61050-2fc9-4be9-825f-50355d77fe18"
                        }
                      }
                    ]
                  },
                  {
                    "id": "56eb3bda-0b30-4ecf-8c4d-7e9bab4904a2",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1230651c-cada-4710-ad47-a7e9638b7f11",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "de13ffac-568e-4c4b-9729-17c8f13c90e1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1fdb238a-d02b-40f0-a6ad-de1d1e4afafb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "3b7190b5-4815-421a-8741-8443474242a3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "98e6dfd2-2f4e-4ee6-831f-a1a1bd80eace",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "64645230-4fb3-41c4-8f9d-90249aaafb06",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "9eea4d50-a315-4adf-b284-8e0be4c558fe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2a0c362a-2c48-46bb-b923-a586dfcaf0dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "d63dd236-735b-4a3d-ba31-91bcac2b260c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f54205ef-68c3-4264-99cb-4fd444b34db2",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a9e2fbc4-59a2-40da-8b0c-65905af81b70",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "15032dca-8c10-4c10-b845-3d754c6c5320"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e931ef5e-a684-41c5-8d22-c44a54452fc9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "7499f3ae-7e51-4ed8-ba66-7a648b58127c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7b34df55-05d7-4e52-a03e-991f2e4d125b",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "86d52d03-9288-4120-881a-a9473b4516cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9726512c-20f5-416b-b1fe-772acf09a57c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4b48d00f-9940-4e5d-8cc4-73a88c126350",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "79a546f6-7d34-48b2-bdf8-c21b01c75cda"
                        }
                      }
                    ]
                  },
                  {
                    "id": "417c0dc3-cdeb-4659-a7db-309371a793f1",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a47a0af8-930b-45bb-850b-9d8b7a925b78",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e0014b70-9c2e-4368-8934-1a807e5c283f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "946d1c08-6391-444c-90f2-fd84a167bab4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "35eacb0a-d96b-40fb-98de-f153fe9e9736"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b2d200f5-d6bf-4173-856a-983e57fe4b85",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e204dd37-0072-4a0f-9111-2cb69967f809",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "55dba60f-e805-4081-8501-017c0bf2aa74"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2dc50e8a-1840-4268-972c-4b5670dd8efb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "e47e6e28-a8cb-48e2-b724-57881beefb5b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ebe7797d-abca-4f8b-b6ed-29352a4b7097",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1e9d26c0-ffbe-41cb-a13c-ba9060d22cc4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d56273d0-ccd2-442a-9ef7-8bf5e9d88950"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ab6f9b72-937b-4297-ba25-1bf8f997a4b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "43c7ad8c-7252-40fd-ab9e-41d4675e6840"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2f5aeac3-a7b7-45b3-81a9-8a6c6b916088",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ce71f83f-be76-41e8-814d-8ac98158f8a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "95293234-b446-4b73-a73c-26fc7bfcbd05"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "276161dc-5406-4ca4-8339-13a24765028c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "183dc498-5bd0-4993-a317-d86a7cca8b5c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b8ef266a-2dc3-4165-b1bd-18025fd3d51d",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ffb1e4b3-fde2-488c-8d25-12ad1551cc47",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a889d093-ec31-4988-88dc-eb52218d802e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "db8c54e0-321d-4f98-afff-cae82af5f206",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "50fb0a90-f21d-45b4-aa34-90dbce460847"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f33a2f4d-f9cb-4192-8dfc-e752e38a37d1",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b77bdf9a-8dc3-4339-801d-551f00fa1333",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2f5ffde0-239d-4088-b539-51d41b9d5afd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eb95c789-b523-4697-bb44-a1c375f8001c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "eff11d6a-c60c-47b3-90b6-ba8d499d1812"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5194dedf-65ea-4e92-87fc-4561ce7e04ae",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e875c188-9186-45e5-bb52-f5e83f89100a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b1250be7-7db3-41df-bbe3-fe27bc387508"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f1b6fcab-332f-4fc0-a142-7e1ffe2eab93",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "c10d85a4-c1b0-4361-9433-c4ed1e49a106"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bf625c70-a110-4bc2-9251-b522eb924d5b",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b17efe69-b6b4-40cb-aaca-33f6a2b46133",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "78977753-1f28-47ed-a88b-4faf176bd200"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7b4a904f-3498-47ad-9402-bb816732dec5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "0dbec9d2-fdd1-4e78-98f8-410ad4292002"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8ce58aaa-28a8-49d9-881d-277f3fca1351",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fd7da5ca-25c9-43b8-9b07-b28f202cc8a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4edea7be-98db-408e-a21e-216cb626251e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0d0e8151-672e-4026-822f-f417ac16a396",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "57141330-35c3-415c-9b9c-f6c12225cbda"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7b617fb0-5942-4dc2-99e6-7287e51c6e72",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "33a03fdf-b795-47ff-b9ab-7c78d11cfea8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2ff7b476-317b-41b3-88f9-7a6b75e1be1a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5c90eb0a-d1c0-409a-9fe9-9e092feeacbd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "7151b4cf-225f-4eb1-b931-0df269470abe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1ee325fd-7b7e-4fc4-95a3-3955557a464d",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d8883ae8-756b-4b13-b1d0-1cc09909cff4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1974d662-707c-45fd-86c4-1553016a1084"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0fdefca1-015e-44da-aa72-28ae9ab522a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "896081ce-0ebb-432a-b7d6-9332738d1952"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f993c763-b701-4a2f-88f5-45ac390046be",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "81f16b21-f680-4a71-a33d-b099582885e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "38921b94-56a0-4ac9-ae56-dc6cd61924bd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5d6397b8-d823-4884-9ddf-49ceca67bbc8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "951e4d11-cef1-4461-9ec6-bc9dc782d449"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ee4cecab-134e-4c7b-bf68-f714d6e14f49",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "49aed632-7666-43ad-9d08-afbad6f3f736",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ddeb96ed-a3ca-4d91-bd73-a70574e8ad52"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "58336a7d-01bf-425f-9706-5276f861b1f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "0cd4b2e9-5d11-403b-b42e-e2e6d53329f3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2c7f74d4-35f5-451a-aa6a-c7d401c8f7c1",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "848b0abf-e330-44aa-b677-5727b33cb21b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b0c9174c-3578-4db9-918c-4762828011e7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a096aead-0690-47b3-a9e0-39819cd903ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "135779a4-e44a-4446-a56d-def813946a14"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ff40b6a0-890d-4347-9641-4a453a1ffc9d",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "561a0514-c88d-4013-bd61-70da96d3a713",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "11d2e1ec-1ce9-49b1-bbb1-e419281ee4a0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d03164e3-cad1-40b6-b284-eed963e667f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "ffb6f728-0d09-4986-bd79-36474228e4d3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4bc529ea-6e31-4e60-8c8c-24f6c239bd59",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "277295ea-2082-4f11-bb46-7784e7df8df5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b2440096-bcae-4125-887d-2b31edc9b9ee"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9dcf9875-88c6-4008-bba3-5f6d4fc212dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "5fa1f6ea-6df9-4271-ad2e-82d1e40296db"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7e5cf1e8-6a78-4725-bf18-397c056c703b",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9732d7eb-0731-4cb5-8cac-3230ffa53c8b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7d44a4aa-e695-4cf6-8cc3-c985a62e2df8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f16b7848-5a9f-445a-bfa3-ac1c0da44872",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "7d6369d5-9d84-44f7-bd59-09d9d39027e6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "26f5438f-493a-4605-ada4-2dce47f4d85f",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d614b386-2dd0-46b8-844b-4db816167ee7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dc07478e-5ffa-48f8-81df-2d42abd3d471"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9bd5a3e2-fd06-4fa9-82d7-f478035a99df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "321d11e4-c4f1-41e9-91ed-75c5aac6cf73"
                        }
                      }
                    ]
                  },
                  {
                    "id": "11cc6968-9f91-4b29-aa9b-42d5d139ea3e",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "27201d4e-ffa7-4881-b8c9-3c4965560dbb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7a408c6e-11fd-4c39-9c8c-06cc737c3820"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9d12c6b5-9d48-4884-8a26-e4e9c7319f39",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "cf506d5a-423a-40b4-a878-a403304acd3d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ee59b006-e20c-4c29-a170-385f5ed43a2b",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "df229b36-a348-4b48-ba1d-06ee0bf549fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7d4ac0ff-34a4-4915-b603-0e9b5b20208b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "285bd34a-786f-4d6c-b872-542f691c9624",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "785a9f91-42d4-4e0e-9968-c7d3239f58b0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "24c096cb-40a6-47b4-bfd9-bd987d142bad",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff0f8a43-11cc-475f-89d5-5dc903dd9e77",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "771d2c07-100e-4408-a03c-6a6aa9317a9d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6ca3465b-c053-444b-b15b-7285260d02bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "746d3700-3c97-4948-83b7-56c9cf18370d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "34609171-7400-49c5-a6f4-3010f1db7547",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "73cfc08f-0287-4099-a219-18f675d1d1eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2e6f2ea0-5db4-463d-bc6c-9739b94aa7b6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "67f71007-493b-4112-bd6d-bb7d37c3a8a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "2b38cdfa-7081-4713-b4ba-97c07639cb29"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a35ca91e-a432-4f24-8a12-2bb784590718",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3f9178d3-b4f9-40f6-b6e0-5e020ed0a598",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "97322e52-47cf-46b6-b2dc-8bc795884a43"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6a1add4c-e84b-4870-9481-fffa53374eb6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "1210ae71-e7dc-4f5f-8e1c-b4e301558df8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3175c17d-d97f-48ea-83c8-46851654ed11",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e9b3c808-496a-4df7-88a9-a5ad672bf727",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cf2908fe-add3-4c54-9b7f-1151e1d9ec26"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0ce4a228-8f27-4e98-998e-c1cb27566460",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "fe81cc47-4cd5-4df1-a9ba-856cfef97617"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b724a417-be1b-4c19-8e48-517ae8736e1d",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "78234cea-7ae9-4134-9d9f-b51d743dbf1c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5ae54883-2bd8-4406-bc2e-2ac54fe26b01"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2deae6fa-0fa6-4af3-b6cb-03540c30b061",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "168d6e0a-bb61-4c34-8649-15410066e7e9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6302308c-e09a-415f-b24c-ec5ee07d6187",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a6fd36d6-87cc-4f47-8ba9-1bdbaab32b67",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "36c351c5-3048-49f5-b7b2-ad9197d531b4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "92b1e174-ad20-4b6c-b562-7e445c92b50d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "4d9ba390-2503-47da-84ca-26255439de50"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8361515a-9169-4214-ab8e-8df379abfb6e",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b1cb90d2-93f2-4814-8644-a97d0d8e2e75",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a128b798-d077-402d-80a1-ff7223213468"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9256af95-d4d3-450b-96e3-0010473c73ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "adcb274c-6f0b-405c-9963-ac687e0fe10c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "46358659-6d8c-4174-beb6-e8369f55de80",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f6631f19-edce-4c5a-a836-5281c7b0feb8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b40b3017-ed1d-4a27-87ab-df159edd6c81"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7d39686a-843f-4c16-b9ff-33eab7f961a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "dafeaafe-0885-4fa2-92f8-220f8fafe952"
                        }
                      }
                    ]
                  },
                  {
                    "id": "53d5ac85-02fe-4c66-beb5-d65a2c991e76",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "af38f6f7-bb31-442f-8f28-fa577eb39958",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b0298efd-dd54-4b66-9746-ef49d619a330"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f1c62d76-062f-4e55-beb5-9577aea956b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "8f9ed05e-b125-4780-b9b7-5603868ff499"
                        }
                      }
                    ]
                  },
                  {
                    "id": "744f7b4e-20f5-439e-b18c-ba1917db55ec",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1d8249f7-f50b-491a-963d-9bbefda1a013",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "31f2e92a-37db-4a62-9804-8dab73f71a91"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a6717ad8-a9f3-4533-b730-93ec13736087",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "657dbe68-616a-4815-96ce-0169a60651ae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1dee7b56-fd45-4bea-9781-b010994a510f",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e7ea8b59-46b1-41a5-bb8b-13035b39a3d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "133792ff-55b1-4ce0-b895-72ec5b8734b0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8e84913e-f292-47c0-b845-badb9d830099",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "77dcc3db-2738-4a03-b547-e0d80cd0e708"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9ce7d31f-0f77-4ede-bb3f-0dcf61a33b93",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e167fd15-3ea3-4783-a63b-e005dc60922d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2df4d346-4c2e-441a-b620-863e404a7caa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1a3da136-d1ea-4aab-8f3d-97a44ef39c4b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "f45156aa-1641-4a1b-9a7d-991ef6765c90"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2c950926-c754-49b5-92bb-46a4306be0ce",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "44acec24-ed7e-4ec9-a59d-efc606b43e1a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5b5588d7-9ca5-4398-8f34-59b9918fda43"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "07618e19-d603-4aac-b483-7a8c8bb73b53",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "6cc13e74-967f-417c-928a-5e7515479c40"
                        }
                      }
                    ]
                  },
                  {
                    "id": "abe8e19b-ab2e-4242-ad35-08379b53c79a",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "efaa2b07-d7aa-4138-9f6d-9e467e553e0c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7840976d-2984-44ab-92c0-04bbc0356316"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a9581b57-c888-46a6-ba9a-743c639ba8ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "066e3322-ca81-4ad9-8c29-e90219914938"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b21f4eca-6126-4d3b-8a2b-3cf58517f47b",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "89bfa6f8-d76a-42f8-8e7b-1d2cd9b97701",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "437a4a1c-4fe5-4742-8109-76b78a9cd800"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e67c9401-af51-4fad-838b-23815472cd77",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "efd1f6cb-d828-49c8-80b3-ff36ffd03b02"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a1ab8056-f088-4d42-ae3f-cd768b9636ab",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ce231da5-971f-4005-8767-7993aca1aee8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4b14ebf7-c6d3-4fd6-ad1d-08fe427e95f1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8ee5ab68-5d47-4c45-bdcd-d3071de260ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "44f7a832-1adf-4821-bf4f-9ae778a2bc37"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9dd3c39f-796d-429c-bb09-323f85898dc5",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9b253652-87e9-4008-8853-09b57dd33c1a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2135581e-9ad6-47b7-8bfb-57046787054d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "56ee7d97-3f0e-4503-9ada-2f568f51fda2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "2b51415e-32da-4e87-938e-00ed2f6dad2e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7e5c2738-ec65-4734-860c-bd90eb6f9278",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fce1ca9f-e597-4c62-b0c1-8d64184261a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d2fb8420-8a83-47c1-9ba4-d955628682a7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7c9e87c1-3778-4999-9c8a-e731fe5079b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "95569301-18a9-4499-9a7d-d71dfd38414b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6985f4a5-d0b1-4541-bca9-ce1a4830d60e",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9090ec86-5942-4334-adc6-ecd24ef1ff53",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e54fdb49-dc95-4275-adb0-23676f543158"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed5d8b9e-03dd-43e1-bb16-33afc600108b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "46cd39a4-a64c-4c53-8dea-826744a71c99"
                        }
                      }
                    ]
                  },
                  {
                    "id": "442d984c-1e9a-492b-b6b6-208acc817ea1",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "108c9337-bca8-4995-a11c-5d23239564ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "08d27ac0-b5cd-47db-adc2-255f1fe03466"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "34dceea3-ce8f-4ba6-9423-938bdada8409",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "0f638b71-e4c3-4312-be01-5b57152ad9ff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a2fce161-482b-4517-98d5-2493ba891d56",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c6131312-9842-4244-a610-860c62c54533",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8ab57381-3421-48c4-adfe-d72be771711c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d991fd0b-d0e3-4a0c-86bb-4b9bc875e3a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "f36265f2-f14a-44f1-ac1d-4af1f43429dc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b903c05b-5b6a-4ccc-83a4-356cd0c814e5",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5a5fc683-f4d0-454f-adef-3d743c919efc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "98e345f6-9019-4edb-bd12-c2c5ee537f1e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a057297e-7d99-43cf-a2b4-33ac7c8b3ba7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "6a312c64-b14d-451d-b681-01ac5ff76a66"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9189ff12-454b-4243-b5d2-06d1f4637a83",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "931eeee5-f481-4c29-85e4-df37a722f891",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9f5da570-0e74-4c65-8def-18a21e2518ec"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8ebf2884-79d5-4e20-a95a-6d1156e60539",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "e401d54f-4a97-480a-8ded-37a6cafa5fd3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a98fe882-1c68-4169-9fcf-5b2c5610d919",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3b169d64-e2ab-4acc-aebe-a64ebe4e07e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3a2cc664-2734-48cd-8311-99cd46ff89a5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e7b3d0c2-1196-4ba7-acee-4cb8954f9eea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "4c6cd726-fb7b-4e20-93a3-cabd0d8f257c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9f70eed5-9bd5-4cb0-b619-fb1ae8c6ecec",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "693eabdb-4276-465c-9402-11de40f95c9d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a1e5846b-bd93-4472-9381-26bb39e57790"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e8780939-1dc9-45b3-be97-d3cda84974f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "368cec97-b081-4fe6-9484-0e7881a46179"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1bebfe04-8d14-40b7-9f02-d700ef058425",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b85ec9b3-c869-447c-ac61-c058a9b1e73e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c42463c8-ee80-4633-bf91-fb26d279eeb3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2b766cf0-210c-4a56-9f03-5b671d59a415",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "f8adbedb-4695-4f3a-9717-2c9c20719631"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a45a8ad5-40e2-4e10-af2b-c5864d38c6a4",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bc5b1bf4-11b4-4f9f-8116-261680a21ce6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "72d8d2b4-a0c8-47aa-8204-845a563e54d4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed42be24-3670-413f-8a54-708e20b99391",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "96380a6c-cb73-4633-aa50-5292df2ecdfe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fbe60f92-199a-45e0-92e1-4db90bc783c2",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "06d96574-3452-4e9b-9ba2-ea935ef4c62c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "69699e2b-baba-4c31-a4d4-ed7e36145e43"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "90cd75e2-ea01-48db-9d93-bc85c6eb9bfe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "da8a4514-6d26-4947-9a5f-9aa2b3d69f02"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5bf2e733-1692-4f0e-8665-32b1936baba6",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "27d5b8cc-f410-43ff-93fc-85c5bd760d25",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6f119b0a-d509-4c70-a216-641e6719eb9e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e9d7e8cc-0327-4384-b6a8-3a548291ede6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "8a6738c0-7b6d-417f-877a-250bb5fda79d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "04c76a30-7a1d-4a1f-a07f-60b7160a072b",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c3cd1af5-c355-4be1-8fb4-f3fe90e6e7af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "13bf954c-b458-4bc2-aaf8-ce10abbe9b2f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e4b1dc0c-912a-414b-b409-0a5614d36597",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "e82fd950-18cc-4c78-a7bd-d5877fe10c7d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "77f956cc-362a-4690-bd75-b53c0f55a30d",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d6583663-b2bd-4693-9099-9f8302c44530",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ed18afc7-3ba3-45a7-9845-0c178f4c0063"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2c009235-da15-43d0-bd65-cfbc1b7a889a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "965c8544-315c-4044-b855-30864d430524"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c20ca9a1-4949-475d-8a50-c502085a6910",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "13977c1e-389e-44e9-9c73-bdef06408030",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5de17678-12d0-4924-ab56-1bc2938c114c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1da7a4de-17d7-4cc7-a731-0f9ef578e683",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "7abbba0e-3a85-4461-8ffc-af75482709ff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "44fec893-ed8f-4957-b77f-a2712998d642",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "74b4a9fb-72a2-4e7a-86f4-a4dfbe05e03a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4710fbef-920f-46cd-97f1-f198f622c41b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c1d9ab03-f1a4-41ea-99ee-f3cae0100272",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "2c127f86-dfa9-4863-a355-61032b2deac1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ab5d52f1-39f4-4535-a3c6-9117ce712c85",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9fb5017d-9757-424a-afbf-3a22edad3baa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "6a90042b-151a-446d-bbc0-5f2b9a1a3220"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "91ac9efc-34f1-4b15-a1f3-9ad69ba64c45",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "ae71038a-9c8c-41c7-a777-96219e04996e"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "d949fc22-8bcd-4db1-a4e0-b179103c6710",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "fd4fdfe0-3dcc-4ab2-bb16-9781ff96b832",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "046dcd23-6a7a-4813-8f7c-6ca680f8470f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "45aaac8c-194d-4243-8797-4245d988a5a2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8bde0ecc-dc30-40a2-80e2-682beeee4ee9",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "3961b46d-15ca-4ced-aced-895a7f9e3879"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "9f7890ef-3866-4588-9f72-ad1618257420",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "fefa410e-a4da-414b-a773-a18d8ed7fbc7"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "b6fa2ef6-ea2e-4cee-94a6-2d9b87c3bbec",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b5876b4e-b5b8-4107-9fdc-957bd07cd7f1"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "9c6db9e6-6b09-45b4-ba26-bb0a4b315609",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "4faf87d0-4a46-4424-8902-488c6c9a8102"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "672ffcd3-72b2-4808-9126-0f3c1e10c03e",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "aa81c44d-8606-404b-aec8-2fafcbaca614"
                }
              }
            ]
          },
          {
            "id": "420f818c-c694-44e1-a739-c695d87f72a9",
            "name": "Positive Testing",
            "item": [
              {
                "id": "36fa45b6-7483-49bf-9545-850b76ff8da5",
                "name": "Duplicate Keys",
                "item": [
                  {
                    "id": "78aa09ea-2690-4af5-8b61-f35548d0b0b9",
                    "name": "credentials_issue.credential.issuer:dup",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"credential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"issuer\": \"{{issuer}}-ignored\",\n        \"issuer\": \"{{issuer}}\",\n        \"issuanceDate\": \"{{issuanceDate}}\",\n        \"credentialSubject\": {\"foo\": \"bar\"}\n    },\n    \"options\": {\n        \"type\": \"Ed25519Signature2018\"\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "text"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b1e70d3a-fdbf-4af9-8ec5-e914f9e70471",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 201\", function () {",
                            " pm.response.to.have.status(201);",
                            "});",
                            "",
                            "pm.test(\"response issuer matches request credential.issuer\", function() {",
                            " const { issuer } = pm.response.json().verifiableCredential;",
                            " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "9788b30d-e486-4732-978c-206cd8b2c85c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "136c18d3-aec1-4e2b-badd-ac6bf010102a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c42f8acf-ab64-4e38-b4f2-0b1a9c7a8991"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "5248b336-d12c-4639-8f28-3d5918551017",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "1c08eaed-c48d-4ed5-9a8b-7447a5ea2972",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "251fa3dd-bc79-4f56-8c37-ca4863388c73"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "2afebf75-7828-44cd-b4a7-78afcc03aaba",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "4be66f15-2c4b-49f4-b2b9-6e36a83aad54"
                    }
                  }
                ]
              },
              {
                "id": "a8ac0ebc-1a88-4920-abfc-c278f4f0f3f8",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "547e039a-6cce-4ec4-89a2-816df28489d6",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "4914b63a-8776-4a0c-96d7-4682254c2386"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "b4ce77ee-0c4c-40ff-8318-ae3e914704c9",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "b0778271-9f58-41a1-99ca-211fb9a031b6"
                    }
                  }
                ]
              },
              {
                "id": "c5b024ad-2618-426f-bb01-083b74c471ab",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "2b67692a-43f6-4289-a2c1-8c04f2e7ebae",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "d1b63384-9e6f-4338-a6ce-2f34ce6970f6"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "482770dd-52f4-42d8-a83e-44b2aeae639b",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "a437c708-8a62-4994-b784-ba1f1f0a45c3"
                    }
                  }
                ]
              },
              {
                "id": "04d1814a-1301-4667-bbb8-07ea8043be86",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "e6821e02-fc58-4fdb-9ac3-d64537085567",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "d7ccc31f-473f-47da-bd6d-3a4e6f865237"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "2865617c-0e90-44f8-9523-e1483b2accc3",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "a4853e23-e9bd-4daa-aa7f-b3d48f9ebcd7"
                    }
                  }
                ]
              },
              {
                "id": "b7c2d3ec-1cc6-4b9b-833f-f0a8f037c2a8",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "2af3e08c-18a8-4982-9d16-a6884cb4d621",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "94105f1d-673d-45e6-9097-cd1db898e18d"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "a54cd369-bc61-45b2-9f0c-b537deb24f2b",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "37290ad1-14c0-4b0f-81d0-62bd0dd28f80"
                    }
                  }
                ]
              },
              {
                "id": "c2ece3f2-f58b-4853-8614-28f5d21503e3",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "bc409c12-b329-438e-bf9a-8f2a3a9e1f69",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "cd4df5c8-33e2-4733-b76a-110ab80f7016"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "9ac71cb8-852c-465f-9be6-5095a1a8c934",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "93f21384-2dca-4199-9afd-d6dd4bc440f9"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "b152e6e0-01df-4bfd-8993-40a7f5b19c97",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "6b5c7e44-c546-4ec2-bea2-8155b44f6091"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "cb7485d5-5283-4303-8100-7acf3b0cff2e",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "bcb70b73-82bf-4073-b682-7bdd5bdc56b1"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "e41d990b-cdd7-49de-b940-452af5d1878a",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "c064821f-e4ca-4af5-92bd-071b5120e06f"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "d25c8f18-d3f5-4b1d-83b4-9bd42a106edd",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "448cd396-59ea-46e5-b7dc-a56ac2f02ef4"
            }
          }
        ]
      },
      {
        "id": "21effd8e-28c6-447f-95ba-daaf06ef3186",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "81bd52cf-999e-45e2-a8db-ec53e53ae4b8",
            "name": "Negative Testing",
            "item": [
              {
                "id": "788c3afd-9dda-4f36-80ce-89ee2e8ebc58",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "b39b675d-9932-48d4-bb63-837a56e5fd7e",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e2a415bc-ef34-4e25-a17d-cfbfe663ae01",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6733c0bc-3806-4860-a9b6-3d22ac98ea3c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bb749864-c78e-4c6c-8f8a-8ce3428bafe5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "0dfcffcd-6c57-4770-825f-631bbe1b82a7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6457393c-1e23-4c73-8248-aacdd1de2dd7",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aae0605d-6a28-4a00-9a1c-441001ba89b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6f99060c-e693-47d9-85e1-ff5a8181daca"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0940a5bc-8a54-4aaa-97a1-4beed4f8e1ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "6821da46-2f4f-4fd5-920f-6245d98d9ffa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fe16db93-b1ab-4f2c-b4af-225bbbab5216",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d52512d9-49cf-4c31-9820-70bb6ec2b15a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7170a5a1-2229-4b0a-bbd4-174b52ecb39a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1a2860f1-3363-4797-9bbd-e82e338f6f85",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "9ba738e9-5463-4769-85d2-dacceae7b817"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0ff37681-58b4-406d-a239-6d0602a9f28f",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ca6655fd-d330-48e5-baa2-2ffb29b0e308",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1f24a966-bbe7-4863-994b-f27badceeb04"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a581f74c-3be4-424b-b207-ef9f2b4c5304",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "1c91ac45-d17e-477e-a732-a778e01bb98d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "132d0c4a-8b6d-4879-80ef-b787d75b7a5b",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fac357b4-54f2-43cf-bf50-8fd9abfafd92",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "14ad395f-12f0-43cb-a500-a8575f020518"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0d306344-6ae7-451d-ba5c-1b0b644383a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "f81b02e1-8f2d-4fbd-949a-b66c5e203a3f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "983b3d29-aa66-4030-be56-1b8a9a785467",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "218c2055-4fa8-4f84-a5aa-cdfc41ce5451",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5af31b29-6fa7-4480-95b9-b923cf75ca4d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed9cf865-6c51-4150-902d-8081c4929444",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "55e449c9-0257-4ca6-80e0-8deb03e38bef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "46874035-8c0a-4af7-909d-40ec530db6a0",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1a6dcf54-c598-449f-9479-c2c099ffcd6a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "56fc62d4-c61f-4ba3-b6db-422c95fa6134"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "74aac96a-58ad-4989-8896-f293c402368f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "3c2db7e8-cb67-4fea-b949-cb700c6dee33"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ff2ac4dc-4503-488d-807f-c3a8a3ab6314",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cbe56868-d097-4309-9a92-20d5ebbb4449",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2d07a358-1fd3-4c5c-9203-b0e62ffde93e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d0687fda-6c5d-43d9-8ed7-09f4b41d90e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "e77440f5-aee8-4740-85d7-a8487ea0517b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4200b856-bf07-4aa0-80b0-ba198eb37583",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c104b96f-166c-4c78-a805-0d15380a793b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0225b0d7-c102-450b-99fb-a94e2356b51b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1c6a8652-16cb-40b3-92eb-e35766f6f311",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "768224ec-9e1d-48f8-83c1-942e594f0ed8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "67001c12-c144-4817-8cc0-5bfb49f0a304",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "36c585b2-4441-451c-aeba-63e27e4d728d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "541952e1-247b-4b45-9ab2-4f8e16cc420b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "78a01fc9-f6bc-4518-aa2c-26945e405cda",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "bc33f95c-4508-4685-8613-e043a0e4aca4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b6d4e9b7-196f-42b3-8ffc-fcac07fce83e",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e7177e4f-528e-49c7-8f17-6d01b63bf75e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "014a5b46-10ae-45c3-9aa2-53d6e1b887a1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "391ca399-3f72-4e75-b216-59ddda9a0a0c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "8f0985cc-180f-40af-ae0d-390b9b29cdf5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cd1d07a6-dc6f-45bd-90f9-548d8935a6fb",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "408b33be-9cdb-4a0f-8fb0-2debaf7a581c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c502da29-ec0a-4d89-977d-92b777904b10"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "31b885ad-5fa2-437f-8cab-6140efe68c04",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "4c48a4e9-d445-43f2-942f-c9c86ee0f5fe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "909918ff-aec3-4e0b-93a9-da1513315521",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "35f864cb-def8-4026-b863-32701151ce91",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "63ce561e-4cc1-4b11-b56b-dfcd1ff72516"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ecd2fe02-2bb9-4391-a673-0cc31b36bf68",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "5392b43d-baf3-4222-81d2-5398d2c5a213"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3baad12a-640b-4827-a1cb-37927396ba1c",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c6c3a44c-88df-442c-8dcd-2ead3a89f215",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eb3cb1f7-0d02-43ed-b25a-5e03583d57d4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "38e55a13-a7e1-40d3-92e9-821d64e35965",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "34d2958b-52e6-4892-910e-b48f3169b993"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2440f23a-c4bf-48f4-a481-b7130c990c11",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "52e35302-1ac7-4873-b557-f5546ce5810a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e2dea10f-ee0f-4eb2-85b8-1f561b35accd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e7a44a3a-4a43-4a18-aaaa-39b124d7edeb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "75b11420-d9fb-491b-89c6-0f6ae44c08cb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0c7f651f-d42d-430e-ab15-706223c7a2a5",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4ca35a2a-f23a-4156-851e-c3899bf94b19",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7bbcb5d7-c33b-41cf-8c46-48c6d78921a4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "deb05180-f560-4899-abb0-40d768a4bbec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "2c64b85c-9953-4104-b8f7-2ca911fc0236"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8c0a1800-6f08-4702-bf79-1d8a2e29bd07",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4f6c1ddf-61a4-42f9-9161-b32340b6962c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4fcd68b0-e266-4955-8781-ea8c07b5e073"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bdee7beb-4ad5-4189-ba3e-4785717f108e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "66cc3d40-f7dc-4039-b248-4588472cb185"
                        }
                      }
                    ]
                  },
                  {
                    "id": "03953960-ae9b-47f3-a930-a37677d16cf0",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8151150d-4549-48fa-80c4-0a6bfc162e76",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0bb52091-656a-43f5-9862-269f6ef4638c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "11f1336b-ec17-4682-9869-5c0f815f1004",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "8b239d52-d89d-4340-a37e-bb3811b38903"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2bc51022-0808-4a7b-bb40-376db1982c42",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bc2a24a1-b38d-409c-93a2-34e0742ae561",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4d680c5a-ea16-47d7-af47-cc7a6d91d470"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a4a347d9-c899-4438-ab3d-6a34f078fcc4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "daa2d0fc-ce1b-4c67-b018-7f5ae4933574"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1fd35b67-0c82-48b9-940f-3531d9a9866a",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff76b251-edae-4e74-aebb-f7f954180823",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ec5c541b-dfcb-4823-bc1b-1770a1bd9890"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "39a9df6d-7467-40b6-838d-cbd39735bd75",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "aa2bf689-ceee-43bc-aa7e-57ba49c9e6f8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1f5dca3a-8b78-4d2c-8517-e17ace819ea3",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "75dd66ce-b7f5-4ac5-8f97-77e39858d0c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4fcd3644-8672-446d-aaac-37a5c4d50b49"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "22862eb3-c2a0-4b95-9d49-0963afbe5156",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "785f901f-fad2-46d8-b11c-eb1e13d2dbb4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f44cb96f-dbb3-446c-97df-1660118c90f0",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "970e32cf-d557-4b87-9a2a-0e1666a7fd00",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "62cddfa0-978a-43dc-a49d-882545e12618"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed300752-edbf-4596-a435-f423a3917e00",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9f964bd6-d238-46cc-b4c8-4ac3dbf3ea62"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3c219576-978d-4418-a7db-ef56d2d2b008",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "330c8614-bb95-49a7-a96b-535fd768acd5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aaf0c86f-f3dc-409c-a534-3bb16d13da0a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9ce56bad-7279-42e7-9e09-70920466586a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f07f50fc-5284-40aa-b1ce-861db48eb6f6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c1bb9687-e5d0-4a0b-bfe3-87a21320dbe8",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "87f13fc9-31d7-43a1-9cb3-69c45e4c5329",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "105957f7-6710-4756-9c18-3179fa73b817"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a09348d3-28ca-480f-b595-177857bef130",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2d1e5ec0-1c48-4ce4-9a95-3e8212b3a77d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ade125d6-7ca3-4230-8a7b-7a9f01e6ac2e",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7d751d66-3783-4b4d-abd5-3badc41831e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ba3e291f-53cb-4008-8398-ae20f71a26f5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6afbc637-637b-4c73-a0cd-336935f95603",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a840d381-1e70-46eb-a3d7-cded24d61c18"
                        }
                      }
                    ]
                  },
                  {
                    "id": "23c2bdfc-ed5f-4e5d-8adb-13e76fb3d536",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0b4536e5-f567-41f5-a611-9d64a77bf90f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "64c7aa3e-7a9e-4090-ba77-8425871b7146"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1644847a-c490-4cba-9dbe-1e6ad0989454",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1218206f-6174-4399-9961-2b320042dc89"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f39c0f1b-37e7-4ffb-ba5b-98321e459dcf",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "074a820a-4146-46ed-8659-b33cb842df6b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "495bc88a-64cf-468e-8c3a-c2eb3363ce35"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fde1ca13-6507-4402-9d36-3cb234ccc8cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e7e08077-55e0-4d9e-b36d-fb2f8052ec9e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "18cff1d4-6048-4469-81ac-603ade9967da",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f41db656-bc2e-4c68-b928-6df27f81dae2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e78cfee7-818e-4910-8c49-dcc2ca130daf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0cae7d17-5107-417d-95ff-8bd060771cd3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "902ba906-95ab-4c59-85bf-2e73ada86dac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8e524e26-5720-4047-964b-f13de6de71a8",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "90b7fadb-72dc-45ee-8d29-9def40c1ce19",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7dbe6f3a-f0ef-446b-851f-c9427585e27b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "02279baa-f60b-49fe-8e06-8034d713c528",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a62acd59-a73c-44eb-b885-6b7856fa20ce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "af79b68d-ef8f-47a7-b90d-fc69146d777c",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "85ce466d-5bb8-4911-ac90-7ad740182616",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2f6c93ed-1858-4d37-93d8-cf69c069c3ba"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "73ba1796-53b4-4f4b-a610-88f7eaada180",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "fbf5299a-8088-40f2-a868-d0aada990e11"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d376676b-408d-4356-8175-098c12978c93",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2b106695-cff1-42a0-ac14-d7c809ba78d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a95611ae-7143-4599-8112-bf4afaf77088"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3c4c7977-f4ef-4bad-a17e-ba0ff190e90e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ac9f086d-4a80-4d59-bae7-f44cc4935677"
                        }
                      }
                    ]
                  },
                  {
                    "id": "570f5bfb-e550-4a36-b57f-837816001ee1",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "652e570b-2012-4b8a-9098-9e6768efeb26",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3d2654c2-788c-4f0d-bdfd-96e9f17971fc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "defa9094-3bbf-4b51-8a0f-9345bc7d47a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "35226fd7-aac9-4309-8005-b132ec0569cf"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "d4be9cd1-e42d-44ff-bcd7-df3c91360563",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "3b2f99da-672b-42fb-9f3a-5ba891c60feb",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc5995d8-8815-4f9a-a3e2-76130a381de1",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "6fe5267e-9383-4140-a449-a2fa37f55637"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "076fa637-9326-48b1-8bcb-908931c9b5c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "eede7a73-8e5b-4a81-83ec-027865778cc7"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "37fdf5f8-4dbb-4820-93f4-771036c7077e",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "d54963b6-ef98-4d9f-81b2-2756b6512507"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "fa381ed0-8a72-44ef-b6b9-e825bbc8dda6",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "444c86c3-bd8c-49ab-a551-dc5dcfbb493a"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "f23165cf-0b13-45af-ad0f-ed1f76aef673",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "5361485f-a4bf-40b7-81a8-3127bee2f97d"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "d9d94144-a2c5-4c5c-a582-57f4a24f8b65",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "f9c3bca3-a422-460f-bbdd-118e92ae0b34"
            }
          }
        ]
      },
      {
        "id": "06abc278-027e-4924-8ce9-2df34570c64b",
        "name": "Credentials - Update Status (StatusList2021)",
        "item": [
          {
            "id": "b914713c-1c05-47c3-a87e-0b8450ec2e76",
            "name": "Negative Testing",
            "item": [
              {
                "id": "100aff2e-1356-422d-9498-18437be23058",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "20bc5b52-7558-48bc-9c89-761aeed50dcf",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b756fb54-9450-4f4c-9b38-5cfb68a6e553",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2b17dce8-1850-47ca-8081-cbbb6c0d9e4b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9009e3e3-9643-4eb5-b227-44d49dfb5b97",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "a77d136b-1b41-4dd3-b562-7403465eb8b2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c12315f8-1598-4269-b0c3-a75675ab6dae",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cec163c3-fe10-4e4a-8a82-a7b4e060cdd0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a93db6b7-1b4a-4c09-a7d6-97a60ef25d1d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "97a0c932-1e3c-429f-88b7-76834479585b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "0c90b96a-aebe-4bac-9b63-bebec894c2c7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "869f2be7-38b1-45b0-ac07-5872f420861b",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "06edebce-a179-4a55-bcff-f4027f0db7ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "df6ac86f-2422-4083-a042-204b9dabe673"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "116a4e47-b981-4df8-980f-597cac2d1654",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "7c23f337-6ce8-47b7-be2a-5f38923f87e9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "25798ce6-98e3-4294-ac82-e3ab97ce7a88",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "032b0892-fdf7-4695-a8bd-4d72186e73fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c440b2e0-d802-4866-9ce8-9fa24e638e45"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5b6aff2c-c634-462d-a5e3-cd79830dab81",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "bae9a546-468f-4451-9b84-ceb2cb767b9c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "294235a5-0f6f-45b5-8fe4-014a175d64a8",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b07a0567-6334-4a36-ab0c-3ca53d3071bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5c6b890c-5c4a-4f96-be40-9728d6ee0cf2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4a6388ca-b063-47c8-b433-2cb70316efdc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "caae401c-d3f0-4d5b-a8be-7404e099ecfe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dae6b8cf-8b47-4ed6-bd4a-550854d77297",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4ea1aaf8-5f48-428a-91d6-aa6f18275dc1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "698104b5-dc1f-4b99-b31c-b3f210855a9f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "29f8ac8b-ca72-4114-a89e-fdf77923dc94",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "c6c91c25-57a1-49b9-816f-ea64f26136a6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "935df585-aefd-403b-a74f-af8c187673cb",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d1f2ee01-aecd-4acc-b7b2-d96b284b5985",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "44628380-5d80-4ace-8667-cfa09e505a30"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2e1c9f15-3ca1-4b88-8339-1494b0232ffb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "dbd8181e-b210-4d37-8ac0-eb915d599338"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c3809480-316d-422d-95f9-1bd4cdf9aa47",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "927de57d-0fdb-4192-8316-0e528d1f48e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2239d9f2-a73a-4359-82b3-cffa8ccdcd10"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bcdbda35-bb0d-4752-8e64-5c95e95fa579",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "249284e9-0bd6-4473-b502-d2711d5b5fcd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a21fa85c-409b-46a1-b6e8-91720e8e4716",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "96267034-202b-4786-ad6f-5c2a156752c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d0bc7057-c04d-4a00-8372-47861b34befe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "db757023-9442-41dc-a3f2-c961c0317a9d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "e22cbe7c-bbb0-4bdf-a131-44f38d08dcf4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6edfafe5-b46b-41ee-ad3d-d1401eedc146",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "98960873-1f24-4f8c-a441-623e6e6cfa4f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bf9ef728-6afd-45e2-9290-f94e29b6b6bc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f2864077-ca2d-40d0-b578-c5af20b64472",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "a352986f-f6ae-48ed-9f20-a9b3084a1d06"
                        }
                      }
                    ]
                  },
                  {
                    "id": "367207f7-8ce4-436f-8c4e-f9d4b774fc10",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dddbf0a2-dd0c-43c2-a62e-78505f045c09",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "45af995e-e458-446e-81af-d341fcd87651"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "028fdc76-0620-46b7-93aa-a8f93b37d298",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "57717516-a5ab-4e6e-8dad-4e520126792a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7357a70c-8f9f-4872-abfb-57a3c8255273",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7573c9e0-c5f5-4a28-ad14-f12638f25dbd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0d10d602-851f-4492-bb6f-79273bc09c52"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "37b9ee33-cfea-42d1-b3ae-5f8507a60b68",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "e702c20d-a5df-4a4c-a5ab-24ec75c7bfaf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f5562cea-6e47-4f1e-b684-f9eeb62f33e4",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8ea5f3a8-c875-4f70-b363-891066932410",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "01b72093-c6fa-46a1-95b4-8a96177054ff"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b68969d5-b00f-4ae0-8d5a-a5d9b0e1755b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "3c57c614-581d-496d-908c-aaaa27ed3369"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4481f5cc-eb57-44d7-b526-f6e476942c8c",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0ee3452f-8ee6-484c-94ae-13e8a91beb8b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "12c54e1b-c24b-4dab-a34b-cec37ed30523"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "308ac99c-73d8-41ac-bb84-35328f992c29",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "3d85f184-4e04-471f-b74f-c7fa4c5dde23"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6e67b377-52f6-49ce-a887-843abd2e673c",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "964d23e0-e75f-4bc4-8469-fb04e849185a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e978657d-5c71-4f86-bee2-b606612951d1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cc826e6c-98b8-419b-8b9e-7e83c7988692",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "a90f98de-290f-4bb8-98cf-afa1ded53f99"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fe1e0364-dea2-4051-88de-790612d6401e",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "67058ecd-d480-4a7c-93f5-f68f9ffce27f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c2644f41-606d-4fd9-a681-78c155143f79"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "56a1e13d-4cb2-4ae3-afad-523b2d236fc1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "645a8e9b-699e-47e3-b3cb-ddf19e805c6f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aef8df08-7f94-488f-ae73-832a411d7316",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8f8920de-9411-41a9-b39d-b20e1f70df47",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a7fbbed5-c3f0-49cf-8080-6b5c60ff86f9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "692e7f8a-c3a7-4ea7-9a21-b8ed1fee3f31",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "f428d76d-3ac3-4226-888f-7c2840cafd8f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a028bccc-ab1a-4383-9585-871f5b83758b",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eabaa10d-4b6b-468d-9167-c1a2cfec97fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b7973a24-c526-4b90-bc08-604b9c61c1ee"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cefcfa9f-b4a7-4c03-91e6-7c1004d72f0f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "cf02e81a-4a63-4e7f-b918-ac675e9520c3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9043acd0-da76-4871-b212-06398fffe845",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5317fb65-9df5-42cf-9583-141433c111eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "72a01de5-2821-4d8e-9967-f4c1778139fd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "510d215b-66ef-4aa9-a658-e3cf82c38d51",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c9da99b9-f87a-4810-a91f-b461885cc55b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5e52af9c-681c-488e-9d94-4b81bcb3af91",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6f793e1a-2785-47d3-8e95-cb9c157029c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "db324fb3-f3bf-4060-aefb-f4d6903c17cc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eb820f9f-8683-4930-9162-6d7c685350c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d48ad903-8b75-4259-a8cb-26b8e9a2ef57"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2a163193-3eff-4378-9c67-88002a5efbc6",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "000ac28b-01c5-4160-a285-c222edbb6b02",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "81a25366-dcd0-4303-a763-78e7a7de61e4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a845567a-41f1-48f1-a174-7348b4f2e72c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f5cfeec9-6762-4970-9f4f-46d66a0b2fe0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d1a472c2-2b68-4214-97e6-9b98e9e21c22",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "92762ac5-a5c1-4ac8-a1f4-b770ca7f3f86",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c12c633c-c2ce-478c-97cd-6f87fe280d5d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e2231cb2-c0b7-4e6e-953f-d7953b394d84",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c63b0425-6eb2-411a-be39-e366e2cdf276"
                        }
                      }
                    ]
                  },
                  {
                    "id": "afdfa93b-503d-42d3-b069-560e019d3fb4",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "db326a45-6415-46ef-9379-302b75a9f960",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fc61e0a7-2f42-475d-acc7-e0bf76c6ae34"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9aaf2b92-118c-456b-855c-8b29ff9f4993",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "eadd6c3d-8879-482a-8b01-f04c122315ef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "347e031a-9738-4dc2-a0a0-93a715ecc1c7",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "65a8adb1-dd6e-47ce-a7e6-f0440c082b5b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "44373021-edb4-4145-bc3a-60a1525d9c3e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4088b6f4-6b1d-4a79-bdee-cffc68e99b2d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4c3d7c52-332b-4fc5-9d58-b80dd3bec54d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6d119ea2-8601-4587-abb3-1396e1d1fe88",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b5a605eb-afe7-4e4e-911b-c35c73e313ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "af9810e5-4fca-4910-9966-f4ae163d96b1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f103a620-d448-4f4d-a496-d802252daabd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "229b5c38-47d8-455f-ba33-384429679e97"
                        }
                      }
                    ]
                  },
                  {
                    "id": "616f4136-3a7a-4748-badd-c3b589d65c41",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bc87dcf3-53b8-4731-910f-e6b2e77be2cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ca7da460-86e1-4701-b342-014a68c69ca3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7ba20af7-06aa-4266-94f3-9b6186f0bcae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3dcab94e-1406-4add-adb2-b87b2d6e0650"
                        }
                      }
                    ]
                  },
                  {
                    "id": "acb0d772-cdc5-408a-b228-abe4826d9e12",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "40499107-ffe0-45be-8256-b11d0308c4f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c13ca03b-1a62-420f-9b6f-09b4b293d029"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "78aca154-5360-4165-985d-b5a058c9d0c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "cde38307-b57c-429b-91a4-eca4f2df62e2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "509e0535-7612-4ac2-bb99-c4769841563b",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "04d0457f-09c7-4c0d-bfbf-387d2d69d8e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "85cd4f65-845b-427a-9ebd-cfce542629ce"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8cbc23b9-e050-405b-933d-83f3395a7d10",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4cd73654-315f-401d-8f81-ff69949604db"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2ed895de-517a-4022-af30-cca6688f6f4b",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2ee1072f-0387-4213-bea2-8d15bcb08bd9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9aa0bd78-6d6e-43e1-bcc9-cf99459b1338"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3cf43f7a-1a60-4151-b3d7-7ff0b91578f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ff395b9c-b604-40bc-ab09-d4b9b7def9da"
                        }
                      }
                    ]
                  },
                  {
                    "id": "189120da-85ff-40bd-ba40-064be4625c58",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e2255193-cd13-45d4-a3f3-71449429fa42",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3d7a87b0-4a93-4444-b8d7-7c497f18dd61"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b971a3b1-6db8-4214-acfa-d73403247275",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "aae0f654-cfe8-4561-aa63-48e8b5de607e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "739886c4-015c-4584-84e3-ab479dfd4ab6",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "547d6db0-33dc-43fa-86d6-5e747328f5d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "178a1775-2099-4c02-acba-43c47a2f3e75"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a1a52acd-aff4-4722-9a54-68ada580a522",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ad9248e4-768a-47e0-9066-444d4a1b332b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "79ddf4fc-cf24-438e-a7fe-a349819b4c56",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d46fb1e-b10e-47fb-9978-0c05603541cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "44bf6a40-679f-4a56-bc02-fd64d3c4dbbb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "42dc88ea-e3e9-40b1-9d27-47802d037559",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "71e07bd9-661f-4b93-ade3-2f2a459a485c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d3f172d3-55d0-4c60-a3f5-5529f5342a2e",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "27a4875b-cbfe-4856-a5c1-5deca6f5c37b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e553a83b-f513-4072-b6a9-c92e46c1fc18"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a3e4a578-f4ef-4dff-af76-9f67d3b9f1f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "79fcb024-59e8-40cf-9bbc-ea51c94e6f4e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f5ae4984-4455-4147-af21-c38c017efb6d",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6747c3d0-c001-466a-bc68-200c968c4f89",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0038cf15-81de-470f-9e6b-a0f5fa60399a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bea0c9ec-08e1-4561-8e51-62dd5a945f06",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "fb357dc9-f30b-4f5e-99a4-6b6e7db54cc5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bf881ba3-2a5f-4104-a40b-766fe8f19f6f",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fd3a1a43-7f77-4ce7-8bcc-611cde829d3c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c3c20ac1-c7cb-4dea-85b1-035aec656bdd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5d1184fc-e390-4ad8-86b6-2f6bb4000107",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6ee2243d-492c-463c-9308-be19407dd8ed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "48826eb8-3809-48f4-b8ac-c5ce56fcf288",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6513b695-8441-495f-927d-e800e1f6f727",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b5bacff8-bbb0-4fb0-89b4-e349729e8c8a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "765c8c78-69db-4f4f-97c6-eec2cb423a34",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "cdb495ea-4bd6-48ca-a351-1b3f704fd9d8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c0fddd7e-41ae-4f26-b94d-b942d41fe04a",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f246a081-a21b-4ba2-b264-166261725349",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "32a40e3a-a395-4232-8ee9-f7d64986cb7d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bd9b4c98-bb4c-4564-a1f6-46ddd4392f09",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e75a21bb-9351-42c1-8022-efb1e856fecf"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "4f79ffde-088b-4901-89cd-ba73e06c6e1b",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "98333ab7-0c58-446f-a69f-f6fe1745cdfb",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2e26c468-2096-4707-9d35-54c909246a2e",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "e018c737-af45-40bf-adf2-789c73697b11"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0429d58f-58dc-4039-9a86-c7f6b2afda80",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "25839b86-7233-457b-a6c5-11da3c91d753"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "997063a9-af2c-4ffd-a727-d25b7e52febe",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "99277158-7461-4c46-988f-434686644a6b"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "2168b7cb-7957-46a0-bcbd-3264723db953",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "1e68a6a0-5db2-42f5-ae87-f632cad2eebf"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "3c7254a3-fff9-46b8-8a55-3a67af7491b6",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "6af1a5d4-32e3-4996-92e3-60c6536f669f"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "e467e711-53a2-41b6-a142-86c3da649bb5",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "f7c04ce9-c5e6-4384-846d-4a3140fc9b2e"
            }
          }
        ]
      },
      {
        "id": "e3eb1000-215f-4f22-8918-9770cfba688b",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "17b791e1-2509-47d7-b418-7489cb774e8a",
            "name": "Negative Testing",
            "item": [
              {
                "id": "fee92435-b1a4-4582-93bc-0d3f7b91bd99",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "36d0e40b-8674-42bd-b450-ebe3b2d10b64",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "14b0a830-16d8-4e75-9670-6cf628001179",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9793787d-3f15-48a1-8db9-ad87d5db8d80"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5d5e75bf-951b-4f5a-b399-4117e5e85e6c",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fb749dad-c7b8-422b-851e-88b5f4574e6b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a3030455-594f-41b7-9cfa-bef2e487e728"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c7070f55-a974-4a23-acf3-8e4c88365eb9",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "26d7e449-df0f-4521-b86f-43d62bbea55e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "54b76bc7-0c49-4276-aadf-9ff3fd5d83e5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f8ffac81-9acc-4d06-81a7-531b1031bb63",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e2a33e4e-379e-4b7c-9b6e-884868b75281",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9bd4a6b1-c9d4-41ee-99b1-ce391fe69b47"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5e70e74d-711c-48d0-b3ce-502e5d6a1016",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "08b9a420-5013-4456-8dd9-449d16609b9c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0020e8b4-8d53-4c3b-98df-c58f65d8bba7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "02e22cf7-dd37-49bc-b87e-4e9e68831f45",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "675c6591-0ba0-4c3c-9667-ec23745c94fa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "37d37c48-0adf-4bee-98cd-0f8c042ecdf9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "011fa75d-eaf8-4e4a-9d01-5e7dc9edcbd5",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "88684f8f-ea55-4630-9db1-9ba1f6f7f79a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6a980d31-b95a-41f3-b45e-a4b44567cc73"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "19c10f30-3dcd-4604-b654-e95908aef9bc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d3c4e334-6e0a-4896-b50c-a3295c12cbbe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0b1f173f-9dde-4f91-98bf-b698734750bb",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "41edfd99-2f53-4b9f-a920-04e4043e6215",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9e6d5edd-61b0-4af5-a426-484ba504fbc8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "81e71ec5-d50e-4801-bd31-3e2b5b96c958",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3fcbe124-1112-458c-8fa9-7b488320fb1e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "28c3e5b0-3997-44ba-826a-530081aaa2e6",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0df50148-80ec-4507-919e-274c9461b274",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8fe28ce1-4291-40a5-8e4a-b99e99082b4b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4819405b-f5a5-49d0-8e7b-297df23a2355",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0bc75a7c-571f-44d3-b274-d05991ca2163"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f4afa927-a0f4-466b-9fff-5f945154b0eb",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c78c8774-8dbf-4bb6-9ab4-143946da599a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6b3995ea-6cd1-4404-81a8-7270cb09422b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ba0f0899-0f20-4451-8198-e8c9a4865d90",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "abbb9c62-8583-4d6e-9be0-e1b1cddeb7f2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "da48dd60-7771-461e-8b1c-9e9dc832b4d8",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "53d09faa-5d6c-47b3-b8cb-6ae477ce722f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f4ad4105-53f0-4e62-8cb5-edf54ea2b424"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f86c678d-4319-4b3c-806d-29b0a344e6a2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a04eef20-cc65-40e3-b297-45e8cd4d724d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9056c6f9-67f7-4ce8-9e3d-c96beadbbc64",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fc1b05f7-2fde-4c53-95e9-09134bb3c756",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1bc01ca7-cae0-4fc5-a8cf-6660f0c53da8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f24d65f2-3462-4085-9092-f152f85b3c54",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "46304ac5-8bc6-4445-b086-1add21934540"
                        }
                      }
                    ]
                  },
                  {
                    "id": "617739fa-c171-4678-9c9c-05a3cbb09828",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0ec1798b-c2f8-4ef4-baea-2819d7941550",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "31cda14d-3528-4ae7-aa91-f258d03e70fd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b046c55c-faef-401b-a735-5d6db7aa8b4f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8212fee2-c1eb-4ca5-a0df-f836275e341e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c893e2ca-2374-45b0-9535-89f302a6686b",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3fc7870e-3ec0-4e1f-a1bc-c4f1eea24864",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7312f94a-c94d-4520-b280-6f27e31e449c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f8393a5e-38bf-40fa-bfef-583fd7204b76",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4e2f687b-4a27-4b95-ba65-dba1ab2ee19d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ea36d8a3-ac81-496b-97a2-912276cd81a4",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3d69d9e7-2c0b-4ee5-87c3-875f678a143b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ffea203e-b84c-4716-a67c-16ad9cb10bcc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "77b8f876-83d5-41cf-a8b7-bd5b7b74d15a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "41830261-8559-45b8-8d4b-e814356db5b9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "83cc8cc8-0e7b-4b15-9533-691426082c9b",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b71bfe57-dfa6-4890-a414-1ac7408a27a4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "506d33f3-5341-46ce-9249-f91d9cf84962"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e2de2d26-d33e-4670-81e9-672e779cd35a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1f434bd3-b338-4e38-8742-ea6200c5041d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9162eded-3ed7-4698-afb4-bed03f93ef03",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5e5e152c-fd16-4b03-ac16-2f3d06f37a57",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d2fd2ecd-52f4-4463-bf44-2306d627d4c8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "73652c9d-0178-42a1-8d78-b61901ea3e8b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0c582883-2fba-4b71-b027-0887c5961ddd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7224b881-5fb2-49ab-91b5-ec4ecbb55037",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e9dec0e7-c1f6-4f8e-a840-3b026c9450be",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8f11f283-a63f-49a5-9ebc-5e092334314a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e7aa4f1c-a25d-4470-a9d1-bf63058ceca9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "26061e24-fc42-4686-923b-dcf6a1eecd10"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fa8b8969-2b6b-40e9-a023-725c64b02bb9",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "63fdfa62-8ab8-4812-bb10-84ea8c979768",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c06a7218-317f-4dab-9842-7edffe9f0020"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "edda3d4e-ab6d-409d-8e03-ef113b7e7068",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dce02dd5-f083-4b97-ba2f-e3d51b101b1c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "400447c9-a46c-4454-b479-339a377b39ae",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2926266a-8c39-4502-8d01-00eef95dca5f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bc248b40-3de8-4b9e-bef0-fb6902ef0652"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "61565032-60f0-426a-bd10-368fbe9dfdaa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2add31c4-c748-40a1-ad47-06f4d0553e3d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4fb394a8-a36f-4ac9-9b9a-ba341154bf7a",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "deb08d9d-3435-46b2-9bd7-fa045226cf06",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "634140ec-4c03-4f2f-bd7b-a25663d229f8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f1187ef1-22f6-4f5c-b8e9-41e2fc0bdafd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "85381a45-0aad-4278-b204-d1f929a3247c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ca364a92-cd1e-416f-ad1e-0a2b326fdac5",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "16f1853f-e9be-4b4a-805a-93e92754e76a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c6f9fed8-ca06-407b-b20d-636e0ef404b0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e1800f87-4976-452f-8f89-dfbbebb129d6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "75d86b84-94a7-47d7-b744-a961fe9fcc03"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fc5cfebf-c5e8-40bf-882c-2884f68b3493",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4a2eb42c-21d4-48f4-afbe-8cda46162b61",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "84503dbf-eb5b-4763-bbe8-c4d02eed28bc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f6f4cb31-e737-42de-be45-81b8d0f218e9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "75d3f4e4-2269-437d-985a-8358eb59cf80"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3c032925-089a-4eef-9799-298fa2f964b2",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "873858a9-3e3a-47c8-9819-ea217eb5c773",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6833fd91-537e-47bd-acda-964cd58157cd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9edbd519-9a51-435b-9b13-c5c2fb83cec9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f84a1dc1-00ca-44f2-b5b2-7bceaded3c24"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cdc53af7-c71f-444a-8c78-dfab8f139fe9",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fba9bbed-56a4-455c-810c-32f657b5856f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2f59c65a-ccf3-4ed1-b318-7dc0c931e92d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9aed5e88-58e4-4f56-bfad-86a8328ab1ce",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ca39ade6-6ad2-4019-8f37-a6d16de52689"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a08c8ca4-3f98-414a-8085-e89016662287",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bac63a1a-d389-4b70-8dcb-46916315634f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f72ac6cf-4e6c-4cce-82e4-1eb89ea8ebd3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d1e28989-10c7-4cd5-8861-1a28d961ad50",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c49e4e2f-750d-4212-898d-0754d14fb8d1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7f321184-36b1-44a2-b362-ab7bd17e89e1",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "24383c7e-8284-4834-a088-7d08f34eba8e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "38f186af-0c47-489a-840e-7045e9a77eab"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "45fa7bd8-8e8d-48bd-8487-a7fb31767bd4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a7ac2ea1-babc-49d4-b905-82e7f88f55ef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8bde88cc-2001-4d48-ad9b-02c1df55a23d",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ba4eaf5b-58c6-4f97-871e-6686a257a2dd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d57bd543-f3f3-4c88-a959-7636233f9c12"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b1e15d04-fc74-45b1-8a66-3277e9b0647a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "09476894-e83a-4b7f-ae8d-e666d8102381"
                        }
                      }
                    ]
                  },
                  {
                    "id": "41709bd8-9c5e-41d4-8c60-d4994a9e2522",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "78742552-f785-4c2a-b6db-9f11c008fc0c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9bd9bf36-459e-4da3-83f2-48a21a26462f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "06268869-08a4-4399-b8ef-e4cd1866acd5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "24ce3ca9-f73a-43b4-9148-ae8d90dc7a9e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "106034e3-f2c2-416c-ac58-80ed706f6506",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9d709316-7216-4788-94e4-e2c8d774cd8f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "05163ce0-0cfb-4921-ac34-a3048323befb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1ed7e725-25dc-41b4-8c3e-31739408767d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0142f45b-3d58-4ad1-a038-b7aee50e22d2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d8a16fce-5875-4ff7-8eee-ebc1fe9e7e0a",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c315508f-bc80-44bb-91cc-fd19b603d85d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "35b90448-a157-4338-be7f-955f772da05b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3e4828bf-9121-48dc-83fa-8719f5a28bb3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1b69ac17-86ed-49af-9910-d0240c097ff8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "75a7b3bf-ca8f-45e4-a530-3974198fd1e5",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "81309caf-ecef-4fea-8759-9516cf7c5bf4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7c21588e-9d1b-4809-accd-6d1550d73001"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "76862d68-8058-48b5-aac2-f28b85a23829",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5e249132-51b0-4d4c-9dda-1b55c6b04c14"
                        }
                      }
                    ]
                  },
                  {
                    "id": "296a3830-e36a-4e06-a7d9-cd42e4ddacd5",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9e71f994-0b04-4f01-a4bd-29978e4d3223",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2caa1643-ddf7-49f8-bbe7-58f153ddfafe"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "68ca1431-ac9a-43ab-aeb0-d4290c662c86",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e6169322-5728-4924-ad5d-484d17b41e0b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cdb1d139-76c5-4f2e-97e8-7c9753095f6e",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "393134bb-0a2a-449e-9e64-e450ec012b61",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "509f8280-b109-41d6-b7b0-47838dee3780"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "936a7143-99c5-4a24-b47a-cfb9bfcb28a6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a36447a1-6bc4-4bef-b47c-56004c780c82"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fbc21d41-d601-49d3-bd99-9a655c0821e5",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a5ee171b-db41-4f4b-a813-47eb6efb88a1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b29e5cec-2a24-4de7-bdcb-8cae264c1226"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "641d7bf7-5f1e-4ae2-9877-fd908e68dfb4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "29fd4218-eb56-408d-83f5-a8998d2b6ec3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3e5c61ee-1e9e-4ff4-bf3b-16cc804b24bf",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e866e2c4-60b2-4e03-8566-7146379c9f65",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d130c8fa-d996-43e4-ba8e-8eb4d5e8a01b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "da5c3979-d741-4d5b-b0cd-38b790004d54",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6d49983a-3c4c-46c8-af22-f1e9316e83ca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "926ebb3b-cd85-48d0-9311-08654d3c8d31",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b1fe34e2-2492-43f1-8a3a-4c576bd9cb43",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "20cdc559-cf5c-4515-baa1-f91be458f25c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "99960a84-0999-45bb-8d03-a260177cd5c4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4356657f-b3da-42cb-9c62-1f00ca606cf2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "45021ede-a4d7-420d-b55e-a73b7c2408ae",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "779c4af1-f2ed-4209-8e8f-56fe47152f66",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "87804a19-198e-4550-8f19-69ec9cdc7a23"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c9145b1e-4099-4175-85a2-2af2e70fe1c4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e5fd5b3e-654d-4a2b-856e-5fc87676b362"
                        }
                      }
                    ]
                  },
                  {
                    "id": "570d6659-830a-4d37-bc35-92ed93065137",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e8c547cd-4f11-4581-87c3-e0ff00344960",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "250b8763-85d2-4bd2-9b6f-8545bfc57f25"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b45ef150-45a5-4958-a817-e9eb2eaca69c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3ab3837e-ec7e-45e5-af53-e9a2ea702ba0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5345c672-67e1-4757-a4d9-6fef54491836",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "926e64f9-abeb-4ce8-8e60-5118d018bb26",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "421fca9b-ae14-41d2-8a23-e2ef82934e42"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "36f54a80-8365-4ac4-9316-f91080175538",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0c746b0b-5f96-4915-89d9-f57ae0313ad4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5bc13f5a-a16e-478b-855a-ed72137088e2",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0dd4084f-a2a5-49ee-948a-e93cf28702c7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e01cff43-2857-4c7e-a9ea-8444a9e83b02"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6906d416-94b1-467a-931b-925484800ea5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e336c9c2-9809-4cc8-9a16-5d592aa36fbb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "69b26397-b849-4564-821c-880c93c930d8",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "00d62a46-a6ba-4b0a-9742-f4bcfd0e58f0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "727dbbb4-ee28-44fa-bb93-66dbfe001bab"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "741c5ba9-51b7-40f4-9c6c-e5de6f07e027",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a76415a4-81a8-40da-b9a4-bd54fac31ce5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8e3717ee-551b-4b8f-bd9b-fd6f4f1bcf5a",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bfa1c721-e9d1-46b0-96a4-f224765d66da",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9837f527-8c2d-4ae6-9940-6fc1c0da97e4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bc3dc675-942c-4336-a668-1bc7b2e486bd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1c83efbd-98b5-4995-a96f-5e4873da8efd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cf29bdf5-6ab4-4a0e-b3bc-748258ca1760",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e3af4603-7b2b-4335-b57f-e01d6be4b6af",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fca0b6c2-e47d-4308-9d85-ce63ad5b55e9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "87fd28c9-1a39-445b-8cd0-2dafe9548e91",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "41a4d1a4-70d1-4471-9d03-4dda9944294e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a1b937b3-5180-4ae7-852f-737b471b23d9",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c0f8f957-5c62-4c56-b685-c6a4629fd846",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bc6f0e11-9818-4b02-93cd-e277ec314b3d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c8aad4c9-88f6-4804-9b85-673d7f7def2b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "39658d9f-fc0e-477b-819b-b2af28afc20e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a552bef6-2ce9-4e63-9cdb-341e6c805b19",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5dba7cd2-dbfe-4479-a4e7-124a52fa93c1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "84f29e28-aa51-46b8-a456-ba629d1f0b45"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1ec68e47-dd20-40df-97a2-f4701eea8826",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e31da636-261c-4d5d-baf6-1cafffbe5710"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6d9947e9-2dfe-4696-a9a0-bb69394aacae",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "864a44a2-9268-4096-908a-1ca7169d5efa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "20ecbec0-f327-41e3-8ba4-0aadbb10ae6d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4b237824-b9fa-4a92-bffb-d9d5e107575f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "63de6f8f-9b3a-4943-9612-7279cf837e20"
                        }
                      }
                    ]
                  },
                  {
                    "id": "98fa572f-8ad2-432b-b285-ce1aa1c751d3",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "474042ba-c3b5-425b-886b-3e8f03d5a29f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1dba2930-1b59-46b8-97fd-6907265f22ad"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b668da5f-a746-47cb-ae14-c182d49f78ce",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3f1da400-6960-49a8-9307-6337ff74c683"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8e8a521e-7f36-45bf-9c48-a2f45f1e9cc6",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a3e062dd-3d34-4624-987c-b6d8aeffbe68",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "28c216b6-7935-4f10-baca-fe8fe72e2456"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a2ae59d5-68ba-44ac-a6c5-e37344a79c82",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d90af06e-b31a-4edc-b963-b37aabafeca1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ce9fb3ea-660f-41c1-9cd7-caf69ab499ba",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0480d2f6-1379-447d-9f8b-61d310a84595",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "469906c1-08de-4d48-8d8d-fff789251892"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7918b2b8-5220-46d2-bf5b-d4b7b98769bb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eda9649a-2c16-4ea4-b858-1fb58d30fccd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d1c2b7c2-0562-4401-9d41-a7a5acbce8a2",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5d2772f3-7b20-4415-9451-cb5366122ede",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0b635a67-9d41-47c2-a4a4-6f00864818aa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9eec020e-79e2-4b95-a1dc-af8d16758523",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f3a59226-8608-46ad-b011-bd40eb56f6c5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "561b30a8-5990-4f6e-90a4-e6364f4368c1",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8de821c2-775a-4451-9ebe-ced2da1fdb87",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3aa9dddb-de27-424f-9212-4fa298f042ba"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0f58a18e-f607-47e3-a234-977ca681cc7f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d9ec8d79-4d17-41e0-ac59-37fded2d55a2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e71eeca9-1094-4671-bf39-6683cda58fb6",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "828ad248-a8b4-4fb1-92be-ee6bc393248c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "717e043c-692f-4d6d-8f1f-7a237b063560"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1ab2ccae-fa0b-42e3-855b-42feefe6c4b7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cb8ad126-65b0-42d9-a7aa-d2cfb4a9ab7f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c01422f8-af6f-406d-9718-be533c707c53",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ca26071c-cf85-44a5-bcad-4be19370f5fa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1cc8b314-f7c4-49a0-a601-4b3edd8cd6f1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "317a7dc6-5f41-4b13-8e96-1dd50c3876e4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7d726478-0ab4-4751-9726-f165e12fec61"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b3cc5bac-4b6e-4f95-ad7e-b5c7d4b609ba",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5172585b-17ec-474f-8ed1-d2e57ec1cb90",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f4c4a936-0dd5-4c2b-8613-88418a7f74dc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "386fd2f6-5a9c-41fc-8bc3-ee9231bc3ac3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "81e2dd6b-39f8-48be-9729-0fe5c8e3f5aa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6c438c82-eee4-4bb2-96be-6f24ac9682cf",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ea90d889-6120-49c8-ba61-8862cfe3e71d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "00ba87e4-8f42-4233-8ee5-0c52e6db03ec"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "12e85ac1-58f5-4195-8739-e53209389bf0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "84f98a9a-522b-4a1f-84a9-81509f3616d4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "927f13e3-e2d4-49cd-a985-20c25c42f6bc",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "590a83a4-6262-465a-8b34-e483add08541",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "630eba32-e8ab-45be-b927-203bd4895b3b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d1b7ab9a-1b51-4995-89a3-91e09649e262",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1821796a-1f59-4be7-9f6e-918ff355cad6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2c569fcd-910f-45fd-a6e4-be9dc9887493",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e68cfcbd-5b38-4c5f-80ff-7708c1a69b32",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d562d893-ff63-4268-8736-41930feb9d00"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dcee83fa-ec71-4fef-a15f-2bb319df7747",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eaa90c41-062a-4b20-91dd-4672cfbfc56b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2e0a0ca6-f8b5-476f-abad-2007b2da83a7",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bdaf51b1-3186-45c7-b755-669acd99bc5d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "02ac2e06-118c-4b2e-89d2-3540188562ce"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4c7b0dcf-016b-400b-b9f3-4fdcd52beb45",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "87384d03-8047-4ec0-a04b-1c895572f48b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a5793ee6-6e28-4add-a994-73bb849ddf5f",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f8d8c62a-2d7a-4144-9fa0-05883dd90ff6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e6acf973-6b31-4e20-8542-ff71669731c4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0de1f967-3107-4fec-a330-f8a2eb7840f2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "faa37693-2b85-495f-93b3-7a459cf31c57"
                        }
                      }
                    ]
                  },
                  {
                    "id": "09343d0f-6abb-4a5c-899a-2a371347e60f",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4a429618-b30b-44b6-9061-bb2202b2d17b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b8fb4f92-ea53-40ec-88e4-852c1d78cd60"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3f0de5fb-3be0-4774-ac20-df4c6cd0b038",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1883a592-a687-450b-b432-e8fa6bde2e8c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b7c86a73-209b-4665-a68b-e2d4020b0c52",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "96c9a9a0-3232-4356-af05-cb138879f8e7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "023fb58c-d87a-4f26-9db6-8f4b8557e0a6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c86f288e-1dd7-4731-95f2-3b2d6dcd8834",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1485c4ed-3353-46ed-bde4-6b8d393ea3ae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "44d5ceed-f1e7-44a1-a2ec-5183c55ce221",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bf2c72f6-edb3-4f58-9804-80170ff4dcc0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "afc2f2de-c755-42ed-b678-5f13d0c76e0e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0b6ae3d7-43a4-48ad-9e95-5b5bf63af754",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e5691665-65b0-4557-94f1-000d90acb9b3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6b632105-96b9-49d9-a34a-0c9b0e8031dc",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "427d76c9-bb7c-4813-bbfc-54efed596667",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e4fade5e-0c1e-4e8c-a6d5-18aaaa0a1e4e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b8871cf2-c8a0-4b3e-a7de-8b62b61943fa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e4a6a2c0-7623-433b-97a8-6011a3f5701e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "036f765e-e015-4a0b-801d-e07dcd202317",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2af1e8ad-cca2-4747-8d18-05ca9888846b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7d676a02-1929-4475-b7e1-0b9238e88cf7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bc58fa2a-11f7-4620-a792-08051db832e6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ff6bea55-d9a6-462c-b9b6-214d07a0d5c8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "78f209b2-09ea-4f52-be2d-cb30a1d7c2be",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "850f08e7-d29f-4587-a216-8cbfda1a74e3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "833787c0-3af2-4f23-bbe1-e6fa880a6ee4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7e6a002c-5f64-4d5a-b347-4dca42b44109",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e48e61a4-015e-4549-9cba-98ebf014843f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d9481c83-fb19-4862-a84f-362d7954e9b5",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c214ca0a-12e1-4ac7-b7ab-2a3aafdc4a40",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d9fa3874-204c-4e0a-9d61-1ff935db666c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d66545b7-8234-476d-8de1-e3658438a98f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0d384b3e-2f20-4e7f-8a74-027c52311914"
                        }
                      }
                    ]
                  },
                  {
                    "id": "836dc4f9-b4b1-4b29-bf63-78c7aed5a2a0",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d63ceab1-0e04-4040-b25f-6caa0eab9292",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "dbf54e61-c684-46a9-9566-0ed6305bc3cc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b8d9867a-864f-45f6-9800-08b07cf2f971",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bd6ef015-ed9b-4ff5-802a-c2683b92585c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cbebb855-5d19-4f0a-9090-f875b87d1aca",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0705075e-0ea8-4fed-9446-f496969f8a3c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4c20583f-ca20-4c82-87d9-30d852d32237"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "972d62fe-d3c9-4c50-b0c6-297201bd71a6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1a067945-6df9-4c7b-b14b-54f357b1b915"
                        }
                      }
                    ]
                  },
                  {
                    "id": "04d5b2a5-a82c-4c8a-84b0-81a4b8d46c2c",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9fe1251a-03f9-4d07-8c25-5b519404b880",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6a480dd1-027b-4acc-95ec-606d1211118b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d918873d-fa11-45f0-afaf-cc73b93a7716",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "162dacd9-9671-408f-be26-3fc534cecc43"
                        }
                      }
                    ]
                  },
                  {
                    "id": "47def1c3-9015-4abe-8f13-db8373c7312f",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7b9574e2-9c57-48e8-93cf-f4d643046d08",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "28ede639-842f-4552-a699-13311b135eea"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "261e3e2b-0c4a-4679-a7fa-32bb65943127",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6e1bbb02-4c3b-47e0-af13-e7dcf3581600"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1c9672e9-8243-4f80-a6fa-9c94b7cbf1ac",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "33951fdf-13da-4240-a616-7059273e822e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "804e3d70-6a8d-492f-a562-2ff8bf5d1f46"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a332be60-cf04-49e6-be22-6107423e8c53",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6b50082f-9e99-44e8-be9a-4c25e7a471d3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "13727448-eeec-4adb-ade3-7d612b9c6006",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed7e721d-7b18-43e1-aed2-65196100fb88",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "455fccdd-808d-4a1c-aebc-b2c72e336367"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4779aca9-9240-460c-8ef7-bd1560045d86",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "021fd65e-1cb6-46ee-8c4d-d389830410d5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "20e0459c-ef26-427b-9f0d-77b8b5055cad",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "77b069c7-8390-4703-8cdb-dc081d5192ea",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a7043421-332e-46de-8d69-7400248392a6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e2c91dbd-a1d3-47ff-b5f1-a9639b908d60",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b2866517-9954-42eb-80b9-8361bad32d21"
                        }
                      }
                    ]
                  },
                  {
                    "id": "94b25c32-b9b1-4653-8290-9030e4ecb23f",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4fae2755-4f5d-4ec5-9fbe-6c4158c60320",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "32f369aa-ae38-4aa1-953e-37f0fb5bfbcb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4f49f93b-7cf9-4da0-a71b-1fc302e15b1b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aa8de130-9d77-451d-aaf2-257b683c6f57"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aa844efd-9436-45a2-8995-9e4e11200d18",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2c34645c-7f34-4318-9220-5dae0ecf52ba",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4c02477b-33e4-4d2e-9629-5a859d01e3d5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dab53853-95e1-4095-a802-d0673559c19c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3fe47236-27dd-4b0f-963a-1270a8e04763"
                        }
                      }
                    ]
                  },
                  {
                    "id": "df680ca2-8156-4f7c-9536-f5603c7d0f43",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f0e92774-a9fe-4e34-9a57-e1f0f542e713",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f12ba54d-3cc8-4573-b666-1d7868d4474c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "283e899a-0767-4925-a4b5-60c2d5b41e62",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a4975a4c-3e4a-4ef0-a9d2-f2bd750edaff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "47d8274a-11f6-4ab1-bf93-08870a7353de",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "86c3446f-7c28-41ee-b7b6-8bf07544bd20",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b9c9cb3a-c06e-44ee-8d03-48a2f03d88c7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9efed9a2-f391-42fc-b981-166b0d8885e3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dfde63a8-3cb0-42a1-8be4-13f3cfe0fcd9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bcf1e53f-4c0a-4547-b3a6-06e50af15e6a",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "384470d0-8ba7-491b-94a5-028899c38739",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6a9ff089-6551-48af-89fd-e7365dc80e0a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a8d3fa5e-6048-4893-8dcb-3f1ee73b58b2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fced5106-143d-4b85-9ed6-3fc8c09cd998"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d7dada6e-9817-4e86-a9c7-da77ac814c64",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "261a2fbb-15de-4e3a-acb9-ef08007686e5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0eb4bb62-359c-45ad-97e6-7837d300a26c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf7557d8-0308-4eb2-945a-e88a4074fc95",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "10b31dc2-4393-42b7-a915-1b6ecd8f5e6b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b65f8690-150e-4f1f-a44c-89cf72275d57",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "38271e89-ce7c-42e2-bba7-3eca64a326f8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f09ff76f-fe66-41cd-a608-5ba391db5664"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff2cf405-b8fa-4545-a98c-d2e3d100ba8b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6a5cd585-791c-43df-8d53-b6e51f341b79"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c899290b-1605-4c31-a59c-13a23775897c",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9787bb82-ecab-4017-850e-4b9c96fa2e5c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1b5df304-b99d-4a0d-992f-8d806c8424f5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "47e92eae-9a52-4581-850d-3ea40ded0e4e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9a0f26d0-87b3-4926-ab87-4a4b628b9ad6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d57d17f1-1fee-4269-b01a-93b576dd95fb",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "00899901-93aa-48db-bbc3-2446869d513b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f13b9ce4-9a75-4d73-905b-d72fa8c490e3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f62ce3d3-1f4f-4880-be83-b2537f32ef6b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cbf2891f-edc4-4c6e-a1ea-04a634257bde"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ee4d78b6-b16d-4d53-bbb7-ffa727cb5b30",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1c669c36-08b7-45c5-a207-ad9b082e4f3a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "99230fd4-4d49-4663-92c1-0e7c449691de"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e69a48c4-d32d-4cf2-8e82-cf07f0d39805",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "700f53eb-ccf5-459d-a74b-165716f0b95c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9654bcd0-f99a-4c50-a175-e76305b706d5",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ba51e9ad-aa29-4353-a206-bee2cfa4372b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "47ad9511-262f-4af9-b91b-a4ab80994d6f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "de40ca02-1e6b-434e-8e7b-08190dcd205d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cc3653d1-9a69-4972-830d-3f0a3f0b3347"
                        }
                      }
                    ]
                  },
                  {
                    "id": "25180b6d-7403-4b97-b88f-f3e28f09063c",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d1f59652-cf69-4000-ae52-f1d5d8fdb739",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "dcf50ba1-899a-4ea4-9eed-db7cfa7cb448"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3a702465-375e-45e6-8c05-41e3ee9f9057",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9645b283-5306-4113-86f6-b3a4d39a6fed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "75f6bc1e-5fda-47bf-9aef-68c64d4da351",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "318f7a42-0d33-4a91-a051-c0585251901d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "101eaf37-87ef-4644-a254-1aa817fddad7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ad3e2930-1600-46cc-9f4f-9ae162a6964c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a332a7ec-7f31-451c-8672-3149bd6ae12c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "520dc668-a771-45ac-9204-de3a41dfd9fb",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2724c8f0-b90f-4baa-a0a4-81b45763a5a6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b16000ab-cae0-44fa-a0a0-0fc1d0cfbbb3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "357a2b80-4644-4abe-afb6-7e0456149564",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1f902930-6de5-4b98-b199-e9c97c216d44"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9c0ece52-3649-4ac1-89ee-317d2042dffb",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0126d5c1-8c2d-47b7-a5d5-b975ad884624",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a3772d63-4251-46f7-a324-5fc5b7f37094"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f800c5ec-d738-4d8b-8bde-ae12d2cc79f2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "57eb97c0-4d31-4421-87e3-0e41b4139f30"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0f08d568-c203-4979-920e-6570254b2882",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "784d350c-6a62-4378-8549-fe6e2282df1b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "58516492-ee98-4429-84d3-8fe6c6ec17dd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e2b3f745-85b1-4fdf-ab48-7667131be28a",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a09c0e6d-b073-4bcf-822e-b881d15e8c82"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e1e5a0aa-8c22-4ae4-b54f-b413a24f5641",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "84b99cba-4ee6-49d9-9aa9-632a795dea30",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5549001f-4f73-4159-a259-5b746b985dac"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bd1aee61-8a45-416c-b6b2-7d9726d19702",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2883de9d-f32f-43a8-8f35-043329fc4795"
                        }
                      }
                    ]
                  },
                  {
                    "id": "49f9fc72-b178-4f07-b54e-4a778579d2a2",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "babb21b1-c5ef-4ddb-9bca-bc7e47b3bc4f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ed7d08c4-682f-4547-abb5-efd870270063"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "12cd568e-9c50-4509-bc9b-9822165702d5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "21edb3ae-fa44-48c0-b218-d4798ec3450b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "20bd0e6e-1f24-44b4-8474-51da639e1c55",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d4105c8c-de72-4a0e-bef9-4593f6c04728",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "076577cb-fdd2-42e7-b152-9c48deb626aa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b3a0e57a-1538-4077-a166-900feb826c8a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "195d3bd0-a2ac-4997-9dac-46371a8d414a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "39a77ba7-4f3c-4974-9627-ee22f1aa972f",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "61187dd0-4c44-4ab6-b3cd-54c4ad804d77",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "217bd8dd-158c-47ab-9e07-d718c39e5928"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5be234e1-75b0-4807-a9b9-275f1a293951",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cde0998e-54eb-4349-b103-af592fd51c93"
                        }
                      }
                    ]
                  },
                  {
                    "id": "db32b779-3c05-4280-a23f-8e9aec0c05d5",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1b507174-e8c5-4ffc-99c0-0e590778814e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ca37ddb0-4070-4217-845d-2604341b38fa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bff0db04-0df8-4d6e-9838-ab65b87f4abf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e45b0e4e-43de-4c4f-9ee0-28487a6f7d02"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fbeb8dd7-326c-49b6-b43d-3f70658c51f9",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "80368c32-f0b2-4411-94ff-710770c4f89f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8b41edac-7a30-4be0-8c44-9a3d524bd1c1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "56be980e-852d-4db6-bd1e-11ccbe9437b8",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dc7dbe9a-3fcb-44b7-8ea5-6130b96fb6a3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5f881ad0-0671-407d-8316-2722d081f6fb",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d6beca94-0c9c-4a03-b698-3c28d79e8e8c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d01d82f8-4688-4a99-98b1-7162aa9f3a73"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6945faa0-9a78-47b0-9004-60ad80e0347a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "640e1e96-b38e-4aa2-8cf0-09a665c200eb"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "8c3ebe1c-9e88-45e4-83e3-64cf5528b166",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "fc96a5cd-9b8a-47c3-94c4-760927fa1477"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "d6add41f-fc01-4841-8bc3-93abd84fccdb",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "2c17624f-f3f7-4d80-bc80-1d1f781a02cd"
                    }
                  }
                ]
              },
              {
                "id": "5f98b8e2-f549-40fe-a8bd-40c8705a854f",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "c9b83607-7b06-4f43-aaaf-3fbd9bbfe982",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3b4b16f7-30b9-4dde-ac0c-6bbcd0f85a00",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "75eee6ef-f92e-4e1a-afda-1e59483f1952"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1bd90f82-a30f-4eec-97ea-3527135670db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "66e9587d-448c-4b46-9103-5a14c0759f84"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "93cff694-da58-41ff-badc-4b6927f56ecf",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e2b3e7c5-9171-4cef-b2ed-8cf6004b73e9"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "662312ce-8d71-4ccc-8930-c5ab62bd3241",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "cbe4da9d-b738-4dd0-b22a-a61db7aa191f"
                    }
                  }
                ]
              },
              {
                "id": "87dac9cb-2257-43c2-b547-39ebe8b63bc1",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "f45ff193-50ce-421c-8a7b-0aa613f10f68",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6c6a8bee-64b0-41d2-bc01-fd093bdd6a3e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "c81392f8-603a-4547-9182-6befe96cdb23"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b3f3cb11-ff4b-44bc-8ec0-0a173cc32ca3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5a0ba59b-d3fb-4703-bab5-25570a45de08"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "861cc4b8-96c8-4cf1-8010-1df0fd6cedca",
            "name": "Positive Testing",
            "item": [
              {
                "id": "11265588-3d13-41cb-9842-3086b7e21c98",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "78ca75b6-cc53-4b50-ac76-007bc1a949e8",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "c4718e81-b6fa-40df-9855-6e477d424aaa"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "073c32f3-292f-48d9-a9e3-f1341a607c74",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "5a5a3680-43bf-4a9a-ac70-de437f3a1d68"
                    }
                  }
                ]
              },
              {
                "id": "48841940-bcfc-4081-9b7e-bfd8fcaa77be",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "95efbe1b-6d94-43d3-a219-69b4162b51d5",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "fcba4c9e-fb47-4d23-9907-a4e70d01d420"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "db3361cb-70cf-4af4-be2e-76d9c91c2ff1",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "0d2f7e45-4bdc-4f17-8334-4fd41d5cfadb"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "abf34888-3a49-4964-a3e9-32370dba2c9e",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "27ed0e95-78b9-4e04-a3d9-99e82ff8cc65"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "0b937518-706e-47da-bbc8-6c88c2508d88",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "09dbc99a-d1df-485c-b20e-a79e7cb50dec"
            }
          }
        ]
      },
      {
        "id": "4e043743-cf69-48e5-af38-218558f352d2",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "eb8a8be4-6f87-43b9-a880-9eebd209aaa0",
            "name": "Negative Testing",
            "item": [
              {
                "id": "aff5365e-50aa-48d9-a218-a0c2374c0c25",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "234441ee-97b4-4864-998f-1fa555366a3e",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e20b83b6-db6e-4f95-99c2-bf6277d68a1a",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "1136f744-267d-4a8e-a908-335b61c57ee2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a132b2f1-9d21-46ea-ac66-057257cd046f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "97f2898a-247e-4634-91e6-d697b5f97e67"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "f3e654e5-9f01-450c-b89f-982c4104b1a0",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "76764cb5-0b57-4e50-9107-548d3db437e5"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "1e43aa16-7c26-477f-abd6-25ac9f450d64",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "9719a3bb-ad1f-4efa-b93b-ec1f40918d30"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "693fa09a-64c5-4d73-860b-cb3fab7dfcf0",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "eb57d2de-e536-45c3-ae84-023229d8cd6e"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "397cce5e-ee15-4e19-bd0b-e1a1f6c18f1a",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "6a479019-57a1-4fbf-8510-cf3764d1ece2"
            }
          }
        ]
      },
      {
        "id": "38428ac8-a87b-45be-968d-7b25bf89665b",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "8a20eb81-39ad-42ee-a153-11bb3709610f",
            "name": "Negative Testing",
            "item": [
              {
                "id": "9b0752a7-94d8-4830-b1f9-4fc17b04abd4",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "c073775e-9e7d-4ace-9846-382b3a708f1e",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c0f26179-a222-41bd-bbae-343ac10eba48",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "9ac35108-604f-432c-9999-8bcc8c2b4bdc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f3ca4291-0321-42c5-a65c-589ab8a6a6a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "26fdad65-a6e3-4770-bf5c-4083206a5a74"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "4f5fbd3b-32ce-402d-98fe-6eb9a031c8c4",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "0c3273b3-7105-4c85-8259-79ef32e2dfbd"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "43eab1c3-92dc-46da-bc5c-aa4933cca558",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "a39bb89f-b636-4d13-a297-fac9ed522602"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "343a6ccd-d701-409e-9f8c-926e72910f2e",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "6efa2f3f-70bc-400b-8bd0-61b3f98750f8"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "c5c15b87-09f9-4daa-a75c-ef78104abcc2",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "70630d82-223a-4d6d-b60a-13477653af71"
            }
          }
        ]
      },
      {
        "id": "aabc993c-6446-40d9-8543-fb5e60f8f862",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "5dfc9561-ab10-4694-8992-33e2c81789cb",
            "name": "Negative Testing",
            "item": [
              {
                "id": "b80609f8-a16f-4294-bb32-8d59668574df",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "35c2ad53-f94d-4985-be2c-0b86c6433674",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6abe6c09-13b4-4e10-9401-9f3aad8845cc",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f2c8eff3-4157-4ca5-96a7-3ad20bef06bd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fd5dd3fa-5e5b-447a-885d-696e0b431216",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "ed99dd13-48c8-4f24-8ed6-4b471a3849e2"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "f0dfd8e1-371b-4205-81c2-3bdd42cd45be",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "63411217-13dc-4b46-8110-6a2c0ead5881"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "e94a5baa-85b7-488b-81eb-36def7fe2a3c",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "c38db875-69a9-449e-8dc7-2a1fe3bb0b84"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "a25a7672-043a-4d98-8a37-b4e624021722",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "7c8d6ddb-8697-4c6b-93c3-02483ddb4c05"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "892f292e-b02e-4ff2-a9de-331d6b7737f5",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "f4acd8e7-d863-4100-af61-3495b3834d86"
            }
          }
        ]
      },
      {
        "id": "6c661c29-bb25-4cfd-976b-0587216e2700",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "351fa903-c033-4bbd-8b22-3ea969c48a44",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "0a46476a-f1ee-4f2b-b5d2-712bbd792242",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "58b5717c-c98d-4303-a61a-d8870b5053c9",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "e18db349-8a61-46f7-887d-3bfb1c3d2009",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "ce2450b9-6f15-4c3d-9b1a-9cc71f062179",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 2091,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 285,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 573,
        "pending": 0,
        "failed": 9
      },
      "testScripts": {
        "total": 1050,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 1041,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 144.1929824561404,
      "responseMin": 7,
      "responseMax": 2914,
      "responseSd": 323.1734984898866,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1704674239299,
      "completed": 1704674289908
    },
    "executions": [
      {
        "id": "06227710-fdb6-446a-82fa-2cb50aaac5fe",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 283,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "4f02d61e-d071-41c6-9622-42e173e21c3b",
          "httpRequestId": "dc0254bb-b41f-4a09-a9ad-cdb607b7baee"
        },
        "item": {
          "id": "06227710-fdb6-446a-82fa-2cb50aaac5fe",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "7a6e974f-8f90-4767-b0c8-cb1804af76e8",
          "status": "OK",
          "code": 200,
          "responseTime": 45,
          "responseSize": 0
        }
      },
      {
        "id": "0b3547df-0246-4b20-a055-a3f00892e2b4",
        "cursor": {
          "ref": "5635c5fd-b11c-4d2c-909e-1338696035fe",
          "length": 283,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "08495b02-e29b-4288-9f24-cb177bceaa28"
        },
        "item": {
          "id": "0b3547df-0246-4b20-a055-a3f00892e2b4",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "97392cf6-3049-4270-b1b0-dc9f739182c6",
          "status": "OK",
          "code": 200,
          "responseTime": 7,
          "responseSize": 0
        }
      },
      {
        "id": "62d52a90-2603-46ab-ac25-874454af6224",
        "cursor": {
          "ref": "6827e705-724d-4515-a9fe-df14e3812a8f",
          "length": 283,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "c5352ba4-2923-49c0-962b-b8cb042989c5"
        },
        "item": {
          "id": "62d52a90-2603-46ab-ac25-874454af6224",
          "name": "did_json"
        },
        "response": {
          "id": "7f1db1fa-a35c-4fba-a5ca-13e8e46713a4",
          "status": "OK",
          "code": 200,
          "responseTime": 684,
          "responseSize": 1640
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "07d41be0-a431-4967-ad3b-0cf228100143",
        "cursor": {
          "ref": "4a202111-e67e-49f4-851d-b467bf9c8103",
          "length": 283,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "fd123f46-4bab-4d12-acd8-077d13a2a29d"
        },
        "item": {
          "id": "07d41be0-a431-4967-ad3b-0cf228100143",
          "name": "did:invalid"
        },
        "response": {
          "id": "75cb48a6-359f-43fd-ab45-21b1472e780d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "07d41be0-a431-4967-ad3b-0cf228100143",
        "cursor": {
          "ref": "4a202111-e67e-49f4-851d-b467bf9c8103",
          "length": 283,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "fd123f46-4bab-4d12-acd8-077d13a2a29d"
        },
        "item": {
          "id": "07d41be0-a431-4967-ad3b-0cf228100143",
          "name": "did:invalid"
        },
        "response": {
          "id": "75cb48a6-359f-43fd-ab45-21b1472e780d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e7d9518-6e39-4fc2-a339-c683c846b4d1",
        "cursor": {
          "ref": "cba22f7e-304d-40be-9bf1-92daf757e6e9",
          "length": 283,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "a50f7141-c965-40f2-8425-de227c05bd5e"
        },
        "item": {
          "id": "1e7d9518-6e39-4fc2-a339-c683c846b4d1",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "65b74df2-72e4-4153-89da-1c8791655857",
          "status": "Not Found",
          "code": 404,
          "responseTime": 144,
          "responseSize": 78
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "46dc9302-84e8-425a-929f-29a03d1f0dbb",
        "cursor": {
          "ref": "a7169736-25ce-4502-952d-a06394fa5b55",
          "length": 283,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "99195a6d-6b02-4864-aaad-a1f53497be5d"
        },
        "item": {
          "id": "46dc9302-84e8-425a-929f-29a03d1f0dbb",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "0e2ef641-df4d-4abc-8551-93e90fad2d93",
          "status": "Not Found",
          "code": 404,
          "responseTime": 85,
          "responseSize": 78
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e776354-38e0-4db7-a379-3e6469d5ae80",
        "cursor": {
          "ref": "3057c7d5-b234-4e29-9110-bcf3ce794186",
          "length": 283,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "7a1845fa-8efa-4287-864e-03547183678e"
        },
        "item": {
          "id": "8e776354-38e0-4db7-a379-3e6469d5ae80",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "c417ab5e-c6fa-4c70-9065-869b4d8affa2",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 90,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6d94d122-c314-4d23-b603-8ae7c0274a7a",
        "cursor": {
          "ref": "86a14d18-9b45-4749-9321-037532c6cbc5",
          "length": 283,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "9603520d-b6c3-455b-9939-e0cdd903f38b"
        },
        "item": {
          "id": "6d94d122-c314-4d23-b603-8ae7c0274a7a",
          "name": "identifiers"
        },
        "response": {
          "id": "ae1b5e64-cc08-4612-aafd-8cfadde414ed",
          "status": "OK",
          "code": 200,
          "responseTime": 336,
          "responseSize": 1656
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "42bf5c3d-9321-443f-a989-28ccd982bc5b",
        "cursor": {
          "ref": "b0afb58e-9d16-4e39-8848-902c35f40f4d",
          "length": 283,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "3bc2ffb1-3918-4868-a68c-50b405c5843d"
        },
        "item": {
          "id": "42bf5c3d-9321-443f-a989-28ccd982bc5b",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "4a57868f-416e-48d1-bcb0-c5f1ad469af9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 92,
          "responseSize": 301
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f5e4aacc-9b0d-447a-af19-1d0e467876b8",
        "cursor": {
          "ref": "3773ec2a-8142-4f68-9458-520e3c19455f",
          "length": 283,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "036941a5-d4b9-4cb1-9ecd-cadbfd682cc8"
        },
        "item": {
          "id": "f5e4aacc-9b0d-447a-af19-1d0e467876b8",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "858c8554-ea1f-41d5-8ba1-5bfa74b6d2bd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 92,
          "responseSize": 511
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7da45f24-7f8e-4e2b-a6c5-deac81e11fba",
        "cursor": {
          "ref": "42292605-4891-4316-8231-06270038dea4",
          "length": 283,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "997cadcc-4460-42de-9333-8e6cbefd8a05"
        },
        "item": {
          "id": "7da45f24-7f8e-4e2b-a6c5-deac81e11fba",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "205a927d-afde-4f71-9c46-2f9041ba4073",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 92,
          "responseSize": 519
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f25c24c3-36c8-4f3f-a9e4-cb3ef3fe9c01",
        "cursor": {
          "ref": "af46372d-581a-487d-a314-bcffe6e9300d",
          "length": 283,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "e60dae34-257e-495a-bee3-e116f82dccfb"
        },
        "item": {
          "id": "f25c24c3-36c8-4f3f-a9e4-cb3ef3fe9c01",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "c3af56df-1547-444d-896c-cd3310a7bca0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 91,
          "responseSize": 516
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "422dadf6-968c-4c0d-8782-2fa8c8bedcc6",
        "cursor": {
          "ref": "06fb8bc7-4572-42e5-94a5-92283bff52e2",
          "length": 283,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "554e9053-58c9-44c6-827f-0e0ed91b7593"
        },
        "item": {
          "id": "422dadf6-968c-4c0d-8782-2fa8c8bedcc6",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "b820c9ac-e5fc-4d04-8af5-1994c3f7c407",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 90,
          "responseSize": 518
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "96304e2f-f353-4ac6-97cd-b3da903c2df6",
        "cursor": {
          "ref": "f19a7712-aae9-45f9-a98a-a18285528cf8",
          "length": 283,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "9ff2025e-fd4d-4323-afdf-067e2ff35076"
        },
        "item": {
          "id": "96304e2f-f353-4ac6-97cd-b3da903c2df6",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "ce71c591-ae04-4cd8-a07b-83fee537e375",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 89,
          "responseSize": 565
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5c93c57e-4bcf-438e-a7fc-174f56b40a71",
        "cursor": {
          "ref": "06da393a-1edc-4a7f-8a30-698e8b3ae8ab",
          "length": 283,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "769d6709-9763-4710-bc4b-5b84d300d9eb"
        },
        "item": {
          "id": "5c93c57e-4bcf-438e-a7fc-174f56b40a71",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "5a208ada-cf18-4313-8697-2ad830e4f7c7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 554
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3eee1154-4ad1-4b2d-9348-60d784a7c739",
        "cursor": {
          "ref": "b6c3fb5c-c689-4eb0-96ae-c84d9dd084c9",
          "length": 283,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "45aac240-3f1f-4b9a-9c7e-06401a9bbea7"
        },
        "item": {
          "id": "3eee1154-4ad1-4b2d-9348-60d784a7c739",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "94a2f481-077b-4821-8de0-21b5fa74f21f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 90,
          "responseSize": 603
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c8eab1b5-42e6-4305-8343-598478c7d73b",
        "cursor": {
          "ref": "60d8f65c-cefd-4765-9ea4-b088a6221fbc",
          "length": 283,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "d17cb890-1bd3-4818-95ef-4ff1a7a9f84a"
        },
        "item": {
          "id": "c8eab1b5-42e6-4305-8343-598478c7d73b",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "a20cffc6-48e5-4e7b-b310-2c71ce42ba38",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 90,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "200e39d8-08c7-44c2-9569-b21e3634d289",
        "cursor": {
          "ref": "0f4f0dbb-d2af-4256-a155-5c80e8553a83",
          "length": 283,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "a7e20e42-811e-4db4-8acd-853f6cb243d0"
        },
        "item": {
          "id": "200e39d8-08c7-44c2-9569-b21e3634d289",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "7bb6338a-d421-4714-a99a-610e03338edd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 87,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "02fc92ac-53b7-4dba-8287-ff177926824d",
        "cursor": {
          "ref": "5fb7c3b9-2be6-4b68-95de-fd4a33b82217",
          "length": 283,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "ec26a69b-d148-4771-bbd3-3ac81ebdc95e"
        },
        "item": {
          "id": "02fc92ac-53b7-4dba-8287-ff177926824d",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "2a22d087-c3f6-4303-bd31-d71880a5d6b6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 95,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3a5aa3a3-881f-4f69-89d1-098524f666c9",
        "cursor": {
          "ref": "52015354-7803-4851-b708-78acf8693116",
          "length": 283,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "1a0d8934-332d-454a-b922-4df3777f1b20"
        },
        "item": {
          "id": "3a5aa3a3-881f-4f69-89d1-098524f666c9",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "8c193558-c68f-4d74-b7b0-0dd1e541d996",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 612
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "76fef29e-a01f-4290-9eac-07fb489794da",
        "cursor": {
          "ref": "99912b9b-99e1-4d9c-a795-4fb8e515e0c6",
          "length": 283,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "c9e6cb48-b359-4e5b-81ed-c2e541d9ed85"
        },
        "item": {
          "id": "76fef29e-a01f-4290-9eac-07fb489794da",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "3bd31907-8766-4859-a225-82f35e72ca98",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 98,
          "responseSize": 627
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8b622c61-9fa2-43dc-98a9-a022bb2c1052",
        "cursor": {
          "ref": "081612fb-87db-4fc2-899c-86f1c0edfce9",
          "length": 283,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "1b453670-dc45-4bbc-af17-4dbc2c087c09"
        },
        "item": {
          "id": "8b622c61-9fa2-43dc-98a9-a022bb2c1052",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "04d283fd-7b36-4761-afa5-c367ffd020c5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 100,
          "responseSize": 583
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "49c3a4bf-37be-492f-a3c9-32da738d7e2c",
        "cursor": {
          "ref": "807136d7-6cd2-4bb3-b3be-cf64a020c2c0",
          "length": 283,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "a8b4397e-a9cf-4801-8296-cbdbbf1ba611"
        },
        "item": {
          "id": "49c3a4bf-37be-492f-a3c9-32da738d7e2c",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "4c28e92c-45b5-405f-a2dc-01dee8c44a31",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 87,
          "responseSize": 580
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c636d730-1291-4b14-a7c4-dcea3d09f423",
        "cursor": {
          "ref": "6efe2b1e-3f59-4dae-9e58-3ffd2503838b",
          "length": 283,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "cb580ca9-2102-41f9-b964-7508234bb0d4"
        },
        "item": {
          "id": "c636d730-1291-4b14-a7c4-dcea3d09f423",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "2d6484a3-58f9-4b4e-b2b7-ddb05774841a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 90,
          "responseSize": 582
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "704802b3-29a3-4df1-8d87-34c8727d70aa",
        "cursor": {
          "ref": "083b1389-4cf8-4dba-8fa8-a4ce4306cbf8",
          "length": 283,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "c48c5a57-8367-4601-88cf-215c9817f96e"
        },
        "item": {
          "id": "704802b3-29a3-4df1-8d87-34c8727d70aa",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "1cceff53-9c33-4e5b-bd44-170d25a68402",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 632
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c1d963ab-c00a-4e4c-bae8-9b0b8663986e",
        "cursor": {
          "ref": "bbb6adb0-c6cb-470f-bd53-75a8fe25b489",
          "length": 283,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "3b488c6f-83d1-48fe-8708-302a8c309819"
        },
        "item": {
          "id": "c1d963ab-c00a-4e4c-bae8-9b0b8663986e",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "5e625bfc-5e6e-472a-a6bd-43fc6b6d18ba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 92,
          "responseSize": 560
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ed078091-53f9-4b23-ba22-8861f826e6fd",
        "cursor": {
          "ref": "612df189-38f5-4e84-a947-0b6a52297dfd",
          "length": 283,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "c38ae898-b204-4800-8b9f-8eef57eb1d19"
        },
        "item": {
          "id": "ed078091-53f9-4b23-ba22-8861f826e6fd",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "cd100969-a015-4c03-9625-0135c81056a0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 91,
          "responseSize": 555
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "56e880a3-09f1-4d4e-b37e-fee166184d3b",
        "cursor": {
          "ref": "a31308c5-aa29-4fb4-b553-35c95462213e",
          "length": 283,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "22c70638-0a6e-48c0-9178-c476afc3cd2b"
        },
        "item": {
          "id": "56e880a3-09f1-4d4e-b37e-fee166184d3b",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "4776b1b8-b926-4a1e-a985-925713873735",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 103,
          "responseSize": 552
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f913651e-faa3-4440-b98d-3368071010fc",
        "cursor": {
          "ref": "ff0d1200-bc95-4ee7-ac7a-b63e8e7b2303",
          "length": 283,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "9a4f55d3-ed2f-42b2-b77d-accb8b0cfd5f"
        },
        "item": {
          "id": "f913651e-faa3-4440-b98d-3368071010fc",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "5151c068-a63e-49b6-ac71-4b81268e72f0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 88,
          "responseSize": 554
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e680f0e-c8f2-40fb-ad83-ef67a5a35aa3",
        "cursor": {
          "ref": "bf2cd192-1a7b-464d-b13b-8bb7bfd7572d",
          "length": 283,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "7b65f5a6-2f02-40a9-9159-2a13070fb6d6"
        },
        "item": {
          "id": "6e680f0e-c8f2-40fb-ad83-ef67a5a35aa3",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "85db1877-09cd-4e33-ac1d-50436e017c8a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 138,
          "responseSize": 552
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d6298aea-b424-42cb-96c0-a2e4bb117cc8",
        "cursor": {
          "ref": "bd550516-96f5-4607-b18a-af5b394b2294",
          "length": 283,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "8dd97a47-dfad-4d90-8df2-b9b666c400a5"
        },
        "item": {
          "id": "d6298aea-b424-42cb-96c0-a2e4bb117cc8",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "8ffdec80-144c-4b4d-8a85-0255315f2818",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 89,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f4587961-1f82-4c89-979a-c9bfd39de954",
        "cursor": {
          "ref": "4165673a-0af4-4342-adfd-6ec90ec967d9",
          "length": 283,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "299b07da-e8f3-436a-959c-b137f7c95db9"
        },
        "item": {
          "id": "f4587961-1f82-4c89-979a-c9bfd39de954",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "41a334fd-2cef-4075-96d2-92b4a6d5a8bb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 94,
          "responseSize": 574
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0b3f1e1c-9ab9-4cf8-8985-4cdf2de301e9",
        "cursor": {
          "ref": "88dd8cd6-4c71-4cca-a17f-c5e3f0ff3672",
          "length": 283,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "46c4ae19-8468-4fb0-b13a-658750813ed2"
        },
        "item": {
          "id": "0b3f1e1c-9ab9-4cf8-8985-4cdf2de301e9",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "281eef27-e23b-44ce-8e8f-68063c98b3d1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 91,
          "responseSize": 600
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c63f43bc-d06d-4ad3-98ac-84c172a8bd7f",
        "cursor": {
          "ref": "b6a7ddd2-1662-4a50-96bb-caf0bbd2826f",
          "length": 283,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "bcebf86e-22fe-49e7-bd48-1abf781be217"
        },
        "item": {
          "id": "c63f43bc-d06d-4ad3-98ac-84c172a8bd7f",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "498b247c-185c-423d-b130-c985b484baa3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 90,
          "responseSize": 590
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "29bc3742-09c5-4853-af65-aef74fd23fe0",
        "cursor": {
          "ref": "d9c3210a-edae-46c2-8ec4-f28b2255f1d1",
          "length": 283,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "e092e337-084c-4813-9176-0a601ffdc882"
        },
        "item": {
          "id": "29bc3742-09c5-4853-af65-aef74fd23fe0",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "b77c813b-d47b-41b3-ab79-b0052dbfa712",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 88,
          "responseSize": 587
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "26ae7e03-818c-49e9-9e80-ed6b619cbde9",
        "cursor": {
          "ref": "2ef2b7c0-8001-4083-b687-9d1830c3077b",
          "length": 283,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "44aeea29-6229-451a-8520-932aaa3f3dde"
        },
        "item": {
          "id": "26ae7e03-818c-49e9-9e80-ed6b619cbde9",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "26ea8743-f788-467f-8fbe-2fd823452014",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 87,
          "responseSize": 589
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1bcba8cb-1bcd-44f9-a175-e8d40d315529",
        "cursor": {
          "ref": "057bfb4b-e0f1-4a56-b795-d161a1e0dee4",
          "length": 283,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "e54e9319-d9f1-4568-a2fd-3c2058c85233"
        },
        "item": {
          "id": "1bcba8cb-1bcd-44f9-a175-e8d40d315529",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "f7f18668-3734-4f14-993b-d97e5f8b79af",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 587
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "62cbf7b6-7f1c-4a36-bdb8-239fe725f5d5",
        "cursor": {
          "ref": "33c306a9-567d-49f3-a190-b00e651b75ba",
          "length": 283,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "29e95e89-eaf8-4731-91d4-c519cbf5d9ed"
        },
        "item": {
          "id": "62cbf7b6-7f1c-4a36-bdb8-239fe725f5d5",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "81110f2c-c1ef-4561-9f92-2373d9fa15c6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 94,
          "responseSize": 512
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8410bee5-2a28-483b-81ed-6b4b3cf6c7ec",
        "cursor": {
          "ref": "da8337a7-38e2-4547-9181-360b9aef8150",
          "length": 283,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "51d7725e-5098-4716-8a15-928ee7198018"
        },
        "item": {
          "id": "8410bee5-2a28-483b-81ed-6b4b3cf6c7ec",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "8f18b074-b3d5-4a55-89cc-3e4f48b4b562",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 1012
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "571908a7-0c89-49ff-9c69-d0f0c2774df0",
        "cursor": {
          "ref": "d0ed6933-f3f5-4f9d-b02b-335d47d5d094",
          "length": 283,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "522d50c8-6127-4142-be02-4cb12ebe06c3"
        },
        "item": {
          "id": "571908a7-0c89-49ff-9c69-d0f0c2774df0",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "0051ef09-24b9-41b5-bd28-2f06d457bc10",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 88,
          "responseSize": 941
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "872b65e9-aabc-4928-9af3-e946ad591765",
        "cursor": {
          "ref": "b2c0f6ba-d573-460c-99fb-f7be3a73a35d",
          "length": 283,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "1f5fa4d9-9b55-458b-a51e-57e5b924dca4"
        },
        "item": {
          "id": "872b65e9-aabc-4928-9af3-e946ad591765",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "440c471c-819a-4fc9-b530-bbf321bc0972",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 87,
          "responseSize": 938
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "888782b0-f3ea-4a21-93a3-4dabeb1c079e",
        "cursor": {
          "ref": "992c0f75-2b67-4d27-99e8-e46bd37a81ba",
          "length": 283,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "a50765b5-c336-4349-99c6-1c9fc796089f"
        },
        "item": {
          "id": "888782b0-f3ea-4a21-93a3-4dabeb1c079e",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "7b85c9f0-a1d9-40ec-89ba-7717ece38d4e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 88,
          "responseSize": 940
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "56eb3bda-0b30-4ecf-8c4d-7e9bab4904a2",
        "cursor": {
          "ref": "53bba92b-9626-4e71-947d-f93e8af00f2c",
          "length": 283,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "fab6417b-7f5f-4afa-a2fc-42779d4ba4a3"
        },
        "item": {
          "id": "56eb3bda-0b30-4ecf-8c4d-7e9bab4904a2",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "fd05cb60-519a-4104-b995-8b5f8e76ab57",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 90,
          "responseSize": 1343
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "98e6dfd2-2f4e-4ee6-831f-a1a1bd80eace",
        "cursor": {
          "ref": "f1a0dc44-3c59-43d1-a985-30cc954fda87",
          "length": 283,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "0e7441b4-1f68-4ae4-8072-e1daf99fde87"
        },
        "item": {
          "id": "98e6dfd2-2f4e-4ee6-831f-a1a1bd80eace",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "6d2f5411-c56f-443c-b6ec-73e34253f4c1",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 353,
          "responseSize": 90
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f54205ef-68c3-4264-99cb-4fd444b34db2",
        "cursor": {
          "ref": "e5eb7f14-3067-4dea-a35c-62ab3198dafa",
          "length": 283,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "ede43fbf-93db-4ea3-be87-a5c6b5e402e0"
        },
        "item": {
          "id": "f54205ef-68c3-4264-99cb-4fd444b34db2",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "f519ce51-59ef-4c82-a8aa-10bb0e6485e8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 100,
          "responseSize": 971
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7b34df55-05d7-4e52-a03e-991f2e4d125b",
        "cursor": {
          "ref": "9c4771e5-1d4b-40ac-af91-753e8a445bf8",
          "length": 283,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "8ff89da4-8f67-4a74-afb6-b8cb26ffc5de"
        },
        "item": {
          "id": "7b34df55-05d7-4e52-a03e-991f2e4d125b",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "e35c7601-9b55-4f99-b742-28bd5e3ea939",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 87,
          "responseSize": 1351
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "417c0dc3-cdeb-4659-a7db-309371a793f1",
        "cursor": {
          "ref": "d396db1e-9e7c-48d1-afd3-5eda36c81dfe",
          "length": 283,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "ae690615-665a-4b26-8bd8-9ba07ad3ddd2"
        },
        "item": {
          "id": "417c0dc3-cdeb-4659-a7db-309371a793f1",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "d3f47f4a-6cb2-4066-8e47-0e7195560015",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 90,
          "responseSize": 1280
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b2d200f5-d6bf-4173-856a-983e57fe4b85",
        "cursor": {
          "ref": "37e63eb4-536a-44a0-bb82-f9ecde1db034",
          "length": 283,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "f4919881-129b-4791-8cc0-9f98af1872ad"
        },
        "item": {
          "id": "b2d200f5-d6bf-4173-856a-983e57fe4b85",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "d12444ac-c017-4347-b74b-aafc698282e1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 1277
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ebe7797d-abca-4f8b-b6ed-29352a4b7097",
        "cursor": {
          "ref": "177cd704-1c76-49c3-88b3-b7d03a2f559f",
          "length": 283,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "79ed1a16-e508-40c0-9c61-ec1e31e7a2b8"
        },
        "item": {
          "id": "ebe7797d-abca-4f8b-b6ed-29352a4b7097",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "309cf777-7674-43c1-b2b8-fbe4d4e26340",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 92,
          "responseSize": 1279
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2f5aeac3-a7b7-45b3-81a9-8a6c6b916088",
        "cursor": {
          "ref": "1e84512f-9a9f-4323-a96c-7e2ac9ae686c",
          "length": 283,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "5fd1b866-42a7-482f-8ea2-09de55da792d"
        },
        "item": {
          "id": "2f5aeac3-a7b7-45b3-81a9-8a6c6b916088",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "0406bbb6-b7b2-4adb-ae14-4d67ac0087c6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 93,
          "responseSize": 1682
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b8ef266a-2dc3-4165-b1bd-18025fd3d51d",
        "cursor": {
          "ref": "60fff4ab-c0ea-406d-9418-42b632d3d665",
          "length": 283,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "800e1f0d-3add-49e5-bdca-5b332630699f"
        },
        "item": {
          "id": "b8ef266a-2dc3-4165-b1bd-18025fd3d51d",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "27b6bef7-8aeb-4b3e-88fd-7854e14b690f",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 355,
          "responseSize": 90
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f33a2f4d-f9cb-4192-8dfc-e752e38a37d1",
        "cursor": {
          "ref": "c348b95c-f099-4314-be7c-7b92925cde02",
          "length": 283,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "0f9ef3f1-f67f-4bb0-845f-dc27815a0fde"
        },
        "item": {
          "id": "f33a2f4d-f9cb-4192-8dfc-e752e38a37d1",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "1ddba0b7-1208-46d0-9a00-022b7853b6aa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 89,
          "responseSize": 570
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5194dedf-65ea-4e92-87fc-4561ce7e04ae",
        "cursor": {
          "ref": "1d5e741f-c12f-47f2-9df5-dec20abbda15",
          "length": 283,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "872a5270-3108-470a-b399-3a9666e74ac6"
        },
        "item": {
          "id": "5194dedf-65ea-4e92-87fc-4561ce7e04ae",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "67e16116-a3aa-4ad6-80a7-368816d76929",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 89,
          "responseSize": 604
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bf625c70-a110-4bc2-9251-b522eb924d5b",
        "cursor": {
          "ref": "09466322-435c-4506-92d4-0adf0f5aa9d2",
          "length": 283,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "2cedf00f-af1f-49af-832a-091167e21f58"
        },
        "item": {
          "id": "bf625c70-a110-4bc2-9251-b522eb924d5b",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "79a48c42-9aca-48dc-88f5-aaaea3053724",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 92,
          "responseSize": 585
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ce58aaa-28a8-49d9-881d-277f3fca1351",
        "cursor": {
          "ref": "450f2356-aba8-4331-ba5f-d3d6e3cea35c",
          "length": 283,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "6eec87e8-49ed-4cdd-8463-0795b71e1c2a"
        },
        "item": {
          "id": "8ce58aaa-28a8-49d9-881d-277f3fca1351",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "0b5a6349-9ca6-4246-a707-24e57fec111e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 91,
          "responseSize": 582
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7b617fb0-5942-4dc2-99e6-7287e51c6e72",
        "cursor": {
          "ref": "177785c8-4a87-40d1-aeb4-fc1819a3d822",
          "length": 283,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "42107683-ad0f-45c8-bd03-6dfe7c6376c9"
        },
        "item": {
          "id": "7b617fb0-5942-4dc2-99e6-7287e51c6e72",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "bcb5833a-6b1b-476f-9ed9-6fa47861bfca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 87,
          "responseSize": 584
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1ee325fd-7b7e-4fc4-95a3-3955557a464d",
        "cursor": {
          "ref": "dfc09361-015d-4f48-b0f5-40634d0b5c6d",
          "length": 283,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "514e9b10-b637-4c06-9e82-bb071df4a7e2"
        },
        "item": {
          "id": "1ee325fd-7b7e-4fc4-95a3-3955557a464d",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "dc124937-56c9-44d3-92af-ebbd7b6b758c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 89,
          "responseSize": 582
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f993c763-b701-4a2f-88f5-45ac390046be",
        "cursor": {
          "ref": "c854549f-daf9-46ed-ad97-95cfed918b4e",
          "length": 283,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "d85ef5b3-00c0-437b-bf8d-76db1bcda65d"
        },
        "item": {
          "id": "f993c763-b701-4a2f-88f5-45ac390046be",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "944ce19b-6de3-429d-9a66-af61a8d0d9ef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 88,
          "responseSize": 635
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ee4cecab-134e-4c7b-bf68-f714d6e14f49",
        "cursor": {
          "ref": "e625df9b-f730-4536-9746-2919125bcd2a",
          "length": 283,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "7e72a4db-d37e-42c9-8107-c5203b8cdf86"
        },
        "item": {
          "id": "ee4cecab-134e-4c7b-bf68-f714d6e14f49",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "7c9af9b8-1b44-4373-96d2-ef034fc73283",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 86,
          "responseSize": 584
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c7f74d4-35f5-451a-aa6a-c7d401c8f7c1",
        "cursor": {
          "ref": "ff7b9b34-27b8-4b75-b5f7-d38a7cdfb906",
          "length": 283,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "de6e4d8e-1e53-47a1-9d59-5b190043de8a"
        },
        "item": {
          "id": "2c7f74d4-35f5-451a-aa6a-c7d401c8f7c1",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "fce72d43-7668-4062-b6f5-833c21f06b3c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 91,
          "responseSize": 1055
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ff40b6a0-890d-4347-9641-4a453a1ffc9d",
        "cursor": {
          "ref": "05823054-7528-4d99-9d64-493381a235f2",
          "length": 283,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "2366f309-5868-4d2f-9916-e7e46f228dff"
        },
        "item": {
          "id": "ff40b6a0-890d-4347-9641-4a453a1ffc9d",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "ee74533f-5ca7-4013-8cbd-cc225cb9b4d8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 89,
          "responseSize": 864
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4bc529ea-6e31-4e60-8c8c-24f6c239bd59",
        "cursor": {
          "ref": "3feda05e-c5cc-4d69-9d99-f276e516062e",
          "length": 283,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "f48d9b68-430c-4853-bc93-5a167c54d027"
        },
        "item": {
          "id": "4bc529ea-6e31-4e60-8c8c-24f6c239bd59",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "8552ffc0-3a49-4d27-9f65-fe05f054fab5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 89,
          "responseSize": 861
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7e5cf1e8-6a78-4725-bf18-397c056c703b",
        "cursor": {
          "ref": "a0711abb-5393-40dc-96af-abeb0087ae9e",
          "length": 283,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "bd1056a2-8715-44b7-9b84-c2b858c0e9ea"
        },
        "item": {
          "id": "7e5cf1e8-6a78-4725-bf18-397c056c703b",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "28b1e49d-8bae-4525-8247-1836fbb7f6e2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 97,
          "responseSize": 863
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "26f5438f-493a-4605-ada4-2dce47f4d85f",
        "cursor": {
          "ref": "2c4e4018-c543-49b7-9efa-d039484ec654",
          "length": 283,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "22d4e653-5218-47ac-b86d-8812400b1ee4"
        },
        "item": {
          "id": "26f5438f-493a-4605-ada4-2dce47f4d85f",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "c7c215b1-915d-40f4-8ddc-b73abfa66272",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 90,
          "responseSize": 876
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "11cc6968-9f91-4b29-aa9b-42d5d139ea3e",
        "cursor": {
          "ref": "9edaeb38-7e89-40dd-9089-6eb6e7778153",
          "length": 283,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "53c83609-a2c1-4f93-961c-6695d0b91b29"
        },
        "item": {
          "id": "11cc6968-9f91-4b29-aa9b-42d5d139ea3e",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "c14c8e29-29d0-4f27-b8cf-0289ccdc774b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 86,
          "responseSize": 1370
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ee59b006-e20c-4c29-a170-385f5ed43a2b",
        "cursor": {
          "ref": "6ca5082a-4e64-45c7-ac3a-84a473be2cc5",
          "length": 283,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "e5e9ab82-31ea-42cd-9b38-ec79b330544f"
        },
        "item": {
          "id": "ee59b006-e20c-4c29-a170-385f5ed43a2b",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "221fee8e-6205-447e-b350-0d2125925ad7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 88,
          "responseSize": 1356
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "24c096cb-40a6-47b4-bfd9-bd987d142bad",
        "cursor": {
          "ref": "b89dd0cd-e9c6-4f65-836d-419ce0dadcd3",
          "length": 283,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "6c7b7be5-7044-4088-9260-162dda741082"
        },
        "item": {
          "id": "24c096cb-40a6-47b4-bfd9-bd987d142bad",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "cba7cb44-a276-4729-aee6-9e833fb8b18d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 91,
          "responseSize": 1353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "34609171-7400-49c5-a6f4-3010f1db7547",
        "cursor": {
          "ref": "2e60a1ec-3b96-436d-9de2-58849226c9a8",
          "length": 283,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "d46bc3d6-d46e-44da-adc1-ef2efe86b9f7"
        },
        "item": {
          "id": "34609171-7400-49c5-a6f4-3010f1db7547",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "66b77fef-14f6-481f-a14a-e4e98afd3714",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 90,
          "responseSize": 1355
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a35ca91e-a432-4f24-8a12-2bb784590718",
        "cursor": {
          "ref": "7d499fe5-9fe4-4645-a1d0-a2700b9d10e7",
          "length": 283,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "f0d334ec-b26a-4817-a4e8-a29e3c92d731"
        },
        "item": {
          "id": "a35ca91e-a432-4f24-8a12-2bb784590718",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "94d8256c-eed1-44a5-a02c-9072339caaa4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 89,
          "responseSize": 1353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3175c17d-d97f-48ea-83c8-46851654ed11",
        "cursor": {
          "ref": "2053e9cf-225b-4ccd-8105-1f3625e2c59f",
          "length": 283,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "de32c139-a927-4268-a477-1a6d55b63398"
        },
        "item": {
          "id": "3175c17d-d97f-48ea-83c8-46851654ed11",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "0e78904e-4266-4855-836d-625ac475da08",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 87,
          "responseSize": 545
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b724a417-be1b-4c19-8e48-517ae8736e1d",
        "cursor": {
          "ref": "2a416852-3e3f-4f34-9162-69c601e13d08",
          "length": 283,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "88e9402a-5d66-4030-8a79-e3f1a5c7694b"
        },
        "item": {
          "id": "b724a417-be1b-4c19-8e48-517ae8736e1d",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "e6b3be50-7928-40b3-83b3-6f1ab7a2fc6c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 89,
          "responseSize": 523
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6302308c-e09a-415f-b24c-ec5ee07d6187",
        "cursor": {
          "ref": "4ec0edde-b01e-4298-9c99-13ca93ccf3e1",
          "length": 283,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "21e466d8-a832-4682-bc84-434f6a8b230b"
        },
        "item": {
          "id": "6302308c-e09a-415f-b24c-ec5ee07d6187",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "889393ff-27be-4e07-972e-f66c6e4928a3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 92,
          "responseSize": 526
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8361515a-9169-4214-ab8e-8df379abfb6e",
        "cursor": {
          "ref": "7ae6883d-5b90-494c-ac1f-dc38262f9a44",
          "length": 283,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "5d607393-31c8-4b3f-a743-0553c9adf3ab"
        },
        "item": {
          "id": "8361515a-9169-4214-ab8e-8df379abfb6e",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "9e2f616e-5c00-4cd6-b5a4-d5418b1308fa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 86,
          "responseSize": 523
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "46358659-6d8c-4174-beb6-e8369f55de80",
        "cursor": {
          "ref": "3957f66f-74f4-4ad3-87e7-02e524f22f03",
          "length": 283,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "e28c9eac-95b5-49d9-ab43-f65ffded613a"
        },
        "item": {
          "id": "46358659-6d8c-4174-beb6-e8369f55de80",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "fb147d9b-30fb-4ea5-b9c6-fa8d5cce1c60",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 525
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "53d5ac85-02fe-4c66-beb5-d65a2c991e76",
        "cursor": {
          "ref": "26292de2-172e-47f1-b7a6-c411d4c8821f",
          "length": 283,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "09abf6ec-7f25-4b3f-8824-72d4b1a1da57"
        },
        "item": {
          "id": "53d5ac85-02fe-4c66-beb5-d65a2c991e76",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "a0b45cd0-df6e-4b81-b761-924e6c2475cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 88,
          "responseSize": 523
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "744f7b4e-20f5-439e-b18c-ba1917db55ec",
        "cursor": {
          "ref": "3dbcc7f0-972d-49c5-84cd-5a4033a6e198",
          "length": 283,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "5ad5f93a-928c-4e49-a233-22cc1eb8e7fd"
        },
        "item": {
          "id": "744f7b4e-20f5-439e-b18c-ba1917db55ec",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "7b2d22d9-6675-4d90-9479-bfe9c8d89661",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 88,
          "responseSize": 560
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1dee7b56-fd45-4bea-9781-b010994a510f",
        "cursor": {
          "ref": "2b9733d9-ad55-4fd6-ba6e-7972890d0535",
          "length": 283,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "36ed6b0e-86d4-43fc-a0d8-d0dbde82b758"
        },
        "item": {
          "id": "1dee7b56-fd45-4bea-9781-b010994a510f",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "c0f5a240-39f8-412b-be94-a2e332e59c02",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 94,
          "responseSize": 802
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9ce7d31f-0f77-4ede-bb3f-0dcf61a33b93",
        "cursor": {
          "ref": "33129112-dbf1-4866-9690-b87a08669563",
          "length": 283,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "fbdd0e19-81b0-4eb3-81ad-61d5a13487d7"
        },
        "item": {
          "id": "9ce7d31f-0f77-4ede-bb3f-0dcf61a33b93",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "33d238f1-9e7a-4064-9f1d-2c4edea8db90",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 86,
          "responseSize": 783
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c950926-c754-49b5-92bb-46a4306be0ce",
        "cursor": {
          "ref": "2c01ae9d-2343-4f86-b976-919522a0739b",
          "length": 283,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "d8b01b39-7e13-4b74-987d-976cd8a568fe"
        },
        "item": {
          "id": "2c950926-c754-49b5-92bb-46a4306be0ce",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "50b58485-ab46-4474-a784-0a5b6e4ce931",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 87,
          "responseSize": 780
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "abe8e19b-ab2e-4242-ad35-08379b53c79a",
        "cursor": {
          "ref": "ffdeb24d-bdac-4fbc-8964-9b3712336009",
          "length": 283,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "7df610da-8f71-4387-bd93-11ac756fe9a0"
        },
        "item": {
          "id": "abe8e19b-ab2e-4242-ad35-08379b53c79a",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "b22a3a57-55bd-4495-9ce5-3bea5ecd814f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 88,
          "responseSize": 782
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b21f4eca-6126-4d3b-8a2b-3cf58517f47b",
        "cursor": {
          "ref": "b2d9de6c-39cb-4185-be97-2f32783373a6",
          "length": 283,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "ca904d65-678f-4ff7-abc5-887581880c87"
        },
        "item": {
          "id": "b21f4eca-6126-4d3b-8a2b-3cf58517f47b",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "8c07a7ce-b8c1-4d47-9afa-dc67e9d3384f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 88,
          "responseSize": 780
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a1ab8056-f088-4d42-ae3f-cd768b9636ab",
        "cursor": {
          "ref": "ef339b38-f27d-4127-af99-e727ebc9dc84",
          "length": 283,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "f9580d27-327b-4aa2-be1b-bdb5fafa2355"
        },
        "item": {
          "id": "a1ab8056-f088-4d42-ae3f-cd768b9636ab",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "18919e31-aaa9-4759-a4bb-dd553d455539",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 651
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9dd3c39f-796d-429c-bb09-323f85898dc5",
        "cursor": {
          "ref": "0a924c21-d8dd-4850-a49d-e43a8b24dd0e",
          "length": 283,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "305db474-0763-421d-a24a-746629237f2e"
        },
        "item": {
          "id": "9dd3c39f-796d-429c-bb09-323f85898dc5",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "f8515a3a-663c-4054-a817-69d1c9070c9f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 629
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7e5c2738-ec65-4734-860c-bd90eb6f9278",
        "cursor": {
          "ref": "0d988a60-a9be-46a5-bdb3-3912b4ed3c17",
          "length": 283,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "1d7d6700-4430-4469-9fa3-54e121066c39"
        },
        "item": {
          "id": "7e5c2738-ec65-4734-860c-bd90eb6f9278",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "db93bae0-9ec2-447b-8efc-65a607902be4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 610
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6985f4a5-d0b1-4541-bca9-ce1a4830d60e",
        "cursor": {
          "ref": "7aabb111-fe18-4d73-b372-624f82904f0b",
          "length": 283,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "2946eccd-3522-49c7-ac8a-1cdd7311963c"
        },
        "item": {
          "id": "6985f4a5-d0b1-4541-bca9-ce1a4830d60e",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "8a47c2e5-81e3-456a-9ff9-d4dc37cf2498",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 86,
          "responseSize": 607
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "442d984c-1e9a-492b-b6b6-208acc817ea1",
        "cursor": {
          "ref": "c19ec6b5-5f25-4a49-bbe6-a9c8da02003c",
          "length": 283,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "4c55247b-c27e-4ba3-92cc-d5b845e1ce9b"
        },
        "item": {
          "id": "442d984c-1e9a-492b-b6b6-208acc817ea1",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "c67da1c8-2229-4b06-a332-e09587255259",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 87,
          "responseSize": 609
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a2fce161-482b-4517-98d5-2493ba891d56",
        "cursor": {
          "ref": "78e64ea0-bdfa-4103-8004-b15e8189f4db",
          "length": 283,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "074a0de4-3430-4cca-ba66-42349652c956"
        },
        "item": {
          "id": "a2fce161-482b-4517-98d5-2493ba891d56",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "5ba637a4-2837-4b42-87d5-64c2c3c6dd10",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 92,
          "responseSize": 607
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b903c05b-5b6a-4ccc-83a4-356cd0c814e5",
        "cursor": {
          "ref": "d2e9d57f-3e42-4bb9-b9c5-04cfd5509e4e",
          "length": 283,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "ddcfb9c4-d7cc-4db6-9b49-9c4bc27f2dbf"
        },
        "item": {
          "id": "b903c05b-5b6a-4ccc-83a4-356cd0c814e5",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "fb45eb97-3ecd-4681-9780-f2957afb848b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 660
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9189ff12-454b-4243-b5d2-06d1f4637a83",
        "cursor": {
          "ref": "5ed4b9b3-eb4f-4463-a5b3-bbf1f6701586",
          "length": 283,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "df86c62a-7670-4ac5-8c99-aae9c20afd97"
        },
        "item": {
          "id": "9189ff12-454b-4243-b5d2-06d1f4637a83",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "0c8a1bef-f50a-404a-803d-11cfb15f7a6e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 640
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a98fe882-1c68-4169-9fcf-5b2c5610d919",
        "cursor": {
          "ref": "02eff355-b4a6-4d2f-9304-1883b824fe71",
          "length": 283,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "0199dc91-b474-4dc7-ad92-6454f67d39e7"
        },
        "item": {
          "id": "a98fe882-1c68-4169-9fcf-5b2c5610d919",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "6fd30c08-064d-430a-af53-2b19a754306b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 622
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9f70eed5-9bd5-4cb0-b619-fb1ae8c6ecec",
        "cursor": {
          "ref": "d91a4a0c-8376-444c-aaca-3de04766011a",
          "length": 283,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "f2df5146-2f37-48ac-832b-fdb1031a65a4"
        },
        "item": {
          "id": "9f70eed5-9bd5-4cb0-b619-fb1ae8c6ecec",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "5de3efa5-32ca-4c09-97de-4baa0c6fad2e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 89,
          "responseSize": 619
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1bebfe04-8d14-40b7-9f02-d700ef058425",
        "cursor": {
          "ref": "f688a968-36f2-4b16-a317-81a426c1b303",
          "length": 283,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "32262ce6-4fe5-4662-a1c3-7c10499e7e97"
        },
        "item": {
          "id": "1bebfe04-8d14-40b7-9f02-d700ef058425",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "353ca900-0af8-4e9f-a59c-aaf811947a92",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 88,
          "responseSize": 621
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a45a8ad5-40e2-4e10-af2b-c5864d38c6a4",
        "cursor": {
          "ref": "cddf607d-9ccc-4650-b8d1-dc06c81733d3",
          "length": 283,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "110a8f64-58da-48bb-8210-5c8d5d8bd9cd"
        },
        "item": {
          "id": "a45a8ad5-40e2-4e10-af2b-c5864d38c6a4",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "61d2ea4b-c981-4a7a-aa4c-d207968e8223",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 86,
          "responseSize": 638
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fbe60f92-199a-45e0-92e1-4db90bc783c2",
        "cursor": {
          "ref": "97ce9687-4780-4b77-95b6-5543e6493d7e",
          "length": 283,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "99566f72-21b4-4ffb-879e-40f5631abcdd"
        },
        "item": {
          "id": "fbe60f92-199a-45e0-92e1-4db90bc783c2",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "de78c81f-c723-4f6a-8322-f887a97dc423",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 89,
          "responseSize": 656
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5bf2e733-1692-4f0e-8665-32b1936baba6",
        "cursor": {
          "ref": "3aa2554a-558d-4f25-ba05-2a1c63d3d554",
          "length": 283,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "433fd9a4-30ac-4b14-9ada-38e0b7829037"
        },
        "item": {
          "id": "5bf2e733-1692-4f0e-8665-32b1936baba6",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "738622b0-4121-4c53-8bee-c93a58c50b9a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 90,
          "responseSize": 914
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "04c76a30-7a1d-4a1f-a07f-60b7160a072b",
        "cursor": {
          "ref": "e9077a77-a7d8-4007-b0e5-938af92d5adf",
          "length": 283,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "6c80b584-ed7c-4365-86e2-60392cbed28c"
        },
        "item": {
          "id": "04c76a30-7a1d-4a1f-a07f-60b7160a072b",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "3088d6f8-4eec-4290-bbd1-09ff3b6a1730",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 896
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "77f956cc-362a-4690-bd75-b53c0f55a30d",
        "cursor": {
          "ref": "3d4825e3-c422-44e2-a9e8-fe415fff9776",
          "length": 283,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "a1155df3-6d98-4172-aaff-badacd38eaf3"
        },
        "item": {
          "id": "77f956cc-362a-4690-bd75-b53c0f55a30d",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "09233726-c402-4507-9c0a-056c35f99efd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 88,
          "responseSize": 893
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c20ca9a1-4949-475d-8a50-c502085a6910",
        "cursor": {
          "ref": "675d1ae5-050f-43b7-958e-2e5b58c1901f",
          "length": 283,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "2a887f47-6d48-432b-b635-f4a7db3be879"
        },
        "item": {
          "id": "c20ca9a1-4949-475d-8a50-c502085a6910",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "1c2153d7-4c98-4da7-a526-9106c6614d23",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 89,
          "responseSize": 895
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "44fec893-ed8f-4957-b77f-a2712998d642",
        "cursor": {
          "ref": "33015ca3-07af-402e-9120-e1135ad0a7c9",
          "length": 283,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "747b4da9-72cd-46a5-905b-024381095aa4"
        },
        "item": {
          "id": "44fec893-ed8f-4957-b77f-a2712998d642",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "d49bd57b-bae8-4688-a087-ff3c88334bfd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 90,
          "responseSize": 893
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ab5d52f1-39f4-4535-a3c6-9117ce712c85",
        "cursor": {
          "ref": "6bc17e62-ec49-4ac4-aabf-c15786444451",
          "length": 283,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "364ba08b-d0b4-4dfd-84c6-49640a1eb734"
        },
        "item": {
          "id": "ab5d52f1-39f4-4535-a3c6-9117ce712c85",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "85644c89-748b-4926-8ab3-06c78d68d42a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 95,
          "responseSize": 719
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fd4fdfe0-3dcc-4ab2-bb16-9781ff96b832",
        "cursor": {
          "ref": "1a6646c2-b1bf-4c2c-9ad4-962e10c3b8a1",
          "length": 283,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "a9192938-fd34-4a31-a245-d3d6783858f6"
        },
        "item": {
          "id": "fd4fdfe0-3dcc-4ab2-bb16-9781ff96b832",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "336bfb60-7ac1-42b8-863e-f9fb78a939d2",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 77,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "78aa09ea-2690-4af5-8b61-f35548d0b0b9",
        "cursor": {
          "ref": "0b098b50-2bc9-46af-86e3-ab3d4acfbd34",
          "length": 283,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "5be39d02-9f68-49c8-9d62-6a6a4f759de6"
        },
        "item": {
          "id": "78aa09ea-2690-4af5-8b61-f35548d0b0b9",
          "name": "credentials_issue.credential.issuer:dup"
        },
        "response": {
          "id": "805dc819-f591-4efa-967e-ec65eaeac760",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 90,
          "responseSize": 842
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:102)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 1,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:2:102)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:3:102)"
            }
          }
        ]
      },
      {
        "id": "5248b336-d12c-4639-8f28-3d5918551017",
        "cursor": {
          "ref": "cd4160a7-3080-4aec-a49e-c4670e0c6822",
          "length": 283,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "a20dea7a-abe1-406a-8ab0-1312e6faa414"
        },
        "item": {
          "id": "5248b336-d12c-4639-8f28-3d5918551017",
          "name": "credentials_issue"
        },
        "response": {
          "id": "4e76f3ee-125e-4ba3-a91a-f1ddb2d7529e",
          "status": "Created",
          "code": 201,
          "responseTime": 2632,
          "responseSize": 707
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata.verifiableCredential should have required property 'id', data.verifiableCredential should be string, data.verifiableCredential should match exactly one schema in oneOf",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata.verifiableCredential should have required property 'id', data.verifiableCredential should be string, data.verifiableCredential should match exactly one schema in oneOf\n   at Object.eval sandbox-script.js:2:103)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false
          }
        ]
      },
      {
        "id": "a8ac0ebc-1a88-4920-abfc-c278f4f0f3f8",
        "cursor": {
          "ref": "7ffe246c-49ae-45b6-9c42-48f023f3f270",
          "length": 283,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "8e55094c-dc2d-4d03-a537-dfe60db80600"
        },
        "item": {
          "id": "a8ac0ebc-1a88-4920-abfc-c278f4f0f3f8",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "575ba338-c528-49e5-b0e0-23f1c472ba7d",
          "status": "Created",
          "code": 201,
          "responseTime": 2048,
          "responseSize": 760
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "c5b024ad-2618-426f-bb01-083b74c471ab",
        "cursor": {
          "ref": "86354023-272c-4202-838b-1d83c54ab9d5",
          "length": 283,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "56ae91ce-7eed-41fe-bc3c-97d26b653abb"
        },
        "item": {
          "id": "c5b024ad-2618-426f-bb01-083b74c471ab",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "bc4efdf0-8109-4644-bacf-bc1f66898a69",
          "status": "Created",
          "code": 201,
          "responseTime": 2914,
          "responseSize": 714
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata.verifiableCredential should have required property 'id', data.verifiableCredential should be string, data.verifiableCredential should match exactly one schema in oneOf",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata.verifiableCredential should have required property 'id', data.verifiableCredential should be string, data.verifiableCredential should match exactly one schema in oneOf\n   at Object.eval sandbox-script.js:2:105)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "04d1814a-1301-4667-bbb8-07ea8043be86",
        "cursor": {
          "ref": "c31056cd-2f37-4e54-97e8-b5dd1e6fae59",
          "length": 283,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "acbc6126-2020-4992-b2f9-129875a639aa"
        },
        "item": {
          "id": "04d1814a-1301-4667-bbb8-07ea8043be86",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "797fb4c3-89a4-492c-844d-f37a05fc76fc",
          "status": "Created",
          "code": 201,
          "responseTime": 2004,
          "responseSize": 718
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata.verifiableCredential should have required property 'id', data.verifiableCredential should be string, data.verifiableCredential should match exactly one schema in oneOf",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata.verifiableCredential should have required property 'id', data.verifiableCredential should be string, data.verifiableCredential should match exactly one schema in oneOf\n   at Object.eval sandbox-script.js:2:106)"
            }
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "b7c2d3ec-1cc6-4b9b-833f-f0a8f037c2a8",
        "cursor": {
          "ref": "95d7ca23-ddc4-4390-b174-19dc75ced34d",
          "length": 283,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "7cb89750-0cee-4a5e-aa10-37ef2f6790c9"
        },
        "item": {
          "id": "b7c2d3ec-1cc6-4b9b-833f-f0a8f037c2a8",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "67d040d1-d994-48c2-b5a5-d04260c6edff",
          "status": "Created",
          "code": 201,
          "responseTime": 2029,
          "responseSize": 707
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata.verifiableCredential should have required property 'id', data.verifiableCredential should be string, data.verifiableCredential should match exactly one schema in oneOf",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata.verifiableCredential should have required property 'id', data.verifiableCredential should be string, data.verifiableCredential should match exactly one schema in oneOf\n   at Object.eval sandbox-script.js:2:107)"
            }
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false
          }
        ]
      },
      {
        "id": "c2ece3f2-f58b-4853-8614-28f5d21503e3",
        "cursor": {
          "ref": "f8a29493-e3a4-46c6-b3e8-913a2a542847",
          "length": 283,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "9a7b90a7-ce69-498b-88c7-f70690909d69"
        },
        "item": {
          "id": "c2ece3f2-f58b-4853-8614-28f5d21503e3",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "0670b643-522f-44e4-983c-cb8c94a507c8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 88,
          "responseSize": 725
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:108)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:108)"
            }
          }
        ]
      },
      {
        "id": "b39b675d-9932-48d4-bb63-837a56e5fd7e",
        "cursor": {
          "ref": "3e57456c-4dfe-45fd-a5de-6f6d895232fa",
          "length": 283,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "edacb492-17a6-4d24-9e92-93641db98016"
        },
        "item": {
          "id": "b39b675d-9932-48d4-bb63-837a56e5fd7e",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "c89f189e-94d4-448a-8144-b4785b5d9a60",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 87,
          "responseSize": 567
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6457393c-1e23-4c73-8248-aacdd1de2dd7",
        "cursor": {
          "ref": "b4b06d44-b767-419a-be39-dc37bc504555",
          "length": 283,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "fa7650d7-8dcb-4e05-8c24-1e6fc2801fc2"
        },
        "item": {
          "id": "6457393c-1e23-4c73-8248-aacdd1de2dd7",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "77c02762-fc4b-4155-9bbb-c6cc87362b06",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 86,
          "responseSize": 616
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe16db93-b1ab-4f2c-b4af-225bbbab5216",
        "cursor": {
          "ref": "ec718de2-e2ba-41dd-ad13-e5e6fff4b546",
          "length": 283,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "ab65e26b-3ae4-4bb3-af76-6246ee57b44c"
        },
        "item": {
          "id": "fe16db93-b1ab-4f2c-b4af-225bbbab5216",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "512a801c-d512-4ee2-a596-22212ba5010c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 89,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0ff37681-58b4-406d-a239-6d0602a9f28f",
        "cursor": {
          "ref": "6a515ba8-a16a-4506-9373-2d1aa61ef57e",
          "length": 283,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "7e4b9f69-a566-4b1c-a116-edc1342b4696"
        },
        "item": {
          "id": "0ff37681-58b4-406d-a239-6d0602a9f28f",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "93d6854c-98f5-41e1-a24f-7f3c957b6dbd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 87,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "132d0c4a-8b6d-4879-80ef-b787d75b7a5b",
        "cursor": {
          "ref": "4fc4d6cc-00f1-4c89-887d-229044e9ede0",
          "length": 283,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "3484b669-fddb-4c01-8f5d-847654dd7d0a"
        },
        "item": {
          "id": "132d0c4a-8b6d-4879-80ef-b787d75b7a5b",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "873c3678-f8d7-45da-ad90-8e7ff55b8338",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "983b3d29-aa66-4030-be56-1b8a9a785467",
        "cursor": {
          "ref": "c90003a3-ff0b-4b75-ab12-0ead1cdf40ac",
          "length": 283,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "89eb2f0f-9e18-41b2-9ae1-235285076b5d"
        },
        "item": {
          "id": "983b3d29-aa66-4030-be56-1b8a9a785467",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "5354dfb3-f8de-46d3-8c39-83defc87831b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "46874035-8c0a-4af7-909d-40ec530db6a0",
        "cursor": {
          "ref": "826a5279-44ce-4bdf-925a-22a6277c73db",
          "length": 283,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "924355a9-8da4-4c78-9cfa-29ecd74d5907"
        },
        "item": {
          "id": "46874035-8c0a-4af7-909d-40ec530db6a0",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "3515a4bc-69bc-462f-89b8-299b4be1d625",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 386
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ff2ac4dc-4503-488d-807f-c3a8a3ab6314",
        "cursor": {
          "ref": "3e893e36-9dcd-4b96-85c2-4d221f2ab868",
          "length": 283,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "cf14d476-e070-4b9e-82d7-43314a211ad7"
        },
        "item": {
          "id": "ff2ac4dc-4503-488d-807f-c3a8a3ab6314",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "b492e21e-a573-403a-88db-9b714f0e75fb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 437
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4200b856-bf07-4aa0-80b0-ba198eb37583",
        "cursor": {
          "ref": "6f33a711-a5ee-4ec3-9e9a-e6e04c539af9",
          "length": 283,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "bae9d5c2-b8b9-4a7b-b84a-06581aea068c"
        },
        "item": {
          "id": "4200b856-bf07-4aa0-80b0-ba198eb37583",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "32866bb7-13b8-4964-a4a3-d2a8f31aa8e4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 86,
          "responseSize": 434
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "67001c12-c144-4817-8cc0-5bfb49f0a304",
        "cursor": {
          "ref": "278121b4-222f-42d1-a667-5dcbd6ca0bb1",
          "length": 283,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "c365db9e-3bdc-4b72-b433-5b5ad0367569"
        },
        "item": {
          "id": "67001c12-c144-4817-8cc0-5bfb49f0a304",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "42c26152-9a59-403c-9c6b-2c753d29082d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b6d4e9b7-196f-42b3-8ffc-fcac07fce83e",
        "cursor": {
          "ref": "030b5aff-115a-44dd-882c-0e1f9fd25656",
          "length": 283,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "6cfec7ad-9b20-487a-974b-663ba3567edd"
        },
        "item": {
          "id": "b6d4e9b7-196f-42b3-8ffc-fcac07fce83e",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "5e377ba2-e176-41fa-b4db-f15749d0d5b2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 86,
          "responseSize": 480
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cd1d07a6-dc6f-45bd-90f9-548d8935a6fb",
        "cursor": {
          "ref": "5616e313-7bd4-4095-9580-d846a14f07a7",
          "length": 283,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "def82f70-5b8b-42c6-8522-1b8d5d396290"
        },
        "item": {
          "id": "cd1d07a6-dc6f-45bd-90f9-548d8935a6fb",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "e6ac1186-0297-41eb-afd2-d5044ec05c02",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "909918ff-aec3-4e0b-93a9-da1513315521",
        "cursor": {
          "ref": "93ddf2c9-d0c1-4369-b85b-26cbc368602a",
          "length": 283,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "77f68058-0ad5-420b-ab94-c64d6230f02c"
        },
        "item": {
          "id": "909918ff-aec3-4e0b-93a9-da1513315521",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "7ce03d6c-5881-4ee7-9696-256d147dd846",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 94,
          "responseSize": 531
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3baad12a-640b-4827-a1cb-37927396ba1c",
        "cursor": {
          "ref": "aefd1935-d26c-42d1-815f-a14a5ca7d0d2",
          "length": 283,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "70394acc-a0f9-4477-a484-9a24330d0d09"
        },
        "item": {
          "id": "3baad12a-640b-4827-a1cb-37927396ba1c",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "ba7f0684-9f47-4097-b247-34ee772204ff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2440f23a-c4bf-48f4-a481-b7130c990c11",
        "cursor": {
          "ref": "f03a9f81-7583-4c1a-992e-3f292dd5595f",
          "length": 283,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "3009c98f-1313-4e90-afdc-3b22f57173d0"
        },
        "item": {
          "id": "2440f23a-c4bf-48f4-a481-b7130c990c11",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "e62b1e4c-3c97-4e19-8733-e61cc665ab5a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 439
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c7f651f-d42d-430e-ab15-706223c7a2a5",
        "cursor": {
          "ref": "430f80c1-7fec-4f66-b060-009260c5ef1d",
          "length": 283,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "e78c631d-f40f-4168-a799-eafb46b4305e"
        },
        "item": {
          "id": "0c7f651f-d42d-430e-ab15-706223c7a2a5",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "6989257b-02b2-46c6-8e86-bb0f59f6a6c2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 86,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8c0a1800-6f08-4702-bf79-1d8a2e29bd07",
        "cursor": {
          "ref": "1b98272a-69ed-452d-a84c-31c7cd086239",
          "length": 283,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "82a54661-4990-497d-a187-70496fb1bc99"
        },
        "item": {
          "id": "8c0a1800-6f08-4702-bf79-1d8a2e29bd07",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "ee9813fc-7bd3-4ff8-896f-1268647ee9ab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 438
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "03953960-ae9b-47f3-a930-a37677d16cf0",
        "cursor": {
          "ref": "01bf5eef-a585-4011-958e-c61ccb923872",
          "length": 283,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "ec3e788a-be69-46a4-908c-a73b2a1baf9e"
        },
        "item": {
          "id": "03953960-ae9b-47f3-a930-a37677d16cf0",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "ebeaea80-0375-4173-babb-4e0e005fed69",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 460
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2bc51022-0808-4a7b-bb40-376db1982c42",
        "cursor": {
          "ref": "3760987a-c1fb-468f-9fbd-178f58743a6a",
          "length": 283,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "c90e6c43-be29-4546-8a22-12ac6afb4cb1"
        },
        "item": {
          "id": "2bc51022-0808-4a7b-bb40-376db1982c42",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "3cbae9a5-58f3-49ea-9924-4f96b2f50c22",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 448
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1fd35b67-0c82-48b9-940f-3531d9a9866a",
        "cursor": {
          "ref": "b3434f2c-fd97-420f-931f-6ba2a1c08514",
          "length": 283,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "7916fd05-c163-40dc-ac17-4bb89fba130d"
        },
        "item": {
          "id": "1fd35b67-0c82-48b9-940f-3531d9a9866a",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "b1e5f996-1d58-41cd-aab4-5a08ca20c0cd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f5dca3a-8b78-4d2c-8517-e17ace819ea3",
        "cursor": {
          "ref": "01d7b414-1615-45d2-a0db-cf4cf01716bf",
          "length": 283,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "43637064-cc5a-45a4-89cc-7e3c0138c1eb"
        },
        "item": {
          "id": "1f5dca3a-8b78-4d2c-8517-e17ace819ea3",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "e2711c27-34bf-4ae4-95fb-dfbffa1393bd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 461
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f44cb96f-dbb3-446c-97df-1660118c90f0",
        "cursor": {
          "ref": "6662c1a5-ee81-4186-847d-13d88b961e77",
          "length": 283,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "0a5914cd-735d-410b-91d6-03cec738019b"
        },
        "item": {
          "id": "f44cb96f-dbb3-446c-97df-1660118c90f0",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "a61ee574-cbca-44e2-b9b9-7e79a4bb9695",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3c219576-978d-4418-a7db-ef56d2d2b008",
        "cursor": {
          "ref": "c08c776e-5d88-4082-88be-fe87b48c7d45",
          "length": 283,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "7438d0d2-5b7b-4b21-aa98-3e6ae3bac25e"
        },
        "item": {
          "id": "3c219576-978d-4418-a7db-ef56d2d2b008",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "782ee6c6-c779-40ca-940d-27059e3c225d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 89,
          "responseSize": 460
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c1bb9687-e5d0-4a0b-bfe3-87a21320dbe8",
        "cursor": {
          "ref": "ec4e937e-527f-4149-b2b1-f731d58868df",
          "length": 283,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "2715d26b-059e-49a3-9d20-efcc8f7db7f4"
        },
        "item": {
          "id": "c1bb9687-e5d0-4a0b-bfe3-87a21320dbe8",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "0012c48e-3d0f-460b-8a1c-b599e3b25f0c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 86,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ade125d6-7ca3-4230-8a7b-7a9f01e6ac2e",
        "cursor": {
          "ref": "cee497cd-7193-4f01-8814-7c8a41086db4",
          "length": 283,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "0e5843c0-7ce6-428b-9731-f37385df5c39"
        },
        "item": {
          "id": "ade125d6-7ca3-4230-8a7b-7a9f01e6ac2e",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "987bc50f-aa9a-4a9c-aea9-6d4fc0f77cb8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 86,
          "responseSize": 471
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "23c2bdfc-ed5f-4e5d-8adb-13e76fb3d536",
        "cursor": {
          "ref": "3cbe51d9-7890-4be7-8f6a-dd64058d925a",
          "length": 283,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "04cd723f-5b52-4ff2-b95a-18294bd53ef7"
        },
        "item": {
          "id": "23c2bdfc-ed5f-4e5d-8adb-13e76fb3d536",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "33b87469-80af-4247-a4a3-e3536586da9e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 91,
          "responseSize": 469
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f39c0f1b-37e7-4ffb-ba5b-98321e459dcf",
        "cursor": {
          "ref": "b562de25-5899-4daf-b02d-3ac90f34098c",
          "length": 283,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "d0b526df-0fa3-439d-9b2a-540525d131e9"
        },
        "item": {
          "id": "f39c0f1b-37e7-4ffb-ba5b-98321e459dcf",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "c0cf8f74-93e8-4869-99b9-e5516129c4ea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "18cff1d4-6048-4469-81ac-603ade9967da",
        "cursor": {
          "ref": "73769750-5755-4dcf-9953-62d587784a79",
          "length": 283,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "da94383f-0f87-4fb1-b3ba-8d6d638c89b7"
        },
        "item": {
          "id": "18cff1d4-6048-4469-81ac-603ade9967da",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "c25e6339-3543-422e-9728-d8d01cdd5e58",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e524e26-5720-4047-964b-f13de6de71a8",
        "cursor": {
          "ref": "ddbdf675-77c9-4c41-9898-34e03349709f",
          "length": 283,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "7eb427c3-92f5-4234-9ddd-6101899cee3b"
        },
        "item": {
          "id": "8e524e26-5720-4047-964b-f13de6de71a8",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "e7a6a467-bfdd-480c-8208-9b5463942be1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 480
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "af79b68d-ef8f-47a7-b90d-fc69146d777c",
        "cursor": {
          "ref": "e955096a-16fb-41ff-8d2a-a620812ce03a",
          "length": 283,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "02fb1555-2f5a-48ca-97b0-57bfc991c747"
        },
        "item": {
          "id": "af79b68d-ef8f-47a7-b90d-fc69146d777c",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "ffa6b0f3-941b-4291-8b1b-620191a3ab1c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 93,
          "responseSize": 483
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d376676b-408d-4356-8175-098c12978c93",
        "cursor": {
          "ref": "a9ff8f76-d9fc-4361-9425-71f2d19cb03e",
          "length": 283,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "eda50f79-08ca-4683-8304-d58da1fb40b9"
        },
        "item": {
          "id": "d376676b-408d-4356-8175-098c12978c93",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "898c015e-d5b5-4818-a21d-e689ff59735a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 91,
          "responseSize": 481
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "570f5bfb-e550-4a36-b57f-837816001ee1",
        "cursor": {
          "ref": "6cbd0094-6dd1-4d3a-ada0-40120111068f",
          "length": 283,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "379e18dd-0e99-4cf4-8c04-ef189f78ab02"
        },
        "item": {
          "id": "570f5bfb-e550-4a36-b57f-837816001ee1",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "346dc301-7e4e-4028-856f-dd6ed5860ff8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 86,
          "responseSize": 494
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b2f99da-672b-42fb-9f3a-5ba891c60feb",
        "cursor": {
          "ref": "73625b53-5c1e-425c-a893-98b15c17b6ca",
          "length": 283,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "0b881b3b-f178-4b2e-bff0-cfe4ad6c7e81"
        },
        "item": {
          "id": "3b2f99da-672b-42fb-9f3a-5ba891c60feb",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "10095cae-6624-4cc8-aa6f-09da690fc742",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 81,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "20bc5b52-7558-48bc-9c89-761aeed50dcf",
        "cursor": {
          "ref": "41e45959-498d-4a98-891b-cfe50c899a7f",
          "length": 283,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "091fb46e-c4e5-4a92-8c7b-75dc965d3189"
        },
        "item": {
          "id": "20bc5b52-7558-48bc-9c89-761aeed50dcf",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "9f96499a-2f2e-45e4-92f5-932510a9becb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 88,
          "responseSize": 567
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c12315f8-1598-4269-b0c3-a75675ab6dae",
        "cursor": {
          "ref": "e93ea2ac-3183-4146-8542-e24200c0d06c",
          "length": 283,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "7fe40d7e-f220-425d-ab33-5aa6ccd3fd45"
        },
        "item": {
          "id": "c12315f8-1598-4269-b0c3-a75675ab6dae",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "45dab8c5-0cfa-4bb0-b774-a87dd3eae404",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 616
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "869f2be7-38b1-45b0-ac07-5872f420861b",
        "cursor": {
          "ref": "182e1dd2-e5b0-4266-b9ee-578d2d191556",
          "length": 283,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "c18093bb-0979-497b-b09f-a0f885de1fc6"
        },
        "item": {
          "id": "869f2be7-38b1-45b0-ac07-5872f420861b",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "3976ee7f-1462-474e-97f6-659c3353ba1e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "25798ce6-98e3-4294-ac82-e3ab97ce7a88",
        "cursor": {
          "ref": "d00322fb-5bbd-4f47-9245-031fb6069fe1",
          "length": 283,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "6fb3ad34-00fc-4ea7-8835-44e0535deaf1"
        },
        "item": {
          "id": "25798ce6-98e3-4294-ac82-e3ab97ce7a88",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "11cd9684-de91-4381-8808-3110dbf8effc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 86,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "294235a5-0f6f-45b5-8fe4-014a175d64a8",
        "cursor": {
          "ref": "6d244a5c-4b82-4eeb-bd03-78e406b0e868",
          "length": 283,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "5d091e5b-2e8c-49cc-87ac-2a929e97d917"
        },
        "item": {
          "id": "294235a5-0f6f-45b5-8fe4-014a175d64a8",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "b22c03d6-25a0-4a27-a2cc-6e2e4706393e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dae6b8cf-8b47-4ed6-bd4a-550854d77297",
        "cursor": {
          "ref": "a5774e55-d840-4795-8cb4-ac6aa2221b1b",
          "length": 283,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "9f2650b9-c1e1-4d58-af30-637037c824dc"
        },
        "item": {
          "id": "dae6b8cf-8b47-4ed6-bd4a-550854d77297",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "8f0f0e25-4b06-4e60-a1fa-136eecb28c5c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 96,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "935df585-aefd-403b-a74f-af8c187673cb",
        "cursor": {
          "ref": "ab6a02d1-bb31-4790-a43f-018f95beb13b",
          "length": 283,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "8dc1671f-3e30-4291-8137-07e82f3e4a12"
        },
        "item": {
          "id": "935df585-aefd-403b-a74f-af8c187673cb",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "595478af-fdf9-4e3f-b7cb-5e2efeb911e9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 386
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c3809480-316d-422d-95f9-1bd4cdf9aa47",
        "cursor": {
          "ref": "89557b18-de47-4e60-b685-f88f7563e56c",
          "length": 283,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "bb45a1a3-1693-4463-8a40-99e70c30dedd"
        },
        "item": {
          "id": "c3809480-316d-422d-95f9-1bd4cdf9aa47",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "ed3d63c9-f428-4daa-8268-b4a24d24cd57",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 89,
          "responseSize": 437
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a21fa85c-409b-46a1-b6e8-91720e8e4716",
        "cursor": {
          "ref": "6a46aeef-a731-42f4-b62f-13c49d761ce3",
          "length": 283,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "44c14869-460d-4b00-b1fa-5e551ae5d6ec"
        },
        "item": {
          "id": "a21fa85c-409b-46a1-b6e8-91720e8e4716",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "7f33b155-1e0d-47c7-8b56-c5745cb3c3df",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 434
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6edfafe5-b46b-41ee-ad3d-d1401eedc146",
        "cursor": {
          "ref": "335cad87-5eee-4be5-a29d-086613b634f2",
          "length": 283,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "ffe9fa4c-6a60-4737-858c-66916708b544"
        },
        "item": {
          "id": "6edfafe5-b46b-41ee-ad3d-d1401eedc146",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "c68d541a-4884-4d35-9b64-ab5b6985e6fb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 86,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "367207f7-8ce4-436f-8c4e-f9d4b774fc10",
        "cursor": {
          "ref": "f00b558d-a5d2-4021-88e2-11a7e1078e14",
          "length": 283,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "addcff00-4326-402b-b4ce-db540ed67be4"
        },
        "item": {
          "id": "367207f7-8ce4-436f-8c4e-f9d4b774fc10",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "df6a410e-01fb-400d-bd73-80b4545b2e3a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 87,
          "responseSize": 504
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7357a70c-8f9f-4872-abfb-57a3c8255273",
        "cursor": {
          "ref": "3a0e58c2-1b45-4741-b8a8-e54d357a1d74",
          "length": 283,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "754348da-3bfc-488f-92d1-eda2f5b2f4db"
        },
        "item": {
          "id": "7357a70c-8f9f-4872-abfb-57a3c8255273",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "22601be6-4481-43fc-8373-d4ab37ab38b1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 453
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f5562cea-6e47-4f1e-b684-f9eeb62f33e4",
        "cursor": {
          "ref": "c737c686-f4dc-45ff-b67e-166874e4b469",
          "length": 283,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "b10e322e-cfda-4ad2-bb17-1242c6998d0a"
        },
        "item": {
          "id": "f5562cea-6e47-4f1e-b684-f9eeb62f33e4",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "c1063cd7-6e57-4c98-967a-91e6b77b1304",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 579
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4481f5cc-eb57-44d7-b526-f6e476942c8c",
        "cursor": {
          "ref": "4024f23b-7cf1-4307-849a-4b500850b1af",
          "length": 283,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "8b62e642-d0db-4ab5-90ad-119f05fe8559"
        },
        "item": {
          "id": "4481f5cc-eb57-44d7-b526-f6e476942c8c",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "4c5876d6-d0c5-45c7-82ce-ea2109d67b72",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 87,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e67b377-52f6-49ce-a887-843abd2e673c",
        "cursor": {
          "ref": "5ccb2bf0-b620-42ba-bc10-f375f1946069",
          "length": 283,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "0a8759ba-2c5a-4112-a6e3-a1b5647070bb"
        },
        "item": {
          "id": "6e67b377-52f6-49ce-a887-843abd2e673c",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "fdbffabe-7f7f-42ce-8b48-659ee06c95cd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 99,
          "responseSize": 439
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe1e0364-dea2-4051-88de-790612d6401e",
        "cursor": {
          "ref": "b14d7585-007f-4f57-ada6-685a51ce5a58",
          "length": 283,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "0bef8377-3343-425c-ac41-30a4e474e18c"
        },
        "item": {
          "id": "fe1e0364-dea2-4051-88de-790612d6401e",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "ddbd77be-196b-481c-a0fc-ca11fd098454",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aef8df08-7f94-488f-ae73-832a411d7316",
        "cursor": {
          "ref": "92141d27-c0d3-4ad0-8a46-f07cb2edb506",
          "length": 283,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "38e23e2f-7512-4958-9722-f9635bc8925d"
        },
        "item": {
          "id": "aef8df08-7f94-488f-ae73-832a411d7316",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "62ddc0d3-b8e3-4be8-95d3-1cac62eac041",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 438
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a028bccc-ab1a-4383-9585-871f5b83758b",
        "cursor": {
          "ref": "7ec97c68-e2a1-494f-8b07-248514a3a05f",
          "length": 283,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "388dbd3a-e396-4456-8b4b-c35f06e1a450"
        },
        "item": {
          "id": "a028bccc-ab1a-4383-9585-871f5b83758b",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "386462a6-80a3-4482-b06f-49268ba51cd1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 93,
          "responseSize": 455
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9043acd0-da76-4871-b212-06398fffe845",
        "cursor": {
          "ref": "c8e0c039-646c-42ae-a451-3ad9af6a3781",
          "length": 283,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "10657fe5-cc55-4d77-8160-41baf9904a96"
        },
        "item": {
          "id": "9043acd0-da76-4871-b212-06398fffe845",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "634c406a-ed4c-4330-84fe-27c7f97c8cc5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 86,
          "responseSize": 448
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5e52af9c-681c-488e-9d94-4b81bcb3af91",
        "cursor": {
          "ref": "502202aa-8254-4eb7-9173-78a1856151da",
          "length": 283,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "6a4e7ba3-6803-4a78-8269-1010c5b617e0"
        },
        "item": {
          "id": "5e52af9c-681c-488e-9d94-4b81bcb3af91",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "2f2cfc6d-fbf9-49a5-9c14-07ac4b2cb561",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 508
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2a163193-3eff-4378-9c67-88002a5efbc6",
        "cursor": {
          "ref": "41c45919-d499-48f7-9a54-5a5fa1890787",
          "length": 283,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "b2577946-50f9-4c16-960c-14cfb5eb45ca"
        },
        "item": {
          "id": "2a163193-3eff-4378-9c67-88002a5efbc6",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "30ac9612-ab64-4905-a6a2-d8a91e38c0e1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 461
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d1a472c2-2b68-4214-97e6-9b98e9e21c22",
        "cursor": {
          "ref": "a957aba5-084a-4b5f-a44c-9af450911d82",
          "length": 283,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "d6780761-e660-4bf4-acf9-f78028748ec7"
        },
        "item": {
          "id": "d1a472c2-2b68-4214-97e6-9b98e9e21c22",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "4c9063a4-775a-4013-bb75-84c01a16e606",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 88,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "afdfa93b-503d-42d3-b069-560e019d3fb4",
        "cursor": {
          "ref": "516e07e1-5d50-4fcd-91de-ff63031553c8",
          "length": 283,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "8ae46b85-1a79-4e11-881c-675927b81972"
        },
        "item": {
          "id": "afdfa93b-503d-42d3-b069-560e019d3fb4",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "a9fe6d01-0c52-46e3-8434-107eaee33bd5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 89,
          "responseSize": 460
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "347e031a-9738-4dc2-a0a0-93a715ecc1c7",
        "cursor": {
          "ref": "64b0a9ab-5208-44d9-ad72-c43391a62b91",
          "length": 283,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "a2bfc10b-5dc6-48cd-8d08-5564dcece00d"
        },
        "item": {
          "id": "347e031a-9738-4dc2-a0a0-93a715ecc1c7",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "f8f81a2d-a6de-40aa-80f0-697e79481c2a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6d119ea2-8601-4587-abb3-1396e1d1fe88",
        "cursor": {
          "ref": "2c3b953c-db19-4dcf-b2bd-e5c35af8a0c5",
          "length": 283,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "7db6d33a-7c64-4da9-90c7-57e9880647d6"
        },
        "item": {
          "id": "6d119ea2-8601-4587-abb3-1396e1d1fe88",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "1490782d-cd8e-44c4-abd7-71bfc103d182",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 471
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "616f4136-3a7a-4748-badd-c3b589d65c41",
        "cursor": {
          "ref": "dc135fd9-b7e5-4c1e-b237-0515efc1ceb6",
          "length": 283,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "909471ab-4381-495e-bdce-340f9c495dc5"
        },
        "item": {
          "id": "616f4136-3a7a-4748-badd-c3b589d65c41",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "f4783ff7-d5cd-4656-9a9f-4542ba26ee73",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 487
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "acb0d772-cdc5-408a-b228-abe4826d9e12",
        "cursor": {
          "ref": "7b468bc7-5146-4888-9612-4fe76bb87ad5",
          "length": 283,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "1e807e27-b88f-4002-b905-b995b2814b86"
        },
        "item": {
          "id": "acb0d772-cdc5-408a-b228-abe4826d9e12",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "595ac34a-68ec-4c23-8e42-6d2cadd20db9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 86,
          "responseSize": 502
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "509e0535-7612-4ac2-bb99-c4769841563b",
        "cursor": {
          "ref": "dcb962aa-709e-4dd2-843f-228e756e0bb2",
          "length": 283,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "02e59c1f-4b44-45c0-b626-6444cfda485c"
        },
        "item": {
          "id": "509e0535-7612-4ac2-bb99-c4769841563b",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "78ffda6d-19a9-4e08-b360-170b22773e90",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 502
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2ed895de-517a-4022-af30-cca6688f6f4b",
        "cursor": {
          "ref": "89d76456-3d57-42d3-b0d3-213d492846b6",
          "length": 283,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "b6a0762c-5e78-4e4e-98f4-b0eca1fcd906"
        },
        "item": {
          "id": "2ed895de-517a-4022-af30-cca6688f6f4b",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "57c0109c-6bab-4175-8e90-a6b54c455a61",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 498
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "189120da-85ff-40bd-ba40-064be4625c58",
        "cursor": {
          "ref": "d40dd427-dc19-437a-adbe-0e3ef9a63e08",
          "length": 283,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "800addd1-f8c5-4363-9460-935d7bfc2164"
        },
        "item": {
          "id": "189120da-85ff-40bd-ba40-064be4625c58",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "28e4c97b-bacf-4187-b879-f13f1069e30d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 96,
          "responseSize": 501
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "739886c4-015c-4584-84e3-ab479dfd4ab6",
        "cursor": {
          "ref": "1b07cd82-2f8e-406a-8fff-247446116d0f",
          "length": 283,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "42fa91d1-cb1c-4e80-ad7c-fe20fc367295"
        },
        "item": {
          "id": "739886c4-015c-4584-84e3-ab479dfd4ab6",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "6213864c-34dc-4f1d-95c3-bda0b56ff2f4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 87,
          "responseSize": 499
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "79ddf4fc-cf24-438e-a7fe-a349819b4c56",
        "cursor": {
          "ref": "7344948c-abb5-47ae-9972-69f8f2d2a665",
          "length": 283,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "5a12890e-9ca8-4b34-86af-784f6dd9cf8b"
        },
        "item": {
          "id": "79ddf4fc-cf24-438e-a7fe-a349819b4c56",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "be6cd751-adfd-4887-8227-79432eede245",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 477
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d3f172d3-55d0-4c60-a3f5-5529f5342a2e",
        "cursor": {
          "ref": "37527c9a-1ba9-43fd-8569-ffdfc1410315",
          "length": 283,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "7e5c9ba0-5722-467b-9713-e29fb33cd4cd"
        },
        "item": {
          "id": "d3f172d3-55d0-4c60-a3f5-5529f5342a2e",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "9876be35-c77f-4697-b79e-a5beb4d1af28",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 86,
          "responseSize": 502
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f5ae4984-4455-4147-af21-c38c017efb6d",
        "cursor": {
          "ref": "31f609f4-5c23-400e-a3f7-b94192eda352",
          "length": 283,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "52c00208-ce13-4e35-860c-922d96a700ee"
        },
        "item": {
          "id": "f5ae4984-4455-4147-af21-c38c017efb6d",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "f01a70ef-4b44-4ca6-bada-e668b1fcab55",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 89,
          "responseSize": 493
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bf881ba3-2a5f-4104-a40b-766fe8f19f6f",
        "cursor": {
          "ref": "7361e345-de80-41b0-9559-b5eb433d0a8a",
          "length": 283,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "7c03f594-dad0-4d7d-a383-36869de00e4e"
        },
        "item": {
          "id": "bf881ba3-2a5f-4104-a40b-766fe8f19f6f",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "3b70f66e-82e3-4e74-87ad-a29399539a35",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 88,
          "responseSize": 490
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "48826eb8-3809-48f4-b8ac-c5ce56fcf288",
        "cursor": {
          "ref": "311d6e7b-e6a4-403c-b587-75eeb9807cb7",
          "length": 283,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "afbfb90e-122e-4624-84b1-6d93f49d7ca5"
        },
        "item": {
          "id": "48826eb8-3809-48f4-b8ac-c5ce56fcf288",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "4d85961c-c015-4381-b0c3-3c1eca09cd8c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 90,
          "responseSize": 492
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c0fddd7e-41ae-4f26-b94d-b942d41fe04a",
        "cursor": {
          "ref": "52447b55-fd5e-4548-9110-551e4fd8c94e",
          "length": 283,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "7a22e94f-aaef-4173-b7ab-5d1393740bee"
        },
        "item": {
          "id": "c0fddd7e-41ae-4f26-b94d-b942d41fe04a",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "cc2c02de-19e8-4a16-b625-e956a3f66b38",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 98,
          "responseSize": 490
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "98333ab7-0c58-446f-a69f-f6fe1745cdfb",
        "cursor": {
          "ref": "1a497487-9803-468d-a808-c4c779be56c7",
          "length": 283,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "f3ecf2ee-66a4-4706-950b-bad71dcf7cd1"
        },
        "item": {
          "id": "98333ab7-0c58-446f-a69f-f6fe1745cdfb",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "6133431b-3b11-4f77-87b7-854030cca1af",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 78,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "36d0e40b-8674-42bd-b450-ebe3b2d10b64",
        "cursor": {
          "ref": "80efeb5a-4d20-4957-b632-fdc212fad277",
          "length": 283,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "10312e82-f91b-4f1c-94dd-cdccf5e47aae"
        },
        "item": {
          "id": "36d0e40b-8674-42bd-b450-ebe3b2d10b64",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "3039ad33-97bc-463b-aec0-8cf1caa116c2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 92,
          "responseSize": 280
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5d5e75bf-951b-4f5a-b399-4117e5e85e6c",
        "cursor": {
          "ref": "68b5f38f-ff19-48a0-8cc1-f5d000f1e979",
          "length": 283,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "b6b61288-702d-484f-a0d4-fea665fad448"
        },
        "item": {
          "id": "5d5e75bf-951b-4f5a-b399-4117e5e85e6c",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "0c0263cc-5910-42c7-8f71-5abe68aa532f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 96
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c7070f55-a974-4a23-acf3-8e4c88365eb9",
        "cursor": {
          "ref": "debe9330-3289-4f4c-9037-54c5b53262f5",
          "length": 283,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "d2d15986-a843-4e4a-bca7-d439a2b3c677"
        },
        "item": {
          "id": "c7070f55-a974-4a23-acf3-8e4c88365eb9",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "39b50ffd-7ed0-4ce4-9bb8-3c1e3e66f90e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 101,
          "responseSize": 600
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f8ffac81-9acc-4d06-81a7-531b1031bb63",
        "cursor": {
          "ref": "aa32adc2-f391-4f83-83bc-c28680fe36a6",
          "length": 283,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "595794f5-56d6-4cc5-8026-3e72a5b08bf1"
        },
        "item": {
          "id": "f8ffac81-9acc-4d06-81a7-531b1031bb63",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "63abd4a4-11aa-4520-8bb6-c2910d25b5ad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 599
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5e70e74d-711c-48d0-b3ce-502e5d6a1016",
        "cursor": {
          "ref": "aaeaeb1e-dd2b-46cc-b19f-97fd7624cf0b",
          "length": 283,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "5e65da80-f094-41b7-aff0-6a8604daff64"
        },
        "item": {
          "id": "5e70e74d-711c-48d0-b3ce-502e5d6a1016",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "165687c6-dff2-4696-af6f-7078be9db3ca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 87,
          "responseSize": 600
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "02e22cf7-dd37-49bc-b87e-4e9e68831f45",
        "cursor": {
          "ref": "69a5be4c-e42a-4344-9f8e-ffe9a2653118",
          "length": 283,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "c480a66a-9359-4709-ad76-9e7464a4c413"
        },
        "item": {
          "id": "02e22cf7-dd37-49bc-b87e-4e9e68831f45",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "15a44332-a15d-46d7-85f4-8a6c00b8185b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 598
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "011fa75d-eaf8-4e4a-9d01-5e7dc9edcbd5",
        "cursor": {
          "ref": "6000c4df-be2d-4b0e-9d85-6cdd355e6c0a",
          "length": 283,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "808990cb-2933-4d3c-be03-9c3771d9a5cc"
        },
        "item": {
          "id": "011fa75d-eaf8-4e4a-9d01-5e7dc9edcbd5",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "9bb8dbb7-f47c-40c9-9d74-ca29d2daa155",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 1266
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0b1f173f-9dde-4f91-98bf-b698734750bb",
        "cursor": {
          "ref": "7cf89209-e327-46a7-8db6-926d846133a9",
          "length": 283,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "48ace191-53b4-425a-9a67-c859dd4a0e6b"
        },
        "item": {
          "id": "0b1f173f-9dde-4f91-98bf-b698734750bb",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "c9edcfd1-8378-4719-870e-a514ad3a340d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 1424
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "28c3e5b0-3997-44ba-826a-530081aaa2e6",
        "cursor": {
          "ref": "21033447-3688-43e5-9ea9-46a2b05c5b1b",
          "length": 283,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "eac6957f-657e-41fe-86f5-0897a80ea667"
        },
        "item": {
          "id": "28c3e5b0-3997-44ba-826a-530081aaa2e6",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "6dad1776-c97c-4c86-bfe3-ffda48d92d08",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 1423
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f4afa927-a0f4-466b-9fff-5f945154b0eb",
        "cursor": {
          "ref": "cf69838c-274e-4123-ae55-d94fa19c15f6",
          "length": 283,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "dd5207a9-1974-4158-9455-17d1be06812b"
        },
        "item": {
          "id": "f4afa927-a0f4-466b-9fff-5f945154b0eb",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "7e328330-4dec-4e98-8c97-e2bdd8200d5a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 1424
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da48dd60-7771-461e-8b1c-9e9dc832b4d8",
        "cursor": {
          "ref": "05b27cd3-972e-49d1-86de-9db220897027",
          "length": 283,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "7a2a485f-aa56-413a-9606-e223ebe8430d"
        },
        "item": {
          "id": "da48dd60-7771-461e-8b1c-9e9dc832b4d8",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "af444387-d061-4b9a-9432-7c04a2f1df6d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 1322
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9056c6f9-67f7-4ce8-9e3d-c96beadbbc64",
        "cursor": {
          "ref": "05c31d50-3737-4e2e-94fe-2ff1848e9e9c",
          "length": 283,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "56825d29-6392-4163-9ac6-b7f8f82e5131"
        },
        "item": {
          "id": "9056c6f9-67f7-4ce8-9e3d-c96beadbbc64",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "f5792aa1-28a0-4eb0-a0f6-a56a8445811e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 86,
          "responseSize": 1309
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "617739fa-c171-4678-9c9c-05a3cbb09828",
        "cursor": {
          "ref": "ee890edf-c9ce-4df4-8c46-699306a42240",
          "length": 283,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "859252c8-781d-4fc6-8481-000927cdd63a"
        },
        "item": {
          "id": "617739fa-c171-4678-9c9c-05a3cbb09828",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "914ff00c-d9b5-4d60-9f0b-30a9f0d1ccae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 1487
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c893e2ca-2374-45b0-9535-89f302a6686b",
        "cursor": {
          "ref": "d3c096c8-d5bd-40db-81e6-a959c8ad0321",
          "length": 283,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "9fc2fdca-ec24-4d37-b79a-9c428603e456"
        },
        "item": {
          "id": "c893e2ca-2374-45b0-9535-89f302a6686b",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "ab0c6eeb-4f74-4ad1-b0f9-671849404896",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 1477
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ea36d8a3-ac81-496b-97a2-912276cd81a4",
        "cursor": {
          "ref": "6467ca7d-5abc-46a2-b393-e76ff2cd60bf",
          "length": 283,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "407bbfb9-8572-4a48-9074-2db00265a02a"
        },
        "item": {
          "id": "ea36d8a3-ac81-496b-97a2-912276cd81a4",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "0fd0e8fe-046d-46d3-923f-abfdd0a746f6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 1476
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "83cc8cc8-0e7b-4b15-9533-691426082c9b",
        "cursor": {
          "ref": "b78ed3a4-2127-4ec4-8d72-b399ea664fc8",
          "length": 283,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "2cabd0ea-43d7-41f0-a401-f87754e13d51"
        },
        "item": {
          "id": "83cc8cc8-0e7b-4b15-9533-691426082c9b",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "eb84db87-a6b4-48c1-9d61-280b3d1f980a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 1477
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9162eded-3ed7-4698-afb4-bed03f93ef03",
        "cursor": {
          "ref": "d7635678-ffc0-47a9-af67-d9371e5843e5",
          "length": 283,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "57af6942-b068-49d2-acd2-6b69c4486a75"
        },
        "item": {
          "id": "9162eded-3ed7-4698-afb4-bed03f93ef03",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "952bc823-326b-4bfe-957e-ba59249a1eec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 86,
          "responseSize": 1375
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7224b881-5fb2-49ab-91b5-ec4ecbb55037",
        "cursor": {
          "ref": "4b5871b5-40cc-4398-9a9c-26aca7076aa7",
          "length": 283,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "49fb553b-903f-451a-8ded-b31c8d65951e"
        },
        "item": {
          "id": "7224b881-5fb2-49ab-91b5-ec4ecbb55037",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "1600abfb-94f0-430b-b256-1ec993ad0285",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fa8b8969-2b6b-40e9-a023-725c64b02bb9",
        "cursor": {
          "ref": "ffb865f0-592b-4380-bbc8-9d15607fa05e",
          "length": 283,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "d324fbf2-91a7-4472-b695-40d174ae4330"
        },
        "item": {
          "id": "fa8b8969-2b6b-40e9-a023-725c64b02bb9",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "a50999e4-f565-4e2c-a8a7-6cb1cd62adcf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 1285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "400447c9-a46c-4454-b479-339a377b39ae",
        "cursor": {
          "ref": "4af2c289-9fb8-4660-beda-7f8db3e5ab94",
          "length": 283,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "1469da54-eab5-4833-954b-54c73b149221"
        },
        "item": {
          "id": "400447c9-a46c-4454-b479-339a377b39ae",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "0e5a5bfe-2c43-4251-924c-ad3a44986860",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 95,
          "responseSize": 1283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4fb394a8-a36f-4ac9-9b9a-ba341154bf7a",
        "cursor": {
          "ref": "34162eb7-8321-4033-a182-40459759b836",
          "length": 283,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "605df909-3c76-4521-85c0-cd27882b36a0"
        },
        "item": {
          "id": "4fb394a8-a36f-4ac9-9b9a-ba341154bf7a",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "53bf6c44-fd3f-4797-a2d5-7713ff8d0d56",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 1284
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ca364a92-cd1e-416f-ad1e-0a2b326fdac5",
        "cursor": {
          "ref": "00237f15-56d8-4b9a-846a-1e47d65871bd",
          "length": 283,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "bbf97110-b1f1-458c-807c-0f715c085998"
        },
        "item": {
          "id": "ca364a92-cd1e-416f-ad1e-0a2b326fdac5",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "4d07a640-e971-423e-9f59-5ef97e986b33",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 1335
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc5cfebf-c5e8-40bf-882c-2884f68b3493",
        "cursor": {
          "ref": "9133e3ed-afc3-40f3-8ab0-47887f6d1d12",
          "length": 283,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "8df36b3d-f7be-43f4-bfe0-e74648c145c4"
        },
        "item": {
          "id": "fc5cfebf-c5e8-40bf-882c-2884f68b3493",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "43c1bc4d-e724-4917-9815-f5b64ca18617",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 1315
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3c032925-089a-4eef-9799-298fa2f964b2",
        "cursor": {
          "ref": "d5d05f5f-5ac8-4001-9f51-d69b3ccd5d64",
          "length": 283,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "14ffca4f-12f8-4e14-b947-217079df0a3a"
        },
        "item": {
          "id": "3c032925-089a-4eef-9799-298fa2f964b2",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "1242f0f6-f976-48f0-bc7e-eed141a7634e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cdc53af7-c71f-444a-8c78-dfab8f139fe9",
        "cursor": {
          "ref": "cd2e95db-d123-43b9-be81-79a55eda2cd7",
          "length": 283,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "2a98d46b-678d-40e3-83ea-c7f811a0ba54"
        },
        "item": {
          "id": "cdc53af7-c71f-444a-8c78-dfab8f139fe9",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "62ace5dc-57be-46ad-a912-e698d3e6aa84",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 87,
          "responseSize": 1273
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a08c8ca4-3f98-414a-8085-e89016662287",
        "cursor": {
          "ref": "90b2903e-9e47-42c6-b624-d2dfa6580948",
          "length": 283,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "dec6226b-e235-43c5-b36d-0068f1a82ccd"
        },
        "item": {
          "id": "a08c8ca4-3f98-414a-8085-e89016662287",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "a27efd56-442a-4a19-8fe4-26ab156d521c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 115,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f321184-36b1-44a2-b362-ab7bd17e89e1",
        "cursor": {
          "ref": "e2f662fa-919f-489f-a093-7f52faac796a",
          "length": 283,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "030e7813-bba3-4228-b505-77e660f300e9"
        },
        "item": {
          "id": "7f321184-36b1-44a2-b362-ab7bd17e89e1",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "da5536f3-c154-445a-9cfb-033559e1637e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8bde88cc-2001-4d48-ad9b-02c1df55a23d",
        "cursor": {
          "ref": "53ab358f-3606-4d4c-af7e-4683e7e97d60",
          "length": 283,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "3e83499b-2ff9-4488-b325-c365a244ccb9"
        },
        "item": {
          "id": "8bde88cc-2001-4d48-ad9b-02c1df55a23d",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "c8dd41ef-45b7-46fd-b387-56fa64674bbc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 1327
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "41709bd8-9c5e-41d4-8c60-d4994a9e2522",
        "cursor": {
          "ref": "bb095eb1-2825-4d62-b751-c7ac78e1ab72",
          "length": 283,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "6ab9bed8-db21-48a2-9622-acce37bfbf9d"
        },
        "item": {
          "id": "41709bd8-9c5e-41d4-8c60-d4994a9e2522",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "7eff607c-134e-4ed9-85fe-5232c852db7c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "106034e3-f2c2-416c-ac58-80ed706f6506",
        "cursor": {
          "ref": "f6583823-69c6-4b77-a806-21b28559de8d",
          "length": 283,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "a59b505a-df90-4aa4-8589-f67ec6cc6c95"
        },
        "item": {
          "id": "106034e3-f2c2-416c-ac58-80ed706f6506",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "ba5a84ea-5f96-4738-b954-c4b521c6b92c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 1319
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d8a16fce-5875-4ff7-8eee-ebc1fe9e7e0a",
        "cursor": {
          "ref": "57b4d21b-bdb8-4a7e-8fed-3ec90d13561e",
          "length": 283,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "e124d965-5e13-44b6-b883-c4d655119467"
        },
        "item": {
          "id": "d8a16fce-5875-4ff7-8eee-ebc1fe9e7e0a",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "eab33ae4-c7bd-4aff-8079-d7f8d900e8d1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 1309
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "75a7b3bf-ca8f-45e4-a530-3974198fd1e5",
        "cursor": {
          "ref": "65b78c6d-fd03-4741-8d1d-c35126badced",
          "length": 283,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "c4344d14-ac60-475c-b28e-36f0ecca8c88"
        },
        "item": {
          "id": "75a7b3bf-ca8f-45e4-a530-3974198fd1e5",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "0f35fb45-a01c-4fc9-a9c2-32e6460b0450",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 1308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "296a3830-e36a-4e06-a7d9-cd42e4ddacd5",
        "cursor": {
          "ref": "a993aa19-f21d-4fae-ac7f-6064577cf21f",
          "length": 283,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "9ee76d33-ea68-4ed5-80f4-aa07d930867e"
        },
        "item": {
          "id": "296a3830-e36a-4e06-a7d9-cd42e4ddacd5",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "73b97ab7-a7d9-47ea-8fde-28296256073f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 1309
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cdb1d139-76c5-4f2e-97e8-7c9753095f6e",
        "cursor": {
          "ref": "5f780ada-3ff9-4a7d-96c9-921bbd2f3dd1",
          "length": 283,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "58ad1601-82f1-41b8-b897-a198b510d6d4"
        },
        "item": {
          "id": "cdb1d139-76c5-4f2e-97e8-7c9753095f6e",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "2c1a7e65-e1b3-4713-b702-f79a1db00c53",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 1335
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fbc21d41-d601-49d3-bd99-9a655c0821e5",
        "cursor": {
          "ref": "111ad483-398c-4dc3-8aca-02e44be65106",
          "length": 283,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "0a44920c-ea46-4ff0-b641-ccae81b8cdd2"
        },
        "item": {
          "id": "fbc21d41-d601-49d3-bd99-9a655c0821e5",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "ccb98f45-3acf-4fd2-a3d6-72c012e6dbe6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 87,
          "responseSize": 1283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e5c61ee-1e9e-4ff4-bf3b-16cc804b24bf",
        "cursor": {
          "ref": "f02cfb3b-41f8-4210-a9c1-275fc8d6bf57",
          "length": 283,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "127a1457-47cf-4bae-a2b6-c7837a4ff4bd"
        },
        "item": {
          "id": "3e5c61ee-1e9e-4ff4-bf3b-16cc804b24bf",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "f5123f28-39b8-4faa-97c9-18762ab609e3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 88,
          "responseSize": 1756
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "926ebb3b-cd85-48d0-9311-08654d3c8d31",
        "cursor": {
          "ref": "e2f06890-b506-4fa7-af45-417960f44d37",
          "length": 283,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "894b50d9-17e1-4389-b347-0fff8a8f83b2"
        },
        "item": {
          "id": "926ebb3b-cd85-48d0-9311-08654d3c8d31",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "04705607-bdec-4222-936d-c57dc032ccbc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 1742
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "45021ede-a4d7-420d-b55e-a73b7c2408ae",
        "cursor": {
          "ref": "ba618c43-766e-45ca-af49-b5da89ba7694",
          "length": 283,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "9aa07f98-3367-43a4-ac48-f46b5d352b46"
        },
        "item": {
          "id": "45021ede-a4d7-420d-b55e-a73b7c2408ae",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "1600aef3-77f4-4875-8828-d81fddd40ef2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 1740
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "570d6659-830a-4d37-bc35-92ed93065137",
        "cursor": {
          "ref": "77e48e2b-0ac5-46bb-8882-56d941b777b4",
          "length": 283,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "c773903e-44c6-4255-b3bc-c31bfc4e4092"
        },
        "item": {
          "id": "570d6659-830a-4d37-bc35-92ed93065137",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "d476e97d-8889-46ad-9451-c26d5b58bfd0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 1741
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5345c672-67e1-4757-a4d9-6fef54491836",
        "cursor": {
          "ref": "5eea55cc-3615-47d4-bc50-06a254dca34b",
          "length": 283,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "43812a0f-6eca-4745-9789-27d42c770b22"
        },
        "item": {
          "id": "5345c672-67e1-4757-a4d9-6fef54491836",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "88107ae9-fdc4-4f22-b78e-8505a6270983",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 1772
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5bc13f5a-a16e-478b-855a-ed72137088e2",
        "cursor": {
          "ref": "92c8c918-c7dd-45d2-a8ff-93cd34880df8",
          "length": 283,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "49ebed56-63d2-4daa-9177-1f9dccc7ddd9"
        },
        "item": {
          "id": "5bc13f5a-a16e-478b-855a-ed72137088e2",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "0b1887ff-41b1-49ae-8a35-584e096ab578",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 2115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "69b26397-b849-4564-821c-880c93c930d8",
        "cursor": {
          "ref": "c8e17403-e8ca-4291-be22-1383f9cf9278",
          "length": 283,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "a9879f3b-3470-499e-94d7-f52efb634a9c"
        },
        "item": {
          "id": "69b26397-b849-4564-821c-880c93c930d8",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "c64403ed-a82d-410b-9f5c-8f95b33e0786",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 2101
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e3717ee-551b-4b8f-bd9b-fd6f4f1bcf5a",
        "cursor": {
          "ref": "2a5935a5-5cfa-4fa4-9172-25d171a94f38",
          "length": 283,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "f8f4ae9e-62a5-403a-b574-da08294b95b3"
        },
        "item": {
          "id": "8e3717ee-551b-4b8f-bd9b-fd6f4f1bcf5a",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "24abb4d3-524e-48d2-acd6-c1a6b0cd6849",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 2099
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cf29bdf5-6ab4-4a0e-b3bc-748258ca1760",
        "cursor": {
          "ref": "6fd02f78-23e0-4947-98ac-21b0e75f5291",
          "length": 283,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "299ad054-29fa-4272-aa22-ba4d992d78fc"
        },
        "item": {
          "id": "cf29bdf5-6ab4-4a0e-b3bc-748258ca1760",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "f3581687-a46c-4ace-a86b-cd70147cd0d8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 2100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a1b937b3-5180-4ae7-852f-737b471b23d9",
        "cursor": {
          "ref": "c877746e-fd2a-47d6-b34f-a453b2c36f7f",
          "length": 283,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "c5daf565-9142-4884-acf1-f08ed356c867"
        },
        "item": {
          "id": "a1b937b3-5180-4ae7-852f-737b471b23d9",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "41c70f6f-e5a3-4029-9b6a-b8d49699e3a3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 91,
          "responseSize": 2121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a552bef6-2ce9-4e63-9cdb-341e6c805b19",
        "cursor": {
          "ref": "d008ed6f-3883-4fad-8274-e83a047d8ee2",
          "length": 283,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "bdf2fdd0-b46c-4ef7-9cad-ba052c90af0d"
        },
        "item": {
          "id": "a552bef6-2ce9-4e63-9cdb-341e6c805b19",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "12bc918e-0f53-49fc-829c-d72b1e702a29",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 1325
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6d9947e9-2dfe-4696-a9a0-bb69394aacae",
        "cursor": {
          "ref": "5cdfe75c-bf3d-4af4-9906-c193c3b84eda",
          "length": 283,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "9ced351b-8862-45a4-8605-d6bb0de114fd"
        },
        "item": {
          "id": "6d9947e9-2dfe-4696-a9a0-bb69394aacae",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "a02730fd-ef80-429f-a516-895561f0fe78",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 1359
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "98fa572f-8ad2-432b-b285-ce1aa1c751d3",
        "cursor": {
          "ref": "387593a4-9466-4e39-af06-933d97b742d6",
          "length": 283,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "cf3dee38-dace-44b1-b0be-39fd972dcce9"
        },
        "item": {
          "id": "98fa572f-8ad2-432b-b285-ce1aa1c751d3",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "5d961fe9-2e11-49fa-91de-e43d01807f63",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 1340
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e8a521e-7f36-45bf-9c48-a2f45f1e9cc6",
        "cursor": {
          "ref": "f11b21da-a83c-4995-a499-8d21be13f43b",
          "length": 283,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "8162820e-e87b-4ac3-828e-4b3a8641c180"
        },
        "item": {
          "id": "8e8a521e-7f36-45bf-9c48-a2f45f1e9cc6",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "0d34967c-dc38-44c1-a66c-f5aacc24c97a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 86,
          "responseSize": 1338
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce9fb3ea-660f-41c1-9cd7-caf69ab499ba",
        "cursor": {
          "ref": "766c5963-24ae-4ceb-bf67-6ad15591b2ce",
          "length": 283,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "97fd9309-6439-4372-be71-109076ac73b5"
        },
        "item": {
          "id": "ce9fb3ea-660f-41c1-9cd7-caf69ab499ba",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "29e35a8c-e162-4698-b486-ff96f8c3114b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 1339
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d1c2b7c2-0562-4401-9d41-a7a5acbce8a2",
        "cursor": {
          "ref": "12ff7e4e-0569-4286-bae5-1e63aae35c0a",
          "length": 283,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "d87f87dd-2b46-47d0-a528-8c0f9180ca45"
        },
        "item": {
          "id": "d1c2b7c2-0562-4401-9d41-a7a5acbce8a2",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "b162f22d-7680-4390-b31c-c0fd0d347e53",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 87,
          "responseSize": 1365
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "561b30a8-5990-4f6e-90a4-e6364f4368c1",
        "cursor": {
          "ref": "9b767e6b-977f-4150-be9d-38e700530c67",
          "length": 283,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "38507ec5-0b5c-470d-a341-4015d5c8d148"
        },
        "item": {
          "id": "561b30a8-5990-4f6e-90a4-e6364f4368c1",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "0e7dc842-7691-428d-862b-e117f1fe43bc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 1395
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e71eeca9-1094-4671-bf39-6683cda58fb6",
        "cursor": {
          "ref": "42a17417-4628-482c-b0ad-5aefcc70d776",
          "length": 283,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "ba131441-2db6-4387-9833-547692f416b8"
        },
        "item": {
          "id": "e71eeca9-1094-4671-bf39-6683cda58fb6",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "e3402c5f-9e71-490b-8833-d7078730ecc8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 1328
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c01422f8-af6f-406d-9718-be533c707c53",
        "cursor": {
          "ref": "8d7daed6-093f-4ef9-97d7-b7629bd267b9",
          "length": 283,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "ad2d95dd-eed8-4e10-bd81-3cf00c2dc551"
        },
        "item": {
          "id": "c01422f8-af6f-406d-9718-be533c707c53",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "6826f887-d0d4-4476-8d41-ff45f47536d7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 87,
          "responseSize": 1829
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b3cc5bac-4b6e-4f95-ad7e-b5c7d4b609ba",
        "cursor": {
          "ref": "8b3273b4-3ee8-4682-8dec-fcbae7a10987",
          "length": 283,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "457636f0-0b13-41ac-8211-623450a45e8c"
        },
        "item": {
          "id": "b3cc5bac-4b6e-4f95-ad7e-b5c7d4b609ba",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "38d55132-ad73-4d78-a005-5ea91c15c034",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 1628
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6c438c82-eee4-4bb2-96be-6f24ac9682cf",
        "cursor": {
          "ref": "93a755b7-4267-4adc-8a12-cbfa5353919a",
          "length": 283,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "d6a544ae-21fe-462b-9daa-6a86caecd118"
        },
        "item": {
          "id": "6c438c82-eee4-4bb2-96be-6f24ac9682cf",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "40a896f7-6851-42c7-b16f-ee1f98d5368e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 97,
          "responseSize": 1626
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "927f13e3-e2d4-49cd-a985-20c25c42f6bc",
        "cursor": {
          "ref": "58f6af1a-37ae-4387-ab17-3bd17a1b0903",
          "length": 283,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "93fb806c-bf9c-46c3-acdb-7ee3480da6b4"
        },
        "item": {
          "id": "927f13e3-e2d4-49cd-a985-20c25c42f6bc",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "a1ea672a-b0dc-433a-a409-ddb01627016f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 1627
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c569fcd-910f-45fd-a6e4-be9dc9887493",
        "cursor": {
          "ref": "7163e017-b6ca-4712-911a-f80c0b13955a",
          "length": 283,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "25307b54-85c0-4322-9cff-0907b656e89c"
        },
        "item": {
          "id": "2c569fcd-910f-45fd-a6e4-be9dc9887493",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "666115a2-6565-4df9-866f-b1ffa277f56a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 86,
          "responseSize": 1640
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2e0a0ca6-f8b5-476f-abad-2007b2da83a7",
        "cursor": {
          "ref": "73506cc2-9ab0-422e-a797-07e7d42d9fa2",
          "length": 283,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "a85f9b00-fa47-48ce-b173-23d6e164ebd7"
        },
        "item": {
          "id": "2e0a0ca6-f8b5-476f-abad-2007b2da83a7",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "f9fcbd52-810c-4056-8e5a-a055859aef34",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 2164
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a5793ee6-6e28-4add-a994-73bb849ddf5f",
        "cursor": {
          "ref": "2258c05b-2ed8-43ae-9217-eee5eb7a79f1",
          "length": 283,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "8d707cfa-ead9-4718-8ebf-5dce0ad4eb2a"
        },
        "item": {
          "id": "a5793ee6-6e28-4add-a994-73bb849ddf5f",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "0301c564-5dad-41f7-a6ef-04debdc8fef1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 87,
          "responseSize": 2150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "09343d0f-6abb-4a5c-899a-2a371347e60f",
        "cursor": {
          "ref": "146c7c2d-91fd-41f4-a10b-8be6edc75730",
          "length": 283,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "1ee117cf-ce57-4e9d-bd6d-f03e8ba49d88"
        },
        "item": {
          "id": "09343d0f-6abb-4a5c-899a-2a371347e60f",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "43f37f4c-ecf6-42bc-8edc-640b69d88b2e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 2148
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b7c86a73-209b-4665-a68b-e2d4020b0c52",
        "cursor": {
          "ref": "e184df9e-5acd-47a8-9b2f-050039d50838",
          "length": 283,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "808f26c1-1e40-4d04-8912-edf39083466d"
        },
        "item": {
          "id": "b7c86a73-209b-4665-a68b-e2d4020b0c52",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "76fabc56-276c-44d4-9a76-785d82189fe8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 2149
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "44d5ceed-f1e7-44a1-a2ec-5183c55ce221",
        "cursor": {
          "ref": "f53bb7dd-30a1-478a-8576-8e513e0db33c",
          "length": 283,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "e9f8d7ca-873e-41c9-afea-7a92a78ef4fa"
        },
        "item": {
          "id": "44d5ceed-f1e7-44a1-a2ec-5183c55ce221",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "17988d0d-83fa-41dc-8e1b-323f2735b1ef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 95,
          "responseSize": 2170
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b632105-96b9-49d9-a34a-0c9b0e8031dc",
        "cursor": {
          "ref": "827f1170-2483-4f2c-9b91-5c5e83456387",
          "length": 283,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "1ddd25d7-e289-40bf-9b61-920da01128d5"
        },
        "item": {
          "id": "6b632105-96b9-49d9-a34a-0c9b0e8031dc",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "18449a7b-bae1-44ea-92f8-1aa8b8ee9433",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 904
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "036f765e-e015-4a0b-801d-e07dcd202317",
        "cursor": {
          "ref": "39eac9e6-69f7-494a-967f-15f642dbe63f",
          "length": 283,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "427aa1ca-ec34-476c-b364-66e46b3e8ce6"
        },
        "item": {
          "id": "036f765e-e015-4a0b-801d-e07dcd202317",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "9c067daf-2f4a-4c87-8c57-bf296a4629a0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 915
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "78f209b2-09ea-4f52-be2d-cb30a1d7c2be",
        "cursor": {
          "ref": "6d5297f6-a7ee-49a7-b415-644f006960c1",
          "length": 283,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "bd863dfc-dae1-481c-9fb9-e4c4ac43184c"
        },
        "item": {
          "id": "78f209b2-09ea-4f52-be2d-cb30a1d7c2be",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "5ec09ed2-9a41-45c3-b5e3-8a00dcecf0b5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 917
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d9481c83-fb19-4862-a84f-362d7954e9b5",
        "cursor": {
          "ref": "488f4903-1d90-4931-b65e-36cd0ae1ca1a",
          "length": 283,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "1ea7132d-fae6-4adf-a3e8-98a110992f41"
        },
        "item": {
          "id": "d9481c83-fb19-4862-a84f-362d7954e9b5",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "9b901a8e-5682-47b7-a3a5-7c38d4b51820",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 100,
          "responseSize": 915
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "836dc4f9-b4b1-4b29-bf63-78c7aed5a2a0",
        "cursor": {
          "ref": "bc3c4ca6-3bbf-4d90-a9d3-8c1e735d1fe5",
          "length": 283,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "a494bd82-7cde-4912-9d4f-af905688a193"
        },
        "item": {
          "id": "836dc4f9-b4b1-4b29-bf63-78c7aed5a2a0",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "66568a04-5441-4cda-bcbc-a514e07df7f5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 917
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cbebb855-5d19-4f0a-9090-f875b87d1aca",
        "cursor": {
          "ref": "133ebf82-8d26-46bb-b45f-cf1fc212bc14",
          "length": 283,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "48dda142-1643-46a8-b6ef-0d72349489cb"
        },
        "item": {
          "id": "cbebb855-5d19-4f0a-9090-f875b87d1aca",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "88a41934-cd49-442f-a2b8-6ec0111ed2c7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 921
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "04d5b2a5-a82c-4c8a-84b0-81a4b8d46c2c",
        "cursor": {
          "ref": "d8b8d962-10ae-4d87-890d-7e89516836a8",
          "length": 283,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "1fa1a613-cfa4-4b1d-a646-c1cc28b5de20"
        },
        "item": {
          "id": "04d5b2a5-a82c-4c8a-84b0-81a4b8d46c2c",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "68477834-5d8d-4557-9e3f-d7968a5317fa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 1262
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "47def1c3-9015-4abe-8f13-db8373c7312f",
        "cursor": {
          "ref": "8cc51da3-e8f6-45bf-9350-0a868b08b1cd",
          "length": 283,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "a35d8b7d-fde3-45bd-a7fe-68434c211f4f"
        },
        "item": {
          "id": "47def1c3-9015-4abe-8f13-db8373c7312f",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "25230b98-a81c-49ba-a0cc-84031b96b730",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 86,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1c9672e9-8243-4f80-a6fa-9c94b7cbf1ac",
        "cursor": {
          "ref": "732bec38-18ff-4fd4-b131-87a3f17c5756",
          "length": 283,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "fef2bc8d-408c-4024-84c1-ec67d2d3b400"
        },
        "item": {
          "id": "1c9672e9-8243-4f80-a6fa-9c94b7cbf1ac",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "3b617873-8d90-4d16-b07f-15ad2218fe3b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "13727448-eeec-4adb-ade3-7d612b9c6006",
        "cursor": {
          "ref": "e513f8df-1239-49e5-a04d-2a129d45fa95",
          "length": 283,
          "cycles": 1,
          "position": 251,
          "iteration": 0,
          "httpRequestId": "5c6c6fee-5df5-4199-9741-28bb0d3a5a8f"
        },
        "item": {
          "id": "13727448-eeec-4adb-ade3-7d612b9c6006",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "b95de7bf-94fe-4217-89f5-7b4576962c23",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 1273
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "20e0459c-ef26-427b-9f0d-77b8b5055cad",
        "cursor": {
          "ref": "762f1832-b85c-4979-a578-aa256f7e8364",
          "length": 283,
          "cycles": 1,
          "position": 252,
          "iteration": 0,
          "httpRequestId": "8675ca42-005e-4112-afd6-139f204ca5a6"
        },
        "item": {
          "id": "20e0459c-ef26-427b-9f0d-77b8b5055cad",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "0d03e908-27b5-4aa4-8ca1-865ca5f0b480",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 88,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "94b25c32-b9b1-4653-8290-9030e4ecb23f",
        "cursor": {
          "ref": "5d54e8bb-796b-40dc-9592-5daf6d3f7cf2",
          "length": 283,
          "cycles": 1,
          "position": 253,
          "iteration": 0,
          "httpRequestId": "fb5e90e6-1fe0-4b7f-824b-167839668b1c"
        },
        "item": {
          "id": "94b25c32-b9b1-4653-8290-9030e4ecb23f",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "515bb332-9975-4e83-a37c-96fd06747deb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa844efd-9436-45a2-8995-9e4e11200d18",
        "cursor": {
          "ref": "8cad3aad-9ecc-41ec-9bb5-d205ee682943",
          "length": 283,
          "cycles": 1,
          "position": 254,
          "iteration": 0,
          "httpRequestId": "cdc65e7f-528f-422c-ab76-e8d8c66b4296"
        },
        "item": {
          "id": "aa844efd-9436-45a2-8995-9e4e11200d18",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "e2109569-46d9-4d75-ac0f-185de5ce2dff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 1299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "df680ca2-8156-4f7c-9536-f5603c7d0f43",
        "cursor": {
          "ref": "ba810c0f-b796-4e82-b1bf-5d687fe1be89",
          "length": 283,
          "cycles": 1,
          "position": 255,
          "iteration": 0,
          "httpRequestId": "e3de7a46-9886-4abe-bb97-35314530a208"
        },
        "item": {
          "id": "df680ca2-8156-4f7c-9536-f5603c7d0f43",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "46fdfb7d-0255-451f-9283-109fb414c47f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "47d8274a-11f6-4ab1-bf93-08870a7353de",
        "cursor": {
          "ref": "425cfc03-c06a-472e-8963-b4098715368b",
          "length": 283,
          "cycles": 1,
          "position": 256,
          "iteration": 0,
          "httpRequestId": "b7a35447-2266-4a87-affc-dcf6ff526406"
        },
        "item": {
          "id": "47d8274a-11f6-4ab1-bf93-08870a7353de",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "6a693aa5-be17-40de-860d-e6161ecc89a4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bcf1e53f-4c0a-4547-b3a6-06e50af15e6a",
        "cursor": {
          "ref": "4f993265-65a9-408b-aab4-fc6e7d35ed59",
          "length": 283,
          "cycles": 1,
          "position": 257,
          "iteration": 0,
          "httpRequestId": "a0f98771-04d2-4fda-9aa1-4451c7181d76"
        },
        "item": {
          "id": "bcf1e53f-4c0a-4547-b3a6-06e50af15e6a",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "e4422fe8-6b86-45da-85f4-658e81cb5226",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 1273
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d7dada6e-9817-4e86-a9c7-da77ac814c64",
        "cursor": {
          "ref": "4b13f81c-ed5a-4802-a0e2-859272220371",
          "length": 283,
          "cycles": 1,
          "position": 258,
          "iteration": 0,
          "httpRequestId": "96fa7ed5-1b62-4bab-bcd2-6f0bcd92e03d"
        },
        "item": {
          "id": "d7dada6e-9817-4e86-a9c7-da77ac814c64",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "12ce2645-314d-45ce-ac5b-dafbc8e1b1f5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 96,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b65f8690-150e-4f1f-a44c-89cf72275d57",
        "cursor": {
          "ref": "c99d1020-7380-4c3b-93bd-a2e4bcd7d5c4",
          "length": 283,
          "cycles": 1,
          "position": 259,
          "iteration": 0,
          "httpRequestId": "dc4d798a-86bb-4f97-ad1c-83eb5cbe0db1"
        },
        "item": {
          "id": "b65f8690-150e-4f1f-a44c-89cf72275d57",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "1edf9f7d-e8a9-4877-95de-54f3648bf8d3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c899290b-1605-4c31-a59c-13a23775897c",
        "cursor": {
          "ref": "27931f12-75f0-438f-9efb-f6aed59ea834",
          "length": 283,
          "cycles": 1,
          "position": 260,
          "iteration": 0,
          "httpRequestId": "12c57799-49b1-44c6-8a3c-266a7bbed6b5"
        },
        "item": {
          "id": "c899290b-1605-4c31-a59c-13a23775897c",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "9107297d-9aba-4bd2-81d8-6cca8d890a03",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 1253
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d57d17f1-1fee-4269-b01a-93b576dd95fb",
        "cursor": {
          "ref": "4d8ac933-34c1-4328-bbcf-d6dcaef22ed7",
          "length": 283,
          "cycles": 1,
          "position": 261,
          "iteration": 0,
          "httpRequestId": "69d30ceb-1cc8-42cc-b192-b7168f2442aa"
        },
        "item": {
          "id": "d57d17f1-1fee-4269-b01a-93b576dd95fb",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "9f17e3a2-cc74-480b-8a33-74a6d167442d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 1189
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ee4d78b6-b16d-4d53-bbb7-ffa727cb5b30",
        "cursor": {
          "ref": "c30f44a6-a356-42cf-8468-a81f834c5ad4",
          "length": 283,
          "cycles": 1,
          "position": 262,
          "iteration": 0,
          "httpRequestId": "67f8d6ab-3398-4ec3-b517-03e4d58e4312"
        },
        "item": {
          "id": "ee4d78b6-b16d-4d53-bbb7-ffa727cb5b30",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "bd219dc3-3f75-42e3-926e-5d3187d18cf0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 1188
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9654bcd0-f99a-4c50-a175-e76305b706d5",
        "cursor": {
          "ref": "c2993715-54cc-4282-a5ac-27ab46dcc2c1",
          "length": 283,
          "cycles": 1,
          "position": 263,
          "iteration": 0,
          "httpRequestId": "c9ed4c11-eb67-44db-8e78-3658fbc73b59"
        },
        "item": {
          "id": "9654bcd0-f99a-4c50-a175-e76305b706d5",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "4d4f1271-d45f-483d-bdf9-378737174ce0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 1189
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "25180b6d-7403-4b97-b88f-f3e28f09063c",
        "cursor": {
          "ref": "cb55318a-e952-469d-86f5-271e02143279",
          "length": 283,
          "cycles": 1,
          "position": 264,
          "iteration": 0,
          "httpRequestId": "efd69475-e64a-4980-b856-4201510c4e7c"
        },
        "item": {
          "id": "25180b6d-7403-4b97-b88f-f3e28f09063c",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "20fac370-dd7a-48cf-a25c-876aa458f4b5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 86,
          "responseSize": 1259
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "75f6bc1e-5fda-47bf-9aef-68c64d4da351",
        "cursor": {
          "ref": "fb3e80d0-cb3e-4bd8-8516-91269de732bd",
          "length": 283,
          "cycles": 1,
          "position": 265,
          "iteration": 0,
          "httpRequestId": "82fb36d7-93f3-4974-94b4-dc679681b3c3"
        },
        "item": {
          "id": "75f6bc1e-5fda-47bf-9aef-68c64d4da351",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "2dc4e432-f0c3-41e1-95de-370443d6756c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 86,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "520dc668-a771-45ac-9204-de3a41dfd9fb",
        "cursor": {
          "ref": "7ddc4422-c412-4805-87d4-de6dfe508b96",
          "length": 283,
          "cycles": 1,
          "position": 266,
          "iteration": 0,
          "httpRequestId": "93740d55-52ad-4ebc-a57d-2c2951272056"
        },
        "item": {
          "id": "520dc668-a771-45ac-9204-de3a41dfd9fb",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "0b21ab0e-2fe1-4a19-ba5b-0df49f435be6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 1150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c0ece52-3649-4ac1-89ee-317d2042dffb",
        "cursor": {
          "ref": "3d89838d-66cb-49ea-a764-15dcc5d3eb1a",
          "length": 283,
          "cycles": 1,
          "position": 267,
          "iteration": 0,
          "httpRequestId": "0d7d65bc-5670-49a3-b898-4a34dde1a652"
        },
        "item": {
          "id": "9c0ece52-3649-4ac1-89ee-317d2042dffb",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "38a2de41-d5ca-49e4-9703-0f49d7a32890",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 1149
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0f08d568-c203-4979-920e-6570254b2882",
        "cursor": {
          "ref": "f66b9034-65d3-4e29-af58-3162e9409c2d",
          "length": 283,
          "cycles": 1,
          "position": 268,
          "iteration": 0,
          "httpRequestId": "a1d3bb06-92d1-4e0c-8073-037efdb2b536"
        },
        "item": {
          "id": "0f08d568-c203-4979-920e-6570254b2882",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "2d05341b-a698-4612-a01f-16a300f0f603",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 1150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e1e5a0aa-8c22-4ae4-b54f-b413a24f5641",
        "cursor": {
          "ref": "9fb86d1d-7c84-4e1d-b047-432cbe36d461",
          "length": 283,
          "cycles": 1,
          "position": 269,
          "iteration": 0,
          "httpRequestId": "ce5283a1-11da-4d65-942b-2ceb4ea2f660"
        },
        "item": {
          "id": "e1e5a0aa-8c22-4ae4-b54f-b413a24f5641",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "e8c33e11-59e3-49e7-ad50-c6f8ecf226d8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "49f9fc72-b178-4f07-b54e-4a778579d2a2",
        "cursor": {
          "ref": "ef7f391f-2953-4ade-88ca-7b94f4b701ac",
          "length": 283,
          "cycles": 1,
          "position": 270,
          "iteration": 0,
          "httpRequestId": "08562132-797e-4dc1-91dc-6a5db86afbd2"
        },
        "item": {
          "id": "49f9fc72-b178-4f07-b54e-4a778579d2a2",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "084e6215-2cfa-4188-ba7f-d5c41bbc5b35",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "20bd0e6e-1f24-44b4-8474-51da639e1c55",
        "cursor": {
          "ref": "a11885e9-38a2-49d9-9b89-ceb55bbd09f4",
          "length": 283,
          "cycles": 1,
          "position": 271,
          "iteration": 0,
          "httpRequestId": "8f6418d8-396b-43ea-87d7-3d85db15dff6"
        },
        "item": {
          "id": "20bd0e6e-1f24-44b4-8474-51da639e1c55",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "077c7544-c551-4362-9556-e3388a8a0d3e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 1279
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "39a77ba7-4f3c-4974-9627-ee22f1aa972f",
        "cursor": {
          "ref": "09bfaefa-fde7-4b73-b595-3825df394754",
          "length": 283,
          "cycles": 1,
          "position": 272,
          "iteration": 0,
          "httpRequestId": "7556a2b0-87b1-4537-a4f0-ca36f02c9bf4"
        },
        "item": {
          "id": "39a77ba7-4f3c-4974-9627-ee22f1aa972f",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "05e03d0f-5615-43fc-84dc-a29d967b1b36",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 1278
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db32b779-3c05-4280-a23f-8e9aec0c05d5",
        "cursor": {
          "ref": "d51d1bc9-afd9-492a-9700-e70584dec8b2",
          "length": 283,
          "cycles": 1,
          "position": 273,
          "iteration": 0,
          "httpRequestId": "044637c5-dcfc-4f11-beec-b864c7aad6fb"
        },
        "item": {
          "id": "db32b779-3c05-4280-a23f-8e9aec0c05d5",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "db3c85bd-cf74-409a-b998-bee66b4d2214",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 1279
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fbeb8dd7-326c-49b6-b43d-3f70658c51f9",
        "cursor": {
          "ref": "3035cda5-8c53-41d4-a4c5-173b578deb62",
          "length": 283,
          "cycles": 1,
          "position": 274,
          "iteration": 0,
          "httpRequestId": "88dda6d3-ec16-4380-840d-03f110d49202"
        },
        "item": {
          "id": "fbeb8dd7-326c-49b6-b43d-3f70658c51f9",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "6f8739a4-2c12-4ab1-9b6b-5a307bcd7a3c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 86,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5f881ad0-0671-407d-8316-2722d081f6fb",
        "cursor": {
          "ref": "e2e417c0-a4db-4c25-8db6-4b636a4a6676",
          "length": 283,
          "cycles": 1,
          "position": 275,
          "iteration": 0,
          "httpRequestId": "6d2528a9-435d-4ccb-b964-6546e1a26da2"
        },
        "item": {
          "id": "5f881ad0-0671-407d-8316-2722d081f6fb",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "6d294d90-0e62-4ef0-ac2b-f19ffbea2b51",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 87,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c9b83607-7b06-4f43-aaaf-3fbd9bbfe982",
        "cursor": {
          "ref": "c649bc24-4385-4bf6-be8f-b3ea4f2f1b2f",
          "length": 283,
          "cycles": 1,
          "position": 276,
          "iteration": 0,
          "httpRequestId": "f4b5a4ed-45ac-44b6-8498-b14a3004362c"
        },
        "item": {
          "id": "c9b83607-7b06-4f43-aaaf-3fbd9bbfe982",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "87807104-1e44-4922-a59f-8b7fabb81ebc",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 81,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f45ff193-50ce-421c-8a7b-0aa613f10f68",
        "cursor": {
          "ref": "bbdbfefa-938e-440b-818f-56830748b97f",
          "length": 283,
          "cycles": 1,
          "position": 277,
          "iteration": 0,
          "httpRequestId": "42714ee3-f8ff-4986-858f-d0aefad9e659"
        },
        "item": {
          "id": "f45ff193-50ce-421c-8a7b-0aa613f10f68",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "8a83f10c-584c-4c3c-9e4b-2f6112cacc01",
          "status": "OK",
          "code": 200,
          "responseTime": 133,
          "responseSize": 338
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "11265588-3d13-41cb-9842-3086b7e21c98",
        "cursor": {
          "ref": "d1fe6bff-1d9f-45d9-b303-4e07d2fefc6f",
          "length": 283,
          "cycles": 1,
          "position": 278,
          "iteration": 0,
          "httpRequestId": "3e0b31b6-b5b1-4cba-bd70-bad0ebaf8571"
        },
        "item": {
          "id": "11265588-3d13-41cb-9842-3086b7e21c98",
          "name": "credentials_verify"
        },
        "response": {
          "id": "7475188e-86f7-4a8e-9177-ba2cab518d2e",
          "status": "OK",
          "code": 200,
          "responseTime": 1539,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "48841940-bcfc-4081-9b7e-bfd8fcaa77be",
        "cursor": {
          "ref": "7082e14f-ac98-4304-ac3e-aecc15757792",
          "length": 283,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "daf9713a-2657-41fb-a7d4-4cd5d24096ce"
        },
        "item": {
          "id": "48841940-bcfc-4081-9b7e-bfd8fcaa77be",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "700df4c6-588b-424e-ac3c-571a4d75d71a",
          "status": "OK",
          "code": 200,
          "responseTime": 1299,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "234441ee-97b4-4864-998f-1fa555366a3e",
        "cursor": {
          "ref": "bd160f15-1a46-49fa-9eab-821abc9b83b9",
          "length": 283,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "638b7685-0aed-4456-8f2d-2a6be19ff632"
        },
        "item": {
          "id": "234441ee-97b4-4864-998f-1fa555366a3e",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "8de6bb38-155e-4982-b6da-99ad93d65b59",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 80,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "234441ee-97b4-4864-998f-1fa555366a3e",
        "cursor": {
          "ref": "bd160f15-1a46-49fa-9eab-821abc9b83b9",
          "length": 283,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "638b7685-0aed-4456-8f2d-2a6be19ff632"
        },
        "item": {
          "id": "234441ee-97b4-4864-998f-1fa555366a3e",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "8de6bb38-155e-4982-b6da-99ad93d65b59",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 80,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c073775e-9e7d-4ace-9846-382b3a708f1e",
        "cursor": {
          "ref": "3525c9c7-886a-4a93-958d-97a70cf8563d",
          "length": 283,
          "cycles": 1,
          "position": 281,
          "iteration": 0,
          "httpRequestId": "c55f4357-d23c-4fcb-924f-7b74bae77a4f"
        },
        "item": {
          "id": "c073775e-9e7d-4ace-9846-382b3a708f1e",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "a92ebacd-e7a3-4c98-b480-024b34fb695d",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 79,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "35c2ad53-f94d-4985-be2c-0b86c6433674",
        "cursor": {
          "ref": "8aba79e4-5ef9-4861-9319-c6eceed92484",
          "length": 283,
          "cycles": 1,
          "position": 282,
          "iteration": 0,
          "httpRequestId": "0181c272-dcc0-417e-8024-7a95a3f16493"
        },
        "item": {
          "id": "35c2ad53-f94d-4985-be2c-0b86c6433674",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "f381c9ad-d7ef-4e31-9565-b6ba5246cd0a",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 78,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}