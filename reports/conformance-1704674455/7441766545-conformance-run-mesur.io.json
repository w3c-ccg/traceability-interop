{
  "collection": {
    "info": {
      "_postman_id": "0b8a4a7f-f952-4403-a9a4-909b37b8fa24",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "bf0e8d4b-f88c-4a29-8098-371558dc0c18",
        "name": "Clear Cache",
        "item": [
          {
            "id": "a38f299d-2f2c-4f81-a242-125074d7ddf4",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "5f1b6c8e-8507-41a5-8c36-bf0637d8a3f9",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "6ca712a7-7086-4976-9d37-d36d88f4e3d7"
                }
              }
            ]
          },
          {
            "id": "9ffde60c-c136-4d18-a2f2-43709f346491",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "13e1b41e-442d-4ad6-90e2-35abc0ff6320",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "59e8eeb4-74a1-4237-a898-2f377e1c0cab"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "72354944-6cb9-4ddd-b384-4045553bb667",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "17992219-9cc5-4dd5-a3ec-cb84d6aeec3a",
            "name": "Positive Testing",
            "item": [
              {
                "id": "f1d34134-6f80-417e-ac26-6f1811f382e6",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "f7604a56-1c60-4b66-8183-51a3bcd33bed",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "817672b8-3fde-45c4-9dab-0915a3239efe"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "f7fec9c7-daeb-4ed7-8d77-0e1259c52a03",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "c467d3d2-7c5c-4165-a4ba-63dbc869ec0b"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "4d49bfd4-71df-4e6b-88d7-e61a8fc91bfa",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "01303f61-7456-4654-b916-e168f2243f86"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "95544e3f-9ba0-4bca-8a66-35948b54e12c",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "baccbea0-0d40-452d-8a29-b20f1a3fef2e"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "b7560733-c735-4d2f-a08f-2dd912252dc7",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "94e4d57c-23bb-42e0-b80f-42597192206e"
            }
          }
        ]
      },
      {
        "id": "d733ec7f-9d07-4678-a896-d10582ecd5b7",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "caaed017-07bf-424d-adce-4d66af3bc20c",
            "name": "Negative Testing",
            "item": [
              {
                "id": "d1696f03-f11c-4938-a915-26fa0ce3d61d",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "47084ad4-f376-4733-876d-480f77860554",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "51ff8ff7-8ed9-46f5-bd60-dc71c3029deb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "8ff2dcab-540f-4bdd-b528-142b7a38ed06"
                        }
                      }
                    ]
                  },
                  {
                    "id": "78106200-57d6-4df2-b68c-06650d5b9889",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "89a893b2-b6c0-45ee-8433-77f20977e15f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "3bfaea4c-290d-4943-8d1c-38a7f8607f7e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b9e54ea4-4aa6-41b8-9352-18596fcb4fd2",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d9e5b028-8493-44a1-a0e4-99856eaeb001",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "901c9b53-6b37-490a-b908-5b1036627bbc"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "db2ade0e-a334-47dd-9de0-07149f124293",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "e637ccac-a4b3-4d4b-9020-434dc089d765",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "774cc8a7-de75-4d99-b5b5-cc2d4e913278",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "731ce49b-40f8-46c7-b8aa-f8b16375cee2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6f104b13-c958-4cb1-8671-b20796902fae",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3e0fb9a0-a3fd-4cd8-afac-2f6d7a031d25"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "5da20cf4-cbce-452f-8efc-94a621bef768",
            "name": "Positive Testing",
            "item": [
              {
                "id": "00eec897-ce20-46a8-9372-d40162d349cd",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "210c235b-5398-4931-a93e-b0b66b3b4d78",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "7a54db75-069e-4387-8a73-3b0b6d8ab5ba"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "cc11a69a-5db3-4315-b79c-f10ae60f9e39",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "a84983c0-30fe-455a-982f-1e360b4004e5"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "438d7a7d-04c7-4901-8b93-33239656bee7",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "626acb85-1c3e-49fe-bb09-b479301ad2a7"
            }
          }
        ]
      },
      {
        "id": "f4f3741a-07ee-4ea2-9b76-bf6705215b04",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "f3e28f45-f3a7-4cda-b07a-e36e64c06362",
            "name": "Negative Testing",
            "item": [
              {
                "id": "2f43ee98-2a5b-48d3-96c8-8e9dbd45196d",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "11f70918-0799-4824-a5f1-6a33e21c101d",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "86bba597-6cc0-4a28-a4ba-d046f49f46c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f3e21715-0b25-4aac-a582-0dfb33a0540a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "31e96de0-9692-4ab4-914e-07e426ab3193",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "fcc083fd-9e83-480b-91bb-13191a6b0c0f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "baa07b68-9d81-4e59-8d25-c781a71b88a7",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8ba772a0-9a2a-4301-8c1f-d79dad4e19c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4219253c-9b45-4ea8-b632-b1068bbce1c2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5ce7afae-1ab1-4c9c-a2c9-22daf9f2c479",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "3b758001-b90b-40ef-9315-a47ca5f51a24"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5ed9e2c2-670d-475d-aa53-c26511ffa168",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ecca7c6d-d509-410c-b190-cefc2efdebab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5dfa4e94-b981-454d-9493-00a05b26724a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "26ca4e0e-7415-4a0d-b2be-f2bea34f6da7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d86188bb-6054-4a36-ae13-873482a25816"
                        }
                      }
                    ]
                  },
                  {
                    "id": "56142288-84c5-47a7-b469-aed62a09a83f",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "211ce227-32e4-4a45-8d56-eb792269441b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "79620ce4-369e-4c7a-8c43-0e52fdb38aeb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cf04faa3-2b1d-4c0d-b58b-7ba49788eee5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "dd2ec1af-c642-49bd-a00d-0a8f7e0759ba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7b0de0f7-8a37-4632-81ae-73062b34a246",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0add6e3d-e937-4a2f-bed3-4ae5a846da51",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "77bbada4-b353-4ce5-b535-dceb22281d92"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0a34be72-c3cc-4cb8-8b7b-531ce8d61b4c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ed6d64d6-849a-4435-80a8-de93a3ddf7ea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "50c745c7-944d-43de-8967-7bb789dcbbbb",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "36d61b8d-7f34-4d07-8dec-f4548247004e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e82c38c3-2104-42fa-99f0-89f1ea27ced5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8caf5946-c4c2-47b8-987b-6638aab1c91a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "2ec5325a-9c3e-40bc-aebc-def09dd937f6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "210890dc-28f0-4d9c-b674-f4fc6c28351e",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "119fae0a-8806-47c4-b403-d84c665b5c5c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1e1c53ba-29a6-4416-a32a-b33c32f585e8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "56c3e049-8e19-4ab7-80b8-cf63ed26433f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "1c512a94-5392-4f6b-a910-3c4c5d64f247"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dd8b01d9-0a65-472d-8b91-8d853f8490f3",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4d9ca836-e484-44da-b9fe-3f7625924cea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b838c3f8-4d5f-43a9-9e12-7719eca313b5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8fc4cb0c-0ded-40a5-8962-d85f32119921",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "1a13a38a-2d8c-484e-9454-d60ed1644af4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "84edbfbf-ee8d-44b6-a683-239bd7d4d94b",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8024562c-674e-46f7-8d31-325caa62c8f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9d681ffc-ec68-4c0e-83a3-81ecbc339bb7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1ccaf95e-1786-4459-8563-8bed0b003bb7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "fd7a67b9-647d-4f28-ae7b-efce032c7a53"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8e6afd61-5fe0-4fda-8f41-fe6b79d5c831",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7e11de38-7767-4f89-9d80-1b67d425a129",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d3f850ff-882f-4dc4-93b4-7ade1e662bf6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7591148f-1670-4ae6-b6e7-040f933df514",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "43dcde64-b13a-43da-9641-07789b03dfbd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "78236ae1-552a-4a20-a766-2230c7417533",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "98b1d46e-d60a-4fb3-a6a5-9fa5ace3fa1a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "219174ea-be24-4c11-b7cf-a04226b1bcfe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6ad921b0-90bc-49d2-81b8-b8d3b8b8fed1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "423e314b-cd70-4bcd-95a1-f66c072e7a45"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1247db51-9941-44b5-80c6-5ca3c4e490f2",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8550baf8-ae7d-4d22-9243-ac3d04dce926",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7c7c3821-7a73-4758-86d4-2719435e6a5a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4a3dc260-21fa-4111-b253-dde6de6fd2fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "33bdabc6-30f5-4b77-bcc7-53b64fa03e89"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fc6f6386-0bdf-4b0d-b2fe-4c062810a7fb",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "34201ae9-ff95-46f6-8b38-343ad05e1854",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "144d050b-72bf-44a8-be4b-bdcf3675e0c7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed808869-bbe7-4e77-b3cc-2e7d4f8d39bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ad24da97-8352-400f-87da-ad853ab9954f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6a712a8d-2612-45a9-ad3d-d2b36cd6f59e",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c103a953-fc18-4b5c-8ffd-7e50e0a90ab7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "23ae8d6b-957d-423a-adfc-1247f40f52c2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ae8f4f68-495d-409b-a662-e152275e97bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "acced88c-c9d3-4238-83e1-455ab04a48fd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8992df95-8c28-4795-ac6d-6bc3bee0d3da",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "99a237cb-3978-4dfa-84e8-610b4963ce6e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f299c77e-623a-4c16-bc38-20b26f7566b0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c8d27a0b-6442-4f9e-9f13-2abdbcaead91",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "151ff164-4761-4c4f-bb28-00f93383b9a6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4c033719-997e-4b1e-9c1e-cab90f14e6db",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a31abd98-888b-4d40-81cc-ee3f61f6bd74",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5f510c89-4d7d-453f-9aa4-3eda7390ef3b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c76e7789-3a0d-4190-b1d9-7395d626aa00",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "7d122e48-3432-4449-bf87-a57c0f80b96e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "07c6573d-3350-48b8-a28c-84fbb4bde1eb",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4157642e-29e2-47b7-9d31-007712743564",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9dd92688-6b14-4c3a-91b4-6441846bc663"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "67385720-3538-4106-a457-da996fc85fdd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "72c494d4-00e6-4eee-9d4b-3ab24630c13e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "99aede76-04ec-41c7-99f6-9b4b44e68412",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "59a842e3-c5a3-4eec-b713-12d0d6ce5458",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "00bbbefc-a055-4132-807b-3ff2d63f9453"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8dfbd26e-3914-4d05-beea-471a341bd4bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "2f7e7b08-5a83-48ac-b5e4-c1bfc8b40449"
                        }
                      }
                    ]
                  },
                  {
                    "id": "29ef9016-ade0-4f43-8fe1-f00957fff263",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8272dfc0-5108-4891-b8c3-5d1e3c37e88e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "702212e1-b72f-4bfc-a2e9-0dd73a315974"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b235ba4b-0be4-4b24-ab77-3272da084f1e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "2fe3e0ed-0ade-4306-aff7-771c7e2fc6b7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "adc0445b-55cf-4378-9515-fd4a83129431",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "79c98050-d10c-4f3f-aac7-817021778573",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "94cd4fcf-9aad-4ef6-8214-83413f15564d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9e0a304f-181c-4460-bfc3-9cb8ae8476ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "bc4cdf9f-cfe1-49e1-8ba5-6065a6272a99"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a10a72f1-c70d-4d9a-8589-36e4f4dbec5f",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ba06e462-3fe0-4dde-b374-e2d8e1ab0b49",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9c16a4be-d643-4bea-be1b-91b1cde7922f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8feefdea-18ae-46d6-87a5-cdc11e581ded",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "a8eb0a2c-5b18-47a4-9389-dc5c3e03dd3d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ee4f89d1-bd98-45e3-9020-acc8bda6f5fa",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "78b5c1e3-850d-442a-a796-6f791720b629",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2cbf0b42-624f-42d1-a4ce-547c7c82b2bd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b00d904c-3a39-4823-9a7c-1203948a88b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "ca96ada2-e9a6-44fd-b581-e5a026375b32"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2735948c-2e70-4916-9882-206552ee7cb7",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c3b3fdab-0f18-4b8c-a09c-d4d942c5ce82",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3f47cac8-0511-4fa1-b752-763c7d7bd48a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ee5024d3-1920-47c8-a055-9b123badf6da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "6e47a659-4fc5-4ce9-a1ae-85d3711eca1e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d199ab0b-4940-4058-b314-6e02f9a662d6",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c3c56e73-1e8f-4e53-9528-55c8992a746a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "89ec57d9-7eaf-4e9a-af02-0b3b7e163641"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f94025f2-2fb5-42db-ad30-42f1ef6fdae3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "03504bcd-1567-499b-901b-ffdd080c928f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cc13b173-3d48-4289-b86f-c2d923c2e4e1",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d72f0d50-b3e3-4828-b416-119bac40039c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5e26e193-eab3-4d87-8294-57da04f42ba5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a6eb711b-2ba3-4692-bd27-86a984cfd653",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "36874fca-21c6-403f-aa75-2826135568e5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f8d1d55e-e84b-4345-878c-d3db3425d2cd",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d65c13f4-b37c-46c0-b316-f9e527353f53",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e26299e6-9422-4dd8-adcc-ddbfe2a011d1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f84836f4-75d5-4448-877f-8e3378954ba6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "2352397c-7fc9-4dfc-932f-bd50588d8852"
                        }
                      }
                    ]
                  },
                  {
                    "id": "85897d36-2b0f-47b2-a3db-6256cbd2f31b",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9ba95b9c-20cf-457d-bc04-7878ad27f1aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "995bce34-ba7c-4c2b-905b-d88584643945"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eb6a29db-eae3-4a07-b75e-31191f719fc4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "2f38edaf-fa5c-49a2-878a-f581988de55d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e54fb82d-c7a2-429a-96d4-ed7200a312fb",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "831af1a1-b33b-4389-867d-7a092b97680a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fb216e8f-c66a-44e4-9a10-b1d746f652c4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e31ede43-ff2b-47a9-a3ac-6ae72efc976e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "28a7b691-7823-49b3-8316-aaccd4cac177"
                        }
                      }
                    ]
                  },
                  {
                    "id": "66e1c5e4-ff37-4364-9685-9688a4926e57",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "55cd0a7c-c748-4334-af8f-f99ed2e2ebfd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "697b9602-047d-494b-9e58-b97d646dcf1d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d97229d3-05f7-43c6-8031-df905f619330",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "ec750a59-a46e-462e-b2c4-269b0dd8cbca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3f82755e-de02-408c-aa6c-d9fbcfe20dd1",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3c20a25e-f906-483f-9961-0061a9cb8bba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9561236e-8a1d-4741-a870-1ba64d74dbca"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2e433fbf-8f29-4143-9942-d833a18a07a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "badbc611-cb67-481a-b0ed-5a5d2655633d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "61aef979-b3aa-4aa7-9720-d4f8d7d0923c",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "386b8f43-497c-4a84-a646-b6f72cebd740",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9179c63c-7326-4438-9976-de9a17e65f11"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7f5f4f31-a154-47b6-8f0f-2dc0fdcb873f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "c03edf4a-6f64-4369-8b81-9b7d121c5b24"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b5fb073b-979b-47fe-ade1-0b17e208c16e",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "604e3d6d-d083-4cd5-bc71-f6024c15590c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "23fdd9cc-0408-41bc-bdec-c4a0fd693956"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2c1b5761-7f45-4d35-8468-219531d9dcd8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "37bd459e-070e-4332-b428-e2ecf201c197"
                        }
                      }
                    ]
                  },
                  {
                    "id": "de1f157a-6607-403f-8a91-5d997d89371f",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "692cf765-218e-4a5e-a543-345bd7d616fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0bc851a0-e1bb-44ad-a626-6172470b1fb4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c517f3fa-f38b-4d5b-95ed-940c837ea51f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "eeffd756-d045-447d-b5cb-796e668a5df0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1d471e69-c1ad-4f2f-b837-7bbeae183fd5",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee3149e0-276d-47e5-8f1e-7600eb246625",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6e7740f6-1e6b-40d6-a21e-f2c875cb4c24"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5f5ab8e6-84d2-4a77-baf2-69a7c5a661e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "8b66ab5f-bada-4cd0-87ee-516380a71c48"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9c831a83-a771-45bc-83e0-987fe057cc93",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c90800fd-1543-4c14-8ddf-b37c209951fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ab0f3b8d-7f34-4393-8c78-2f5f0610fd93"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8f67a11e-a40f-467a-b3dc-a9b0cf682eb9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "84f30c1d-ddfe-4c00-974b-031fd531c49b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b28993aa-ff4f-4113-b8ac-77607f9c51b9",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2d85332a-a152-4cf0-a683-e2d77e63ceb7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "b9a776a2-050c-43db-b404-e2e6dd097c49"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ae2b1cc5-33ed-4a3a-864b-248fdc5ef279",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "a41a608f-e728-4214-90c7-3e5f772798af"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c08e25b6-a3f2-410b-b761-1ce125cd7513",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "77babb32-0852-4db0-8da9-9d8f7bd341ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "81d39e02-1704-4874-93b2-b3889d2cb477"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2ca2b7ee-e770-43d5-be84-39311c665254",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "355450e1-a11b-4084-a8b5-b53ae0138ab1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "de1a8775-5c44-4992-88be-7138510505b5",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e1ae5b2b-38c7-4ccc-bab3-0212d550d5d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d58b3ca4-0a69-4512-8421-e7b7c76627dc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7661a711-ff20-4e94-bf59-80ae9f954502",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "be389370-5fa3-4b48-a957-341af816eaa5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e8f97a7f-b21b-442e-b27a-8e1b5f67ccbd",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "64bfd0f9-284c-4e19-83fc-fb7e6ea40f57",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "706cf488-c063-44a6-a519-3cf7d390f377"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d7dcb6b1-60b6-4d2c-8863-bf4dd6b6f229",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "4d9e94fc-4a24-4091-be34-b752ec43ad45"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8b6db557-1d1b-4d01-aa1d-8b0ce400a18a",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6dab0651-a8ce-4f18-95dd-5cf3daa389f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dbd78083-a11b-437c-b39f-4e4cd478f451"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ae187c5a-c6c0-4d0a-9c38-97c52be7e024",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "5eb63396-492e-4576-96a4-3853869ad38b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d2bfa4b1-cc81-4e0b-8f59-71da3c40c92d",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d299677f-73f2-4df0-bef8-d3244fc738cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a02c1cbf-25e7-479f-8b7c-2f8a1278c4d3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "13bc1399-d917-4c2e-9952-8ea55317fe94",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "824962fb-ff09-499a-a300-91ad96021976"
                        }
                      }
                    ]
                  },
                  {
                    "id": "17dc418f-f0dc-490c-b78a-1b7f59173e0c",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3f3b1b33-dd9c-475b-883b-6c0423347108",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9d964f64-42b8-4291-b952-84c2a1d4edb2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "561f336d-c65d-4efd-9025-46a3cf1567a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "3b6ce09d-2c17-4655-983e-3b70302f032f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "625ea9d5-b3e5-4752-8b64-3a58f25efe0a",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "124f6ed1-efb8-4058-902b-bb2844e4479e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "82c7f62b-5fef-44ee-b973-604eab368e57"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fc18d983-bab6-47f5-9585-af082e2731a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "43301087-9dc5-4fb1-8fdb-498760650684"
                        }
                      }
                    ]
                  },
                  {
                    "id": "91215f2e-c0bb-4cbf-a105-a56e19dab83a",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "54f93c6b-6d1e-40d7-b13a-ec2f30cde2ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "491dd8fd-734e-4611-a2fc-2cefa8389e37"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9fb65625-3bac-4e7b-92d4-b259181428ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "5f0cd25a-e76e-4498-b436-19dc71255b42"
                        }
                      }
                    ]
                  },
                  {
                    "id": "916911c2-2318-4d97-9297-098cfa6d3061",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6d3a9323-0245-4793-895b-e44292ee9589",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "10237817-0a08-422e-8d3a-4fe4ccf9e157"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ad9cf1ab-7e70-4977-8a3d-a620848eefc3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "7acc68a2-7d08-465c-afc9-a124298113bd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bbda6f2d-c062-44c6-9f2a-1b25e267f3e6",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4a4c7923-0091-4a4c-8cfd-eb35a5177b1d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bb5f70dc-07f2-4776-974f-daf34d603701"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c71911ed-7b3d-4ed0-a84a-12ef0e332b39",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "ab8b2371-d3fc-44b7-b53a-6a766c6f59f8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "912cf0c7-7cf7-481f-9ffd-dd4e074cc2df",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "94ca4b0d-fd2b-43d0-aab9-f57152f9b923",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bb2e294c-bc1d-44b0-a60b-48ef1de99cd3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "22a13c33-6131-44e1-b1a7-886035f88120",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "68f03202-ba2a-4e30-aac1-726062e31f7a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "74a2a94a-ef7f-4cc2-a396-a0d60f18be6d",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "33da25d0-a7de-417d-ae7c-acc76db87fb8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7d7fddc4-f819-4d70-b758-8ab02143257c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4f72fdee-7fc5-4544-b127-a6ac1ed9151b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "ae45c444-ba65-415e-a010-afa40960f064"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5dd1203e-1287-4841-afc2-f33061ba3380",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e212eabc-cb67-47fb-9bda-e6c978d25488",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e3f3a509-d52c-43d8-9be6-c469b353b99e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ae33e1a8-251c-48e7-ac63-b359d4094eb4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "c9d4c78b-67a7-40a3-85f5-7432daaac3ba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c01e9922-4d18-489f-8823-b1a808804f37",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a9791d01-4e40-466c-9b31-11daeea5cac2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8c5e656d-bc3f-4666-ad32-cc8dd0d2fec2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cfadaa2f-4917-4ffa-8eea-c8fd3e048a37",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "c6116a18-2057-44b2-99e0-c5fc46099021"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5e3fed92-298c-4ce5-b427-6815bb8f6917",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8080aa4d-59b3-40b2-a259-a0f3fed20982",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "db698c72-9781-41b0-87e8-1f101b2f3130"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4218cc91-3343-470c-b780-e8879b5da545",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "21650994-a25d-40b0-a518-059640024bbb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0dfac6cf-c23d-4596-9c46-58fd6367c9bc",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2bfea385-ed10-4220-a87f-06159d7c9ec6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0c5d3acb-941b-48bf-892a-8d253b707b17"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "faf6c54d-f210-4ddc-953e-cdea84dce929",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "e4e9a7cf-e0e0-403d-afbb-3f1c93f67aeb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "44e6d08f-c6b6-4ab5-8985-3cb7963d598c",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "071f86e0-ff8a-4666-851f-237e29e9bbcf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f386b176-34ae-42a0-8d72-6526768600da"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e15f4cee-ebca-4179-b8ab-1e253bce49f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "b0d23f51-67ba-4b27-ab16-662dc07462dc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "16320bad-c631-43ea-8d97-af65c94db4e2",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "23b56a33-c145-47a9-8878-7837b1d5da60",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e43bc2c1-4d39-4a69-98d2-d10757806209"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8e36802f-738f-417f-86e7-05f683c2214a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "4e2dbec8-12a3-43bc-b903-cec70c4f6a60"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a705bae1-34ca-416e-a2d4-438d0d251ed8",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8b783bdf-f118-476c-b81b-d558e5da552e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "16ae3aa3-51bb-40bd-bb7f-d3b9aaca319a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e4878c26-082f-45a6-b5ed-fa3e96e576c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "2121d041-b87a-4bf8-bfb9-eb92ac7b584e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "15f9e581-5ba1-40ba-8a4e-e2c543b28d72",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "09ab4241-a8f3-4668-921c-c159e4a71047",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e9aa76eb-2085-4598-bbd4-eb6441cf428a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a4af2c63-a66e-4ce0-8479-5d0ed267d897",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "3b4e2dc8-ea79-4e60-9acb-f44229a35738"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a7b8bbfa-f426-4ffd-9bc1-0af43879245b",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9737106e-c3ab-4118-833d-e7a40e792cb8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8d4f2c77-6d9d-4e92-9aa9-b63cf35b3b93"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f36fe6a5-3d97-48d6-b01a-21cfce6e20e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "22e3cb02-333c-4456-9c94-a8c6451dc8e5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a1c6e89c-b6fc-4867-af52-e456bf723aff",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5992f7c0-24ac-4546-a480-df384f9b8202",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "75e51eec-b7a6-434e-9455-77d57ba8ec97"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7f4ba089-1928-41de-9bf3-6c84567486fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "800cea45-1df7-48c7-9623-b16200029116"
                        }
                      }
                    ]
                  },
                  {
                    "id": "94199818-17b2-452f-86ad-7b04ccf4b915",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9587aa75-9a20-4719-8acb-7bbd9f73f76a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "871a87ac-7099-4e15-8e95-cc6350aa5d12"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "322f2319-4701-4669-9de8-2e3b8feb9e33",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "4fa3291e-e5a1-427a-b05f-5b27b1d7fbed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7a01bd10-8924-4e36-946d-5a2bfb090625",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "67101b6a-3040-4d09-b0e4-9e975a705a50",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3a88e306-c7da-4735-b7bb-d187ce3d2acb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b4821be6-f59b-484e-889b-7217e571a1e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "6039b62f-5f40-4b3b-b5a9-7c8935855582"
                        }
                      }
                    ]
                  },
                  {
                    "id": "46efed84-282b-402d-ad78-be7c25fd5196",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "61e323e9-ae46-4685-8c4e-278b63204a2d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b9c762a0-fd96-47e5-a92c-9bc60a47681f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3c5ae3c1-60d2-4183-8036-ea5ed796e766",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "e7c2050b-2261-4857-90c2-7e1cee548aa8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0c94e92a-fe83-43a6-b99f-4471c687a126",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a1b26c18-cef4-474e-9258-6bbae5fb83ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b3fabe9f-22a1-4288-8f65-e107263f57e9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b3791863-bd93-49f6-8e82-779c12c4a93a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "5a852666-e199-40f8-82b3-0e88527f4f09"
                        }
                      }
                    ]
                  },
                  {
                    "id": "937bd616-48f6-41c4-a017-442aa6926cc7",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "613b355c-0fb8-4736-a061-45bb0f357ada",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0f03d2ec-c838-4c67-999d-ff27034e6406"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fac7024a-81fc-4e01-84c8-6a3813b56688",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "500e470f-59cf-479f-ad1a-08453c07cffc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "143939c9-07ce-46ce-be9c-d6c7a9b12226",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8010b246-8988-4ec6-a329-2f2ba9e76e9c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ceec71c3-91ee-47e3-a312-6d6c0c9f1240"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cf4a0e12-889a-40d6-9cf7-b7c0cabfdc25",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "14d808ee-cb6f-4ed7-9073-dd9e7ece8567"
                        }
                      }
                    ]
                  },
                  {
                    "id": "933939e1-e951-42b9-b9e0-6dd5e3b5fc95",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "83ef864a-6833-46a8-b14f-06d597f67e74",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d55828b8-c75e-4e41-9900-e0f381b8dac8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "34a46587-515c-4488-b88a-15f6185c4ba3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "0eb3269b-83f1-4325-9f69-cfb3cff074b1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8f68f0c4-fc86-41bd-b43e-b695cb18c88c",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1684c9a0-0c45-44b8-875c-efaa3e2439cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ea92b07c-d7a6-4af9-8c21-543aad2e27f5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0222b199-4688-4c94-9234-aa288c67c447",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "9e4fcb2b-c02a-4918-bc88-d09c3c197f98"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fe213316-7b9f-457b-bb6c-662a57615a4e",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4d5f657d-2de1-4ceb-8189-c863e4a7ce5a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e5d1fcc9-7eae-4782-a3d1-5f2baf6c4f1f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f5a0c326-d125-44db-aea4-0c54f42cbc1e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "82aed5bc-74a6-4256-af44-2abba2e01248"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bbed1a02-be91-4836-bc1f-daeb638379b4",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4cf8adfb-463d-43b3-aec2-09c509f0f72a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ebf32b64-dbde-4af6-81dd-ec85a0880a87"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "39434c79-9ee3-4ccf-b3cc-25f531e2ba93",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "f1280886-ec91-4ec5-9fa8-fd5cb9312219"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d3634b25-5b7d-4739-87a7-9c131fb41474",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5194187c-ea48-4a5d-958a-16700a952834",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "018d195a-14d6-4c98-8479-34d9b49a20ea"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f4606133-3f4e-40d3-9156-4e94a9742d77",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "070d2043-418f-44d5-8e7d-8da6d38c9be3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3c0d6b37-79d6-4d90-8c1b-0537dcf177c2",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2b0f21f1-136c-463d-b4fd-228fba9330da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "021d5d48-3a85-44b9-af5d-3eeda66ca270"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "75103ac5-7df5-4ca9-a89b-1a5e89328c62",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "9b362ed6-beb5-4399-bd2b-b463f24a8b0b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6158866c-7469-4383-8a13-f17e9a815696",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0390a2cb-b452-4def-9f5e-5f8b18102139",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2938b99a-8ef1-43ee-b987-9f7e48bfc18a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0a030f1e-efaf-4db8-9872-614043c5dba1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "5f3c2a49-cad9-4450-b20f-a9819069ca58"
                        }
                      }
                    ]
                  },
                  {
                    "id": "44a5cd38-0612-4c84-8b13-895ec12c8311",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3066d39a-aeca-4651-8206-d496a07205e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "10ab3bf4-97a6-479e-89b1-7f4292827eb2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "52ff3adc-b4c3-4d50-be72-b574a142f031",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "fe19abc2-7e82-4829-ace6-4c469cfd2d70"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aced3a10-5db5-4e09-9eee-443e3f538a10",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "75ef9f5d-9ebd-47f1-81ac-f2d54b516bf3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "639abe86-2e4a-48da-9fcd-124be094ee72"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d5a3df41-d6c6-4c5b-9550-be678f135863",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "32749524-270d-4c4a-872d-1f8f68e5a6d1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f2947a87-3deb-415d-8bb5-9bc9c9fcf176",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a9e910a1-d8e5-4f94-bf4f-ffcd3e268f2f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7f55842b-9b22-446a-ae1c-719e80c55c5e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6b0c5584-ac22-4726-936a-e9a388fef433",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "98cd9d13-9d81-4561-92b0-d3c6e6569a10"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e7a4080e-fe10-4405-99c4-2d2f25fc2946",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0f2b5e1e-5353-44b3-96f3-06bb5a30e08d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e45075ad-355c-4660-bf0e-556bdd7ff6be"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e35838b5-b96d-4351-af89-17a4c0797b1d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "e7c17f7c-e8dc-4f5d-9089-bb19eb70f829"
                        }
                      }
                    ]
                  },
                  {
                    "id": "12613d39-53dd-4aa6-be70-ba7b7fb1d75c",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "36d63bd8-3d02-4b60-b462-7b807f671a16",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "365be8c5-48aa-4d19-9219-a8235f644d24"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "158646f9-c382-4acb-ae33-108b5a59b19e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "42d1a8bb-7b1c-49dc-be24-5aa377dea8c6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d2bf34fb-0f8a-4bf0-9136-1d767d27386c",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e4ca2cf2-afd9-4561-a29e-fe60e72b878d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4460578f-88ca-4b58-b88c-b8aa5df51525"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7b3c03cd-8dae-4cf0-8e39-e1d366990dcb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "efe484db-0598-41b0-8557-dd67cf7e0607"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f33a8cb6-13c7-443d-a648-59a89492f0f4",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0543c225-e81b-44c7-8a5b-5bcbfddb92c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e95fbd2a-f48c-497d-b8c5-f789e1dbf6d6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3b75320b-42e9-4470-a9b3-31431923696e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "d35fea4e-5d3f-484d-b3e3-3db0c17221ec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6120b5a5-bb76-407b-b2b0-ac24806e11f2",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c9c8bcac-0a58-46e3-973f-ca1790f49856",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "87be15a2-4103-4dd4-8e1e-45ab15861ea9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cd0094af-75f1-4a7b-98ad-494579fd99cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "1422c0de-b466-4607-9d4e-c2c3b44c02df"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1fa3b4ff-9870-4c63-98d3-45899e6c2d73",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8911b72f-6008-4f49-8669-96fc9ece77a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "41c954e8-9fa8-4523-a193-e18a547ff750"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3ce290e6-d55e-48ce-b141-ffda9d576877",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "bd2955ef-24b8-4054-b6f4-7c23008b8622"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b8257f22-5c7d-4a90-9af0-4f883b8ec51e",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c36f5a1c-73ca-4c5a-8c80-382116eb3a4d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "40891249-426c-4248-a448-ffaf85c4334e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e4684693-8e91-430b-b167-1e2d22e1d265",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "453e966c-f8e7-442b-8649-091e2e57c56f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7178eb94-421e-4238-aa2b-7758f58180a2",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "46c70977-2ab0-41d1-af0b-f1aeb21853f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7de8c50f-bf5e-4969-8d84-e6cb831ed1b1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "91f0a152-f9fe-4b95-8e35-cc8f5d7b10d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "da895530-06c7-4dc7-a433-41df77029951"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1bede5fa-3991-40cc-9681-dc0d331806e2",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fb954aeb-9a1c-431a-aad4-0b238e536c35",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9ee77262-452e-46bb-87ca-0a9f8764673c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "28792668-b943-4a62-9e83-5fd88d593764",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "cfad0c03-12b3-4de4-a40f-fb0a5ce527bf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7ff1f0a0-e28d-4f9d-8e9d-35ad1a065bf9",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f192eda8-fdf3-4604-aab3-90c73e638628",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "880a22b4-3ab8-4322-89b5-e826d5fc8ba8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7d98d000-2c8b-4924-80c6-d9ab419b8215",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "06f9aab0-a645-4347-95d9-8132ced4abc3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6573da8e-dac0-422a-9493-13874e92b874",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "906f60b2-c0f0-4177-964c-c0d6e1dd5a03",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eebb83d8-4d43-4cdf-9dc0-7decf9c36d0b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "782fb007-1832-427b-903e-6f1d0c05f604",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "f0514ea6-9b86-4239-91e9-d56eb101aa1a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "efc184cf-c168-42b2-9052-73ee09b3d7c0",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "91234b4f-0ef1-4133-8b44-4eb5434186e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "98e4722a-bbb4-4652-9248-3f363b112f26"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "55b0c773-8c94-4c01-9a9d-b7717f631c4d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "47177233-b513-4cdf-9850-984791616bc1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "99dcf078-5b67-4b02-9939-baea05d13e3a",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "15cadf5f-c0c3-4ff3-9d2f-73a1d68e3447",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4eb034f3-56f3-4939-88da-6aca4c86d9ce"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eb8ef8b0-b28c-4d4b-abf4-0e5340045f69",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "cf023cd7-8a4a-4e40-841e-17afcde2671c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a9b423d3-0606-4f7c-a566-26b2fb48e07c",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a7db299f-1959-4f9a-8dde-4bc760664075",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cd079e32-d461-4a63-898f-374a0fae4ab2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bf632235-ea04-4acf-a108-0de242110eba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "ad0dfdcc-b1ce-4755-a5c5-70a9d4f26a1f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "25c6bc94-a367-4d78-92fb-0cbbbc18f550",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "714e1fa9-df92-4f83-896c-93ad64e6587e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b3a48d8d-ef6d-451b-a0a6-6b10004f4e36"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "42002ca0-f53f-4e81-9050-49ef39bb9258",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "c1ddee16-5f39-48eb-b993-df65941cc4dc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a8780643-83c3-4d9f-bff7-e38b28bb9078",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff255c5b-9b3e-4a98-9bbe-bf5e407049a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "91fad308-bf9d-436b-8ffb-19a1858a7ea8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5d327a02-b42e-40aa-820b-1a05986f644a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "bd5d080d-e902-498d-b671-4d590d2019e4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d86eb49e-a004-4585-8780-720234aa4d64",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "382e8f22-d809-4ee9-bf01-f5e85d091728",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dbaecc16-9b65-401d-95d1-b1dc0077f1bf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ad047882-acc2-49a9-ab6e-d3e58d09ae38",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "a3fc262b-56d2-440f-a881-a067ecdc313c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f8c53428-9300-4935-86de-23b71efe0598",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b9e7cdd9-e361-4e8d-a7e8-7d2a4c18fc20",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "667123f1-d1e6-4c2b-ad08-4b6b7f6d3dbe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "29c97080-e211-47c4-8170-021399bd504b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "3790fd89-2df6-4955-b1c0-013b82fa7a84"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "6a8b2e80-04cc-4505-b616-b814896a3374",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "e7b2ecd2-5d56-430b-b132-c7d212a4fde1",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9992409d-2d6e-4aeb-a393-2f5454955def",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "715deb8b-4b95-4eb0-b14f-08fb78c9b4b3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a57a806d-af33-431c-9954-993f3823f89d",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "461560f0-ea46-4369-bf98-64f4a3295a42"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "128e75ef-801f-46ae-9f9f-67f235babdf5",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "20923c19-f24a-4710-b891-066846ef3ea7"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "e774640b-9036-4b03-8995-c6ff1d66db36",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "2a3b13a9-6630-4567-bf2c-65e50556dbe6"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "d52532ea-36b2-4b5f-9862-b5f1d4c25ef4",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "7b5dba7a-758d-4d17-99eb-070954e12ca2"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "4879f5fa-369f-445f-bfcf-565d94146abd",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "586b0fea-c859-4740-bc91-ed6007578af9"
                }
              }
            ]
          },
          {
            "id": "75f2f449-86af-4260-b805-592087261363",
            "name": "Positive Testing",
            "item": [
              {
                "id": "600349df-9467-4ced-bf08-5290bc6baca5",
                "name": "Duplicate Keys",
                "item": [
                  {
                    "id": "9295a445-cde2-4709-8495-edac997eea25",
                    "name": "credentials_issue.credential.issuer:dup",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"credential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"issuer\": \"{{issuer}}-ignored\",\n        \"issuer\": \"{{issuer}}\",\n        \"issuanceDate\": \"{{issuanceDate}}\",\n        \"credentialSubject\": {\"foo\": \"bar\"}\n    },\n    \"options\": {\n        \"type\": \"Ed25519Signature2018\"\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "text"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0b84218a-4330-4cac-8778-b5966b06b724",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 201\", function () {",
                            " pm.response.to.have.status(201);",
                            "});",
                            "",
                            "pm.test(\"response issuer matches request credential.issuer\", function() {",
                            " const { issuer } = pm.response.json().verifiableCredential;",
                            " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "47afb296-bdd5-415c-8fdc-f4f995ae99ef"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8f8edcef-30af-412c-9fd6-ab82772ca98d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "84bb6bdd-2a52-4ae8-8bd3-5f68c2f040bc"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "f22cfc35-9535-4073-94c4-fb7875ee32c4",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "6f21b1d5-1149-4199-9e7d-ffa738cdce3a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "ac2ce23c-6385-444d-bfbf-2082f173cffd"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "80e2c427-d520-4517-91a6-75e16c9167e3",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "9ffa1f94-be62-4aa8-a721-26aed9fb1462"
                    }
                  }
                ]
              },
              {
                "id": "d81b6b29-6ab1-449a-83f6-784e82b97d5d",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "9d7238de-6452-46b2-aafa-4e16c1d36514",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "c52567fb-27d2-4ac7-b68c-404a2b970214"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "10103fd7-3407-4eed-8256-21a0fc08a61c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "7b7a654f-cc74-4c57-88b2-a1a3bb1793b8"
                    }
                  }
                ]
              },
              {
                "id": "2ac0d452-3c9d-43e1-a6a8-d83188d66588",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "d0257d45-ceda-40f7-a398-9da1ac57b14b",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "0e422a8a-b6a8-4942-a277-5719bc1f9e0e"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "c00df4fd-adfe-4221-bef4-4020d0206282",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "73ad0532-ad82-4722-9fd8-ef831e0c7825"
                    }
                  }
                ]
              },
              {
                "id": "9a45b2cf-46e0-4174-963c-edb23b0c2f99",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "b305e81f-a716-4268-9896-c8364092e3c5",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "0837145b-2f98-42e1-9f08-0b21d5484352"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "4360396b-7bec-4d62-b502-b8649d057517",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "2bb14b16-5f21-4c28-a8e8-2de2aa986c95"
                    }
                  }
                ]
              },
              {
                "id": "f5703e23-0b8a-4e9d-8825-e7cdd2d0c39d",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "6691bf9b-3801-46f1-a95f-9684c8884371",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "4233a89a-7281-44ef-afe5-e6f741e373b1"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "8038e08e-0196-4c99-9760-ec766d517401",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "49b98547-9a11-4361-9bd8-238cdb44fd1c"
                    }
                  }
                ]
              },
              {
                "id": "d7bed5c3-8096-4d69-8d33-31a8540bf2dc",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "937fbd19-8294-4bcc-84d3-12ae76bcac12",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "ccb66b36-2828-4d2e-891b-981e19775c67"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "a46cc191-3741-446e-a7cd-21abec70dc70",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "fd9a1a72-4b4b-4e42-875a-b3120d620c4c"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "71abb105-ad4a-49ac-846a-8860670e092e",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "b1e53514-b483-46b5-b7d2-a16f8cad23d0"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "3f8ec834-3db8-4b3b-afd7-9f8fb04a2ab8",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "1404b005-41a5-438d-b65a-80454144485e"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "95ef2dd0-f8be-49ea-be85-a479d80521b3",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "5aa9800e-ebb9-4a9d-a4ed-09e6840594a5"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "9fc15827-1b27-49ee-a320-450a4bf16b94",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "c142e291-e627-4b1e-a329-eb6839d23bbd"
            }
          }
        ]
      },
      {
        "id": "0d3a9026-d721-4c0f-a122-3caf652928b9",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "380ee2d8-1565-4cf5-9042-dff8d0932e81",
            "name": "Negative Testing",
            "item": [
              {
                "id": "340d23c9-8858-497b-af86-dc3242a650af",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "4849a8d7-ad24-44f2-8236-0bc3a3dcf38a",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d71b983-8677-44a5-a1e7-87e4500f6385",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ca4a5fce-fb00-44e0-97b0-f3001671d49e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eb045f83-33b6-4d21-b13e-49989e7944be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "7dc70ebe-ebbf-41e5-9e55-d23ad802ebb9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9c38bf7c-439f-4c7e-bff9-8db8199df6e9",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cd0499b1-2002-47d7-ab0a-410d0423ec9c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "420d741b-6eee-4adf-a7b5-9224643b7bf5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9e478c70-611c-4981-a41f-6b029f459c7b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "55432891-921a-425d-af78-41d2ac8cdd37"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f86a4f89-cff8-4458-9cc2-70a4a0e297bb",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "72a2ac24-7e21-4b64-b8e0-57ecffe26240",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e7558005-c6e4-49b9-8d9f-88fb02295b34"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c16ee734-a8f3-4104-8b19-15c2ce5c766f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "3536bf9d-23eb-4ebc-8d62-42027cfd5366"
                        }
                      }
                    ]
                  },
                  {
                    "id": "793c6825-9b46-43f4-9941-4863600d811f",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "10b5c57c-6022-4d26-a58c-4b416c4a1e7f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6019b4d3-9b50-412a-afbb-d17d6160ff76"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4bd93964-654a-413c-841a-12078a69bd3a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "8ba004a2-6207-4e4f-9f39-ba315f8dc2fe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b53943e7-4115-4ecf-a203-bcba3794b736",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2ddcaad1-1b2b-487a-ab7f-a966344530a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d80408b5-c395-4da7-8faa-b725c1d9580a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b1b7d22d-0ac3-4c75-b962-6d25579747d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "a47141b8-a13a-4bc6-b4f8-b5e4110b583a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f45a5a95-f1f4-4dc8-9684-c3f98fe50cdc",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3468cb8d-522b-472d-99e1-06612b099f30",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ab88f79f-8dd5-4cf8-b61a-80bd3fe055b9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "02ddc761-3c20-4e82-b2d0-a8a1c2f2dd1b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "85f7a097-2668-496a-9701-f561b241f9ea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f36293e4-b5c7-4156-bdee-0c87f8bb6e85",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e1650e0d-8537-4a95-b8cb-4d7a2f40647d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "04533ab0-ebd5-4cc3-9c22-7d4a2884581f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e12e9fa1-0dfc-4ce1-8d23-785a133986ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "f77feb72-b3bd-4860-8773-1e2a0f43ca8d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "15c13936-26fd-45ec-aeb0-d6b681af7b87",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "89475dc5-ccc8-479e-8a2e-107fe3d63f0c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3769acf5-6bbf-41c5-bce9-b2817d09dbf8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e5309949-b3fa-4966-a567-3575d4f74cd6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "3d7b536e-ee9b-4a97-b612-e17f9f8c8f42"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3670f2ab-975c-4095-a802-075d07fe5318",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5731ecd5-91de-471a-a09f-8a65400cddd3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8af124bf-df29-4878-82e5-76fcdb1d1f0c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3b8231f6-aed9-44b1-9a47-01ef87382ed2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "23b7b2e7-cadb-472c-8c16-2e61bfe63646"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5a3458e3-7f5d-429d-bbe6-475e9a254be4",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a84113f4-9fdc-4e9a-b891-e738996a3591",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a9a35ade-d2d8-4ef8-9c7d-7d57ac184edd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "97aa9b40-a567-45fd-accd-90548f28f395",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "d4217980-82a3-4550-bcd1-84327fb69aba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0601aeac-c277-4a2e-bcbe-bb3de724883e",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "72796dab-8714-4e7e-b0f9-48a7cb6a970e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f15130e2-6a9d-4b42-af1d-95442518176c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7689c2d8-8a25-4f17-87dd-f08802483dc8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "ec3a9517-b64c-42b0-aa30-c74dc0d1a532"
                        }
                      }
                    ]
                  },
                  {
                    "id": "288fcaae-db84-458e-959b-247ae6986efa",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9379acde-d1e3-44dd-b159-c0b2068f88aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7465ad00-09d7-4c15-8fa0-d38b8aea4a04"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e9e6213d-cdaa-4b7c-9c8b-c33f06547d9d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "7b7c62b0-cee1-44a8-be77-5155c677e0c4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0a78141d-7240-4dee-a5c1-3a876f0bea50",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8e46f3a0-dabd-4e11-b363-b063b79b4457",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cee5d12c-f9e9-433f-80af-2e3d0a6bce6c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "79238b80-19ab-4ad0-8c8d-715dae36736d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "8d83ba9a-069e-49ab-a667-8b9f160b6f1a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fbed5ca6-ff25-4140-8868-2cef20de04cc",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "07933436-1f67-4480-ad50-0c2bdd320a6d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "149148df-fc97-4805-a791-fca6bdbeb2f1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4a3d9f6b-120c-4063-bec1-28dc689dd94a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "b0cb6dad-9b84-4fe3-a531-e4c9831bd2c5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "803e55ba-15ea-4aeb-888a-aa867789cdd2",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf6625c7-4f2e-4117-a460-beb19b7234c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4923ee23-042a-45f0-8e0b-cb6ec3bbe653"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "32c4fd63-18a8-48b1-b675-a9e590a0f5d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "470968a2-5e38-48ae-9546-9fe706052436"
                        }
                      }
                    ]
                  },
                  {
                    "id": "817e6ea2-3dad-4026-8328-b78940f2ea33",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "88686c4f-dbb5-40b4-a72c-175e4c353c28",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9bdc852d-6d40-4449-8f61-4bd3cc97f0ca"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8c3a1fe0-215a-4348-97b1-ceb0f602799d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "95fbb20a-4441-46d7-8819-8a4396b739d6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f4143882-d74e-4d3e-b889-967e3cddf94f",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "83391231-1da0-4af1-bb4d-afd93a6f36af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6e913f87-5329-4cd2-830d-59659600ee6e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aee653c0-a5c0-4875-86a5-ee75241d5fb3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "23066e21-e859-42ec-8539-d099e8a567d6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f3535df8-f137-45cb-842d-7b67829b2ca5",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8d3fccaa-bf89-450e-b7c8-0c2ddff1ee6a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "01ca97ba-7751-4970-b0a0-1c5179f350f0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4d40804f-c570-4ac5-b640-d8d721a69bec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "9c010d36-6a3f-4eae-83fa-a310e1534330"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fd71609b-bb30-4701-bd72-5682d64c9d76",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c450b93b-406d-4284-8b9b-1cd0109796b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b5fb4597-539d-4e10-984e-e728bd685640"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "17d8235f-9fc8-4791-bb28-d2254e20f9ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f79f7cb0-694d-464f-a5f1-1f89cce4b656"
                        }
                      }
                    ]
                  },
                  {
                    "id": "44612af4-9977-4dfe-8581-10aac8ae435b",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "afeae7d1-1173-4a73-93be-992dfdc48a46",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e371e3a8-3648-418f-a8c1-b53d9d671e97"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2e82c213-99dd-48f1-893a-06c2c1ae8f74",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1fdd4bdd-e04c-4add-aceb-1319d02dcd31"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7771b027-8a21-4d9b-9e66-d54d87e36af8",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f2445b06-aead-493b-8bbc-dea836af0f77",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "de0afa3f-543c-47a2-a064-be78643bbf73"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "929fae0e-ab0b-4423-ba9d-db5a83ae3e2b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1f5f7bde-0e0c-4150-8d8b-6c30adfa5ae8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "63f61ed5-25f8-4a63-a843-ace68641acdd",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "61d43128-42ab-4029-8535-48480a118121",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "efdbda9a-08cd-465a-b2d3-3821d6cfb484"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc496a56-d338-4ef3-af16-1ebe5a96dd14",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b51a9dc3-6d77-41ef-b4ed-a3977aa6df84"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d51aa4d4-f2dc-4d7a-991a-1834151facc2",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "925e9353-5bda-4e11-8547-f013779ada44",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "76fa3257-a7c9-4393-86e9-88bf23e3cc00"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fb3a8282-31de-4b7d-aa71-79679f387efe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5028f8b4-41ce-4a60-a4ab-bac5194f0ebe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "71c498a5-09fc-4830-a1a2-77df08a95cfc",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ffc713e3-28ba-4f95-9494-1357d31fb2e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "62f9e53c-d049-4349-aca8-532ecdf2e241"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "182dd451-7ecf-4121-96c1-f1a2aeb976d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d4c3e690-8351-494b-8fde-9e6d5d8e7568"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aaaf7b98-7090-4943-9579-f88bed7bf3a8",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c14d0cfc-bd74-4b95-9bc9-2a9552835dce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4a791f76-5765-430e-a22b-81cc269fcb88"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "97212e04-36ab-4324-af24-d70401cbae36",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "32d45651-a514-44dd-8de8-1d2c9fbbb9f6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1d5d5fdf-df22-4447-a043-d8e3ed98c5b7",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6cefd166-4bb5-4f5d-b73f-7a4b577fa383",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "06a9b5ad-0441-48ec-9167-268de0438c1e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e5f2a43e-a812-4055-8758-8280f5ce61b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b4892747-a6b7-4dba-8dfc-8e530b6a9ac9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b1ca159e-f8fe-454a-aab4-04e3e1817985",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "44c17dc4-eb78-438a-9bc9-d8566994188f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "290bf07a-6ad3-49da-9caf-236a5d5b62ce"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e7a17943-79de-443e-a14f-ef17ef3a183d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0e755320-ff17-42f1-9611-cbfd01974b61"
                        }
                      }
                    ]
                  },
                  {
                    "id": "af6f6cd1-3d70-4bf0-931a-d09f332fd217",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "64416d8f-0a78-4df2-8c49-046f74243264",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ea22cb00-7f51-4a2e-8559-95e3292e4803"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6efa3789-1204-4c45-90cd-e7e573c4f7aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ab9288da-8097-4326-bdfe-d255d0a4a184"
                        }
                      }
                    ]
                  },
                  {
                    "id": "df24a41c-d02f-4d7e-aee6-1b57c95af58c",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "980469c7-4f05-4912-af41-5b49760c4b44",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f302b724-72c0-4485-b5ea-d100e02d03d7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2c524342-1dcd-4fdc-b63f-0b326a9f286e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "eee0b778-e620-46b1-b1d1-854c59d22527"
                        }
                      }
                    ]
                  },
                  {
                    "id": "330b2444-3271-4a1f-856c-919bd39400cc",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d5dfce36-9c76-4911-b7cd-9f236362f14b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5f9d87dd-fb69-451d-8a2c-780545af9764"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2aa1c42b-3aea-482f-b690-54d9f461b983",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c8e2e5ad-a9a4-4a45-9e0b-fa1e0f0b8309"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e4b485a7-eb68-4ae8-854f-fc804b649d17",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ddcf5168-03a3-4a61-801c-17f552298db5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9df1706f-bbe1-41a8-9f61-af89414c877b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f06e8e37-aa7c-40d5-bd1c-5b3d0e367a0c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2fd54da1-393a-4bb3-aa8a-d4baede4ff86"
                        }
                      }
                    ]
                  },
                  {
                    "id": "59dda44f-d880-46d4-84a6-c45fa8af67ca",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "11102297-6256-4463-9b12-63a4beff7743",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "64bc7534-e5c3-46e8-b306-0da9069a13a1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fcc1674e-6280-45ae-aa81-481629d50e69",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "70d5ec5b-4df7-4b34-819b-e33adbb13c1e"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "c02ff81a-7423-47a0-a1e4-d5ccbb5febb5",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "c0101934-6baa-48c3-9fc2-9f612611794e",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "55bf611a-423f-49e2-921c-b49930a3c6be",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "a436bb0d-71e9-4d7f-8429-b73fbb1bd257"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b919fa52-ae15-410e-9d60-5417f3111a01",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "b340c64a-2d64-4dfb-9cae-608c923ab30e"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "17564fa0-84eb-48ad-937a-9e979a16e766",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "1fbfa71d-9e8c-4c2e-8f05-9bc423e8585c"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "e2391b66-b0a5-445a-80cd-0adfba4bac4e",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "2d8c0c33-d0c9-4bf8-8c2c-deb1eb50a569"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "4a17649b-be9d-44c4-9b7d-be20043c405a",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "159c2488-1ea0-4d7b-9f1a-6963873d0290"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "16a11186-b168-4ff3-a9ba-a90d342317c5",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "f04bc782-47b9-470d-b9de-b4dd6462907e"
            }
          }
        ]
      },
      {
        "id": "c443013a-6e9a-400b-8f08-7da2b3923d95",
        "name": "Credentials - Update Status (StatusList2021)",
        "item": [
          {
            "id": "40bb79e0-e15f-4576-a2a0-25625edcccfa",
            "name": "Negative Testing",
            "item": [
              {
                "id": "82cdc5c4-cfd5-42e0-bafe-aee2129bec8f",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "d9cacd82-749d-4b7c-a74c-d428568bfe9a",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4db7e16a-fa08-441f-b704-242a6888e6cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "96065efe-dc30-42f5-b8d7-d3b9b925189b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9de36a54-5056-46ab-82ae-709987660c34",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "f1643773-7060-4527-9a7e-336504292e03"
                        }
                      }
                    ]
                  },
                  {
                    "id": "07961f4a-4519-46f8-9a9e-e7daca935fbd",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9925e49d-9542-4a57-a747-0332de830e7b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a8738406-201f-40dc-84d7-50b557c63904"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f1475d19-dca4-411a-b27a-6c743db87121",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "912f9781-2871-449a-9e73-cd632474b472"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b47e05d1-a807-41ea-8272-4a4c3920babc",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ae09654c-c7c9-4a13-8fc4-4df584464aab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6b15eb13-475c-4dc7-b5bf-1e273e5f9f35"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "056cee75-6b88-4644-bd34-12561a21ab9e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "7b742c7b-f310-48d9-8e74-24524d226333"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0d5620c4-26ed-4452-bc60-019c3309c2c6",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "716a5c60-31c8-4d01-ad98-5faa9e0790d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b7d4d6b0-bb5e-490f-8967-cebbafd3fb44"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8f6a4318-a992-440d-970d-13b923435355",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "ba5087f9-ed40-4f9c-a72b-350fb6af962f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b284cb6e-dd1b-446a-95f7-b8717548f4f3",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a1b46dea-9cf8-4b14-99f1-08f204d7e4fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e95ee295-458c-4add-87d7-759193036789"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4ffa692b-dd12-4901-9324-37ed148702d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "760a946e-656a-4345-b687-5de8be6e3444"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5fef161e-6b78-4b7c-bbbd-976d3974196f",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "31910a5c-1817-4436-9192-a09af115da71",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "000ca7c4-2250-46c6-ad1a-f711ba52c265"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b9a55003-4e2f-48e4-be93-4d1436548377",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "61d9dfbe-17f9-49a4-be7e-4467b1d67d50"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c2ac6389-b898-4dd3-af28-99ddb3dd8106",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "72d077cf-f679-41fc-bf31-ffe2edca2f0b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bfbbb0b3-8ce8-4e8a-9bb1-9152499981b8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "16b65b05-6d7e-410d-b6c4-fa4ff16aaf42",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "ccc739b2-d78d-4ef5-9c71-dba48de65605"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ef19c9bb-800a-42c7-ba9c-385e52e113e4",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "27b4d41f-617a-476b-9292-055b09723dbd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8338fdef-8c70-41a0-9f72-6672e1c8fe11"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0f4e7aa5-1c19-471b-99e7-952e463daff4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "42668c08-c27d-4cd8-8552-866af8df8025"
                        }
                      }
                    ]
                  },
                  {
                    "id": "39020b51-968b-41a8-819c-2c6c0754de46",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "faa3f806-751a-4c48-9ab0-75940f43fd70",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "52324d42-e4fc-45de-9088-e4a70f4b6ced"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3d7679c0-5b30-4584-a3cb-17b25e371895",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "55ad21dd-eabc-4b11-8bcc-0246111ba480"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1b86cf40-8be2-49ac-9bd8-0202672af435",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "27ed1dfb-c22e-4b14-8028-208c48be89ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f177225d-98fa-44ee-973e-6484173b714e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ec06f638-dc54-41bb-baf2-53691f52a54f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "2c590f63-501d-4ea1-9e03-4eb50cee8e00"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5a656430-e891-4fc6-8b10-68fd99c45c1e",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "006d4a85-a832-48e3-b7a3-b4f4f862301b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "79fde34d-d269-4460-ad12-09174275b65f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e2ed8518-d151-4bba-8b76-363a275915e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "08ce7719-e8c8-4422-8fe2-be2e7bcc42d4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fe6f5570-7be9-4ec5-b6e6-39caab7a9df1",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2720d7d9-8718-45a6-bf3b-0c8bfec1ee51",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "98e3bdd2-14d8-4291-9609-28336735c9e9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "207cecfa-1d56-49ea-80de-3d5530facabd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "e338f029-a42e-458d-98cd-65d9c2539029"
                        }
                      }
                    ]
                  },
                  {
                    "id": "024146c5-ec19-46a4-b625-a9b68b734c7d",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "40aac63b-1518-4e3b-9ee7-06b87dc1ef95",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d526ef88-3fd5-406f-ab6e-d09fe911ca04"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e4cf8401-1d06-48f4-b3de-c4e909505635",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "95fcde41-538d-4c95-aa43-89617d49163f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b6748446-c895-4a23-bf04-91966bc5003a",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a015670c-3f37-453a-aa3d-df38b5f8723c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "408aa802-1a1a-4a88-9517-fd797b120d00"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "38ffb106-c8b4-4e6c-bec6-361cc31a020e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "785cf5e0-3459-4aa3-bfff-8040ba1272a5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3087ec3b-99c4-421f-8800-a8d28fc8ce29",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bd5daa51-4911-4d19-b6fd-e236cf67c6a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8fdcde24-5d90-46fb-bc97-ed3689b99b43"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cf46dc1b-577b-4aa4-b2f7-f2b1730b16d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "a448c8f4-0ee3-4949-b04d-4bcc928b57f6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "74c767be-1465-405f-b168-dfa047f7e9f0",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bf66f7bf-62cc-4ef3-9bb1-111234e48409",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "60fb9f37-0a96-4fef-98f6-fc768d3c8a29"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d1798584-1651-499d-bc85-1b32850bd84c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "73c01663-ba99-4872-aff2-893997bff8d9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a28e3bac-76a8-4ae6-86c9-796dd70b7ed0",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "03e6745b-4c95-4450-8e1d-1a81a99f3ec3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f654036b-9cbe-4b31-969b-7672e83168db"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "01792e67-028d-4891-8da1-93d88c3c7e89",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "f3b0806b-255f-4398-8bb1-8b441c58aea1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3827a792-001e-4f6d-b042-443a7515b327",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "474381ad-d363-4ed1-8810-f946af2d5e1f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7833f8ff-d497-4709-b980-5775ce1ee66d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4a686e2f-709a-4469-8fb8-0cf2e9f41e9a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "c1b83746-2eb6-46e3-a45c-27c3ca454c7a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7ee8d9be-a616-4694-adb4-3be5f945354c",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "03090c4b-e09b-4a02-8337-54607b79375e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7e8e3ddf-c519-4696-ba30-d4314f742cd6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "874bb6ac-b7e4-42c3-9a40-51e072084448",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ef0a7ae5-462c-4822-a870-969fe6ac689f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3d86bd6b-d200-4835-89b0-922e7a4747f2",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1b009e2b-091d-49d0-8eb6-17fcdd359ac1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "26f31e44-8a78-4046-805a-dcfb46880b31"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9ac528d8-8add-46d6-91c9-e1757e7a87dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "60a0439f-b97d-4015-9c85-1fc4d9250533"
                        }
                      }
                    ]
                  },
                  {
                    "id": "adf447c7-0fee-47c4-a4b8-8e81697ad915",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a8ddb297-45d6-41b5-b06e-fec97fc5ddc7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e2b27a7d-87cd-44da-837a-84de4d486330"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "891ae37b-a2d5-4bd8-838b-635a8515166c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d2f5021f-dcb5-4e9a-82db-7334602421d2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1212514a-be81-43da-ac41-44674996b035",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0a89f1de-ba7c-416e-a3f9-1e8724dce50e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9455e41c-a821-4722-bcc1-b11837a90d03"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bc4ef39b-7bc8-4889-ac66-7743034a0b77",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b5285e0d-e2ff-4489-b9b2-87bf8ae426fb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2335d1bb-47e1-49a1-b1b4-6a1cc0fd1f6d",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9c3aa494-42fb-4ee3-a099-c2535018dedb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "93e479c5-e862-461d-a015-0e6f13909ea5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "408dbcac-a07f-4d4c-add4-fb3ef9e27963",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6851ebf5-2c50-4902-9103-b44efa813db3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5df08138-1cdd-4174-b6b3-fdccff59052c",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cfb8ef7e-a0e1-4b6d-baa6-11124fbf8902",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "846b664e-6f28-42a9-be69-e9744e174390"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f836a060-26a3-49ae-a6a1-622fca371491",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9fac37a8-1eed-4c43-9b7c-bdaec8ba34c1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cfacf50e-ff92-4fc8-b53a-6fa0a40e18d8",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a9e34346-17eb-4f8a-b651-69db0a93d984",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "01be15cb-4514-472e-be86-8569eb618a4e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a469b1fe-b399-47eb-b832-85a6cc386efa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "13265995-5fab-407e-9205-6844be5a1cf0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a00c4b6d-0c70-4dc5-a668-c80ffa6a00b1",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "80f96a01-6d2d-4b6b-8fa4-aa6b4cc6d40b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3db35b35-0a11-48da-9af1-e49d5ed26f88"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a3621c45-1a5c-4920-8a8c-997c31209517",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6ca3e794-e385-4d32-82fc-2723e543bbd5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4f6553f7-c8df-47a8-b668-1afaf1b34fbb",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cef9be63-cf19-45c7-bc22-80058f1ae47e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1499c1b5-961e-4bcb-a5b9-491a7bc8b2e4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2e81233e-459a-4fcc-9fbc-3fceec4046f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "81a9948a-efc5-4f8b-a4b9-43a5110946ce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "354396e3-66ca-4ae5-9c01-d70584d5c0f6",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "76a01dda-070f-4b20-a22a-350505a1ee7f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "10faee39-fb2b-40aa-a3c5-9342ff09f031"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "873da1ce-ac51-482b-8de0-8697d2115dc7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "def080be-3b39-402e-ab00-1cfac8c4bc9a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "392c0216-587a-4257-9bb5-aacc2c4800b7",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e60215c9-bc72-4fd3-a616-af1d16cb1c06",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a03b8929-14b6-418b-8ac7-371b8d4b436d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fb4734be-fc0e-41fb-ab8f-ce8ed37c14af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "087f1f72-f522-4caf-9588-e5b702232097"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6f7fff82-500f-481c-adca-a9eef3c7f6c0",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "330b011e-dd0f-4cdb-b535-5afb0d4ee64f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "221d51e4-f28e-4ab9-aaac-192d92521231"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "be4dad00-798d-49b9-9292-b65d997160f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e40775e1-e888-4132-8e3c-045ef025c944"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c5375478-44b9-4070-8843-ee122a799406",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "83f258c9-bfb1-4f8d-8502-dbfc4dc3f742",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "75c2fa02-d8c3-4173-8e52-d9d6d33251ac"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "20c32baf-7325-41b3-9f42-5d3b2af4841c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6ad3d643-4774-40e3-957f-a8d37103aea8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "69acdf06-edab-4a73-9dad-918607bb44e5",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4dfed764-42cc-40ea-ae72-700984ef263e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b69b41d2-b6ea-4db3-814c-ce14ab9e953b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "81cda95e-3c6b-4510-9cf8-101835cb2f5e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c004fdc5-3416-44ce-af66-025bd552b12b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "800c987c-576c-4119-9aaf-45d36d819780",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "88c22818-5344-471d-9bce-a3f076ac3de5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a715ce85-3624-40d0-8552-3000ca66708b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a43db615-e5d1-44f6-8b77-e67cfc2fedac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "24268f86-2512-4cd7-8daf-e3d388e9cb13"
                        }
                      }
                    ]
                  },
                  {
                    "id": "85be77b3-407c-4728-88b6-17723c0fff68",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8b60e884-2ab1-4ddc-809b-8451aa7de0aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "018ab000-2c7a-421b-bc1e-73dd5b1a0b54"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "79682720-c210-43c7-be92-ab9b81dd7a44",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5473fcb9-e2a0-4613-adee-0f93728d0429"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d742a8d5-061f-4ba2-8539-2dbeca5fe39b",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "04586896-320d-4c89-a6ee-e9b10bca7c06",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "92225191-1a38-40f4-a2b9-d74d2f9311c2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "483b443e-5ab9-48f9-941f-1c42c17c0df3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ab26e64d-4cf6-4055-a7b6-beda21bc846a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2512bd06-ba77-4d3b-9991-16632345f720",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "833f9731-1eac-4071-89d6-a348dc822f2f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ec083cfb-02c9-4b94-b6d2-c833ee13fe50"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "771ec8ae-4f53-44eb-a438-7708e5df7edc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9f9049cc-a5fe-4f24-8b4a-31b8925e0d82"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fb70dfbe-b8ee-4b5a-950e-cfb111dd7d02",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3d297d5a-c513-4861-99aa-2f0f0f2e83ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "38c1e762-52f0-4289-a9f1-ba72360f47bc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e32d7699-3c9b-4f25-983d-9fd6f1045f12",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5bccfbbc-a717-4c39-9f4a-14645ec17c5e"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "75cc0817-ce53-4af0-997a-3ec9bb34a98d",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "4d9a8611-4ab7-43aa-b08d-8c4795e79a37",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ca5dca0c-52e4-4eba-a760-7943d31be5da",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "5aba034e-7729-48bf-8be0-602586e1f000"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d2ef4bdf-0037-49a4-b520-418d6da6aecd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "d15ad577-151f-4677-a37d-c741ce927553"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "c28c409e-5b53-4fe7-98b2-0f8e87d1f2f8",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "81bf21ac-576a-428e-86d6-bcbff4a17b0a"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "48aefb53-3521-4f5d-80f2-76fc36a2fd59",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "bca9f408-204d-41cb-882f-f9cf822b5b35"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "c38aee65-4f09-410f-8f9d-7ee79a15f7f5",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "97c38f07-b740-43a4-a98e-b3b0ecf28623"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "9c6e9d40-eedf-4e38-86cc-71d723a36cb0",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "60700c3c-38ce-4491-8034-98aeded43a9b"
            }
          }
        ]
      },
      {
        "id": "4d824df8-ad1c-4f55-a716-f7ce013e1fcb",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "b239f956-7684-498d-93ae-e74870487630",
            "name": "Negative Testing",
            "item": [
              {
                "id": "a00ced85-a945-4d4b-8fc2-d098609fa76e",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "854a1500-032b-4d45-9cd6-f01c644594f0",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "169bc0d6-cc15-48c4-9950-e997f97a25e4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c2f1ce2c-8da2-49f7-aa8c-9ab9c4630d28"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ae134f6c-1de7-4f6a-8345-a44366df8bff",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e9e3e68d-8052-4a44-b684-18ea864149dd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "163a16d9-7c22-43c9-a830-cbb06374fe54"
                        }
                      }
                    ]
                  },
                  {
                    "id": "42d3afb7-42e5-48e5-afad-20cc14dd495d",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "89caf86a-825f-4f98-8dfb-1112e78066b9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "34e04278-2c19-4613-9fc7-55832f9ff663"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7bbdd8af-4dcd-4ca7-877f-55d85b9c2ac3",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cb4b6f5c-1751-4e35-b3b3-e4e691945f13",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3a39c35f-16f2-400e-a76c-b990847fde6b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "899a9031-dc55-4524-9285-dc273902e648",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8b6a074f-6c4c-4111-aa56-5d3322e65082",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "75c22570-dc48-4009-8f9f-00c2714466af"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a7258646-d069-4136-9ba8-af0e7ecb660c",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c40e9868-6657-474a-aa8c-6cda6bf99095",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "77330f77-f83e-42a2-ba20-e215de0c30b6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3b698ef3-88b4-4614-b8ca-502b5c6e26a3",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ac4f83a9-a500-45af-84fc-225c243d7e19",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7d0db9a2-bb13-4251-bbd1-a7e21c366413"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7b2882dd-e326-4faf-a03c-89cfbaca4e2c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5097c50e-5355-412b-8df1-578ff4f1dbe8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7c82ab0f-4b2c-4b33-892b-05bacd03bdb7",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "75a38d9b-874e-466b-bb37-364c02920877",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "832c555b-1f08-497e-8860-f5cf88e91cfa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "550baac6-7f1c-4b1f-b773-8b40caf5e353",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "80968084-cecd-4226-aaf8-07cbe89d453a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8f2cdf5f-a60a-4c0e-94c2-d46ed82fc352",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "588c6d38-2be0-4b5c-9242-fd3b386ab468",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f89daefb-f845-446f-88ca-bc8978c09f3b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee9d3f33-69e6-4a6b-8097-a94b6581a102",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "699c041a-c447-4d16-bfc5-c40e835c6ec8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "afe70506-c10c-4ca8-b14c-5a92ccf796d3",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2ffd239f-fa79-41ff-b6ef-c6e0065ccd96",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d40b7080-57a3-4dd6-b279-05bbd70cac48"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8529ca51-78fd-4e49-b0e8-41b3ba49da16",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5ab590ee-8f27-4cdc-9940-ebb4c24b3d7f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "92727247-7a81-4afd-b9c1-5164e6a8b058",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e0a5f824-5ee4-4121-8b9a-6aee0d951904",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b4fd6aeb-2b12-480f-9bcc-fafffd16aeaa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "90587f10-1b42-4c5b-b007-43a9ffde34df",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "76c303d8-b57c-49ef-a6c3-62f8e93b9a5f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "20aedda6-11f8-4266-b3fd-2b226e687090",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c019ff4c-084a-44f4-957b-6bc30134ae52",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c38c25de-01c9-43c6-9f9c-bcbc0b6afd5b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9c5847c2-bd1e-4ac6-b125-55bcb09c9b35",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a5817949-cf61-45e9-b6c6-feb97f4432b7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a66baa60-9aa4-49f4-9c47-fb7c38220a27",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "96c4e500-456b-444e-869f-450b2da1f3a2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3af710d2-678e-4aa9-b702-e6c14ffa49a1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d76fd634-a8c0-40e2-9a34-04957420d20d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4e32e078-b085-42fe-9598-97b383fe4c56"
                        }
                      }
                    ]
                  },
                  {
                    "id": "edc4bbf8-8829-492d-8bdb-de2af9e1b09c",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4a62ef0b-4256-4d47-aaf7-9c906c8d1535",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7b662f6f-048f-4d0f-bf47-37f1119d9c7e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ca92db1c-9a14-48e3-92d4-9f771a74e1fd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "171b9774-fa64-4e0a-a183-29f6a05e2efc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "30503bcf-59de-4f8e-b5cb-0b9acd6387a5",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3f87f5e9-cfd1-4914-b230-33069308f461",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "569ca3ad-71ce-4f54-a50a-08a640f8a654"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1e39f2c5-61b6-438f-b606-26836e8b40a3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cb79f5fa-f537-43fd-8ad8-333f562a3266"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a8ce12b9-f9fa-435d-93cb-f78f543ef6c2",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "219b67ca-8fac-4218-a511-66f48499fa53",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c2dcad5f-6985-43ae-88a3-572cc49933d6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3aadad28-ea5e-4b93-8613-5ee96685c32a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "29e69a76-e123-4b78-97e5-508e261f39f0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9e2ae7e0-2d9a-4e3b-9c3d-32d6c63d38ad",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c7141c09-b7cb-470a-a4b7-6eb6753ed2f3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7619a6c2-01f9-4cb1-b82e-93d93f2b666c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7e306243-e2ab-4170-bfd9-80e10fa792c0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a40d7c4e-348a-4ac5-b39b-81165c2fa572"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3ae5e964-6533-4310-aae3-d5a381a20543",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "970e63fa-d247-4357-b6ec-919c96350f3c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e2f144d0-6735-4e44-9218-b6d838131a77"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c5c93187-70d8-4f9f-80da-df93db593bd0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2ede373f-df30-4425-a5a0-a70579929030"
                        }
                      }
                    ]
                  },
                  {
                    "id": "48d7a504-274a-4b9e-b8e8-e29fbba6ed5f",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7a05de32-25de-4cf7-9ff9-58044dd82dd5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0587dd38-a400-4250-9294-ccd6c67ea88d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9a7d7401-a857-42f8-b742-526919148fa9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dddf1972-3257-4164-9f3c-b766d96a4b44"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1494424b-960e-4bcc-863d-26ce16c5f8b2",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5d859bfc-49c8-4067-b917-cfa14102236a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7e551627-41b0-4f98-b13c-8e82a1df6482"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "81def5ea-979c-4ec4-b6e4-9cf33c76bc02",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "75fc7cad-3a21-4194-b0c6-ec80f201c35e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ae30c996-89d8-4408-80ed-2987a7f3e168",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1d4c76c2-6c23-486d-9c00-27ff0708489b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "13eaf68d-e491-46bb-989e-5ff5659cf4b3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e2119a6d-e19f-4528-8864-1fa630589852",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a6b4e4ce-fc16-4e85-95ec-9bae92cc9195"
                        }
                      }
                    ]
                  },
                  {
                    "id": "591daa4d-ee32-46c3-a3c6-f5102387d3c8",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b176b2a0-d038-4a67-af9a-0dcffd2f562e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c97e2042-8d8d-4a00-a2d4-32573a0a8a82"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3a32a91d-cca5-4388-8e40-4b8376c6f060",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d15107d9-1137-4013-8f28-f5fe9dd10e47"
                        }
                      }
                    ]
                  },
                  {
                    "id": "17d59fe7-0cc0-4fee-b107-e57a02c51ed2",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "30b9ca00-20ec-40ca-b139-0d67ad658fa3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bb150398-6368-445f-9e16-125fd9f24deb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a6eddede-9e46-4343-b942-8d6e400f2af8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "74af0983-83bb-4a07-94b0-80dd3c9fdc04"
                        }
                      }
                    ]
                  },
                  {
                    "id": "11d06fc7-cbf7-43e5-8561-3ed88a24c036",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "29b893a8-cac7-445a-a8ed-0e63c4d5588a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bb11d5c0-fe45-4300-9392-adeffc330b81"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1c1a1d8c-158c-4f82-b73d-766af4b68c1a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ac41353e-36ac-43df-bf1d-0c1f1595b7f5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "92545242-345c-45ac-9b72-baf1e7ee6d19",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cf0ead91-4a2b-4222-a244-46cccb22e653",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9b887671-3f30-44f4-8329-08890436334b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0bdca34d-cdc9-4c4d-9c70-8f59606f514b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "83f1ffe0-ab1c-43b7-a91e-7149b4f04889"
                        }
                      }
                    ]
                  },
                  {
                    "id": "09f21df8-cae7-4b0d-8348-093a69e04c5c",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "280cc04e-42ea-4b19-a54a-55ddb1314557",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "497e1428-e9f7-4bd2-9e4e-67d7d6fd62fa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "065aa2ef-e667-4129-acc5-d460130970de",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bdd8a547-50a7-42c7-b97b-81b38b5e6079"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7e28186d-5970-49d0-a907-2b652bfd5d65",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2ed1d877-9147-4123-af54-12c257e219e4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "552d8f22-95d8-43b8-b4d4-1d41a7444005"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "85324ba1-724f-48e5-9760-3d969cf26a96",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "86803757-4c9c-4872-8b9a-c566a89b6cb2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3a1a2e53-4f53-438b-b4bd-bc063c67da87",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5ed19751-9859-4a17-a993-22d01a0cf93c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2a978f1c-9c43-4310-a2d9-f3956cc7a2b3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "39d1553b-3d33-4c91-bda6-fd69a2b86932",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cbeaee1b-d50b-4bca-ab9f-837cba3fda45"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cbf29883-bb0f-427f-bb05-ebadf3c8f86e",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9b5e4259-a33b-4925-9c3c-ba9fc3b1c238",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f9d76ff3-8ca6-4e7c-9bf6-fac773bd3f3d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "acc103b0-c94d-449e-9c59-819c4340deb7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "77e4cd1f-af12-470d-be07-ac0e7669f482"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cf956351-4cd3-4926-aac2-80c3080e0e86",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e01172bb-9120-4c9a-86ae-e925faeea412",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "97580f88-4a35-4423-83fa-c73aba7657b5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8c0c45eb-9fbb-4a44-904c-c2ec2103d2eb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b38122a8-c74a-41c5-a911-f82a2e21b38c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "35c25ab2-c9ea-4043-b020-2a69ad25e96f",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4c14044a-ba4f-4c0d-afb7-83080b7a1b4d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5fe9133b-1912-4e67-b3b8-642e66a8907a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f112f4c9-554c-43f5-806d-ec667acff7dc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dcb4b2b6-9712-4ea4-90de-12bdacebf14c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "51248411-cb33-478c-a6c1-64e93feecf2a",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "79338275-27b6-4273-a561-71b640b57815",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0a2558ff-9210-4436-a572-a9699640ff8b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4536cef1-5864-48b4-8dc8-eac029e1d304",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f73b9304-a0a5-4254-aeaa-be8e55b516e6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "67733496-2fc0-4baf-a3b3-348c58275cf7",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8108850c-6732-42e1-8a45-c182988d7b04",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4e1e93eb-124f-4ba6-af2f-c9e3fb1aa867"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "087477e0-1020-4926-890b-b215d056711c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d5d5d4f0-e5ba-4e19-9e17-abda27044c43"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c753b65e-326f-4d7d-88fc-551237b1027f",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c9d73594-5df6-471c-b3e7-eb9474a3eeb9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "675942a9-89a6-4021-b9cb-3ae5d33364b7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff35a9d6-25d8-4bba-bb22-81026d1de7b8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "90ca7aea-2b50-4bec-8e1e-5f499ad9a9ec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ec7792af-6aec-465d-acf5-19d51efb9c8e",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cd387566-5613-42cf-818e-93c06f689e32",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3a2c867d-87ef-4279-9936-eeedf649fd46"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "94f911ac-1211-4477-bcb2-f13bbea63089",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "01ff2bf9-4108-4d6d-8318-f89ea0de29a0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "98dcf2dc-2ebe-4c90-a40a-de97b46d7e58",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c7c43fbe-2e1a-426f-9da2-cf59ca7ecbf5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cd993a3f-2bbb-4cbb-8c44-ffb77490b6b8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "aabb3591-c113-4a07-b4d8-0c96d8079a05",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "61e52fe3-e691-4089-889b-f768a68580f2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a9c5504a-8477-4a53-96a5-9aa12b80f67e",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "212ab10b-2c37-45be-b11f-30fea09fdac0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5689fda3-574a-4022-9146-26097b1c99e1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c340a1e7-0144-49df-8cd8-d223f82cb095",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e76d7055-c81a-4841-9d30-d7a46b0f21be"
                        }
                      }
                    ]
                  },
                  {
                    "id": "831d9f38-d29f-4d49-aaeb-fa9a0d830edb",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "99f8544c-b6f8-43f3-8dfc-195770f9a113",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3d83d5fa-acad-4bc5-8590-a02abed65e1a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bd3a3aac-f901-4667-8e71-99ca165c27e0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4ffdebe6-ca84-460c-977d-ef03cb804890"
                        }
                      }
                    ]
                  },
                  {
                    "id": "89c54db7-f99d-4311-88af-2ebf9f21a484",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "da31b930-8df9-41e9-871d-220d737239de",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "621c6490-4e20-40e0-acb4-38efb63adae9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fb41a656-c36d-41c5-a073-f278707ef1ed",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "75cc8021-31a2-4d66-9950-53c33b4125f9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e8e13063-3bcf-4965-aa1f-0183e05826e9",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5d573b89-a8f7-4b16-a0d6-54836ef48648",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c2dc1c8a-3a62-4d16-8dd8-3680c9bf2716"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e378e0bd-2ada-466a-8788-cfbedbe9582d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f4e9fd12-f37e-408f-92fb-50195ae2bda7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "04f209bc-b466-4d27-a353-a6030bcd9f69",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "50b82c5d-c7d5-42bc-ab43-9814235cfc01",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0bd024c9-8cb7-4d9f-85f3-005a5ce06963"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5b0cf679-2df2-4582-857f-c6d4d74d6f5b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7c29421f-75cd-4d1a-8426-7dc2a483753e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7d3ce203-112d-4b28-ac94-4092b29b037a",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "08b1af8a-8a1b-41c0-8ed9-70dbaddabc2f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3d611743-1274-483f-8c76-acccfd6e873b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0b52486b-a65e-4700-856a-02f259eee1a1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "69bc5364-cbe6-4f8e-a50c-9be843a2a684"
                        }
                      }
                    ]
                  },
                  {
                    "id": "db9ee6e2-7d4b-412a-b541-b2ba1d83ec49",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "63915e08-148d-45be-ad80-637e6f1044f9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6c4a0956-092c-46eb-81ce-de35ad8aa6cd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2cbb01a4-c5c4-4c16-9aef-10f09adf3274",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "122b2e66-0b70-45a8-bf5a-d04614ac8186"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d2b12ec8-101d-4225-8fd6-184b092f6167",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3c8b2bb4-0414-4697-aa62-2de761728a3a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7880aaa3-0bd7-44fe-90de-6e694ed359fd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "46007080-fb48-4d82-852a-7114969f2325",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "23572bce-b646-4f5b-8a21-1a803cd02a92"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7f7fff7f-c39f-442d-b3ef-a7db8e798b08",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0a4e370d-8358-4c61-beee-7140627fc97e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1b33e2e9-fbe2-4909-84d4-4b55909c5931"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c5c9351d-fb0b-425f-b73a-9814090f9927",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "adb0029d-1287-402a-b1d3-6d0f66d4b0ef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "094f1091-689e-440d-8bf7-9dcac8b98b56",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f9c2c10a-0ee5-4301-bb09-38033754c181",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e7b06b31-2a2b-4ac0-9bd1-6c99c3a3e9f9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a0a68e3b-0d6b-4794-bbc5-359dc92eb78c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "62b4e69e-8ac8-4088-9bb8-af9dab4c1f72"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8ebe9697-d284-436b-b55e-15a3a336ff55",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8ce201d8-b3ab-429a-ba16-42f595a2558b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "73e74155-2255-4520-9d5a-865ad3929ba5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5a4830d0-be08-4727-97b6-9f0146c75619",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b8e458f1-02cf-45d3-a21d-37ae60c70dd3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "979c2826-6b8c-4ecd-8d04-136021a0e872",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1af59268-495e-4764-ac2a-726a5c2d22d6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "41223108-002e-49a1-acaf-d2496360cb08"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2419e57d-98a7-48b3-82fe-c24fd1ddcea8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6899849e-043f-414c-90d9-14b21d6f1ebe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b28c62c9-a3d4-4312-aeda-a3a7446cb94e",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6eb535c0-a09c-4583-a88a-e066eaebc695",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "791ef890-e9b3-4ba6-9815-f1d31140ab19"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f95204f1-fe6f-4432-9cbc-3b4754d4cd22",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fc4531fc-0050-487a-81bf-53f1b029e8dd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7e28dfd7-c171-4321-ab34-d920e207b6b3",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b43fd7d2-34e9-40b8-aad4-1f7bde4459e5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "11674945-c207-40bc-8888-783fcef0903a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "06237910-044a-495b-8fbc-44840ddbdf92",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4aadecdf-d2b2-45ab-b31b-106ed1886101"
                        }
                      }
                    ]
                  },
                  {
                    "id": "417f6474-55eb-4868-9c4c-8808b231e1b4",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "65e8ef78-8b63-4500-ba22-a6570165ca9b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ace93176-ea05-4458-b3c1-276597bdd19a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5cb308fe-a265-4a16-b311-35c7ce48724c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e96cf655-64bc-4d2a-b2e8-9e2e9dc91b8a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e35c79be-ab4f-45dc-88af-d29ee9c457ab",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d9119c48-e1d6-4438-8e46-78a9d4c7d0bb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d9a0c744-5f6f-48aa-89c3-717cca72ecc6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8e77b4fd-b73a-420f-b074-af3dacaf0fee",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "188180a5-edd8-486a-9f75-ae4eab9de51b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "51ba570b-b60d-44f1-ba21-50218e17c60f",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a301a40b-ef4c-408e-b90c-02da5696bee5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a2c5d6df-58a1-430d-993d-b060c3c540d1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "711da726-3ef4-41c5-adf5-dd667eb7fdb3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "da8d798f-4a25-4871-abff-e6182d7376d2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8b1e9492-c371-47e6-8535-45c28fe4b714",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "11491a36-c50a-4408-ac20-6838dfae6e3e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "608fe2ab-02b0-4208-b2d7-2a21e6e9ff68"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "df430937-78cc-457e-bebd-5202939c1d6d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b9358c8a-85b2-45ec-a9eb-22bb6f45071d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1f730faf-69be-429e-9a61-b11be6f20107",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ca425ff7-fbca-4f86-bca8-f3b5860de6dd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "70d7c81b-e729-415d-9473-bad9711a31a6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5af5deae-cfba-41b1-af7b-f2321c3360b8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aacad685-3eac-49ee-b170-f0c3014c7bd1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "931c1c75-ea2e-44d4-b327-8090c6c1986a",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e70d2767-431d-43f9-bf28-c096c4956cfc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2b4bc18c-de2f-42f7-a930-a606d34a001b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c608c6ab-6fbd-4da0-8cdc-053ae213bc68",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c0cd60a0-60af-42bd-b573-d4fffefbfd18"
                        }
                      }
                    ]
                  },
                  {
                    "id": "df083aec-e399-42c9-adb9-120ff261bae9",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "77b884a7-39b6-47e9-8757-716bd2b3282b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "63453aa2-cef1-4ce5-96c9-5f6c707abcb3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "229f3eef-c38a-4483-ac29-ba1d4e9d700c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "94d77af1-66ef-4c52-aadd-2b0f2381a780"
                        }
                      }
                    ]
                  },
                  {
                    "id": "07e09fac-ccb8-42ff-96d9-ff2f7a0ba16c",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d0f66f11-09da-4eeb-9cfc-85b3fff136a0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "158ca004-0db2-4176-be9d-a5ff02f0f85b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "91f28c86-4d6c-4a6f-9e31-694277971192",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a5a0ad7f-b105-4e91-a794-2a16d71ec501"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a81d8181-1a22-4b4b-b4b4-de64f8210221",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c5aaf3e3-38ee-4e34-9efc-b3e60d37d71c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "621bf45d-61ae-4f59-846d-b9e1c4e6bca4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6904384e-3f57-4cf5-93e1-fd90644f6679",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dfcff8bb-f51e-4c0b-8189-a04654c33c5b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a6d9808e-e7d0-4475-972d-87b8e79a96fe",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8606c891-9e2a-4926-b42f-938f356cc8c1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "46f83ced-9079-4dce-994e-f981eb7b7012"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d0938814-79f0-4523-8946-f611143d5bd7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6faf0432-e72b-4388-a90e-88440aa7ce05"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3bc38dea-10df-4f89-926e-33d8fb4c0b42",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ad9eca8f-b861-4aee-8965-09aef679846e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "16f96256-41d9-4d3f-a25d-9fae5ee9bbf6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2ec8ba88-119d-408e-bec8-927fe8fb579e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fd1a3f6f-ac6b-4cd7-bf8c-69c97ed5642f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5d059ce5-347f-4684-a2a0-1056e8f69383",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6e969f5e-aa82-4012-ae4b-efbb2143b5d6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "739431ab-1905-4812-a6a8-f08df766a7f3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fe999bee-65a0-49b4-b55a-ad6dc1266274",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2f3dea70-ba50-41bf-a10a-25d5f6b0985d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e5c24a10-fe68-450f-a086-2613e3485c25",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d8ff5c82-cde1-4af3-9557-3d84611adf91",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d4a35e34-4697-4125-b48d-ab919cc12bc0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "806cb8ce-e925-4321-999f-9da2f07cff07",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "65e73413-311d-459f-81b4-7fd31ed00b5b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b477c13f-4324-4803-9d2b-e5dde887d714",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c71a2f1f-4b6d-40a2-a8b8-f5f933622964",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d505849d-5fc2-41b7-9b6a-230afd3c0202"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8db10a19-9d82-446e-a3fc-839488166025",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d28ad6e6-af63-40be-920a-bafc2e97bb9d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6febcfd4-2ca0-4cb1-a128-d9af9f982e2e",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "905ffc7e-f989-4895-82b9-8c31f793ff33",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f4d6a144-f330-4abf-9b1a-78009bbff09b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4cf7177c-c142-42f4-834b-743aae2ced0d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b3a9d06d-dd88-4d12-a7e0-c32096201664"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6d337d9b-58e6-4bdd-ab53-34ff5d0abdf0",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "78376398-e003-4ccf-9c78-19874eae8cdd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9550e4d3-8014-42d9-916b-9fbf03d04440"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "25942c72-d40f-4ba7-9d3d-1ed9ab483a4a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cd10614b-052d-45dd-bdb4-102e3052ee3c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a76325b9-20b5-430f-95bc-74780a0c2ef8",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f337e025-3b4c-480b-bd59-941f862cd91b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "262e0acc-8217-47a9-b8af-df482608cd18"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "607780f3-3ff7-4f70-877b-f88ff2d0032a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "74e4b501-b177-43fc-a651-dc2d0fb8f1f4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3fd00f77-b3b7-456b-b292-6ec4595cbba3",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3d1c4e5b-fcf8-49d5-b915-3069eca36f45",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "711ff5f4-0deb-45b3-a7d4-7a1400f18bf4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5f93456a-f8e0-49f5-8cf0-e2ae4517ef04",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "06200adf-eb14-441d-8bbc-3b6d52705562"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3b186638-454b-4aac-b0f9-6a3913598795",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "91f8e12c-1a1d-4dd6-8c87-8c3117f9350f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "36536471-103f-420f-bf5d-db9d3fb196e4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a304e1b8-d86a-4a3b-a48f-396b8781f664",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e47301bc-a7d8-437e-96b9-1e608c4731d2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "178c3c1b-3d52-494e-87c7-a6685d5a12f2",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8c40286d-c628-4b59-a85c-7aee98988821",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c826c71a-65de-43bb-a0c9-cf8a2fd44107"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "eb60e1a7-d68c-44d4-a378-02ddbffeafa8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6681a92c-5af8-4074-bce3-24f345a98a52"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f7eee29d-6943-4b3c-acbb-6f741f14c1b2",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "42875038-aa46-44d9-ad8e-5d0e065b2efe",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "375362ec-11bd-44fd-9e96-0dd1170b3f28"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8ff7f117-4c65-497e-9f41-2c19be87eb04",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "35382072-7017-47d9-91e1-763727f4f318"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f145d579-e56c-4ea4-b533-cf378dbf64d1",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6b3abca9-aca9-4f40-b79b-5a403d11b13c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a920a99c-ffbb-4f7c-b2b1-f28392299d10"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "41e5f20c-b627-4bf1-a1bb-f85df7e46843",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dbce6446-bca4-493e-9f77-6fa5e06cb6c8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aeb3d1fb-74c4-4c56-a1b3-7e425606c925",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ade508ff-69ca-42f2-9677-b31db2e9bc70",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fb439253-896b-40c7-8aba-54233a5f2611"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d09b75ca-037b-447e-92ef-4450e1149c8a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "63279439-3aac-416b-88e4-1c47013f8b3f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "94055a22-c9bf-48d0-a375-b69cc93fe619",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eccd1f86-f867-47c5-ab2b-03c5d9f4daa1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5e849151-50f2-4bc3-b294-912bd9be194b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "37419472-96fa-4d37-84e1-e2aea4f83fb5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "12de89ff-4888-457a-a54c-5a29338095ae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "815de8b8-3509-4e55-be67-996c6bfe2aa8",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "41c9f649-c2ae-48b4-a1fa-db96016de12c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6df82ca6-79f2-4598-aa05-f2324b720abd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e06c9ecc-afcf-43be-968d-fe171192b4ac",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "35de27ba-8335-4d4c-a1b6-9be00ff57206"
                        }
                      }
                    ]
                  },
                  {
                    "id": "419957b6-3565-4126-982f-e14e54841ee2",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1e145182-ec91-4142-b5e1-b40ea55d644e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6b6fe151-2eff-4d0e-b09b-fe7b37662545"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3cba115f-b48e-47c3-a0a6-1b2edc57d668",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7a1e37f4-ae73-4d72-9618-feab9c71f6d8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8bf96711-1fc2-4a15-b8a8-47e1c7a99aad",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "741d51f2-c832-45ac-9245-dc134457245c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "16f18971-91fa-4487-89e8-a20497b5f36d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5e7ffc27-b955-4bfa-8b86-85b27b39557c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d2aea656-1911-4e56-bf98-0259937b01a9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f9975a74-768e-4155-910a-e8cb79e2206e",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f5e5924d-77f5-4709-809d-35015cb2a6b5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c1cf29e6-7921-4461-878e-44c8070d47d9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "019c5177-2bbf-4a59-843f-159a8c9f2ebe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e71948e5-c608-4605-af1b-8ef590506dfd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d0e50c26-5513-4641-8954-e6427e6f8b7f",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "74274bc4-e8c7-4632-a2b6-740c43382499",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8e8cb485-3827-4df0-b03a-cc49c450f1b4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "11427256-cfde-44e8-be9e-be190ae6d761",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "144510fd-d20f-429c-aa6d-34cf8b2c8de7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "635c57a3-8301-4fd6-a0c7-21635d773b50",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1866a893-6846-44f6-9694-c8a4ae852e6e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ae7de1f6-e595-4519-abe4-d4286213b07b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e6664660-747c-4d94-8921-3c1ddbac0e5e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "228d5e9d-39a0-4ecb-b791-1056db52d4e4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dd92e281-6ad8-42ac-933c-a99c48819013",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "723168eb-2fab-42a7-b5d7-4bb0c1e07a23",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "61b6a614-1efe-488e-a2a8-e2c3d70e2a4b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d1ccb2f6-4852-41f2-96fb-0b3ecfa2f103",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2c85f796-3a49-4cc5-b4c3-e1c4ae33dc9d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7dacbae6-7cc6-45b0-a1ec-ad29a7e2d054",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b314113a-84fb-41ac-85b5-9b094852cce6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b94c0650-bd11-426c-bfda-5c549fc0fb9f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "531ea0db-788e-4762-bbfe-ca77e7f248ab",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0b9cecfc-4fc6-4adb-8628-f540318d39a8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5d7a0a90-6ae8-4695-8e75-969d3f042bea",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6819d08f-40c5-44b3-a90f-f1c711a81d2f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "42583c7b-49d9-495a-8f78-2f189c99429e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "08e5402e-f11b-4c8c-be9b-3a4d6fa125d0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b233103c-989c-437b-a681-2c05401ac2b6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ac6e112b-31a9-49d3-9661-d25e8bd60e72",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2da3cb34-03ce-4655-b8b7-9875a22c7260",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "673a3d5c-0f04-46f1-9de4-ec8a20efc870"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ecf61c0e-186c-4d3e-aa76-f3c83460972e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4f788f7d-19a2-487d-9172-d3a941f7bd51"
                        }
                      }
                    ]
                  },
                  {
                    "id": "00c43538-1d83-4ac4-b4f7-649ee80327d3",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1aa0521b-60d0-48de-b4fc-425666ea57c5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "08c54f18-bd04-4603-9de3-639d0308abff"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c082ac08-25f0-488b-8fa5-2a690c57b230",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1e51bfcc-3e5c-41f9-84d2-ccf2aacef9f9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "04a0dc26-9b3b-4c67-9d63-89ca0656773f",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "982c7cb4-8511-444d-bc5e-e57188905a54",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e7ae2459-aca3-4acf-a0cb-bca03e42cfae"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c66fed6b-8aa2-45ab-b20a-dd5588e5b0dc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "159fd94b-7af6-44a9-8106-2eea6910d998"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d4cb64ae-1e7c-460f-8f2e-f97f6d2a5853",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6516670e-1fa3-48fa-937b-44b1314b6e2f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ff97b188-2e47-427b-b718-5e524e9df8ad"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7409f1e1-46e0-43d7-9478-af8ce71b3a05",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "89ef9340-3286-4bdf-ab65-ae45911e16fe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ce51541c-7c8f-4faa-8e9f-ef7186bcbcfd",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ffc1a807-3e9c-452f-8ad7-b043a73a6fc1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8f962a59-9218-4467-ade9-124802cedadc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "490ec47f-8dc0-4f2f-a9d5-6db9727918a3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "80f631a2-849f-4487-9318-4ba888a60c7a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "afc1c80f-6a57-4158-a4dc-03daffdadfe3",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e29e2669-0676-4e1a-9f2a-d5a3df921c65",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a94f1226-0da2-4cf7-81f0-872388bb2a6e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6edbe668-abd8-4fd0-a52b-fae646628dae",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ec2527f2-b087-4288-bdf1-f7e457249a9e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9b59c241-58d4-4622-9c94-eb29a5fef279",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cebd5583-49e1-4f89-a772-e7d6b6c83beb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "977ad417-760b-4846-b861-e3961fa58f3b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee1dd494-4a7d-4377-aadc-bc9458b25191",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f9195805-788e-4c34-a558-34c9af9c6865"
                        }
                      }
                    ]
                  },
                  {
                    "id": "23c7b231-3165-4c20-b968-b35f49eed173",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "104bca33-e502-44e9-941a-2b2cefc8ff09",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2d5207e1-d969-4199-9d96-5a2dadd240d9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0a5e9759-3cfc-4af1-9644-53e7c159a69f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fc40b45d-cf78-4a54-a28e-b747e814535d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2c4e4308-52e1-45a1-b10d-073015ee1186",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cdad7c7c-13bb-4e58-9299-792a6268700e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f887cd1f-f112-4214-89cb-ecbbee4b9ce6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ceaf723a-0dab-4fe8-a167-af5d3f59051f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6b368c68-4e37-4b5f-bfda-01cfc3b68a67"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7daf8d02-0fc7-4d81-ba9a-d32eef6ae13a",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "da66aa23-a0de-4e7c-b98a-b008f2b584a4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a767e42e-5f00-4642-9cac-db8fa1461520"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e7111d7b-b3d6-4923-858e-f2a1469f2cdc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aaa4bdca-5f83-495d-a89d-cecb29a4b572"
                        }
                      }
                    ]
                  },
                  {
                    "id": "48e491a9-470f-4f60-8242-07a34b70cc69",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "da15363d-92b9-4aa7-a9c7-cb2b43162182",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d437b1d3-db71-4b01-b837-379d2f67351a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "99ca525a-75ea-4144-991b-7b69d2aa3f79",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8c665cf3-e77b-4484-a56a-4f629b92a9ae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "772e91ae-1a17-4609-b34a-995111f6730a",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "209d9948-5f8f-4bfb-b279-5c8dbdd8f09d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "52999bdd-8c55-4721-af20-11e1e6917937"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "03c04b97-ab3f-4ba5-b0c6-636cc7fcc1af",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7f52443c-ada1-43b8-bf75-7f65628f02c7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e4bfebce-c2e6-4a01-8ee4-e9f7a5b37c3c",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "52e531c0-7b83-447b-9370-fd7728cb324a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "103d03c7-7d4e-414b-8630-1901e64cc5f2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3a442f84-5618-4c5c-aac8-ffec62bbb089",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c6bb468f-2420-4edd-82e6-52fa62df9547"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d71ace73-39a0-4224-85c8-8cda68e005e3",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ba2ddffb-244c-452e-a1ea-946577d17842",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a96b1f7c-d9be-46fa-afb4-ae6c865d5a48"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8067f2d9-74b1-448d-821c-fa8850749b3d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7fac74d0-dcb7-4c03-a088-d8993b4e0d34"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "1c44291c-5412-4d4d-8eb8-04d4d20b8c75",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "1073ca00-e91d-405f-af04-7faeba05f518"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "55e50615-ebae-4903-8d8f-28878346ca31",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "2bd5eead-bf3c-4348-8962-39ecf7eb72ab"
                    }
                  }
                ]
              },
              {
                "id": "98b1ea60-630a-46e0-9e1c-b8de431e5d30",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "78af78a7-777b-4795-9011-d307f4189c5e",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "76ce2b76-2a2f-486b-92aa-ad464591fa3a",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "1eca8915-cdd7-48b2-971b-6c67e12d8838"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "43b14e23-43d4-42ca-b01f-98adaa0dd41e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "e3c91728-30bb-4288-9283-e6bf4524f055"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "1a8c38fe-4f0a-4670-931a-0594baf4074b",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "a582e3df-62c4-4f8c-a382-84dc365c6d8b"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "18870b87-db0a-44ca-80ac-eefcd10832cb",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "49016a83-7578-4b18-a1ca-368977c193a7"
                    }
                  }
                ]
              },
              {
                "id": "d62de4d4-252d-409e-85ec-c321afffca83",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "7ebc0daa-2464-4cdc-b601-1a9c46896c43",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a243a958-7652-4469-a2fd-fd0b078e1fe3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "35b37687-d57c-4755-adbe-a122b8f1e7da"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "95df9c67-e238-49da-9575-1d201c6f2b91",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9a1f2069-151b-4006-8697-7187a6c0e23c"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "33118efd-047f-45d2-8664-8aa9cc52c082",
            "name": "Positive Testing",
            "item": [
              {
                "id": "71081838-99ac-4bc4-bdaa-53573b8044ae",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "280e1a66-0114-4aab-bc8f-f06fcfb33460",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "6d1d7c14-255c-4d1d-835d-57f7dba733d2"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "2aa99045-a6ea-4187-a478-022168e1e148",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "bfc53d82-0a73-4e80-9a7c-dee02e2de8f7"
                    }
                  }
                ]
              },
              {
                "id": "0e9b83b6-615b-48d4-ac6c-f67acacdd0df",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "1396b58a-c31c-4eb3-9085-3b3df3ecc65b",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "e498a953-9c59-45aa-ab68-1c46ea23db41"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "72b33673-50f3-40a2-be2d-44bf980ce962",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "733b4ef1-27a0-4089-9478-a18418f5d09a"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "b0b40c2f-7bd8-4380-9250-0453f7970a79",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "395f2063-d208-4abd-b9ce-5eeb9a6fa860"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "e9e73f62-bc56-4c28-841e-69e058841c10",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "633e176f-f46f-49e1-b191-84bcb4e36f0d"
            }
          }
        ]
      },
      {
        "id": "f10df9d9-bb36-4cd5-8f8a-ba253df04be2",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "b8d66e0d-f869-4c93-a909-1f39d0191d6c",
            "name": "Negative Testing",
            "item": [
              {
                "id": "291c7bc0-3e4f-456b-b0fa-d249027bca39",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "97ff54be-5d5d-4b15-9579-06e97a5d18c5",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6dd89748-e185-44d2-9190-4fa80bd145b9",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "7f6361fc-aef1-40a8-a2f1-fa8e6c6fbaee"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b4f457bf-25f1-476e-8798-45590c2ca006",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "35112264-f971-40bc-8ae9-8bb0f21f8e97"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "ecf4d5d4-a521-4cb6-a474-f5a582b39024",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "9904a167-b269-4fbe-ab16-b00662acec1a"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "7e2f79d1-66e5-4e4f-823f-05afc8f1a4f5",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "84d88d11-de3e-4577-9f42-2558ae731bc6"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "bbbb67f6-ca75-4721-be0c-c6c385f0dcec",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "dc8f7732-7f61-47fa-b3fe-702654917c49"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "1b97707e-06ed-4b92-84f2-08e0bebc4e19",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "beb18326-2d50-418d-8fe6-f57326ffe5a8"
            }
          }
        ]
      },
      {
        "id": "fb133a70-c400-4c71-a59e-5fd461fde1ce",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "b420f72a-7aae-4b9d-871a-d9f18ff16813",
            "name": "Negative Testing",
            "item": [
              {
                "id": "914f33ec-43ab-4c6d-9bab-c3b0887434fb",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "db501082-6198-44dc-915e-d4b560e56b03",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1c390ffc-caa0-4747-9405-8e8dac14b7de",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d05c86cd-f313-4966-a432-b1aa167c84d3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a510886d-145c-4d94-85b7-4df9268c8ac1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "79c633b4-eec0-48f4-8b0f-ae7bee6facee"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "65c7814e-b44b-4aa9-9260-88d6e513baa9",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "cb191847-f38b-4aab-ba89-fe0b9f7a0490"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "1c4e5d4f-9199-4338-9411-a1549ab2d8ea",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "62dfa855-8d23-4e7e-85b8-5216573432d8"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "1b2d0527-cab4-4d62-837e-90f6c41d843b",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "6fa54956-4a4d-4b52-b8d8-99495f29b002"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "e13a9870-5700-4e30-96ce-084466cff4a2",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "c4b98482-5324-425f-b503-621470fa1f34"
            }
          }
        ]
      },
      {
        "id": "2e90036a-ec41-4f81-b017-29ce8dcd373c",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "7bffb30f-917f-4c36-8d1b-d93ae2211bbc",
            "name": "Negative Testing",
            "item": [
              {
                "id": "7b4eb53b-a4d3-4d3a-ae51-34f6149a9203",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "c42bbe47-d3ac-4b38-a2a4-74d0bb1584b8",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7a7cc8d4-4436-4b52-a349-af725e16bba2",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "44c663af-8c7b-43ad-9187-2edade86f646"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "af701f97-c463-4e69-9bb4-8d5d6224741f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "c6609f8e-638e-478e-b633-968f7b77d7be"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "3076d8b5-c8d3-47bb-838e-f102fd543bda",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "6225f55b-a864-4c31-a96b-0fdc8fcc2f02"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "ded45399-19b9-4b00-80a9-06cfdb2fd4d4",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "32f721d4-205e-4eba-b153-9c589520add9"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "16cac6a0-30d7-4198-bb81-d4c5fb1e5610",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "072c1110-feda-41fd-bfaa-015525d651f8"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "2670fe30-1c5f-405b-a47f-247b5dc8fd2a",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "508e6b5a-4770-4d95-a600-f0449e9efaf1"
            }
          }
        ]
      },
      {
        "id": "dd7eec2d-3e36-4cda-aee3-cb955efac02a",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "e00f58ee-2f85-409c-b766-1c743ec407f3",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "c3a6d203-31ac-4c27-b195-83deb4871287",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "47248a4e-d7c7-49ed-afb8-a0fe598c891e",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "20b68572-f885-4dcb-8064-b1197be202cb",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "9ab43d65-7b39-4c7d-bb32-f0a5e809cdad",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 2091,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 285,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 573,
        "pending": 0,
        "failed": 26
      },
      "testScripts": {
        "total": 1050,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 1041,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 11.74736842105263,
      "responseMin": 5,
      "responseMax": 212,
      "responseSd": 20.342661983712073,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1704674246287,
      "completed": 1704674258762
    },
    "executions": [
      {
        "id": "a38f299d-2f2c-4f81-a242-125074d7ddf4",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 283,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "7034555d-8591-4d15-8915-f16816820604",
          "httpRequestId": "53032bbb-7d95-4e89-bee8-707bdbc0ed85"
        },
        "item": {
          "id": "a38f299d-2f2c-4f81-a242-125074d7ddf4",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "35b0250f-233a-47a8-99f6-384a2559ae5c",
          "status": "OK",
          "code": 200,
          "responseTime": 41,
          "responseSize": 0
        }
      },
      {
        "id": "9ffde60c-c136-4d18-a2f2-43709f346491",
        "cursor": {
          "ref": "cf4013be-e28c-4915-931b-b91c26e7322e",
          "length": 283,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "78021c9d-926c-4621-a0de-2207600c1ed5"
        },
        "item": {
          "id": "9ffde60c-c136-4d18-a2f2-43709f346491",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "ab982acd-37e6-4d16-8149-8c1448cfa231",
          "status": "OK",
          "code": 200,
          "responseTime": 5,
          "responseSize": 0
        }
      },
      {
        "id": "f1d34134-6f80-417e-ac26-6f1811f382e6",
        "cursor": {
          "ref": "a07fc911-8f3d-40f4-af65-820fcbc93f72",
          "length": 283,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "bee6ae45-ef11-4362-ac7b-0fa74b49f086"
        },
        "item": {
          "id": "f1d34134-6f80-417e-ac26-6f1811f382e6",
          "name": "did_json"
        },
        "response": {
          "id": "80a91fcf-5b67-4a69-a2a9-f255c48e3068",
          "status": "OK",
          "code": 200,
          "responseTime": 212,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "47084ad4-f376-4733-876d-480f77860554",
        "cursor": {
          "ref": "17fddb56-8ff4-4eb2-bd84-286ca4137a29",
          "length": 283,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "c49312d8-b02b-47af-b66f-7ff339af52ba"
        },
        "item": {
          "id": "47084ad4-f376-4733-876d-480f77860554",
          "name": "did:invalid"
        },
        "response": {
          "id": "276e5fea-46bb-46ba-8c19-43e3329a107f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "47084ad4-f376-4733-876d-480f77860554",
        "cursor": {
          "ref": "17fddb56-8ff4-4eb2-bd84-286ca4137a29",
          "length": 283,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "c49312d8-b02b-47af-b66f-7ff339af52ba"
        },
        "item": {
          "id": "47084ad4-f376-4733-876d-480f77860554",
          "name": "did:invalid"
        },
        "response": {
          "id": "276e5fea-46bb-46ba-8c19-43e3329a107f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "78106200-57d6-4df2-b68c-06650d5b9889",
        "cursor": {
          "ref": "08cde2bd-080b-47b7-ab93-d08959c3c682",
          "length": 283,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "639cb156-1ff5-4cd5-81c6-6874fe211c5a"
        },
        "item": {
          "id": "78106200-57d6-4df2-b68c-06650d5b9889",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "36ea161c-8d7c-4f30-ab0d-3a1538a2c27a",
          "status": "Not Found",
          "code": 404,
          "responseTime": 55,
          "responseSize": 221
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b9e54ea4-4aa6-41b8-9352-18596fcb4fd2",
        "cursor": {
          "ref": "84d64ff8-1a52-4c01-a0c0-cc888368f3d9",
          "length": 283,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "8a27aa78-c407-450f-8c92-223c4f1a4e40"
        },
        "item": {
          "id": "b9e54ea4-4aa6-41b8-9352-18596fcb4fd2",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "4d87c2aa-654d-4992-94cf-549540d82a1f",
          "status": "Not Found",
          "code": 404,
          "responseTime": 9,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e637ccac-a4b3-4d4b-9020-434dc089d765",
        "cursor": {
          "ref": "dde04697-f482-48a1-97a4-23d0a6f2e5c0",
          "length": 283,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "225349bc-d20e-4bc6-83d6-ed4e009d9ec7"
        },
        "item": {
          "id": "e637ccac-a4b3-4d4b-9020-434dc089d765",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "a316c6f6-c079-47a0-8e85-0bf2207cf396",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 9,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "00eec897-ce20-46a8-9372-d40162d349cd",
        "cursor": {
          "ref": "2db00ee9-3e13-4f04-96fa-31e15b473f71",
          "length": 283,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "5df612e1-ea26-41f9-9723-b0fc726d9e6d"
        },
        "item": {
          "id": "00eec897-ce20-46a8-9372-d40162d349cd",
          "name": "identifiers"
        },
        "response": {
          "id": "22531323-60b4-4ef2-b58c-ef1ba5bb9826",
          "status": "OK",
          "code": 200,
          "responseTime": 45,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "11f70918-0799-4824-a5f1-6a33e21c101d",
        "cursor": {
          "ref": "569846fe-915a-4d16-b1e9-b409f6421219",
          "length": 283,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "06db8d19-6d91-4935-acb0-af4978f58a87"
        },
        "item": {
          "id": "11f70918-0799-4824-a5f1-6a33e21c101d",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "8cc67f63-734a-4b40-b7e0-cb9b9610ea46",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 217
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "baa07b68-9d81-4e59-8d25-c781a71b88a7",
        "cursor": {
          "ref": "e00756ee-7f05-4be9-be44-fbb7c991a4e4",
          "length": 283,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "44e78052-60be-45c1-b3dc-c8066de8caef"
        },
        "item": {
          "id": "baa07b68-9d81-4e59-8d25-c781a71b88a7",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "79c1fb3b-9db9-4044-acda-b46c811f90db",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ed9e2c2-670d-475d-aa53-c26511ffa168",
        "cursor": {
          "ref": "d5f198a5-b2f6-447d-bfde-8369f48b374d",
          "length": 283,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "ea98125f-4aee-45e1-817f-0439deff1c38"
        },
        "item": {
          "id": "5ed9e2c2-670d-475d-aa53-c26511ffa168",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "eabb75a2-328c-431f-8e69-e981038f1335",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "56142288-84c5-47a7-b469-aed62a09a83f",
        "cursor": {
          "ref": "43ac861c-42a1-4cfb-a8ec-8091acd4afe3",
          "length": 283,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "3f8981f6-0d8d-450e-946e-e98b4d4d704c"
        },
        "item": {
          "id": "56142288-84c5-47a7-b469-aed62a09a83f",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "7cb722ce-7edb-4e7a-96dd-8176487f258f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7b0de0f7-8a37-4632-81ae-73062b34a246",
        "cursor": {
          "ref": "27619f15-7879-4885-a09a-769571421233",
          "length": 283,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "1bdc7bc6-0219-4cdd-a72a-2f890054207d"
        },
        "item": {
          "id": "7b0de0f7-8a37-4632-81ae-73062b34a246",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "a3116ede-0abb-4496-9431-01fdf4699252",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "50c745c7-944d-43de-8967-7bb789dcbbbb",
        "cursor": {
          "ref": "ec4bde66-3ba4-4dbb-be6f-a410a93a1daf",
          "length": 283,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "11e56317-0a21-478c-9f3e-59c5b6ad4d35"
        },
        "item": {
          "id": "50c745c7-944d-43de-8967-7bb789dcbbbb",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "444b1bb8-e08b-4228-8c57-9f2ed4fdcaa2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "210890dc-28f0-4d9c-b674-f4fc6c28351e",
        "cursor": {
          "ref": "126784eb-24b1-42f8-bc3e-67f03af71243",
          "length": 283,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "e13380f0-e0b3-4bc7-8aef-958d4ac6bab2"
        },
        "item": {
          "id": "210890dc-28f0-4d9c-b674-f4fc6c28351e",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "4135ac64-9744-4b0c-9760-615240c1bf7f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dd8b01d9-0a65-472d-8b91-8d853f8490f3",
        "cursor": {
          "ref": "701edc9c-2216-483d-bfd4-221b1a0228c9",
          "length": 283,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "43b69c5b-118c-4de2-b9e6-3cd73749b850"
        },
        "item": {
          "id": "dd8b01d9-0a65-472d-8b91-8d853f8490f3",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "5cf19682-41f9-4879-9e0c-12aa65f01e07",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "84edbfbf-ee8d-44b6-a683-239bd7d4d94b",
        "cursor": {
          "ref": "20b1ca27-3c14-4647-8886-db9f77adbe8a",
          "length": 283,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "a01447aa-0e4e-4448-b4ea-deb2297f0056"
        },
        "item": {
          "id": "84edbfbf-ee8d-44b6-a683-239bd7d4d94b",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "0e8f0fd1-8229-4e54-9a8b-644705b5a17e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e6afd61-5fe0-4fda-8f41-fe6b79d5c831",
        "cursor": {
          "ref": "53cff059-10a7-4592-88c2-9f09c5e35c61",
          "length": 283,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "9765fac6-5998-4928-a36b-69fafdd503ab"
        },
        "item": {
          "id": "8e6afd61-5fe0-4fda-8f41-fe6b79d5c831",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "d493f259-7527-4090-891a-259f44c5a4d2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "78236ae1-552a-4a20-a766-2230c7417533",
        "cursor": {
          "ref": "5005fdb5-18b4-41ef-86f7-95974ac60db9",
          "length": 283,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "f15b446d-1d6b-4c88-a6b9-31f0236a729c"
        },
        "item": {
          "id": "78236ae1-552a-4a20-a766-2230c7417533",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "aab4cbab-9c37-4991-b1ca-b3a054efb5f1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1247db51-9941-44b5-80c6-5ca3c4e490f2",
        "cursor": {
          "ref": "478d7478-e97b-4831-9e44-55d343a66577",
          "length": 283,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "f4ea8cb6-a5db-4f8d-9acd-927eb7965432"
        },
        "item": {
          "id": "1247db51-9941-44b5-80c6-5ca3c4e490f2",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "fbafee1f-8ea3-4879-88be-d9f7b6ceb7c7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc6f6386-0bdf-4b0d-b2fe-4c062810a7fb",
        "cursor": {
          "ref": "6b45ef2e-f28c-4350-bb73-446e5d0d8678",
          "length": 283,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "e74f5624-22e5-4c14-9ec5-3c5f27b9d281"
        },
        "item": {
          "id": "fc6f6386-0bdf-4b0d-b2fe-4c062810a7fb",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "1e0a82f0-8efb-4c8d-acbd-3c803d71cdc5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a712a8d-2612-45a9-ad3d-d2b36cd6f59e",
        "cursor": {
          "ref": "6160b579-fb43-450f-84bd-f367f17b6126",
          "length": 283,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "4e49e528-5227-4a7a-8412-503366e2d4ea"
        },
        "item": {
          "id": "6a712a8d-2612-45a9-ad3d-d2b36cd6f59e",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "8b6b9494-37e5-480e-be12-1b80fad241b2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8992df95-8c28-4795-ac6d-6bc3bee0d3da",
        "cursor": {
          "ref": "1a0f1fe6-9c97-49db-acab-fc33623f20fd",
          "length": 283,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "b0b49b94-da11-4988-8640-997bd3b6084b"
        },
        "item": {
          "id": "8992df95-8c28-4795-ac6d-6bc3bee0d3da",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "81a3f3ff-1148-4638-9aa4-0867db46b08c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4c033719-997e-4b1e-9c1e-cab90f14e6db",
        "cursor": {
          "ref": "070cc2db-dcd8-4534-8428-ea7f27ebac3d",
          "length": 283,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "0fb35b31-d814-491e-aaf9-2a000bf7dbef"
        },
        "item": {
          "id": "4c033719-997e-4b1e-9c1e-cab90f14e6db",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "a2b041dc-6395-4354-885b-2de2afe6e7ce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "07c6573d-3350-48b8-a28c-84fbb4bde1eb",
        "cursor": {
          "ref": "e292dde3-8d73-40ab-9726-00d1a632b46a",
          "length": 283,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "abb31a86-9756-471e-93d9-e1ae6e61cb23"
        },
        "item": {
          "id": "07c6573d-3350-48b8-a28c-84fbb4bde1eb",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "67f611a8-e429-4f03-ae57-fb67d692000b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "99aede76-04ec-41c7-99f6-9b4b44e68412",
        "cursor": {
          "ref": "2b34fe4f-4967-4a7e-bceb-4d4c82885dc4",
          "length": 283,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "0a4107f9-bf48-47be-9e63-ad6e626e944d"
        },
        "item": {
          "id": "99aede76-04ec-41c7-99f6-9b4b44e68412",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "00db9512-21fd-42ea-8754-427ac979dc98",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 146
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "29ef9016-ade0-4f43-8fe1-f00957fff263",
        "cursor": {
          "ref": "e8b40a5f-fae7-49d8-a8ee-e2128cc03b26",
          "length": 283,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "8da31a08-ab7c-4762-b4c6-779f293004bb"
        },
        "item": {
          "id": "29ef9016-ade0-4f43-8fe1-f00957fff263",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "e72cbd8f-98bf-487b-bc7a-73c76dbc02ef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "adc0445b-55cf-4378-9515-fd4a83129431",
        "cursor": {
          "ref": "d9ef0586-0c8f-4dca-8c15-7341d0aac0fa",
          "length": 283,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "8032bd6b-56a7-4ca5-ae1d-519235d8ba7b"
        },
        "item": {
          "id": "adc0445b-55cf-4378-9515-fd4a83129431",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "8a0ac995-f7bf-4dee-a114-c4ea51615e94",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a10a72f1-c70d-4d9a-8589-36e4f4dbec5f",
        "cursor": {
          "ref": "327ba165-0fed-44dd-bedb-bcecdfb6b4e5",
          "length": 283,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "42a78f95-916b-4257-bc21-583edb2f9f3e"
        },
        "item": {
          "id": "a10a72f1-c70d-4d9a-8589-36e4f4dbec5f",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "984ec067-7066-4bea-9d73-ee27dddcd05b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ee4f89d1-bd98-45e3-9020-acc8bda6f5fa",
        "cursor": {
          "ref": "a16eb6c0-bcdf-45b1-91db-d125a9141d93",
          "length": 283,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "a887c6e1-0a83-4ab0-82c7-0a15864123f2"
        },
        "item": {
          "id": "ee4f89d1-bd98-45e3-9020-acc8bda6f5fa",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "6b4982c0-f79f-42ae-8065-9418cced87cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2735948c-2e70-4916-9882-206552ee7cb7",
        "cursor": {
          "ref": "dd77339b-6bfe-4b5c-85b5-34c6dbe3f586",
          "length": 283,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "a54b6961-ca13-4e91-a68a-22e133d6e3bb"
        },
        "item": {
          "id": "2735948c-2e70-4916-9882-206552ee7cb7",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "74b3053e-5bf2-4c15-9d61-f04854dd94e8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d199ab0b-4940-4058-b314-6e02f9a662d6",
        "cursor": {
          "ref": "1345b35a-b69b-40a1-81e0-2f9098c33e93",
          "length": 283,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "e30ab663-5691-49a4-bf08-0f4c73c5b4be"
        },
        "item": {
          "id": "d199ab0b-4940-4058-b314-6e02f9a662d6",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "e609fda0-fe8e-4a01-bd1c-4128cc777ce7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cc13b173-3d48-4289-b86f-c2d923c2e4e1",
        "cursor": {
          "ref": "a838bbb2-8a25-4bc7-8c9b-136e0db09f99",
          "length": 283,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "450bfcb7-998c-4f61-9bbc-9c73bc3ed998"
        },
        "item": {
          "id": "cc13b173-3d48-4289-b86f-c2d923c2e4e1",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "2a584e47-3760-4b0b-8543-fd4f02de4046",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f8d1d55e-e84b-4345-878c-d3db3425d2cd",
        "cursor": {
          "ref": "f1961c95-aa83-4ff9-9be8-8200be965d9b",
          "length": 283,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "30725b56-04ea-4190-bd1e-eb3936e9d5d3"
        },
        "item": {
          "id": "f8d1d55e-e84b-4345-878c-d3db3425d2cd",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "212b8591-4ec0-4b19-a1d3-651d706729c7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "85897d36-2b0f-47b2-a3db-6256cbd2f31b",
        "cursor": {
          "ref": "9caa5c95-997e-407c-b364-cf1fee446ef5",
          "length": 283,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "ba71716d-4e3d-4ebf-abcf-2db0e2eb11e2"
        },
        "item": {
          "id": "85897d36-2b0f-47b2-a3db-6256cbd2f31b",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "748d03db-d037-48ad-bb74-a132064ccc9e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e54fb82d-c7a2-429a-96d4-ed7200a312fb",
        "cursor": {
          "ref": "2a47a1fd-5787-42a0-9492-3b1b09b2bb17",
          "length": 283,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "9b81b6d1-39e9-441a-953f-af7eb2bfe50d"
        },
        "item": {
          "id": "e54fb82d-c7a2-429a-96d4-ed7200a312fb",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "b6db02f1-c3b4-40b3-b7c6-65c75b07f771",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "66e1c5e4-ff37-4364-9685-9688a4926e57",
        "cursor": {
          "ref": "81641dd4-c499-4428-99ae-f0b900f736f6",
          "length": 283,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "21602f54-62cb-4386-aa15-0fed4725dd46"
        },
        "item": {
          "id": "66e1c5e4-ff37-4364-9685-9688a4926e57",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "f2277e07-de87-4b7e-a00d-09bdc4ffa52f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3f82755e-de02-408c-aa6c-d9fbcfe20dd1",
        "cursor": {
          "ref": "c1053bf3-29f0-4d92-bd16-acf3044b0550",
          "length": 283,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "20ab2a45-d6a4-41ff-90ac-135ee67c2b25"
        },
        "item": {
          "id": "3f82755e-de02-408c-aa6c-d9fbcfe20dd1",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "703fa017-7f47-461a-9053-36553f5930bf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "61aef979-b3aa-4aa7-9720-d4f8d7d0923c",
        "cursor": {
          "ref": "a26288e3-7c4b-4297-9b30-01ae4cec31bb",
          "length": 283,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "858e36b9-5b0f-4c2c-aa8f-a673a39e5169"
        },
        "item": {
          "id": "61aef979-b3aa-4aa7-9720-d4f8d7d0923c",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "ad1c1d83-7c3f-4981-9fae-fab01b97332e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b5fb073b-979b-47fe-ade1-0b17e208c16e",
        "cursor": {
          "ref": "0a5bb306-f6a5-4d97-b33e-ba7198b613a5",
          "length": 283,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "f91020fd-9fe5-4e3b-9d3c-f7eacebb9ccf"
        },
        "item": {
          "id": "b5fb073b-979b-47fe-ade1-0b17e208c16e",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "2276fbdb-a5a5-4d19-8db6-697c4ebfcf57",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "de1f157a-6607-403f-8a91-5d997d89371f",
        "cursor": {
          "ref": "213e4c3e-dc96-4b3b-bb23-ee10072438b3",
          "length": 283,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "8bf882e2-8495-4ccd-814d-993123b8e313"
        },
        "item": {
          "id": "de1f157a-6607-403f-8a91-5d997d89371f",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "7c97fc3d-3bfe-4da8-9c2e-dc63c7bd7280",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1d471e69-c1ad-4f2f-b837-7bbeae183fd5",
        "cursor": {
          "ref": "71d6dfb0-25ce-4ed4-9ca0-921fcf67cc41",
          "length": 283,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "4bdf718e-af16-448e-8457-2d920595c0bb"
        },
        "item": {
          "id": "1d471e69-c1ad-4f2f-b837-7bbeae183fd5",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "ea66f1c9-048d-4ec8-9f8a-a79f85985268",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c831a83-a771-45bc-83e0-987fe057cc93",
        "cursor": {
          "ref": "aad822c4-e704-4342-ab62-107316008752",
          "length": 283,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "5e9866ad-780c-4cc8-bad0-915229c823c5"
        },
        "item": {
          "id": "9c831a83-a771-45bc-83e0-987fe057cc93",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "0e7a5e0e-1c2a-4c13-bedc-d675d5a29c1b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b28993aa-ff4f-4113-b8ac-77607f9c51b9",
        "cursor": {
          "ref": "3ed5bfab-850f-40ee-a187-39a9907ce365",
          "length": 283,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "6caa2798-a653-49b7-b54f-6e054a0c1be9"
        },
        "item": {
          "id": "b28993aa-ff4f-4113-b8ac-77607f9c51b9",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "92941ea4-2db3-4a26-ab10-07b275beb2ef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:44)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c08e25b6-a3f2-410b-b761-1ce125cd7513",
        "cursor": {
          "ref": "f873f741-3ce4-4099-8362-77dc4245dd12",
          "length": 283,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "f980eda4-4a79-482f-aaea-62f4ae00a083"
        },
        "item": {
          "id": "c08e25b6-a3f2-410b-b761-1ce125cd7513",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "2e8a97cc-18c4-431e-b8d8-2c4dc109428a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "de1a8775-5c44-4992-88be-7138510505b5",
        "cursor": {
          "ref": "f31f0c91-7dce-4f45-a69c-a9368190fde2",
          "length": 283,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "71d39dd9-9433-46be-9a38-10fffd25953b"
        },
        "item": {
          "id": "de1a8775-5c44-4992-88be-7138510505b5",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "65793417-3c28-47d4-9c79-27792f964ca0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e8f97a7f-b21b-442e-b27a-8e1b5f67ccbd",
        "cursor": {
          "ref": "5870b528-71a4-4f9d-83d3-19949b38cae1",
          "length": 283,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "98f7a6b6-d1a2-454c-a050-c01e9ab464a5"
        },
        "item": {
          "id": "e8f97a7f-b21b-442e-b27a-8e1b5f67ccbd",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "040f2ece-34f9-4c3c-849f-b3071dcd63a0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8b6db557-1d1b-4d01-aa1d-8b0ce400a18a",
        "cursor": {
          "ref": "45c2d7fa-a719-4a81-b014-e10cc1df8f08",
          "length": 283,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "cdeb41f0-5aaf-4efc-9e35-ee8d28487310"
        },
        "item": {
          "id": "8b6db557-1d1b-4d01-aa1d-8b0ce400a18a",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "d1825851-c2e8-4900-94d9-b9d85e48de31",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d2bfa4b1-cc81-4e0b-8f59-71da3c40c92d",
        "cursor": {
          "ref": "825ee548-5565-4eb0-b3d9-1bb8826ca109",
          "length": 283,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "e72a86b8-b40b-4ed6-9d2b-1576cd26c453"
        },
        "item": {
          "id": "d2bfa4b1-cc81-4e0b-8f59-71da3c40c92d",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "477768cd-3daa-4f6e-9695-b3c81f215cee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "17dc418f-f0dc-490c-b78a-1b7f59173e0c",
        "cursor": {
          "ref": "03a36238-338f-4d5e-a7a2-1f3739b516d7",
          "length": 283,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "02edaf9a-1d0b-4dd6-b623-da9a00a92eff"
        },
        "item": {
          "id": "17dc418f-f0dc-490c-b78a-1b7f59173e0c",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "c897bcc2-0760-4972-8892-dfc6f1ca4c11",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "625ea9d5-b3e5-4752-8b64-3a58f25efe0a",
        "cursor": {
          "ref": "af3d81cb-5d79-42af-8f38-7a5366b7041e",
          "length": 283,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "79c59ea7-c8dd-4009-8891-b1d7cca1b51f"
        },
        "item": {
          "id": "625ea9d5-b3e5-4752-8b64-3a58f25efe0a",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "900e0d90-c37a-466d-8f78-12ef21725cb1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:51)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "91215f2e-c0bb-4cbf-a105-a56e19dab83a",
        "cursor": {
          "ref": "855e6009-f430-4603-a865-e69d38b8edf4",
          "length": 283,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "a8d5404e-9abf-4c4d-b6cd-c90a4d910277"
        },
        "item": {
          "id": "91215f2e-c0bb-4cbf-a105-a56e19dab83a",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "1a394f10-8f5f-429d-b14e-fbda7bf7b035",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "916911c2-2318-4d97-9297-098cfa6d3061",
        "cursor": {
          "ref": "755e9c3f-f721-4967-a5a4-67467adcff8c",
          "length": 283,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "700b53ad-0509-4469-b146-f6002f2402a2"
        },
        "item": {
          "id": "916911c2-2318-4d97-9297-098cfa6d3061",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "7480445d-af34-4796-b391-60b05a40061c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bbda6f2d-c062-44c6-9f2a-1b25e267f3e6",
        "cursor": {
          "ref": "f53ca21a-fb3e-4660-945a-28dc8325b340",
          "length": 283,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "aac6c05a-5d16-458f-9a6c-7261281a7922"
        },
        "item": {
          "id": "bbda6f2d-c062-44c6-9f2a-1b25e267f3e6",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "a2ba6ccd-254b-4ee8-ad35-1adcfe4a02f8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "912cf0c7-7cf7-481f-9ffd-dd4e074cc2df",
        "cursor": {
          "ref": "161a0910-8a41-4f56-b013-708a75f188c7",
          "length": 283,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "062cf8ec-c71d-4a6b-9d66-bcf829eb719b"
        },
        "item": {
          "id": "912cf0c7-7cf7-481f-9ffd-dd4e074cc2df",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "712a9f7b-2c8f-44be-baff-621d8a9975a6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "74a2a94a-ef7f-4cc2-a396-a0d60f18be6d",
        "cursor": {
          "ref": "d796242b-4d06-49e0-90af-f48dad7929f4",
          "length": 283,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "6ca9157d-c857-42fa-8b58-87069b90f749"
        },
        "item": {
          "id": "74a2a94a-ef7f-4cc2-a396-a0d60f18be6d",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "34e47854-0fad-4938-967b-30a4b1a472c1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5dd1203e-1287-4841-afc2-f33061ba3380",
        "cursor": {
          "ref": "69d03eb6-a545-437c-816b-7c3940e5eb9d",
          "length": 283,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "f6b5250d-4710-42b9-a431-61c13be6883b"
        },
        "item": {
          "id": "5dd1203e-1287-4841-afc2-f33061ba3380",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "4d90dd1f-af8d-4ed3-b913-e047f7467226",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c01e9922-4d18-489f-8823-b1a808804f37",
        "cursor": {
          "ref": "4bc59787-ad6c-4094-9ab8-c67b358dd6ce",
          "length": 283,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "83dc6c91-2e03-44d1-a0b1-a653f0b58c86"
        },
        "item": {
          "id": "c01e9922-4d18-489f-8823-b1a808804f37",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "b65e529e-8dd0-48ac-a633-922463617549",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5e3fed92-298c-4ce5-b427-6815bb8f6917",
        "cursor": {
          "ref": "a60c97d8-ba3c-4718-a6d3-75f0c248670f",
          "length": 283,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "ea1e1eda-a0f6-4d38-97e7-c28dc6727c79"
        },
        "item": {
          "id": "5e3fed92-298c-4ce5-b427-6815bb8f6917",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "6880ae89-0d8a-461e-ad6d-65b166989e48",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0dfac6cf-c23d-4596-9c46-58fd6367c9bc",
        "cursor": {
          "ref": "f645c2ee-bf02-4171-b0ab-879f817534cc",
          "length": 283,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "06f014f8-45ad-4fa3-8ee6-6c8f8190e5b1"
        },
        "item": {
          "id": "0dfac6cf-c23d-4596-9c46-58fd6367c9bc",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "d8a834c6-24e4-4b67-8afe-39586eeb9758",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "44e6d08f-c6b6-4ab5-8985-3cb7963d598c",
        "cursor": {
          "ref": "97c036f1-3565-47d4-b2b0-53c1e603bd09",
          "length": 283,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "782e13e8-e2be-4e75-a2d0-000a9306c5cb"
        },
        "item": {
          "id": "44e6d08f-c6b6-4ab5-8985-3cb7963d598c",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "9f7c9db7-93cd-44a1-a56a-9163d1661884",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "16320bad-c631-43ea-8d97-af65c94db4e2",
        "cursor": {
          "ref": "ba871653-10b5-45a1-8d12-7011f4e5a968",
          "length": 283,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "6a582dd0-4de4-4561-a3ab-6c899f6ee6c4"
        },
        "item": {
          "id": "16320bad-c631-43ea-8d97-af65c94db4e2",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "99538ff6-c1ba-46d9-96ca-fd042e2b71ec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a705bae1-34ca-416e-a2d4-438d0d251ed8",
        "cursor": {
          "ref": "2b5ae947-3e31-4ecf-93eb-fe337217e476",
          "length": 283,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "d25c1af6-3d70-4124-a715-4a0c14a20c28"
        },
        "item": {
          "id": "a705bae1-34ca-416e-a2d4-438d0d251ed8",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "fac593a1-46d3-4307-bddc-9b62a9f13a82",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "15f9e581-5ba1-40ba-8a4e-e2c543b28d72",
        "cursor": {
          "ref": "012e7f0e-f5a6-4f93-b9b3-2529126046dd",
          "length": 283,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "960601ca-3738-4306-b100-c6ea4a97edca"
        },
        "item": {
          "id": "15f9e581-5ba1-40ba-8a4e-e2c543b28d72",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "df9fc897-1ac1-46a0-bb91-ce493ee01d39",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 144
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a7b8bbfa-f426-4ffd-9bc1-0af43879245b",
        "cursor": {
          "ref": "7bbf85a7-3a03-479a-9ba9-aa7d8b28034f",
          "length": 283,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "82c72732-488b-4e17-aa55-14c452a1ef53"
        },
        "item": {
          "id": "a7b8bbfa-f426-4ffd-9bc1-0af43879245b",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "71e0364a-d641-4b66-a453-263589f136ab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a1c6e89c-b6fc-4867-af52-e456bf723aff",
        "cursor": {
          "ref": "2f6b891e-9681-4cb5-86c0-241089e572f2",
          "length": 283,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "8ccc927d-d4a1-48c7-a683-e1dbc694f37b"
        },
        "item": {
          "id": "a1c6e89c-b6fc-4867-af52-e456bf723aff",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "46a67122-17f1-47f1-8d91-2ffd9e1ac951",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "94199818-17b2-452f-86ad-7b04ccf4b915",
        "cursor": {
          "ref": "b4e7ba63-8dd8-4554-80f3-ef60c6f3ab07",
          "length": 283,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "a848729b-3000-4bc3-9dce-92082e3352e7"
        },
        "item": {
          "id": "94199818-17b2-452f-86ad-7b04ccf4b915",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "5ccd9d8c-267c-4996-8a8a-2f9a71fe45ec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7a01bd10-8924-4e36-946d-5a2bfb090625",
        "cursor": {
          "ref": "4f6c40a5-463e-41b9-8986-cdc0923f40fc",
          "length": 283,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "48aaec67-1d4c-4edc-967c-6cb685e1482e"
        },
        "item": {
          "id": "7a01bd10-8924-4e36-946d-5a2bfb090625",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "b33327b1-6bbb-42dd-be45-9b5db8fd47cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "46efed84-282b-402d-ad78-be7c25fd5196",
        "cursor": {
          "ref": "4d804582-198b-447e-bcbe-75478ca8cb35",
          "length": 283,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "73ea608f-dcb5-444b-a974-599a08976402"
        },
        "item": {
          "id": "46efed84-282b-402d-ad78-be7c25fd5196",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "1de3ea66-df92-4b24-80df-64ba4dcdec7b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c94e92a-fe83-43a6-b99f-4471c687a126",
        "cursor": {
          "ref": "50360f0c-1e3c-4c2a-ac40-687374cb5246",
          "length": 283,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "95bb2ff6-6c5c-4f22-b7ae-9f13c0ca8a81"
        },
        "item": {
          "id": "0c94e92a-fe83-43a6-b99f-4471c687a126",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "c3037c16-2339-4910-ad8f-cbd36f0d8f17",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "937bd616-48f6-41c4-a017-442aa6926cc7",
        "cursor": {
          "ref": "e9917b82-f6e1-461c-8d21-06c386deaff8",
          "length": 283,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "bc4ce905-b03f-4532-990b-591f84c76463"
        },
        "item": {
          "id": "937bd616-48f6-41c4-a017-442aa6926cc7",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "521b8c94-cee0-4d28-8609-2d1fca622c7c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 596
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "143939c9-07ce-46ce-be9c-d6c7a9b12226",
        "cursor": {
          "ref": "da1123fa-11fd-42a2-a41f-52b01777a868",
          "length": 283,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "b60b6f66-dd60-425d-b187-363630449c38"
        },
        "item": {
          "id": "143939c9-07ce-46ce-be9c-d6c7a9b12226",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "5be01e3f-bd9b-4c57-9f67-c98569ad5e62",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 595
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "933939e1-e951-42b9-b9e0-6dd5e3b5fc95",
        "cursor": {
          "ref": "7f381b96-ce1a-4c7e-96e1-635d67f01b3f",
          "length": 283,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "11a722fa-db34-4e83-967c-f297f639810a"
        },
        "item": {
          "id": "933939e1-e951-42b9-b9e0-6dd5e3b5fc95",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "19ec8ab5-3db2-4f3d-9af3-46f7182c538c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 597
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8f68f0c4-fc86-41bd-b43e-b695cb18c88c",
        "cursor": {
          "ref": "16d01b00-f7e4-4ca0-9def-27628445148a",
          "length": 283,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "d812d483-6cb2-411e-8f1e-0c486b50cf0a"
        },
        "item": {
          "id": "8f68f0c4-fc86-41bd-b43e-b695cb18c88c",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "180b5767-a303-4276-9f6b-6a8db7a24aa5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe213316-7b9f-457b-bb6c-662a57615a4e",
        "cursor": {
          "ref": "7deffc63-b225-4619-a824-3bca2f32108c",
          "length": 283,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "b254e1b0-20b5-41b9-a673-e14a7df77e74"
        },
        "item": {
          "id": "fe213316-7b9f-457b-bb6c-662a57615a4e",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "537601ed-704a-450c-aa9a-0d13c25e192a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 597
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bbed1a02-be91-4836-bc1f-daeb638379b4",
        "cursor": {
          "ref": "9f7e9959-bbc3-4241-bca2-4144b056f999",
          "length": 283,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "b49c80d4-d5c5-4557-95ff-61b5349ed66d"
        },
        "item": {
          "id": "bbed1a02-be91-4836-bc1f-daeb638379b4",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "a1acb6e6-b628-4dfa-9dde-6d316cc98af3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d3634b25-5b7d-4739-87a7-9c131fb41474",
        "cursor": {
          "ref": "5614c518-7f39-4dc5-a2a7-cf163bf6959e",
          "length": 283,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "7bddcac1-ebd1-492c-a977-fa4d696b6003"
        },
        "item": {
          "id": "d3634b25-5b7d-4739-87a7-9c131fb41474",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "b17e3257-91ad-4ea4-9cfd-83562e889d90",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 284
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3c0d6b37-79d6-4d90-8c1b-0537dcf177c2",
        "cursor": {
          "ref": "4195b046-5765-472e-b619-a52cb40ae10b",
          "length": 283,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "d517ebb4-d102-4a29-8f44-18712234362e"
        },
        "item": {
          "id": "3c0d6b37-79d6-4d90-8c1b-0537dcf177c2",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "b4245145-ebcb-43bf-9432-8187e1ed4e85",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6158866c-7469-4383-8a13-f17e9a815696",
        "cursor": {
          "ref": "e856a0b8-6647-47c0-aa12-71cf1940f959",
          "length": 283,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "d1ddfb73-275e-425f-9928-a6b2746416bf"
        },
        "item": {
          "id": "6158866c-7469-4383-8a13-f17e9a815696",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "7cb8500d-f081-4ef5-b910-ab7edb4b22be",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "44a5cd38-0612-4c84-8b13-895ec12c8311",
        "cursor": {
          "ref": "4d49e931-cfa1-4044-9650-b87b61f247f6",
          "length": 283,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "ac180e91-1585-448e-a93f-fa00df6feecc"
        },
        "item": {
          "id": "44a5cd38-0612-4c84-8b13-895ec12c8311",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "a76bf7a5-58c3-4a8b-a36f-13ba3e936161",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aced3a10-5db5-4e09-9eee-443e3f538a10",
        "cursor": {
          "ref": "df8e405f-4d6b-42ed-a8c8-00707119ebfa",
          "length": 283,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "126907f7-4eed-48bb-aeb1-96d211769fad"
        },
        "item": {
          "id": "aced3a10-5db5-4e09-9eee-443e3f538a10",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "707de785-7cb6-449c-9699-6692462bbf65",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f2947a87-3deb-415d-8bb5-9bc9c9fcf176",
        "cursor": {
          "ref": "5f1dd369-1de7-4078-a4df-d55bed924d0e",
          "length": 283,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "6e99e5dc-68bd-4100-bfbb-df529952d56c"
        },
        "item": {
          "id": "f2947a87-3deb-415d-8bb5-9bc9c9fcf176",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "c59376b4-007a-4cec-acc5-bd4a5960b5a3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e7a4080e-fe10-4405-99c4-2d2f25fc2946",
        "cursor": {
          "ref": "c334a25e-ce5c-49ed-8839-24b96681e550",
          "length": 283,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "17e71498-db95-49ef-a0f7-02e399a77c07"
        },
        "item": {
          "id": "e7a4080e-fe10-4405-99c4-2d2f25fc2946",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "6de77ed3-5e3f-487a-bd8c-eae53aa0fa60",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 355
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "12613d39-53dd-4aa6-be70-ba7b7fb1d75c",
        "cursor": {
          "ref": "1adcfb04-67c8-46c1-a241-06ee2979bbaa",
          "length": 283,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "9f8b3d29-1f88-4242-a79f-d18a53a34b8b"
        },
        "item": {
          "id": "12613d39-53dd-4aa6-be70-ba7b7fb1d75c",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "acca2c05-af85-4784-bc4e-4d336876caae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 305
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d2bf34fb-0f8a-4bf0-9136-1d767d27386c",
        "cursor": {
          "ref": "8b8425f6-aa54-46b6-a874-d9fdbd411568",
          "length": 283,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "2068b1db-2295-4ebc-bd54-022f03b97cb5"
        },
        "item": {
          "id": "d2bf34fb-0f8a-4bf0-9136-1d767d27386c",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "0b9400aa-f025-40de-92e0-d4f00668db27",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f33a8cb6-13c7-443d-a648-59a89492f0f4",
        "cursor": {
          "ref": "54437d3f-b80b-4798-b1bb-12e7a7bd7e09",
          "length": 283,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "ea62f087-4a49-4f9b-a4e5-a41460fdf239"
        },
        "item": {
          "id": "f33a8cb6-13c7-443d-a648-59a89492f0f4",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "253bbb4a-1889-4005-a4e9-534b2ac5c14a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6120b5a5-bb76-407b-b2b0-ac24806e11f2",
        "cursor": {
          "ref": "b87a7c28-5fc7-4e66-9d11-b225637f4753",
          "length": 283,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "06e84c1e-8628-4181-b6a4-d62c66d279c0"
        },
        "item": {
          "id": "6120b5a5-bb76-407b-b2b0-ac24806e11f2",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "d1197423-f2f9-4324-905f-e53315303131",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1fa3b4ff-9870-4c63-98d3-45899e6c2d73",
        "cursor": {
          "ref": "041d39e4-085b-4b03-bfe4-b369c0c2c563",
          "length": 283,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "1cde55dd-d5b4-41d0-8692-9accd66d0c5b"
        },
        "item": {
          "id": "1fa3b4ff-9870-4c63-98d3-45899e6c2d73",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "e0575152-4af8-4cf6-a24a-ac433ff86fe1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 361
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b8257f22-5c7d-4a90-9af0-4f883b8ec51e",
        "cursor": {
          "ref": "a1986805-d574-463e-8eb4-2100cea0eabf",
          "length": 283,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "7dfa90c0-517a-4eee-8b6e-68e492238dfa"
        },
        "item": {
          "id": "b8257f22-5c7d-4a90-9af0-4f883b8ec51e",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "bf465c6d-c681-43a9-bac5-6840ae327d65",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 402
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7178eb94-421e-4238-aa2b-7758f58180a2",
        "cursor": {
          "ref": "6be3e50a-2449-4c4a-bb96-85ca2bd2c7d7",
          "length": 283,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "199d7235-1b44-4117-8dca-3b9110319f8a"
        },
        "item": {
          "id": "7178eb94-421e-4238-aa2b-7758f58180a2",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "30556ae1-baf8-4074-8d87-dc93f858f7da",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 401
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1bede5fa-3991-40cc-9681-dc0d331806e2",
        "cursor": {
          "ref": "e00b4569-fda7-4d46-b532-0d1b1777e23c",
          "length": 283,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "12f44baa-2917-445e-8d04-1906c7a5dead"
        },
        "item": {
          "id": "1bede5fa-3991-40cc-9681-dc0d331806e2",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "85217ae2-20ab-4202-8fe0-91bfa2958567",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7ff1f0a0-e28d-4f9d-8e9d-35ad1a065bf9",
        "cursor": {
          "ref": "ea6c3e6a-68a8-42b2-971e-993d73d95965",
          "length": 283,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "3d66990c-8b17-4598-ad76-f2756a97f4a1"
        },
        "item": {
          "id": "7ff1f0a0-e28d-4f9d-8e9d-35ad1a065bf9",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "4ac13cc0-6eb0-42d4-aaab-94cac69e1880",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 220
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6573da8e-dac0-422a-9493-13874e92b874",
        "cursor": {
          "ref": "0e22d6fc-342e-431e-849b-2d3d5a61e6a5",
          "length": 283,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "e46df544-c5ed-4b0e-8e85-2079e7ab40dd"
        },
        "item": {
          "id": "6573da8e-dac0-422a-9493-13874e92b874",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "011cd56d-2596-4fd9-9f45-3e61bf20edc4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "efc184cf-c168-42b2-9052-73ee09b3d7c0",
        "cursor": {
          "ref": "b65c70c4-1f57-4be2-92a8-62edb796b868",
          "length": 283,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "4afca8c8-a674-48e8-87b9-9937263d0aec"
        },
        "item": {
          "id": "efc184cf-c168-42b2-9052-73ee09b3d7c0",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "363ae877-7b18-4c73-bf42-a5a2eb31b769",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "99dcf078-5b67-4b02-9939-baea05d13e3a",
        "cursor": {
          "ref": "114608d3-0a10-494b-8647-706146162077",
          "length": 283,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "71191595-7eb7-47e5-8b52-ca65f70a3507"
        },
        "item": {
          "id": "99dcf078-5b67-4b02-9939-baea05d13e3a",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "6604ca52-408a-4726-b186-fdaa16d38ef9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 301
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a9b423d3-0606-4f7c-a566-26b2fb48e07c",
        "cursor": {
          "ref": "acfc3106-df72-43c1-9947-4c6c7c51d3d4",
          "length": 283,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "66deb0c1-e94b-4137-86d0-d5f51d55b862"
        },
        "item": {
          "id": "a9b423d3-0606-4f7c-a566-26b2fb48e07c",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "e9b9b01b-9d5e-44ee-98c5-248d8e3eb052",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "25c6bc94-a367-4d78-92fb-0cbbbc18f550",
        "cursor": {
          "ref": "d0a0309a-594f-4653-a19b-92bbbdc13a51",
          "length": 283,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "4b924d50-ebf1-4d64-8b14-c6f7d5e99a06"
        },
        "item": {
          "id": "25c6bc94-a367-4d78-92fb-0cbbbc18f550",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "2a5ec475-2180-4739-927f-307068bf36d0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a8780643-83c3-4d9f-bff7-e38b28bb9078",
        "cursor": {
          "ref": "b63410d3-25c6-430d-b261-0ca93b09f70e",
          "length": 283,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "3b3bf228-fcbc-4412-9200-42c3273cfcae"
        },
        "item": {
          "id": "a8780643-83c3-4d9f-bff7-e38b28bb9078",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "2b634c47-1aa0-4a80-ab50-e6d35fdb2dc1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d86eb49e-a004-4585-8780-720234aa4d64",
        "cursor": {
          "ref": "24490fb6-ae4c-489b-b7c9-b8cb4468d665",
          "length": 283,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "78fb0a6c-9159-44d0-8eab-c42eedb36918"
        },
        "item": {
          "id": "d86eb49e-a004-4585-8780-720234aa4d64",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "3e691860-d546-41ad-b998-6fdbe491e74f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f8c53428-9300-4935-86de-23b71efe0598",
        "cursor": {
          "ref": "f712b893-daf8-461b-850d-dce19b0a915f",
          "length": 283,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "92d42e83-9a5b-4aea-bcf1-e1687f9cdd40"
        },
        "item": {
          "id": "f8c53428-9300-4935-86de-23b71efe0598",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "0e60159e-6ee8-4ea6-b889-dcc145be6be6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e7b2ecd2-5d56-430b-b132-c7d212a4fde1",
        "cursor": {
          "ref": "e282f6c0-9aa7-42ff-8e23-044d4a04a589",
          "length": 283,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "47f150c8-cc81-4f2b-91bf-b62a88ec25a5"
        },
        "item": {
          "id": "e7b2ecd2-5d56-430b-b132-c7d212a4fde1",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "a896d839-90b9-4d45-b943-ce51b37a92fb",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 9,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9295a445-cde2-4709-8495-edac997eea25",
        "cursor": {
          "ref": "2d0e8f69-a18d-411c-9a8c-182e354a6af2",
          "length": 283,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "e617abdc-012c-4807-80d6-59bc379a82f4"
        },
        "item": {
          "id": "9295a445-cde2-4709-8495-edac997eea25",
          "name": "credentials_issue.credential.issuer:dup"
        },
        "response": {
          "id": "ec3f9a88-5d1c-4947-8b6d-6cc79e80b0d6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:102)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 1,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:2:102)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:3:102)"
            }
          }
        ]
      },
      {
        "id": "f22cfc35-9535-4073-94c4-fb7875ee32c4",
        "cursor": {
          "ref": "4ae22f0e-b63e-4cb7-a0cf-b3810d387880",
          "length": 283,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "45a70579-04ff-4406-8b2a-ed667355fd5e"
        },
        "item": {
          "id": "f22cfc35-9535-4073-94c4-fb7875ee32c4",
          "name": "credentials_issue"
        },
        "response": {
          "id": "7f84839d-0558-4165-9bcf-aa52e5600108",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:103)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:103)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:103)"
            }
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 3,
              "test": "response issuanceDate matches request credential.issuanceDate",
              "message": "Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:4:103)"
            }
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 4,
              "test": "response proof.created is close to 'now'",
              "message": "Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:5:103)"
            }
          }
        ]
      },
      {
        "id": "d81b6b29-6ab1-449a-83f6-784e82b97d5d",
        "cursor": {
          "ref": "d55b2997-d805-463a-bc5e-9ed11dc2b922",
          "length": 283,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "2b7d751f-8ff1-4013-9c53-a182bd5e29e7"
        },
        "item": {
          "id": "d81b6b29-6ab1-449a-83f6-784e82b97d5d",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "4ee7f4f5-8f0e-4791-a4f6-d15d059c0217",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:104)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:104)"
            }
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response verifiableCredential.id matches request credential.id",
              "message": "Cannot read properties of undefined (reading 'id')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'id')\n   at Object.eval sandbox-script.js:3:104)"
            }
          }
        ]
      },
      {
        "id": "2ac0d452-3c9d-43e1-a6a8-d83188d66588",
        "cursor": {
          "ref": "5598ecb4-004d-49c1-8f07-7ad16c424d90",
          "length": 283,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "4b5702a1-ef90-4dfd-a699-68a82274710e"
        },
        "item": {
          "id": "2ac0d452-3c9d-43e1-a6a8-d83188d66588",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "ee71942c-f4be-40d2-8b7c-a01262d955e7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:105)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:105)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer.id",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:105)"
            }
          }
        ]
      },
      {
        "id": "9a45b2cf-46e0-4174-963c-edb23b0c2f99",
        "cursor": {
          "ref": "a3159d80-ee1f-4c7d-b9c6-96334292d251",
          "length": 283,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "924123db-c8fe-4b93-89ee-336b73fc04ac"
        },
        "item": {
          "id": "9a45b2cf-46e0-4174-963c-edb23b0c2f99",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "52ed4901-ffb8-476e-9566-9ec87d73589d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:106)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:106)"
            }
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response credentialSubject.id matches request credential.credentialSubject.id",
              "message": "Cannot destructure property 'credentialSubject' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'credentialSubject' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:106)"
            }
          }
        ]
      },
      {
        "id": "f5703e23-0b8a-4e9d-8825-e7cdd2d0c39d",
        "cursor": {
          "ref": "f07f92df-bd74-4c4b-8997-c6f9d910391c",
          "length": 283,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "72568c9e-8f37-4a54-850a-a8a34b834edd"
        },
        "item": {
          "id": "f5703e23-0b8a-4e9d-8825-e7cdd2d0c39d",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "85b32ade-0384-4450-ac5c-9535d274cd0b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:107)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:107)"
            }
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response proof.created matches request options.created",
              "message": "Cannot read properties of undefined (reading 'proof')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'proof')\n   at Object.eval sandbox-script.js:3:107)"
            }
          }
        ]
      },
      {
        "id": "d7bed5c3-8096-4d69-8d33-31a8540bf2dc",
        "cursor": {
          "ref": "72f1d590-88a4-4583-9acb-ef0d37b7a083",
          "length": 283,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "60c2da74-c21a-46f9-8287-e100203bbc35"
        },
        "item": {
          "id": "d7bed5c3-8096-4d69-8d33-31a8540bf2dc",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "2da5b5c0-abf5-4531-9f99-3cb7163a062d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:108)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:108)"
            }
          }
        ]
      },
      {
        "id": "4849a8d7-ad24-44f2-8236-0bc3a3dcf38a",
        "cursor": {
          "ref": "70281659-c536-4c82-8ac5-bef1439bdab8",
          "length": 283,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "d45ddfb0-904e-4f0f-b5e5-589ccd783d3c"
        },
        "item": {
          "id": "4849a8d7-ad24-44f2-8236-0bc3a3dcf38a",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "d78acfd8-96ef-4388-8426-dace1b611d47",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c38bf7c-439f-4c7e-bff9-8db8199df6e9",
        "cursor": {
          "ref": "bb66ed03-7f73-4033-9c57-22e28ba8a2ab",
          "length": 283,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "ff98f7c7-4876-4c79-b05c-1615b73c1f24"
        },
        "item": {
          "id": "9c38bf7c-439f-4c7e-bff9-8db8199df6e9",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "f21eadea-1922-4014-a486-ec93b7035fbf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 307
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f86a4f89-cff8-4458-9cc2-70a4a0e297bb",
        "cursor": {
          "ref": "da9cae9c-2e05-4459-be55-acc411924213",
          "length": 283,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "defcccb1-c516-4255-8eec-cfe82a72673f"
        },
        "item": {
          "id": "f86a4f89-cff8-4458-9cc2-70a4a0e297bb",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "cd6e3339-0669-4a67-b556-2f1f5068617a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 306
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "793c6825-9b46-43f4-9941-4863600d811f",
        "cursor": {
          "ref": "e6929620-f7b5-4bbf-bf64-cbf0b63e7985",
          "length": 283,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "523fbfdd-6f6e-4c28-b67b-c4ad0c0a23d2"
        },
        "item": {
          "id": "793c6825-9b46-43f4-9941-4863600d811f",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "37d8037c-902b-43af-9581-2867bf87185d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b53943e7-4115-4ecf-a203-bcba3794b736",
        "cursor": {
          "ref": "eda9616c-694d-4630-81f2-c65cb471ac4e",
          "length": 283,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "405e4d51-4b72-43d4-8e73-86befbca614f"
        },
        "item": {
          "id": "b53943e7-4115-4ecf-a203-bcba3794b736",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "25926d8c-77e5-427e-b6f8-bdb3414585f8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f45a5a95-f1f4-4dc8-9684-c3f98fe50cdc",
        "cursor": {
          "ref": "5312fb8b-ac13-4c33-b349-a49861951eca",
          "length": 283,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "064abbcf-074d-442f-a3b8-217e746ab9af"
        },
        "item": {
          "id": "f45a5a95-f1f4-4dc8-9684-c3f98fe50cdc",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "5d6a9a31-8ce2-438b-b340-e8d659022bf4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f36293e4-b5c7-4156-bdee-0c87f8bb6e85",
        "cursor": {
          "ref": "f8ce576e-567e-4c96-8e9f-2c71079850d2",
          "length": 283,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "38376d4e-cf6f-431d-b359-609e1de7c474"
        },
        "item": {
          "id": "f36293e4-b5c7-4156-bdee-0c87f8bb6e85",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "c40705bb-1f28-48ec-87ae-e0eb4fec588c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "15c13936-26fd-45ec-aeb0-d6b681af7b87",
        "cursor": {
          "ref": "b81996fe-3452-4059-b6e2-6c3248fed576",
          "length": 283,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "44e947a6-42f9-4fbf-9c74-92fd656cfb29"
        },
        "item": {
          "id": "15c13936-26fd-45ec-aeb0-d6b681af7b87",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "f6b4cf93-3ea4-4f1e-bb25-282507ffa47b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 334
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3670f2ab-975c-4095-a802-075d07fe5318",
        "cursor": {
          "ref": "35919d60-9667-4800-85f0-fcbc5f228361",
          "length": 283,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "b4b076f2-2e77-4e3d-b298-0f7ced0f95af"
        },
        "item": {
          "id": "3670f2ab-975c-4095-a802-075d07fe5318",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "886a3b80-7c40-4851-a2e8-d304c99a22af",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a3458e3-7f5d-429d-bbe6-475e9a254be4",
        "cursor": {
          "ref": "a9e80d20-c8a7-41eb-9cea-9fee0565706f",
          "length": 283,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "b372c329-0bc5-4763-8494-6743f14d4e3d"
        },
        "item": {
          "id": "5a3458e3-7f5d-429d-bbe6-475e9a254be4",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "68ce9800-bd9a-4ee8-a33c-f86ba10512fc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0601aeac-c277-4a2e-bcbe-bb3de724883e",
        "cursor": {
          "ref": "f7b57abf-a99a-4e90-9735-e11528ef42cd",
          "length": 283,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "b28b692e-b4df-4dc5-9691-0815d23c8cbb"
        },
        "item": {
          "id": "0601aeac-c277-4a2e-bcbe-bb3de724883e",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "76ea1f65-99d4-4643-b25d-88edc78ea165",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "288fcaae-db84-458e-959b-247ae6986efa",
        "cursor": {
          "ref": "cc68a6d4-be0d-45d4-9f5f-c45f44dca931",
          "length": 283,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "d2aa7505-1a3d-4509-b489-4a1542c2b430"
        },
        "item": {
          "id": "288fcaae-db84-458e-959b-247ae6986efa",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "bf5559e7-30a2-4da6-9f14-598fba81093c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0a78141d-7240-4dee-a5c1-3a876f0bea50",
        "cursor": {
          "ref": "1ead8811-0dc3-4099-a2a7-74236c5266ce",
          "length": 283,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "e32bdb19-fe8d-4624-a24d-9098dca35f6d"
        },
        "item": {
          "id": "0a78141d-7240-4dee-a5c1-3a876f0bea50",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "b6a9c446-5cf9-4856-a0fd-abb56697910e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 598
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fbed5ca6-ff25-4140-8868-2cef20de04cc",
        "cursor": {
          "ref": "d15243d9-9270-4c20-8a64-75160df53f34",
          "length": 283,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "89a9d925-1b2b-4953-8ca3-9c6d94761e1d"
        },
        "item": {
          "id": "fbed5ca6-ff25-4140-8868-2cef20de04cc",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "67933793-e0a5-4874-a39e-32886aa7dbd7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 538
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "803e55ba-15ea-4aeb-888a-aa867789cdd2",
        "cursor": {
          "ref": "d9d2490c-a7fc-43ec-a15a-fce915796b76",
          "length": 283,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "d5ecb9cf-cee1-41e1-a7cb-17543573fa28"
        },
        "item": {
          "id": "803e55ba-15ea-4aeb-888a-aa867789cdd2",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "64f0a144-fb2a-4453-90dc-07eb8ef8404a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 537
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "817e6ea2-3dad-4026-8328-b78940f2ea33",
        "cursor": {
          "ref": "6cf1a0c5-711c-47a8-bf0b-f6cedbbb90b1",
          "length": 283,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "2f23acfb-9fc4-4bee-9081-ffef2b65130d"
        },
        "item": {
          "id": "817e6ea2-3dad-4026-8328-b78940f2ea33",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "b6bbead1-843b-46f4-8758-6d816811a62f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f4143882-d74e-4d3e-b889-967e3cddf94f",
        "cursor": {
          "ref": "de0152b6-bad2-4057-aed3-fd4b30014cee",
          "length": 283,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "6e0e1571-7d5c-4dbf-bf56-b107acc659fd"
        },
        "item": {
          "id": "f4143882-d74e-4d3e-b889-967e3cddf94f",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "b5754917-182b-4dcc-96b0-02467fa3efef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f3535df8-f137-45cb-842d-7b67829b2ca5",
        "cursor": {
          "ref": "a4b415f3-a3c5-4cfb-a580-b50ad1424220",
          "length": 283,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "86e2381f-2bd7-4e4f-b850-685ef05d0ffc"
        },
        "item": {
          "id": "f3535df8-f137-45cb-842d-7b67829b2ca5",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "2bc2c113-b382-4a7a-b02a-c6aae03bd49f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fd71609b-bb30-4701-bd72-5682d64c9d76",
        "cursor": {
          "ref": "09c5c1fa-b90d-482d-b791-90cc8696e105",
          "length": 283,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "be01671c-29e3-4114-8306-25352120f2ed"
        },
        "item": {
          "id": "fd71609b-bb30-4701-bd72-5682d64c9d76",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "cc57769c-0e24-46ad-bb8a-fea4ff1abb7a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 352
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "44612af4-9977-4dfe-8581-10aac8ae435b",
        "cursor": {
          "ref": "4a2bc2d8-c9ef-4ce7-b255-0a4a95916dcf",
          "length": 283,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "58447036-8610-40e5-bfb5-2b959dc8efda"
        },
        "item": {
          "id": "44612af4-9977-4dfe-8581-10aac8ae435b",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "79baed9b-673a-40f1-b2cc-2910799e830f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 293
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7771b027-8a21-4d9b-9e66-d54d87e36af8",
        "cursor": {
          "ref": "6712b94f-6a93-46ad-b956-785f22b652cd",
          "length": 283,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "d93ae0d3-bf25-485f-8650-fcec36bae68d"
        },
        "item": {
          "id": "7771b027-8a21-4d9b-9e66-d54d87e36af8",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "6a994327-4ec8-47e7-b0f3-70cd12a45109",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 292
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "63f61ed5-25f8-4a63-a843-ace68641acdd",
        "cursor": {
          "ref": "2857f15e-99bd-4216-8845-73d4494e6277",
          "length": 283,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "66680791-2e5f-4891-8a48-8f6fd70b6421"
        },
        "item": {
          "id": "63f61ed5-25f8-4a63-a843-ace68641acdd",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "915a867d-5215-498e-9628-8948836f61d2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d51aa4d4-f2dc-4d7a-991a-1834151facc2",
        "cursor": {
          "ref": "fee1cdf4-b8fe-4313-a665-ed3ba9d14248",
          "length": 283,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "58490e6b-a8fd-4984-96d5-a96b67342982"
        },
        "item": {
          "id": "d51aa4d4-f2dc-4d7a-991a-1834151facc2",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "356d62c4-93ce-4d51-bfcc-c963d562286b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 352
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "71c498a5-09fc-4830-a1a2-77df08a95cfc",
        "cursor": {
          "ref": "5aacc027-fe39-4e98-8a34-a85fcb0b22ce",
          "length": 283,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "f8aad7f1-7c89-4387-b429-a56c8e699294"
        },
        "item": {
          "id": "71c498a5-09fc-4830-a1a2-77df08a95cfc",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "1f9ea8eb-dfd9-48af-afa0-ec2f92a940cd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aaaf7b98-7090-4943-9579-f88bed7bf3a8",
        "cursor": {
          "ref": "18e3775c-1f16-45c1-8f5c-4b0494ea1330",
          "length": 283,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "d71c2df6-80c2-4d8a-93a3-1ca48d5aa830"
        },
        "item": {
          "id": "aaaf7b98-7090-4943-9579-f88bed7bf3a8",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "f6bf4719-bc0f-485c-980b-161af45915f1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 352
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1d5d5fdf-df22-4447-a043-d8e3ed98c5b7",
        "cursor": {
          "ref": "8e8fe986-7b97-42aa-87ae-b9f35264e7fd",
          "length": 283,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "a405adcb-082e-45d2-94f0-f3013da9ef6f"
        },
        "item": {
          "id": "1d5d5fdf-df22-4447-a043-d8e3ed98c5b7",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "4b3419e3-4c97-4819-be8d-7ee95278882d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 476
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b1ca159e-f8fe-454a-aab4-04e3e1817985",
        "cursor": {
          "ref": "d956e567-0306-4e2f-871e-78c31f7c8862",
          "length": 283,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "e9d6838e-911b-4652-9540-43b81b4cb07e"
        },
        "item": {
          "id": "b1ca159e-f8fe-454a-aab4-04e3e1817985",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "588ee38e-6354-4016-ad2a-809aafa0e5cd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 295
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "af6f6cd1-3d70-4bf0-931a-d09f332fd217",
        "cursor": {
          "ref": "937fa670-98bf-4237-af1a-98ca037a22b9",
          "length": 283,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "72927cc6-0264-465c-970f-4d035d8d6488"
        },
        "item": {
          "id": "af6f6cd1-3d70-4bf0-931a-d09f332fd217",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "8b8db2b4-d57c-4f1e-98d8-52c620ada911",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "df24a41c-d02f-4d7e-aee6-1b57c95af58c",
        "cursor": {
          "ref": "b6b524e4-362e-4778-87b4-115aff293a80",
          "length": 283,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "27d75f4e-5617-40b7-8788-ac5e3c74d264"
        },
        "item": {
          "id": "df24a41c-d02f-4d7e-aee6-1b57c95af58c",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "e6986d09-910a-4628-a9ba-3bf1afac8182",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "330b2444-3271-4a1f-856c-919bd39400cc",
        "cursor": {
          "ref": "8b0b87be-0d98-4786-9cca-6a924bbc9d7b",
          "length": 283,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "27459e96-ef65-44aa-8423-5a792f84a3d9"
        },
        "item": {
          "id": "330b2444-3271-4a1f-856c-919bd39400cc",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "8d703180-f160-4f18-afd2-850c5eccbc6c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 476
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e4b485a7-eb68-4ae8-854f-fc804b649d17",
        "cursor": {
          "ref": "d024b93b-012d-4995-96dd-8ef2b53061ff",
          "length": 283,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "801ceff0-11c7-406b-b4a8-f3cf744a2714"
        },
        "item": {
          "id": "e4b485a7-eb68-4ae8-854f-fc804b649d17",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "443c6404-d289-4521-8482-cff7d4488b7e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "59dda44f-d880-46d4-84a6-c45fa8af67ca",
        "cursor": {
          "ref": "228fbf99-8be4-42b8-8a29-a34f59f81a94",
          "length": 283,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "c810ade0-03e1-49ab-951b-821933fa0dbf"
        },
        "item": {
          "id": "59dda44f-d880-46d4-84a6-c45fa8af67ca",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "96146af6-9d7a-46c2-af4d-9a3ca41f3f8e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 352
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c0101934-6baa-48c3-9fc2-9f612611794e",
        "cursor": {
          "ref": "97934967-0ae3-4902-8582-6f6a78d30cf2",
          "length": 283,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "bf9a15c0-caac-48a6-9114-e11c5166c274"
        },
        "item": {
          "id": "c0101934-6baa-48c3-9fc2-9f612611794e",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "56615998-5a89-4443-abb9-9cd72e9383fb",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 9,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d9cacd82-749d-4b7c-a74c-d428568bfe9a",
        "cursor": {
          "ref": "2d60aaa2-4d96-4bcc-ae95-31d7ec80e6c9",
          "length": 283,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "87b6b61a-fb6b-4740-9128-f4b1a11584f6"
        },
        "item": {
          "id": "d9cacd82-749d-4b7c-a74c-d428568bfe9a",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "a1d6d8cc-c7cd-454e-bdfb-7ffe0d9d3eda",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "07961f4a-4519-46f8-9a9e-e7daca935fbd",
        "cursor": {
          "ref": "36a9f2ec-024a-470c-925a-56aaed003ce1",
          "length": 283,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "275b373b-4049-4618-bc10-3de7db8f434d"
        },
        "item": {
          "id": "07961f4a-4519-46f8-9a9e-e7daca935fbd",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "97efa140-59bd-4e0a-af55-b88d774f1c9d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 307
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b47e05d1-a807-41ea-8272-4a4c3920babc",
        "cursor": {
          "ref": "22a0648d-0e45-4292-a75b-8e41a2927254",
          "length": 283,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "5a7fa9ac-1731-4b33-8375-59ddabf86009"
        },
        "item": {
          "id": "b47e05d1-a807-41ea-8272-4a4c3920babc",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "d5b9f063-c7d3-4d99-aa36-905e8897a8f3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 306
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0d5620c4-26ed-4452-bc60-019c3309c2c6",
        "cursor": {
          "ref": "5587dade-dcac-4adb-a7ad-39ea90cd6ae0",
          "length": 283,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "5fcfc1de-3348-4131-81d9-a2e411a2207d"
        },
        "item": {
          "id": "0d5620c4-26ed-4452-bc60-019c3309c2c6",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "d9e7bb02-e3d0-47a1-aa64-6da1fdeb0c8f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b284cb6e-dd1b-446a-95f7-b8717548f4f3",
        "cursor": {
          "ref": "f51f0b42-ef0f-4901-99c1-4520ad125bc0",
          "length": 283,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "234d0adf-8b8f-4e76-8212-a64b63b47035"
        },
        "item": {
          "id": "b284cb6e-dd1b-446a-95f7-b8717548f4f3",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "c9d42af8-aec7-4093-8dba-4624407c5498",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5fef161e-6b78-4b7c-bbbd-976d3974196f",
        "cursor": {
          "ref": "da2306e5-1700-4464-8199-a38bec890696",
          "length": 283,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "97cfaa34-adfd-45ac-840f-51eb1ddafa69"
        },
        "item": {
          "id": "5fef161e-6b78-4b7c-bbbd-976d3974196f",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "f47a2aa5-781c-45f3-955e-5957851d0164",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c2ac6389-b898-4dd3-af28-99ddb3dd8106",
        "cursor": {
          "ref": "ab6f8722-d348-4b17-9e0c-30c2af331040",
          "length": 283,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "774a8d9f-d4b8-4441-8606-781689a09022"
        },
        "item": {
          "id": "c2ac6389-b898-4dd3-af28-99ddb3dd8106",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "e7232828-8981-4475-879c-69016e74e6c2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef19c9bb-800a-42c7-ba9c-385e52e113e4",
        "cursor": {
          "ref": "1fb7bb7d-e35c-4409-a2cf-3ad83d49c2c0",
          "length": 283,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "0f7f1061-e5e1-45c4-bc49-4739f15daa48"
        },
        "item": {
          "id": "ef19c9bb-800a-42c7-ba9c-385e52e113e4",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "42c44d3b-259a-4bfd-8460-98a4aeb5eade",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 334
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "39020b51-968b-41a8-819c-2c6c0754de46",
        "cursor": {
          "ref": "b7f38207-5abe-44a9-bb28-988130747312",
          "length": 283,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "de4f5a58-f726-4ebd-b6f1-e39716e644c2"
        },
        "item": {
          "id": "39020b51-968b-41a8-819c-2c6c0754de46",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "8a7ab967-2da8-4ca2-b428-5b0e6cf4b7da",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1b86cf40-8be2-49ac-9bd8-0202672af435",
        "cursor": {
          "ref": "ba62f34d-d658-49eb-80fa-047ab5e899dd",
          "length": 283,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "48958f38-c2bc-4a96-a06a-53ffcf8cdc33"
        },
        "item": {
          "id": "1b86cf40-8be2-49ac-9bd8-0202672af435",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "a2188901-4cad-442f-b944-01a85aa90a50",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 20,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a656430-e891-4fc6-8b10-68fd99c45c1e",
        "cursor": {
          "ref": "5f6b1edf-da0c-4b58-8815-f966fbe1e55d",
          "length": 283,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "6790feb3-0908-446b-8d7a-1ae3b38961d8"
        },
        "item": {
          "id": "5a656430-e891-4fc6-8b10-68fd99c45c1e",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "547ced27-0b71-4b4a-bfc9-1db56d6a0271",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe6f5570-7be9-4ec5-b6e6-39caab7a9df1",
        "cursor": {
          "ref": "91923762-ab34-4648-a1d4-0b5cc283acb8",
          "length": 283,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "5c501586-7cf8-4f4a-8087-b2715c0bdec5"
        },
        "item": {
          "id": "fe6f5570-7be9-4ec5-b6e6-39caab7a9df1",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "1041fd66-ba5d-4b57-a512-07203cd6b10d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "024146c5-ec19-46a4-b625-a9b68b734c7d",
        "cursor": {
          "ref": "ca0e588c-27b4-4b08-bbdc-3d4ef3c53dd1",
          "length": 283,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "3015083b-2a2c-42a3-af9b-58bad2ebcafc"
        },
        "item": {
          "id": "024146c5-ec19-46a4-b625-a9b68b734c7d",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "fc56d00a-5c57-4d71-b274-ac15f5fa7588",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b6748446-c895-4a23-bf04-91966bc5003a",
        "cursor": {
          "ref": "6dc26ace-7c12-4117-8495-aa0a57b6a980",
          "length": 283,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "0d820abe-05f7-400d-bfa8-718e703afbaf"
        },
        "item": {
          "id": "b6748446-c895-4a23-bf04-91966bc5003a",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "1152988b-aaed-49cd-8aa8-7a0f25d80ded",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 538
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3087ec3b-99c4-421f-8800-a8d28fc8ce29",
        "cursor": {
          "ref": "208308ad-e18f-4a7f-b337-a7101570ab9f",
          "length": 283,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "f9048bd9-5a95-4df7-93a4-e0dc8a749fbe"
        },
        "item": {
          "id": "3087ec3b-99c4-421f-8800-a8d28fc8ce29",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "2ef640a4-9dfe-44d2-8f94-e1ad26b05954",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 537
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "74c767be-1465-405f-b168-dfa047f7e9f0",
        "cursor": {
          "ref": "f26fa89a-2886-4739-b08b-ce86ad104d34",
          "length": 283,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "d865d239-9ffd-4699-acc2-4f01a0eea59b"
        },
        "item": {
          "id": "74c767be-1465-405f-b168-dfa047f7e9f0",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "489a2e5f-300e-492f-9d48-e1083261edca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a28e3bac-76a8-4ae6-86c9-796dd70b7ed0",
        "cursor": {
          "ref": "f560bdad-95f5-4575-b519-7ea53bbdfc3a",
          "length": 283,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "6f5af539-6e6e-4a8f-b983-6a6786e0368d"
        },
        "item": {
          "id": "a28e3bac-76a8-4ae6-86c9-796dd70b7ed0",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "1c7f5f0b-64bd-48d5-bb1a-900ca83c9990",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3827a792-001e-4f6d-b042-443a7515b327",
        "cursor": {
          "ref": "bc1410f0-b59e-4593-b8d7-db224f605252",
          "length": 283,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "cccdb1c7-7e81-4f5a-a617-3a6c79cabd81"
        },
        "item": {
          "id": "3827a792-001e-4f6d-b042-443a7515b327",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "a3992034-084f-4ac5-8de9-29f3bc81401f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7ee8d9be-a616-4694-adb4-3be5f945354c",
        "cursor": {
          "ref": "f8906694-0052-4923-a0a8-56ef513653ca",
          "length": 283,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "85b10434-9eae-4157-b410-59f3ef28069a"
        },
        "item": {
          "id": "7ee8d9be-a616-4694-adb4-3be5f945354c",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "c3400e10-bdb5-4be0-bf3d-604aa438435c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 352
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3d86bd6b-d200-4835-89b0-922e7a4747f2",
        "cursor": {
          "ref": "1cb10189-9372-4788-a320-58b0637900a1",
          "length": 283,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "053d9559-0fc2-494d-bb9c-d596c9cff0de"
        },
        "item": {
          "id": "3d86bd6b-d200-4835-89b0-922e7a4747f2",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "812071c9-4eea-47f4-9c0b-9586c0121e7e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 293
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "adf447c7-0fee-47c4-a4b8-8e81697ad915",
        "cursor": {
          "ref": "7ed9984f-85f6-44ec-bdd8-a9c4c8213371",
          "length": 283,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "28bb3067-3138-4053-a993-df3df28f8b3b"
        },
        "item": {
          "id": "adf447c7-0fee-47c4-a4b8-8e81697ad915",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "dfb84a25-fd16-4e54-967f-00a90ec8e45f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 292
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1212514a-be81-43da-ac41-44674996b035",
        "cursor": {
          "ref": "534ec2cc-504d-4bc8-8afb-6b4a7117060a",
          "length": 283,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "8c0c4dde-b7a9-4c57-a7b4-63fdd0607eba"
        },
        "item": {
          "id": "1212514a-be81-43da-ac41-44674996b035",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "082e7804-84b1-4539-bac9-8b18789dae2d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2335d1bb-47e1-49a1-b1b4-6a1cc0fd1f6d",
        "cursor": {
          "ref": "da67c5a4-579c-424b-9681-b18afdbd9085",
          "length": 283,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "9588d4c4-1a2c-443b-9cc2-9f0056fa864a"
        },
        "item": {
          "id": "2335d1bb-47e1-49a1-b1b4-6a1cc0fd1f6d",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "67e16af4-1eed-4e7b-972d-5e9f11f786bc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 352
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5df08138-1cdd-4174-b6b3-fdccff59052c",
        "cursor": {
          "ref": "a12d6e33-ac05-4369-8664-d4c763387e30",
          "length": 283,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "de116afd-c37e-4cba-b7f2-56d45799cbb2"
        },
        "item": {
          "id": "5df08138-1cdd-4174-b6b3-fdccff59052c",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "f0c4d897-c453-4634-9a97-6ed23aacf499",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cfacf50e-ff92-4fc8-b53a-6fa0a40e18d8",
        "cursor": {
          "ref": "b87c23b1-d980-4967-ad0c-d2b3b1d1c496",
          "length": 283,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "d3394cb6-3923-479d-9c0a-f8735eed4e73"
        },
        "item": {
          "id": "cfacf50e-ff92-4fc8-b53a-6fa0a40e18d8",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "26d2c702-c730-458b-8507-3fb6d44a4e4d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 352
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a00c4b6d-0c70-4dc5-a668-c80ffa6a00b1",
        "cursor": {
          "ref": "0eaef1e4-891a-4176-95ac-5d6282efc6fa",
          "length": 283,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "16f56dc7-b7b6-4f1b-912e-018626191258"
        },
        "item": {
          "id": "a00c4b6d-0c70-4dc5-a668-c80ffa6a00b1",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "8b114bf8-c7ce-47ce-ad0e-5ac481b8b917",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 362
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4f6553f7-c8df-47a8-b668-1afaf1b34fbb",
        "cursor": {
          "ref": "a6395b18-3062-4abe-b88e-be6327e74781",
          "length": 283,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "24af1c44-5082-48bf-9e5a-6892e5d908e3"
        },
        "item": {
          "id": "4f6553f7-c8df-47a8-b668-1afaf1b34fbb",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "0c8cb037-af59-4268-aae0-60ff8a352eb2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 295
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "354396e3-66ca-4ae5-9c01-d70584d5c0f6",
        "cursor": {
          "ref": "3326ff54-0a4d-4008-a653-c1d176df3696",
          "length": 283,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "b31d660f-188a-4a7d-b9fb-04a7a20dc202"
        },
        "item": {
          "id": "354396e3-66ca-4ae5-9c01-d70584d5c0f6",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "a8451033-e907-4e08-8f15-c90c14694735",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "392c0216-587a-4257-9bb5-aacc2c4800b7",
        "cursor": {
          "ref": "38687391-d785-46c2-a58f-f72ec234197e",
          "length": 283,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "85afe712-bc6a-40cd-9e8f-b59366cf4836"
        },
        "item": {
          "id": "392c0216-587a-4257-9bb5-aacc2c4800b7",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "54348984-3acc-4e03-a0e2-610e09a6b86a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6f7fff82-500f-481c-adca-a9eef3c7f6c0",
        "cursor": {
          "ref": "fcb3a278-a615-4989-80e5-1ff353c26cbe",
          "length": 283,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "6c689372-6a65-42fc-aaf3-396d9fc43206"
        },
        "item": {
          "id": "6f7fff82-500f-481c-adca-a9eef3c7f6c0",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "3e90cce2-2acd-43e0-90fb-5c418f60f20c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 362
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c5375478-44b9-4070-8843-ee122a799406",
        "cursor": {
          "ref": "1cb18c78-ba10-406b-afa0-f343eca2ae92",
          "length": 283,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "d4f0b064-7421-4111-b81a-a0309c3f6105"
        },
        "item": {
          "id": "c5375478-44b9-4070-8843-ee122a799406",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "7cd40817-7996-4789-8964-f22eb30ac8b3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "69acdf06-edab-4a73-9dad-918607bb44e5",
        "cursor": {
          "ref": "c12c30de-59fc-4279-bbc9-3dc76320ad7d",
          "length": 283,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "4e83a9b5-72b6-4a81-8a76-44412eb66f67"
        },
        "item": {
          "id": "69acdf06-edab-4a73-9dad-918607bb44e5",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "08c7b28e-b7d5-46cf-85d0-40fa34201e96",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "800c987c-576c-4119-9aaf-45d36d819780",
        "cursor": {
          "ref": "f6fd261d-bd6f-485e-948b-76307372d33e",
          "length": 283,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "fea76afa-8145-4226-b55e-bcb38a5fdb3c"
        },
        "item": {
          "id": "800c987c-576c-4119-9aaf-45d36d819780",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "e2fd074e-5e78-4bbb-a473-c728d2b35d7e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "85be77b3-407c-4728-88b6-17723c0fff68",
        "cursor": {
          "ref": "b80383a3-bda3-4ddb-b74d-232f7eef7129",
          "length": 283,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "ea79698c-56de-48fb-970c-43a96395da3a"
        },
        "item": {
          "id": "85be77b3-407c-4728-88b6-17723c0fff68",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "64cc8414-bd1b-4b10-b91b-d91b448156c5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d742a8d5-061f-4ba2-8539-2dbeca5fe39b",
        "cursor": {
          "ref": "d5a3ab36-67a2-4895-b8ca-c9d98f13c273",
          "length": 283,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "fa7fccc0-57dd-4492-89ca-bb2d5927f1ab"
        },
        "item": {
          "id": "d742a8d5-061f-4ba2-8539-2dbeca5fe39b",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "bb264729-c9fd-4cdd-b346-85361a766821",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2512bd06-ba77-4d3b-9991-16632345f720",
        "cursor": {
          "ref": "a0284231-d66d-4820-8557-4836dbc8a8e1",
          "length": 283,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "40c950c3-c36b-4ad6-8ec7-efadca6a1414"
        },
        "item": {
          "id": "2512bd06-ba77-4d3b-9991-16632345f720",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "21295a2d-3b14-48ba-ba37-53e5d7efce02",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fb70dfbe-b8ee-4b5a-950e-cfb111dd7d02",
        "cursor": {
          "ref": "8f311b83-d4cc-4880-bbd4-011b10298a4f",
          "length": 283,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "94b81c5a-dfc3-4b5b-850a-5730bb1a0b79"
        },
        "item": {
          "id": "fb70dfbe-b8ee-4b5a-950e-cfb111dd7d02",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "54672ae2-28e7-4332-a069-a47bfe104169",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4d9a8611-4ab7-43aa-b08d-8c4795e79a37",
        "cursor": {
          "ref": "10e0e5c4-60a0-4103-9779-fa40ff42b53c",
          "length": 283,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "31493d5d-faa2-46b0-9576-f3fa04e910ec"
        },
        "item": {
          "id": "4d9a8611-4ab7-43aa-b08d-8c4795e79a37",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "3a18865f-b266-4ccc-b0b2-da7c908acfc3",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 8,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "854a1500-032b-4d45-9cd6-f01c644594f0",
        "cursor": {
          "ref": "aee8bf44-4c6e-402d-bd84-dc8396870d07",
          "length": 283,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "26035de2-24a8-4f1d-8444-0eb94e0fb8b8"
        },
        "item": {
          "id": "854a1500-032b-4d45-9cd6-f01c644594f0",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "1c55a955-ae8d-4f8b-8016-5bbfc529a6c4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae134f6c-1de7-4f6a-8345-a44366df8bff",
        "cursor": {
          "ref": "9c2c413a-617d-48d7-b239-a8e719d04c4d",
          "length": 283,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "47741fa3-03ad-4db7-ae91-fe3d891934e0"
        },
        "item": {
          "id": "ae134f6c-1de7-4f6a-8345-a44366df8bff",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "124fc8e0-755d-4095-918d-cf08df55c81f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "42d3afb7-42e5-48e5-afad-20cc14dd495d",
        "cursor": {
          "ref": "badfa7eb-c796-4efe-8ded-7684ca8d45d7",
          "length": 283,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "676f7f04-11cc-4d9b-a01a-099b0a1d0dc5"
        },
        "item": {
          "id": "42d3afb7-42e5-48e5-afad-20cc14dd495d",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "8a847fba-02a0-4ce0-b13a-42ecb03ca7ba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7bbdd8af-4dcd-4ca7-877f-55d85b9c2ac3",
        "cursor": {
          "ref": "3cc2c3b0-f8ab-44c2-b690-714cd6443150",
          "length": 283,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "753e17a4-4377-48a5-aa3d-59475a95717f"
        },
        "item": {
          "id": "7bbdd8af-4dcd-4ca7-877f-55d85b9c2ac3",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "46e0026a-5d7c-477a-b88f-bec38b7fb4b5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "899a9031-dc55-4524-9285-dc273902e648",
        "cursor": {
          "ref": "fd3dfd70-db15-4714-ac72-c8cec88f09d6",
          "length": 283,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "4800c2ba-f714-4ef6-9317-d10337053971"
        },
        "item": {
          "id": "899a9031-dc55-4524-9285-dc273902e648",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "80da6d19-c5f6-4102-982d-987fb4dd776a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a7258646-d069-4136-9ba8-af0e7ecb660c",
        "cursor": {
          "ref": "d2d0ccb4-8435-49f5-9d04-bdb28e5aeef8",
          "length": 283,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "2a40a8b9-eee6-4e52-aeb6-4e420ddfd856"
        },
        "item": {
          "id": "a7258646-d069-4136-9ba8-af0e7ecb660c",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "d96c3897-470b-4478-b51a-54d494ff75e1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b698ef3-88b4-4614-b8ca-502b5c6e26a3",
        "cursor": {
          "ref": "2958bac7-70a9-4872-bd9f-1c25d58fb282",
          "length": 283,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "546fbf3b-9df0-4345-b5f0-d3b4a45c813a"
        },
        "item": {
          "id": "3b698ef3-88b4-4614-b8ca-502b5c6e26a3",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "aafdf8b2-c101-40bb-a813-8f74942ce24e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c82ab0f-4b2c-4b33-892b-05bacd03bdb7",
        "cursor": {
          "ref": "3d63dd75-dcd0-4c70-bc9d-8cdaf146040a",
          "length": 283,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "9fa20a63-a9dd-4ac2-8c86-328fdb8c8368"
        },
        "item": {
          "id": "7c82ab0f-4b2c-4b33-892b-05bacd03bdb7",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "3e9e0308-71f0-4f9e-8f4e-a0aea4dcea39",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8f2cdf5f-a60a-4c0e-94c2-d46ed82fc352",
        "cursor": {
          "ref": "31150025-ea43-438a-bf2a-fe5719c54d4a",
          "length": 283,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "06b9bc58-d01d-46f4-9473-9436318aa42e"
        },
        "item": {
          "id": "8f2cdf5f-a60a-4c0e-94c2-d46ed82fc352",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "c45b86e2-fd4f-4f65-8399-c01f8400784d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "afe70506-c10c-4ca8-b14c-5a92ccf796d3",
        "cursor": {
          "ref": "452f50b8-f9fa-4fa7-8ec8-86d1e6abaa19",
          "length": 283,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "07496e70-7a87-4a94-8ca5-8b1bfbe6d1bc"
        },
        "item": {
          "id": "afe70506-c10c-4ca8-b14c-5a92ccf796d3",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "cf12c97e-596d-4fc4-a131-f58051fed8fa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "92727247-7a81-4afd-b9c1-5164e6a8b058",
        "cursor": {
          "ref": "0e62bb66-da1f-4b95-8fdf-2b6578a03a83",
          "length": 283,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "dd04a3e4-d06d-4e76-a984-82168c198b2c"
        },
        "item": {
          "id": "92727247-7a81-4afd-b9c1-5164e6a8b058",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "382499e3-d815-42dc-8d52-056e9e580891",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "20aedda6-11f8-4266-b3fd-2b226e687090",
        "cursor": {
          "ref": "088a90cd-946f-4963-bfa7-1422a4e4b090",
          "length": 283,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "9ca5eabf-d8d1-4cd3-8a26-a9fc264ba496"
        },
        "item": {
          "id": "20aedda6-11f8-4266-b3fd-2b226e687090",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "7858dbc7-ba42-4198-8735-e156acc5bd6e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a66baa60-9aa4-49f4-9c47-fb7c38220a27",
        "cursor": {
          "ref": "f30ca3f9-a539-4d97-898e-ad9f77e1baf6",
          "length": 283,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "7c8303c4-6191-4943-9326-86c45cb5b5c6"
        },
        "item": {
          "id": "a66baa60-9aa4-49f4-9c47-fb7c38220a27",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "2ac115e6-2a1d-4150-a501-58a3d132b3bb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "edc4bbf8-8829-492d-8bdb-de2af9e1b09c",
        "cursor": {
          "ref": "d85744d5-68e7-4e9e-8166-074f9f47a704",
          "length": 283,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "988ddc26-e345-45f6-9338-62bd7db40057"
        },
        "item": {
          "id": "edc4bbf8-8829-492d-8bdb-de2af9e1b09c",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "fbd9b2cb-f1a8-400a-a608-798c73e84340",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "30503bcf-59de-4f8e-b5cb-0b9acd6387a5",
        "cursor": {
          "ref": "0bc640d3-1dde-4829-9def-a0a9ab0498d9",
          "length": 283,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "0753671a-8de8-4447-86e8-5f12b01f46d3"
        },
        "item": {
          "id": "30503bcf-59de-4f8e-b5cb-0b9acd6387a5",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "4a0998f6-a679-424d-a523-a9ef99de3076",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a8ce12b9-f9fa-435d-93cb-f78f543ef6c2",
        "cursor": {
          "ref": "b6d4bd7f-9982-4f07-ab38-8f6fc54ccbc5",
          "length": 283,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "3a6c912b-1838-4e1c-aee8-9d6708282cf6"
        },
        "item": {
          "id": "a8ce12b9-f9fa-435d-93cb-f78f543ef6c2",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "47c44b23-de08-458c-9dc2-ee59478fd523",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9e2ae7e0-2d9a-4e3b-9c3d-32d6c63d38ad",
        "cursor": {
          "ref": "fa6fb93b-e084-4d14-ab47-c076b50450b8",
          "length": 283,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "cae28425-4e7a-4db4-8413-c3899fb5245c"
        },
        "item": {
          "id": "9e2ae7e0-2d9a-4e3b-9c3d-32d6c63d38ad",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "c98b362e-a50f-4c66-9feb-a29c96fb7fe6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ae5e964-6533-4310-aae3-d5a381a20543",
        "cursor": {
          "ref": "3a685113-6730-4c51-b39a-36008ede1157",
          "length": 283,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "5caa66c3-6bc8-4bfd-95ec-a9fb0b32e209"
        },
        "item": {
          "id": "3ae5e964-6533-4310-aae3-d5a381a20543",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "8f188b56-6446-4d2e-81ce-f9be4af329ac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "48d7a504-274a-4b9e-b8e8-e29fbba6ed5f",
        "cursor": {
          "ref": "7ceac7a9-9ba9-4b36-a818-df789cd65ca6",
          "length": 283,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "5128d2c1-4741-452a-9112-2c54abf11e09"
        },
        "item": {
          "id": "48d7a504-274a-4b9e-b8e8-e29fbba6ed5f",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "fb6d92d9-e222-49e5-be61-7bce37ecec96",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1494424b-960e-4bcc-863d-26ce16c5f8b2",
        "cursor": {
          "ref": "8fdaa92a-4302-4ec0-b198-9ad651182442",
          "length": 283,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "82eb150b-6ed7-4472-9e84-429780467df5"
        },
        "item": {
          "id": "1494424b-960e-4bcc-863d-26ce16c5f8b2",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "e1cc8b01-d695-4284-9c61-cafea0522dc8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae30c996-89d8-4408-80ed-2987a7f3e168",
        "cursor": {
          "ref": "46e1cef9-a2f9-4b8e-aeb4-20f0d3da6780",
          "length": 283,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "ff3d3ea2-81b1-445c-bbc0-69b79354f1a3"
        },
        "item": {
          "id": "ae30c996-89d8-4408-80ed-2987a7f3e168",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "88de5ac4-77e5-4cca-bff0-34dd6ae1a587",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "591daa4d-ee32-46c3-a3c6-f5102387d3c8",
        "cursor": {
          "ref": "ab1953d9-bb30-40de-9937-607382506a06",
          "length": 283,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "13bdbc42-dcd7-4c76-b1eb-4f13968ae41f"
        },
        "item": {
          "id": "591daa4d-ee32-46c3-a3c6-f5102387d3c8",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "95a49ec2-c91e-4d9f-a27f-bea279cfecdf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "17d59fe7-0cc0-4fee-b107-e57a02c51ed2",
        "cursor": {
          "ref": "0c083161-0bfd-4327-bd4f-cff7b957a198",
          "length": 283,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "abe3f82b-54f2-447f-9331-ff931c35bc08"
        },
        "item": {
          "id": "17d59fe7-0cc0-4fee-b107-e57a02c51ed2",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "995011c5-1d1b-4224-a170-1f91c9abc8c3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "11d06fc7-cbf7-43e5-8561-3ed88a24c036",
        "cursor": {
          "ref": "8b285830-30aa-46af-a9ff-2469442d1bc3",
          "length": 283,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "91062c77-7440-4e43-86a8-2da99aac586d"
        },
        "item": {
          "id": "11d06fc7-cbf7-43e5-8561-3ed88a24c036",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "ef828963-45d3-45ad-867b-01d88e557774",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 196,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "92545242-345c-45ac-9b72-baf1e7ee6d19",
        "cursor": {
          "ref": "9bbe1c7f-bb0b-4bb0-9c91-553a980ecbd5",
          "length": 283,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "915f363e-9cd3-4b7b-901e-799f777bfde7"
        },
        "item": {
          "id": "92545242-345c-45ac-9b72-baf1e7ee6d19",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "aa2eddd8-70c7-4680-8853-f2cecc8edf27",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "09f21df8-cae7-4b0d-8348-093a69e04c5c",
        "cursor": {
          "ref": "b1cb81f5-3cf2-491f-b1f0-1d79d22a10b9",
          "length": 283,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "743fb92c-ef9d-4dc3-9d79-7ec18b061a99"
        },
        "item": {
          "id": "09f21df8-cae7-4b0d-8348-093a69e04c5c",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "c343df8e-9ecc-482e-83e5-1ac204f50747",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7e28186d-5970-49d0-a907-2b652bfd5d65",
        "cursor": {
          "ref": "355af246-434a-41c7-9ac4-6ba5faf4eb52",
          "length": 283,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "0d1fcb76-d217-44b3-aa81-ea097cfb8075"
        },
        "item": {
          "id": "7e28186d-5970-49d0-a907-2b652bfd5d65",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "11163770-c398-49d6-9839-062770efb6ef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3a1a2e53-4f53-438b-b4bd-bc063c67da87",
        "cursor": {
          "ref": "8a6d67e6-e521-4dbc-89fd-135ef6cc860a",
          "length": 283,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "ae4b4112-56b4-4b16-b17c-ee8f6897a6cd"
        },
        "item": {
          "id": "3a1a2e53-4f53-438b-b4bd-bc063c67da87",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "6edd100d-52a4-494f-b797-a7b20a9a7180",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cbf29883-bb0f-427f-bb05-ebadf3c8f86e",
        "cursor": {
          "ref": "dcea8d52-9750-4fa9-8ea8-9b9c23622300",
          "length": 283,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "1d17390b-cd47-4a24-8ffd-7d15d441285d"
        },
        "item": {
          "id": "cbf29883-bb0f-427f-bb05-ebadf3c8f86e",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "0dae1509-7792-4db3-9c8e-4fd81e745597",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 182
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cf956351-4cd3-4926-aac2-80c3080e0e86",
        "cursor": {
          "ref": "9d2017e4-8ca1-46ef-9f38-e3ec7442c71f",
          "length": 283,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "8f1071d3-136b-470d-ae6e-0cb5758cab51"
        },
        "item": {
          "id": "cf956351-4cd3-4926-aac2-80c3080e0e86",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "696f894d-5edf-4e82-b2b5-836c2149098d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "35c25ab2-c9ea-4043-b020-2a69ad25e96f",
        "cursor": {
          "ref": "0e3df8da-0688-4205-928c-751134bbd52a",
          "length": 283,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "3afc1362-0bbc-49f8-89e5-8ad957f85640"
        },
        "item": {
          "id": "35c25ab2-c9ea-4043-b020-2a69ad25e96f",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "e83a64c7-0241-49b8-a734-cc4aa5829ab9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "51248411-cb33-478c-a6c1-64e93feecf2a",
        "cursor": {
          "ref": "1190ae50-87e6-4585-9046-5bd2a1f60390",
          "length": 283,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "ade5d6fb-4415-45d7-b8a4-5f61c524d7b1"
        },
        "item": {
          "id": "51248411-cb33-478c-a6c1-64e93feecf2a",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "f2f7bca0-757a-43df-bcd8-924d3bef2db2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "67733496-2fc0-4baf-a3b3-348c58275cf7",
        "cursor": {
          "ref": "ed91fbf2-7597-4f5c-acc4-8ff9c6d1b73e",
          "length": 283,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "ccb13b67-4e31-44f6-9120-9b7f4fa171b3"
        },
        "item": {
          "id": "67733496-2fc0-4baf-a3b3-348c58275cf7",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "62390446-655e-4a43-ba37-a62f14216db0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c753b65e-326f-4d7d-88fc-551237b1027f",
        "cursor": {
          "ref": "26921479-df6f-4544-9606-25fa46aacae9",
          "length": 283,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "0a941aae-1919-4d43-a7f7-e57ec1ac6586"
        },
        "item": {
          "id": "c753b65e-326f-4d7d-88fc-551237b1027f",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "85a3a647-8373-4f53-8bf3-ffa690940b10",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ec7792af-6aec-465d-acf5-19d51efb9c8e",
        "cursor": {
          "ref": "e4f3c152-d706-4cbc-9a63-5abf32173ca1",
          "length": 283,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "ec29c2ef-c74b-4b1d-8e0e-2ed48837d57d"
        },
        "item": {
          "id": "ec7792af-6aec-465d-acf5-19d51efb9c8e",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "3a742b08-849b-49e7-ad4a-6b775f470cd5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "98dcf2dc-2ebe-4c90-a40a-de97b46d7e58",
        "cursor": {
          "ref": "6fe84266-0450-443f-b178-f9b11a5be7a7",
          "length": 283,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "198687a1-32c2-46c0-95c5-af0360c73877"
        },
        "item": {
          "id": "98dcf2dc-2ebe-4c90-a40a-de97b46d7e58",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "a714be4f-b7e8-4d43-99b1-d047a4cbc6e5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a9c5504a-8477-4a53-96a5-9aa12b80f67e",
        "cursor": {
          "ref": "178ff3e5-9319-41d4-b2ee-bbe7f4395d82",
          "length": 283,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "cf670543-08c7-452a-8b57-c6e56b50cea2"
        },
        "item": {
          "id": "a9c5504a-8477-4a53-96a5-9aa12b80f67e",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "66f9ea13-edd3-4dff-8c0a-bf0546708e74",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "831d9f38-d29f-4d49-aaeb-fa9a0d830edb",
        "cursor": {
          "ref": "39b4f529-ad58-49ee-a2dd-986205fe1e89",
          "length": 283,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "f59f5644-ee59-471c-af5d-a6e660d469a8"
        },
        "item": {
          "id": "831d9f38-d29f-4d49-aaeb-fa9a0d830edb",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "614ddcb5-2428-4b41-9fe1-7d7d691a8938",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "89c54db7-f99d-4311-88af-2ebf9f21a484",
        "cursor": {
          "ref": "5f9d0399-d992-4eac-b5a4-dbde14d231f1",
          "length": 283,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "6b3d0bd0-7279-4a55-880f-b2f9caeddf07"
        },
        "item": {
          "id": "89c54db7-f99d-4311-88af-2ebf9f21a484",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "a0280f09-eab8-4f21-b9cd-2d1c9cbad5ac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e8e13063-3bcf-4965-aa1f-0183e05826e9",
        "cursor": {
          "ref": "a190fa4b-34b6-442d-9719-01a4e5bb4381",
          "length": 283,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "79957caa-1494-4cda-be24-b6c686aee2ca"
        },
        "item": {
          "id": "e8e13063-3bcf-4965-aa1f-0183e05826e9",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "e8b6d64d-9d8b-4ef8-a62f-c1331e1d2eed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "04f209bc-b466-4d27-a353-a6030bcd9f69",
        "cursor": {
          "ref": "0276db17-f623-43da-b54e-2f38c5710639",
          "length": 283,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "6fce911b-0fc0-4991-b49e-28e7c26858a9"
        },
        "item": {
          "id": "04f209bc-b466-4d27-a353-a6030bcd9f69",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "fa0e0a5f-ccba-4a22-89ee-8daf2e674396",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d3ce203-112d-4b28-ac94-4092b29b037a",
        "cursor": {
          "ref": "25b5b653-a2f8-4bcc-951a-cdaa948a64eb",
          "length": 283,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "d4632e20-71a0-4ad7-8e01-d1a32ea2b7ba"
        },
        "item": {
          "id": "7d3ce203-112d-4b28-ac94-4092b29b037a",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "84c16d7c-735c-4719-8874-6caedf5594f2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db9ee6e2-7d4b-412a-b541-b2ba1d83ec49",
        "cursor": {
          "ref": "f0f2f5b0-a87c-4d5f-9150-351f0b465745",
          "length": 283,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "29bbff8c-ec23-4c30-9a18-cf58d005d52a"
        },
        "item": {
          "id": "db9ee6e2-7d4b-412a-b541-b2ba1d83ec49",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "ee86b495-dcdc-42e6-98a8-1d8f2437c465",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d2b12ec8-101d-4225-8fd6-184b092f6167",
        "cursor": {
          "ref": "2a04f7aa-5bf5-45b8-92ff-2da53937c166",
          "length": 283,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "c30dcf91-a378-4360-bd2b-14c2fc96fc70"
        },
        "item": {
          "id": "d2b12ec8-101d-4225-8fd6-184b092f6167",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "50dcfc59-0c7d-4bbf-87c2-4f132bd52f93",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f7fff7f-c39f-442d-b3ef-a7db8e798b08",
        "cursor": {
          "ref": "1c77a271-f667-46f2-8fab-ff09d861aeba",
          "length": 283,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "43d47034-ebe1-4a40-aa46-450bd0e0ed19"
        },
        "item": {
          "id": "7f7fff7f-c39f-442d-b3ef-a7db8e798b08",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "0b284f80-7955-4195-a03c-834d99bb2349",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "094f1091-689e-440d-8bf7-9dcac8b98b56",
        "cursor": {
          "ref": "8836e69d-9f2f-40d1-bfff-eb684b568832",
          "length": 283,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "d93bf810-59a4-45ca-8817-c91f18291eb0"
        },
        "item": {
          "id": "094f1091-689e-440d-8bf7-9dcac8b98b56",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "338d6074-a509-480d-a9c9-32f137b9da3d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ebe9697-d284-436b-b55e-15a3a336ff55",
        "cursor": {
          "ref": "c7f8a96b-fdcb-4f42-ba13-cfd972bf4f79",
          "length": 283,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "63861e53-41d0-4ed3-a0fc-1e3fa5ceea0a"
        },
        "item": {
          "id": "8ebe9697-d284-436b-b55e-15a3a336ff55",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "e1dbf0a1-d768-428b-b114-0ce37e1f46a7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "979c2826-6b8c-4ecd-8d04-136021a0e872",
        "cursor": {
          "ref": "4c13be13-fc35-4faa-980d-afb26daba4fc",
          "length": 283,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "247a680e-5651-49d1-96c5-a448d9989bdc"
        },
        "item": {
          "id": "979c2826-6b8c-4ecd-8d04-136021a0e872",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "441299fd-f6f9-4048-9353-a573dbf1fe09",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b28c62c9-a3d4-4312-aeda-a3a7446cb94e",
        "cursor": {
          "ref": "2b4d7df4-4c4b-4417-859b-e74dc545a23e",
          "length": 283,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "d8857998-74ea-42b1-8ce7-f023c4142fb7"
        },
        "item": {
          "id": "b28c62c9-a3d4-4312-aeda-a3a7446cb94e",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "164b5086-be9e-4f6f-8797-ab7797e14747",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7e28dfd7-c171-4321-ab34-d920e207b6b3",
        "cursor": {
          "ref": "d33a85c9-46bd-46b1-8f6c-7d9ec6467cc9",
          "length": 283,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "f83fbf2f-dbd5-456a-ad85-ef0d635774bc"
        },
        "item": {
          "id": "7e28dfd7-c171-4321-ab34-d920e207b6b3",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "d5879acf-ad12-4170-ab1b-0377812fca37",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "417f6474-55eb-4868-9c4c-8808b231e1b4",
        "cursor": {
          "ref": "59db31c3-b275-40f1-a9fa-71b69af0bd1b",
          "length": 283,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "5f2fb341-131e-4a2a-838b-004976e26ccb"
        },
        "item": {
          "id": "417f6474-55eb-4868-9c4c-8808b231e1b4",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "49146b28-6b1e-4509-98c4-87ba331450a8",
          "status": "OK",
          "code": 200,
          "responseTime": 12,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 200",
              "stack": "AssertionError: expected response to have status code 400 but got 200\n   at Object.eval sandbox-script.js:1:230)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:230)"
            }
          }
        ]
      },
      {
        "id": "e35c79be-ab4f-45dc-88af-d29ee9c457ab",
        "cursor": {
          "ref": "a93483d2-2663-424f-82a4-1f9894011f79",
          "length": 283,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "50513ba4-b4b8-4eff-a4da-e3fbe6809d92"
        },
        "item": {
          "id": "e35c79be-ab4f-45dc-88af-d29ee9c457ab",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "39f71767-8cd7-4cfc-8b1e-5a5794ae2985",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "51ba570b-b60d-44f1-ba21-50218e17c60f",
        "cursor": {
          "ref": "e6e2978b-7a3c-4ed4-a977-468fccdc66ab",
          "length": 283,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "5bd1503e-4c9c-4c12-a978-f1bd3e6793af"
        },
        "item": {
          "id": "51ba570b-b60d-44f1-ba21-50218e17c60f",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "2ac56571-b3a8-4f33-9df2-dc5154186744",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8b1e9492-c371-47e6-8535-45c28fe4b714",
        "cursor": {
          "ref": "48dfca08-ceb8-4008-8ceb-7b456f9875ca",
          "length": 283,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "175fd852-5f18-465e-a802-a2ee08081c2c"
        },
        "item": {
          "id": "8b1e9492-c371-47e6-8535-45c28fe4b714",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "b9bb25fe-636e-4821-ac78-9f5d7d8a323c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f730faf-69be-429e-9a61-b11be6f20107",
        "cursor": {
          "ref": "77cc30ca-6546-45eb-9c5a-1b8ab5bbebae",
          "length": 283,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "2da6d81b-1835-48ad-bfd5-d8ef44d72358"
        },
        "item": {
          "id": "1f730faf-69be-429e-9a61-b11be6f20107",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "0313710b-d019-45d4-9a1f-e6331f1313ce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "931c1c75-ea2e-44d4-b327-8090c6c1986a",
        "cursor": {
          "ref": "fa380baa-8aff-4cb1-a257-b3377b6a302a",
          "length": 283,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "128785fd-bf8b-4b04-872a-a65bfba54209"
        },
        "item": {
          "id": "931c1c75-ea2e-44d4-b327-8090c6c1986a",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "0e703ddd-c585-411c-8c8f-c7d3192242c5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "df083aec-e399-42c9-adb9-120ff261bae9",
        "cursor": {
          "ref": "eeacdf0e-de01-4a78-8978-89182f13a04d",
          "length": 283,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "4e147ec5-c5a5-42fa-a727-674e61de00df"
        },
        "item": {
          "id": "df083aec-e399-42c9-adb9-120ff261bae9",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "fe1f6e81-69a1-4a7c-8807-7f8caefcffaa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "07e09fac-ccb8-42ff-96d9-ff2f7a0ba16c",
        "cursor": {
          "ref": "45177448-b84a-4aa3-800b-c9364fc7e496",
          "length": 283,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "ce30f70b-e7c7-475e-9bb4-03d7a4c0ade6"
        },
        "item": {
          "id": "07e09fac-ccb8-42ff-96d9-ff2f7a0ba16c",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "9ecadfcf-0021-40c2-90f3-3792242c44d1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a81d8181-1a22-4b4b-b4b4-de64f8210221",
        "cursor": {
          "ref": "1268230d-d1c9-4d3c-9750-6fe7df6a9aea",
          "length": 283,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "f168ea9e-e39f-4565-b6ac-f250a1dae22c"
        },
        "item": {
          "id": "a81d8181-1a22-4b4b-b4b4-de64f8210221",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "4692f923-0484-404d-b6b4-5f9cb8dde264",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a6d9808e-e7d0-4475-972d-87b8e79a96fe",
        "cursor": {
          "ref": "4cc83b75-5689-4f03-853f-07f6a06b6c6e",
          "length": 283,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "c95e5dc5-ce52-4601-b902-3e2f0ffb8e53"
        },
        "item": {
          "id": "a6d9808e-e7d0-4475-972d-87b8e79a96fe",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "df513c96-c5dc-4ca2-9f2f-67735881d0f7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3bc38dea-10df-4f89-926e-33d8fb4c0b42",
        "cursor": {
          "ref": "95c483a9-6ad0-4635-b1cf-f24724359731",
          "length": 283,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "91b9d241-2f4b-498e-8b79-eeec955a32e6"
        },
        "item": {
          "id": "3bc38dea-10df-4f89-926e-33d8fb4c0b42",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "ac6846f1-6907-4cea-bdbe-a7740cc85972",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5d059ce5-347f-4684-a2a0-1056e8f69383",
        "cursor": {
          "ref": "2bc213c4-b1e2-4ecb-be66-7e644be649cd",
          "length": 283,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "43886124-a26e-483f-a6e6-68349cb52350"
        },
        "item": {
          "id": "5d059ce5-347f-4684-a2a0-1056e8f69383",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "4349330f-1532-4c66-9932-54370174dd53",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e5c24a10-fe68-450f-a086-2613e3485c25",
        "cursor": {
          "ref": "e67e3a50-2256-4aff-9ce2-a4340c7ed39a",
          "length": 283,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "f20c5c9b-c07c-4e82-bcdf-febaaa815191"
        },
        "item": {
          "id": "e5c24a10-fe68-450f-a086-2613e3485c25",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "3509580a-78fe-45b5-8877-9849cb747d0f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b477c13f-4324-4803-9d2b-e5dde887d714",
        "cursor": {
          "ref": "a3b86d67-062e-4e04-af02-daa7580fbb77",
          "length": 283,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "9be979b0-13b2-4e76-b898-5827659d9a85"
        },
        "item": {
          "id": "b477c13f-4324-4803-9d2b-e5dde887d714",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "f07340ee-63dc-4a17-b12c-e9c1d3faed79",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6febcfd4-2ca0-4cb1-a128-d9af9f982e2e",
        "cursor": {
          "ref": "c7bf7b74-9b57-460a-abae-68c3ef5e2b95",
          "length": 283,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "3b1358bc-2c3d-45ab-9caf-ab48f8baa302"
        },
        "item": {
          "id": "6febcfd4-2ca0-4cb1-a128-d9af9f982e2e",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "4930fd85-5a9b-42c6-b097-1da5a3394313",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6d337d9b-58e6-4bdd-ab53-34ff5d0abdf0",
        "cursor": {
          "ref": "71568cc9-425d-4caf-b41f-55164e12bf40",
          "length": 283,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "037e8d47-1d75-4a58-b492-c58f484c4f62"
        },
        "item": {
          "id": "6d337d9b-58e6-4bdd-ab53-34ff5d0abdf0",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "84c09c79-8b20-46bd-8c1e-890f0117af49",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a76325b9-20b5-430f-95bc-74780a0c2ef8",
        "cursor": {
          "ref": "e51e031e-20c0-46b8-b5a2-1bf89f56e935",
          "length": 283,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "cc959c27-2d69-4554-8aac-792b92ecf541"
        },
        "item": {
          "id": "a76325b9-20b5-430f-95bc-74780a0c2ef8",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "785daa3d-7537-4dec-a04f-08ce2e16920b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3fd00f77-b3b7-456b-b292-6ec4595cbba3",
        "cursor": {
          "ref": "3cb4e9de-4b36-4f48-b79d-4004c9da78c5",
          "length": 283,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "41913bc2-344c-43d1-8ed3-e458ead4e342"
        },
        "item": {
          "id": "3fd00f77-b3b7-456b-b292-6ec4595cbba3",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "8e06a55d-dc83-4fbc-9208-726079180712",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b186638-454b-4aac-b0f9-6a3913598795",
        "cursor": {
          "ref": "727c0c01-535c-4d34-9314-e18727370156",
          "length": 283,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "fd957f24-0e10-4b71-ad6b-729ea80630ac"
        },
        "item": {
          "id": "3b186638-454b-4aac-b0f9-6a3913598795",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "491571cc-20a1-4260-85e6-b1ab2c7493b8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "178c3c1b-3d52-494e-87c7-a6685d5a12f2",
        "cursor": {
          "ref": "219d3ea7-c4ff-4603-bf27-6c9f895b779f",
          "length": 283,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "c713a281-bbcc-428e-9180-c0a40074d5bb"
        },
        "item": {
          "id": "178c3c1b-3d52-494e-87c7-a6685d5a12f2",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "b99d0186-b59e-45a4-a4a0-2bf9cc28e458",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f7eee29d-6943-4b3c-acbb-6f741f14c1b2",
        "cursor": {
          "ref": "4caa046d-7f40-46cc-8cdd-9d17c7669ab8",
          "length": 283,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "bb09a2a1-f3bb-45b3-b7ad-1dfffc2db8d5"
        },
        "item": {
          "id": "f7eee29d-6943-4b3c-acbb-6f741f14c1b2",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "26eca3c6-6b16-4dd8-82f5-1fa797e65912",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f145d579-e56c-4ea4-b533-cf378dbf64d1",
        "cursor": {
          "ref": "42dc31b2-c6e0-462e-86fb-d0a22f16b52b",
          "length": 283,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "ae228226-8033-4851-9f50-da275b5c01c2"
        },
        "item": {
          "id": "f145d579-e56c-4ea4-b533-cf378dbf64d1",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "3ba7c28c-9c9e-4fb6-abaf-9b05c910e245",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aeb3d1fb-74c4-4c56-a1b3-7e425606c925",
        "cursor": {
          "ref": "e788774f-79fe-48fe-b38f-ddc18b4082eb",
          "length": 283,
          "cycles": 1,
          "position": 251,
          "iteration": 0,
          "httpRequestId": "cfa47c2d-55d9-4ea6-9834-ba2bad7fb95d"
        },
        "item": {
          "id": "aeb3d1fb-74c4-4c56-a1b3-7e425606c925",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "87633940-7dd8-4cdc-aa8a-5242148eba0d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "94055a22-c9bf-48d0-a375-b69cc93fe619",
        "cursor": {
          "ref": "b161c87f-9dfb-47bb-8c5c-981370def02c",
          "length": 283,
          "cycles": 1,
          "position": 252,
          "iteration": 0,
          "httpRequestId": "aaeb794c-a388-4ab4-a0c7-6f5a20076fdc"
        },
        "item": {
          "id": "94055a22-c9bf-48d0-a375-b69cc93fe619",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "72b9b29a-9e27-4d56-a6dd-c1bed114cf15",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "815de8b8-3509-4e55-be67-996c6bfe2aa8",
        "cursor": {
          "ref": "a76bd325-78d8-4b4f-a005-9640d6d4d988",
          "length": 283,
          "cycles": 1,
          "position": 253,
          "iteration": 0,
          "httpRequestId": "f6a110f8-0095-4e42-bfb0-44c9b0cae538"
        },
        "item": {
          "id": "815de8b8-3509-4e55-be67-996c6bfe2aa8",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "5a3065c2-0707-4aae-aeb9-f330e90d02d2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "419957b6-3565-4126-982f-e14e54841ee2",
        "cursor": {
          "ref": "0446fed9-30a8-4d46-b2e8-ba133870d796",
          "length": 283,
          "cycles": 1,
          "position": 254,
          "iteration": 0,
          "httpRequestId": "649f3c0c-416f-4be0-90ea-6a2b6599259a"
        },
        "item": {
          "id": "419957b6-3565-4126-982f-e14e54841ee2",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "3d6c7129-3b40-4fff-9535-748afa96d8f1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8bf96711-1fc2-4a15-b8a8-47e1c7a99aad",
        "cursor": {
          "ref": "4bd401d7-146c-4c31-99d2-7db8f1c0240c",
          "length": 283,
          "cycles": 1,
          "position": 255,
          "iteration": 0,
          "httpRequestId": "4e73edfe-6eae-47b8-b449-41c2fb47d4bb"
        },
        "item": {
          "id": "8bf96711-1fc2-4a15-b8a8-47e1c7a99aad",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "9f2176b2-c3c2-4719-8523-7095923df3f2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f9975a74-768e-4155-910a-e8cb79e2206e",
        "cursor": {
          "ref": "76873cda-540d-4209-b3f2-06e459732ec6",
          "length": 283,
          "cycles": 1,
          "position": 256,
          "iteration": 0,
          "httpRequestId": "4320a952-c0f4-4671-83a8-a6c149b8e505"
        },
        "item": {
          "id": "f9975a74-768e-4155-910a-e8cb79e2206e",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "65bccf3b-ccb8-4aac-a640-5add583d8ea2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d0e50c26-5513-4641-8954-e6427e6f8b7f",
        "cursor": {
          "ref": "fb6743f3-50fc-454b-a533-a0cfd942991c",
          "length": 283,
          "cycles": 1,
          "position": 257,
          "iteration": 0,
          "httpRequestId": "f6568e15-7e00-4231-8c1b-7246c97c7aac"
        },
        "item": {
          "id": "d0e50c26-5513-4641-8954-e6427e6f8b7f",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "39308511-a4af-47ac-b32b-666f06ba19c1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "635c57a3-8301-4fd6-a0c7-21635d773b50",
        "cursor": {
          "ref": "699c43be-efcf-46ae-aebd-47601a7038b9",
          "length": 283,
          "cycles": 1,
          "position": 258,
          "iteration": 0,
          "httpRequestId": "52a610d6-e75f-4a8e-bb04-02829e0fdc1b"
        },
        "item": {
          "id": "635c57a3-8301-4fd6-a0c7-21635d773b50",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "4e1ed0ac-884d-4a93-9e0e-d3d947195e09",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dd92e281-6ad8-42ac-933c-a99c48819013",
        "cursor": {
          "ref": "7ce598fb-6f74-4c22-bf70-02a9cfce53bb",
          "length": 283,
          "cycles": 1,
          "position": 259,
          "iteration": 0,
          "httpRequestId": "009aa8cf-b092-4daa-8a7f-4968b2de9c4e"
        },
        "item": {
          "id": "dd92e281-6ad8-42ac-933c-a99c48819013",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "ba93ed30-d446-4f6d-b917-a96bd839fbb7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7dacbae6-7cc6-45b0-a1ec-ad29a7e2d054",
        "cursor": {
          "ref": "bdca9e08-201e-4c89-8c21-f37217473888",
          "length": 283,
          "cycles": 1,
          "position": 260,
          "iteration": 0,
          "httpRequestId": "2468af09-0f4b-4569-96ba-71820672c1ca"
        },
        "item": {
          "id": "7dacbae6-7cc6-45b0-a1ec-ad29a7e2d054",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "040b3664-e493-4f46-b3aa-89d957c9f001",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5d7a0a90-6ae8-4695-8e75-969d3f042bea",
        "cursor": {
          "ref": "a53e8c47-e7ec-4e85-8d35-32da52cab1ec",
          "length": 283,
          "cycles": 1,
          "position": 261,
          "iteration": 0,
          "httpRequestId": "5aa115a7-ae5a-4a16-9932-98120b180a5c"
        },
        "item": {
          "id": "5d7a0a90-6ae8-4695-8e75-969d3f042bea",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "9603a6c5-463f-453f-a27b-f6d04afda215",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac6e112b-31a9-49d3-9661-d25e8bd60e72",
        "cursor": {
          "ref": "cbfc1799-dee4-4b13-be17-0d0541fec80e",
          "length": 283,
          "cycles": 1,
          "position": 262,
          "iteration": 0,
          "httpRequestId": "12f2beb0-3d5d-4e87-b7bb-b0c7c08ff48f"
        },
        "item": {
          "id": "ac6e112b-31a9-49d3-9661-d25e8bd60e72",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "3a12d611-c02d-4bfb-8eb4-10cac63c3ab3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "00c43538-1d83-4ac4-b4f7-649ee80327d3",
        "cursor": {
          "ref": "bdee60f2-b404-45f0-a176-ab9bfc53d156",
          "length": 283,
          "cycles": 1,
          "position": 263,
          "iteration": 0,
          "httpRequestId": "7dacc2c2-2e1b-4afd-8cdb-cfa6a2f55e4e"
        },
        "item": {
          "id": "00c43538-1d83-4ac4-b4f7-649ee80327d3",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "59f836ff-71a5-402b-a585-3914b1a0e821",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "04a0dc26-9b3b-4c67-9d63-89ca0656773f",
        "cursor": {
          "ref": "1f2a7cf2-efac-4faf-b05d-72e1d81016c8",
          "length": 283,
          "cycles": 1,
          "position": 264,
          "iteration": 0,
          "httpRequestId": "d4135a4f-7e94-42d2-8734-266e24665f95"
        },
        "item": {
          "id": "04a0dc26-9b3b-4c67-9d63-89ca0656773f",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "3390e287-c58d-4202-aaa5-2b81073cfc78",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d4cb64ae-1e7c-460f-8f2e-f97f6d2a5853",
        "cursor": {
          "ref": "c15a8f76-4169-4400-965d-b4d14b9e9b43",
          "length": 283,
          "cycles": 1,
          "position": 265,
          "iteration": 0,
          "httpRequestId": "19bb44c5-a83c-4bcf-9e1c-a8930814dc36"
        },
        "item": {
          "id": "d4cb64ae-1e7c-460f-8f2e-f97f6d2a5853",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "d816c61b-9a91-4f15-8569-20d04924e3e1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce51541c-7c8f-4faa-8e9f-ef7186bcbcfd",
        "cursor": {
          "ref": "755bcc19-12bf-4b78-a4fe-6d7e9acfb952",
          "length": 283,
          "cycles": 1,
          "position": 266,
          "iteration": 0,
          "httpRequestId": "66f8697d-461e-4651-aea3-e9f8a175b1f0"
        },
        "item": {
          "id": "ce51541c-7c8f-4faa-8e9f-ef7186bcbcfd",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "2cfb70b5-a2dd-4668-b80b-1e2b19f6daf7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "afc1c80f-6a57-4158-a4dc-03daffdadfe3",
        "cursor": {
          "ref": "cb871919-dbc1-401a-9b94-c9d09909fed0",
          "length": 283,
          "cycles": 1,
          "position": 267,
          "iteration": 0,
          "httpRequestId": "dde315cc-2d7d-4180-9cb0-eff4e87ddb24"
        },
        "item": {
          "id": "afc1c80f-6a57-4158-a4dc-03daffdadfe3",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "6d1d8f5d-2d69-4d18-9a49-c4c224e56b6e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9b59c241-58d4-4622-9c94-eb29a5fef279",
        "cursor": {
          "ref": "946f5f6a-98be-4b79-8ace-bdd6e6a31a8c",
          "length": 283,
          "cycles": 1,
          "position": 268,
          "iteration": 0,
          "httpRequestId": "04d3a44a-9f81-4618-a0e5-e6ed933eb431"
        },
        "item": {
          "id": "9b59c241-58d4-4622-9c94-eb29a5fef279",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "0b1a13e6-205d-412c-8cb6-b34fad908024",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "23c7b231-3165-4c20-b968-b35f49eed173",
        "cursor": {
          "ref": "1196c7a9-ea90-4c53-afff-70c15c50812a",
          "length": 283,
          "cycles": 1,
          "position": 269,
          "iteration": 0,
          "httpRequestId": "badb9b8e-1ef3-4a62-b735-33c25ef3dcf7"
        },
        "item": {
          "id": "23c7b231-3165-4c20-b968-b35f49eed173",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "71b636ac-aaac-4390-ac74-e3ba6021a675",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c4e4308-52e1-45a1-b10d-073015ee1186",
        "cursor": {
          "ref": "427467eb-61cb-49be-b329-45b1bd1f1903",
          "length": 283,
          "cycles": 1,
          "position": 270,
          "iteration": 0,
          "httpRequestId": "35bfab44-9062-47e7-81d8-3ba2725b5246"
        },
        "item": {
          "id": "2c4e4308-52e1-45a1-b10d-073015ee1186",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "76e7fe2e-c5a7-474a-be26-e37eee31720f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7daf8d02-0fc7-4d81-ba9a-d32eef6ae13a",
        "cursor": {
          "ref": "2b56945c-f1a5-4ed4-b03b-9dcb5d0d2bee",
          "length": 283,
          "cycles": 1,
          "position": 271,
          "iteration": 0,
          "httpRequestId": "9b0faadc-153c-4126-8781-7f5a6a79623c"
        },
        "item": {
          "id": "7daf8d02-0fc7-4d81-ba9a-d32eef6ae13a",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "590e2360-0e98-450d-b9a1-a36d01c62659",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "48e491a9-470f-4f60-8242-07a34b70cc69",
        "cursor": {
          "ref": "2eb3c47a-e537-4de6-a309-5d600e443bdb",
          "length": 283,
          "cycles": 1,
          "position": 272,
          "iteration": 0,
          "httpRequestId": "44e51f2e-83bc-4c57-b848-cb1989607db0"
        },
        "item": {
          "id": "48e491a9-470f-4f60-8242-07a34b70cc69",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "52705b17-0610-4ec7-a704-d5c8d2770b8d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "772e91ae-1a17-4609-b34a-995111f6730a",
        "cursor": {
          "ref": "6345f692-bf38-4192-8d97-9322825393c4",
          "length": 283,
          "cycles": 1,
          "position": 273,
          "iteration": 0,
          "httpRequestId": "02d99ccd-1ccf-4005-800b-e3a34e4f9a1a"
        },
        "item": {
          "id": "772e91ae-1a17-4609-b34a-995111f6730a",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "84c6b445-af46-4114-a02a-f682c2223c38",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e4bfebce-c2e6-4a01-8ee4-e9f7a5b37c3c",
        "cursor": {
          "ref": "cb42c78e-18ac-4e3f-99d0-cd3b1ab574bd",
          "length": 283,
          "cycles": 1,
          "position": 274,
          "iteration": 0,
          "httpRequestId": "c00562e9-cce7-410a-8406-c8016b5b5bac"
        },
        "item": {
          "id": "e4bfebce-c2e6-4a01-8ee4-e9f7a5b37c3c",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "caeb37ca-e890-4496-a038-4888aab1d0a0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d71ace73-39a0-4224-85c8-8cda68e005e3",
        "cursor": {
          "ref": "fce03b01-eaac-4f4a-965a-d3b6bbaef01d",
          "length": 283,
          "cycles": 1,
          "position": 275,
          "iteration": 0,
          "httpRequestId": "2f7aceb4-93ba-49e2-9246-f23c87418766"
        },
        "item": {
          "id": "d71ace73-39a0-4224-85c8-8cda68e005e3",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "c82f5a6f-bb05-44de-aee8-a8761e934ed7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "78af78a7-777b-4795-9011-d307f4189c5e",
        "cursor": {
          "ref": "546d614b-94d8-450e-a1ba-7e26139ad710",
          "length": 283,
          "cycles": 1,
          "position": 276,
          "iteration": 0,
          "httpRequestId": "09d7e9ca-81b4-4719-909a-8ecc6938e5ee"
        },
        "item": {
          "id": "78af78a7-777b-4795-9011-d307f4189c5e",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "a8d92c59-8de8-467c-b139-85fe9f0299fc",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 9,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7ebc0daa-2464-4cdc-b601-1a9c46896c43",
        "cursor": {
          "ref": "047140ad-ac84-4dc9-8cba-f565a667bded",
          "length": 283,
          "cycles": 1,
          "position": 277,
          "iteration": 0,
          "httpRequestId": "fb74988a-795a-4cdc-bfa0-c3041938cebf"
        },
        "item": {
          "id": "7ebc0daa-2464-4cdc-b601-1a9c46896c43",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "674526be-c70a-4617-80f9-03e4aff5a6e5",
          "status": "OK",
          "code": 200,
          "responseTime": 10,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "71081838-99ac-4bc4-bdaa-53573b8044ae",
        "cursor": {
          "ref": "0109e8e9-65f5-41c2-b62e-583729916c56",
          "length": 283,
          "cycles": 1,
          "position": 278,
          "iteration": 0,
          "httpRequestId": "64631b5e-98ed-4b83-ab32-e1f75fe42e30"
        },
        "item": {
          "id": "71081838-99ac-4bc4-bdaa-53573b8044ae",
          "name": "credentials_verify"
        },
        "response": {
          "id": "f612c5a4-c1c5-4ef6-9721-38bc992efe67",
          "status": "OK",
          "code": 200,
          "responseTime": 22,
          "responseSize": 37
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e9b83b6-615b-48d4-ac6c-f67acacdd0df",
        "cursor": {
          "ref": "a9c434e4-80c5-4ecd-b2e5-0402b9df4920",
          "length": 283,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "ce09e009-5553-49ad-a24d-9217b1f7fd84"
        },
        "item": {
          "id": "0e9b83b6-615b-48d4-ac6c-f67acacdd0df",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "4c7bd912-dbe3-4020-a75e-e14e11299437",
          "status": "OK",
          "code": 200,
          "responseTime": 21,
          "responseSize": 37
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "97ff54be-5d5d-4b15-9579-06e97a5d18c5",
        "cursor": {
          "ref": "6f10a544-df77-4d63-a7b0-b870f5f176e9",
          "length": 283,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "33f5663b-4cce-44d4-9f89-32fe5102a203"
        },
        "item": {
          "id": "97ff54be-5d5d-4b15-9579-06e97a5d18c5",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "ab3c6caf-91de-447e-8b91-05d52cafce9c",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 8,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "97ff54be-5d5d-4b15-9579-06e97a5d18c5",
        "cursor": {
          "ref": "6f10a544-df77-4d63-a7b0-b870f5f176e9",
          "length": 283,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "33f5663b-4cce-44d4-9f89-32fe5102a203"
        },
        "item": {
          "id": "97ff54be-5d5d-4b15-9579-06e97a5d18c5",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "ab3c6caf-91de-447e-8b91-05d52cafce9c",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 8,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db501082-6198-44dc-915e-d4b560e56b03",
        "cursor": {
          "ref": "2bcd4200-5f8d-41e2-b46e-a2b3f3ec12b3",
          "length": 283,
          "cycles": 1,
          "position": 281,
          "iteration": 0,
          "httpRequestId": "ac4ea6e8-1b7a-41e4-a58d-27112c2c12b0"
        },
        "item": {
          "id": "db501082-6198-44dc-915e-d4b560e56b03",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "c7ba3e35-86aa-4a33-aad1-febb6a5c2239",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 8,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c42bbe47-d3ac-4b38-a2a4-74d0bb1584b8",
        "cursor": {
          "ref": "12a8c674-6ef1-4902-aad6-804dda9a6f04",
          "length": 283,
          "cycles": 1,
          "position": 282,
          "iteration": 0,
          "httpRequestId": "9236da66-01dd-4fd3-90d8-ed5290a5d2b7"
        },
        "item": {
          "id": "c42bbe47-d3ac-4b38-a2a4-74d0bb1584b8",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "4cca463e-e8c7-499e-829e-2fed0fd6b50e",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 9,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}